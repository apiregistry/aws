#%RAML 1.0
title: Amazon Simple Systems Management Service
version: '2014-11-06'
description: ' Amazon EC2 Simple Systems Manager (SSM) enables you to remotely manage
  the configuration of your Amazon EC2 instances, virtual machines (VMs), or servers
  in your on-premises environment or in an environment provided by other cloud providers
  using scripts, commands, or the Amazon EC2 console. SSM includes an on-demand solution
  called <i>Amazon EC2 Run Command</i> and a lightweight instance configuration solution
  called <i>SSM Config</i>.   This references is intended to be used with the EC2
  Run Command User Guide for <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/execute-remote-commands.html">Linux</a>
  or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/execute-remote-commands.html">Windows</a>.
  <note>  You must register your on-premises servers and VMs through an activation
  process before you can configure them using Run Command. Registered servers and
  VMs are called <i>managed instances</i>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managed-instances.html">Setting
  Up Run Command On Managed Instances (On-Premises Servers and VMs) on Linux</a> or
  <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/managed-instances.html">Setting
  Up Run Command On Managed Instances (On-Premises Servers and VMs) on Windows</a>.
  </note>   <b>Run Command</b>   Run Command provides an on-demand experience for
  executing commands. You can use pre-defined SSM documents to perform the actions
  listed later in this section, or you can create your own documents. With these documents,
  you can remotely configure your instances by sending commands using the <b>Commands</b>
  page in the <a href="http://console.aws.amazon.com/ec2/">Amazon EC2 console</a>,
  <a href="http://docs.aws.amazon.com/powershell/latest/reference/items/Amazon_Simple_Systems_Management_cmdlets.html">AWS
  Tools for Windows PowerShell</a>, the <a href="http://docs.aws.amazon.com/cli/latest/reference/ssm/index.html">AWS
  CLI</a>, or AWS SDKs.  Run Command reports the status of the command execution for
  each instance targeted by a command. You can also audit the command execution to
  understand who executed commands, when, and what changes were made. By switching
  between different SSM documents, you can quickly configure your instances with different
  types of commands. To get started with Run Command, verify that your environment
  meets the prerequisites for remotely running commands on EC2 instances (<a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/remote-commands-prereq.html">Linux</a>
  or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/remote-commands-prereq.html">Windows</a>).  <p/>   <b>SSM
  Config</b>   SSM Config is a lightweight instance configuration solution. SSM Config
  is currently only available for Windows instances. With SSM Config, you can specify
  a setup configuration for your instances. SSM Config is similar to EC2 User Data,
  which is another way of running one-time scripts or applying settings during instance
  launch. SSM Config is an extension of this capability. Using SSM documents, you
  can specify which actions the system should perform on your instances, including
  which applications to install, which AWS Directory Service directory to join, which
  Microsoft PowerShell modules to install, etc. If an instance is missing one or more
  of these configurations, the system makes those changes. By default, the system
  checks every five minutes to see if there is a new configuration to apply as defined
  in a new SSM document. If so, the system updates the instances accordingly. In this
  way, you can remotely maintain a consistent configuration baseline on your instances.
  SSM Config is available using the AWS CLI or the AWS Tools for Windows PowerShell.
  For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-configuration-manage.html">Managing
  Windows Instance Configuration</a>.  SSM Config and Run Command include the following
  pre-defined documents.   <b>Linux</b>  <ul> <li>   <b>AWS-RunShellScript</b> to
  run shell scripts </li> <li>   <b>AWS-UpdateSSMAgent</b> to update the Amazon SSM
  agent </li> </ul> <p/>   <b>Windows</b>  <ul> <li>   <b>AWS-JoinDirectoryServiceDomain</b>
  to join an AWS Directory </li> <li>   <b>AWS-RunPowerShellScript</b> to run PowerShell
  commands or scripts </li> <li>   <b>AWS-UpdateEC2Config</b> to update the EC2Config
  service </li> <li>   <b>AWS-ConfigureWindowsUpdate</b> to configure Windows Update
  settings </li> <li>   <b>AWS-InstallApplication</b> to install, repair, or uninstall
  software using an MSI package </li> <li>   <b>AWS-InstallPowerShellModule</b> to
  install PowerShell modules  </li> <li>   <b>AWS-ConfigureCloudWatch</b> to configure
  Amazon CloudWatch Logs to monitor applications and systems </li> <li>   <b>AWS-ListWindowsInventory</b>
  to collect information about an EC2 instance running in Windows. </li> <li>   <b>AWS-FindWindowsUpdates</b>
  to scan an instance and determines which updates are missing. </li> <li>   <b>AWS-InstallMissingWindowsUpdates</b>
  to install missing updates on your EC2 instance. </li> <li>   <b>AWS-InstallSpecificWindowsUpdates</b>
  to install one or more specific updates. </li> </ul> <important>  The commands or
  scripts specified in SSM documents run with administrative privilege on your instances
  because the Amazon SSM agent runs as root on Linux and the EC2Config service runs
  in the Local System account on Windows. If a user has permission to execute any
  of the pre-defined SSM documents (any document that begins with AWS-*) then that
  user also has administrator access to the instance. Delegate access to Run Command
  and SSM Config judiciously. This becomes extremely important if you create your
  own SSM documents. Amazon Web Services does not provide guidance about how to create
  secure SSM documents. You create SSM documents and delegate access to Run Command
  at your own risk. As a security best practice, we recommend that you assign access
  to "AWS-*" documents, especially the AWS-RunShellScript document on Linux and the
  AWS-RunPowerShellScript document on Windows, to trusted administrators only. You
  can create SSM documents for specific tasks and delegate access to non-administrators.
  </important>  For information about creating and sharing SSM documents, see the
  following topics in the SSM User Guide:  <ul> <li>   <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-ssm-doc.html">Creating
  SSM Documents</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssm-sharing.html">Sharing
  SSM Documents</a> (Linux) </li> <li>   <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/create-ssm-doc.html">Creating
  SSM Documents</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ssm-sharing.html">Sharing
  SSM Documents</a> (Windows) </li> </ul>'
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AccountId:
    type: string
    pattern: (?i)all|[0-9]{12}
  AccountIdList:
    type: array
    maxItems: 20
    items:
      type: AccountId
  ActivationCode:
    type: string
    minLength: 20
    maxLength: 250
  ActivationDescription:
    type: string
    minLength: 0
    maxLength: 256
  ActivationId:
    type: string
    pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
  ActivationList:
    type: array
    items:
      type: Activation
  AssociationDescriptionList:
    type: array
    items:
      type: AssociationDescription
  AssociationFilterKey:
    type: string
    enum:
    - InstanceId
    - Name
  AssociationFilterList:
    type: array
    minItems: 1
    items:
      type: AssociationFilter
  AssociationFilterValue:
    type: string
    minLength: 1
  AssociationList:
    type: array
    items:
      type: Association
  AssociationStatusName:
    type: string
    enum:
    - Pending
    - Success
    - Failed
  BatchErrorMessage:
    type: string
  Boolean:
    type: boolean
  CommandFilterKey:
    type: string
    enum:
    - InvokedAfter
    - InvokedBefore
    - Status
  CommandFilterList:
    type: array
    minItems: 1
    maxItems: 3
    items:
      type: CommandFilter
  CommandFilterValue:
    type: string
    minLength: 1
  CommandId:
    type: string
    minLength: 36
    maxLength: 36
  CommandInvocationList:
    type: array
    items:
      type: CommandInvocation
  CommandInvocationStatus:
    type: string
    enum:
    - Pending
    - InProgress
    - Cancelling
    - Success
    - TimedOut
    - Cancelled
    - Failed
  CommandList:
    type: array
    items:
      type: Command
  CommandMaxResults:
    type: integer
    format: int
    minimum: 1
    maximum: 50
  CommandPluginList:
    type: array
    items:
      type: CommandPlugin
  CommandPluginName:
    type: string
    minLength: 4
  CommandPluginOutput:
    type: string
    maxLength: 2500
  CommandPluginStatus:
    type: string
    enum:
    - Pending
    - InProgress
    - Success
    - TimedOut
    - Cancelled
    - Failed
  CommandStatus:
    type: string
    enum:
    - Pending
    - InProgress
    - Cancelling
    - Success
    - TimedOut
    - Cancelled
    - Failed
  Comment:
    type: string
    maxLength: 100
  ComputerName:
    type: string
    minLength: 1
    maxLength: 255
  CreateAssociationBatchRequestEntries:
    type: array
    items:
      type: CreateAssociationBatchRequestEntry
  CreatedDate:
    type: datetime
  DateTime:
    type: datetime
  DefaultInstanceName:
    type: string
    pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
    minLength: 0
    maxLength: 256
  DescribeActivationsFilterKeys:
    type: string
    enum:
    - ActivationIds
    - DefaultInstanceName
    - IamRole
  DescribeActivationsFilterList:
    type: array
    items:
      type: DescribeActivationsFilter
  DescriptionInDocument:
    type: string
  DocumentARN:
    type: string
    pattern: ^[a-zA-Z0-9_\-.:/]{3,128}$
  DocumentContent:
    type: string
    minLength: 1
  DocumentFilterKey:
    type: string
    enum:
    - Name
    - Owner
    - PlatformTypes
  DocumentFilterList:
    type: array
    minItems: 1
    items:
      type: DocumentFilter
  DocumentFilterValue:
    type: string
    minLength: 1
  DocumentHash:
    type: string
    maxLength: 256
  DocumentHashType:
    type: string
    enum:
    - Sha256
    - Sha1
  DocumentIdentifierList:
    type: array
    items:
      type: DocumentIdentifier
  DocumentName:
    type: string
    pattern: ^[a-zA-Z0-9_\-.]{3,128}$
  DocumentOwner:
    type: string
  DocumentParameterDefaultValue:
    type: string
  DocumentParameterDescrption:
    type: string
  DocumentParameterList:
    type: array
    items:
      type: DocumentParameter
  DocumentParameterName:
    type: string
  DocumentParameterType:
    type: string
    enum:
    - String
    - StringList
  DocumentPermissionType:
    type: string
    enum:
    - Share
  DocumentSha1:
    type: string
  DocumentStatus:
    type: string
    enum:
    - Creating
    - Active
    - Deleting
  ExpirationDate:
    type: datetime
  FailedCreateAssociationList:
    type: array
    items:
      type: FailedCreateAssociation
  Fault:
    type: string
    enum:
    - Client
    - Server
    - Unknown
  IPAddress:
    type: string
    minLength: 1
    maxLength: 46
  IamRole:
    type: string
    maxLength: 64
  InstanceId:
    type: string
    pattern: (^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)
  InstanceIdList:
    type: array
    minItems: 1
    maxItems: 50
    items:
      type: InstanceId
  InstanceInformationFilterKey:
    type: string
    enum:
    - InstanceIds
    - AgentVersion
    - PingStatus
    - PlatformTypes
    - ActivationIds
    - IamRole
    - ResourceType
  InstanceInformationFilterList:
    type: array
    minItems: 1
    items:
      type: InstanceInformationFilter
  InstanceInformationFilterValue:
    type: string
    minLength: 1
  InstanceInformationFilterValueSet:
    type: array
    minItems: 1
    maxItems: 100
    items:
      type: InstanceInformationFilterValue
  InstanceInformationList:
    type: array
    items:
      type: InstanceInformation
  InvocationTraceOutput:
    type: string
    maxLength: 2500
  KeyList:
    type: array
    items:
      type: TagKey
  ManagedInstanceId:
    type: string
    pattern: ^mi-[0-9a-f]{17}$
  MaxResults:
    type: integer
    format: int
    minimum: 1
    maximum: 50
  MaxResultsEC2Compatible:
    type: integer
    format: int
    minimum: 5
    maximum: 50
  NextToken:
    type: string
  NotificationArn:
    type: string
  NotificationEvent:
    type: string
    enum:
    - All
    - InProgress
    - Success
    - TimedOut
    - Cancelled
    - Failed
  NotificationEventList:
    type: array
    items:
      type: NotificationEvent
  NotificationType:
    type: string
    enum:
    - Command
    - Invocation
  ParameterName:
    type: string
  ParameterValue:
    type: string
  ParameterValueList:
    type: array
    items:
      type: ParameterValue
  PingStatus:
    type: string
    enum:
    - Online
    - ConnectionLost
    - Inactive
  PlatformType:
    type: string
    enum:
    - Windows
    - Linux
  PlatformTypeList:
    type: array
    items:
      type: PlatformType
  RegistrationLimit:
    type: integer
    format: int
    minimum: 1
    maximum: 1000
  RegistrationsCount:
    type: integer
    format: int
    minimum: 1
    maximum: 1000
  ResourceId:
    type: string
    pattern: ^mi-[0-9a-f]{17}$
  ResourceType:
    type: string
    enum:
    - ManagedInstance
    - Document
    - EC2Instance
  ResourceTypeForTagging:
    type: string
    enum:
    - ManagedInstance
  ResponseCode:
    type: integer
    format: int
  S3BucketName:
    type: string
    minLength: 3
    maxLength: 63
  S3KeyPrefix:
    type: string
    maxLength: 500
  ServiceRole:
    type: string
  StatusAdditionalInfo:
    type: string
    maxLength: 1024
  StatusMessage:
    type: string
    maxLength: 1024
  String:
    type: string
  StringList:
    type: array
    items:
      type: String
  TagKey:
    type: string
    pattern: ^(?!^(?i)aws:)(?=^[\p{L}\p{Z}\p{N}_.:/=+\-@]*$).*$
    minLength: 1
    maxLength: 128
  TagList:
    type: array
    items:
      type: Tag
  TagValue:
    type: string
    pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
    minLength: 1
    maxLength: 256
  TimeoutSeconds:
    type: integer
    format: int
    minimum: 30
    maximum: 2592000
  Version:
    type: string
    pattern: ^[0-9]{1,6}(\.[0-9]{1,6}){2,3}$
  Activation:
    type: object
    properties:
      ActivationId?:
        type: ActivationId
        description: <p>The ID created by SSM when you submitted the activation.</p>
      Description?:
        type: ActivationDescription
        description: <p>A user defined description of the activation.</p>
      DefaultInstanceName?:
        type: DefaultInstanceName
        description: <p>A name for the managed instance when it is created.</p>
      IamRole?:
        type: IamRole
        description: <p>The Amazon Identity and Access Management (IAM) role to assign to the managed instance.</p>
      RegistrationLimit?:
        type: RegistrationLimit
        description: <p>The maximum number of managed instances that can be registered using this activation.</p>
      RegistrationsCount?:
        type: RegistrationsCount
        description: <p>The number of managed instances already registered with this activation.</p>
      ExpirationDate?:
        type: ExpirationDate
        description: <p>The date when this activation can no longer be used to register managed instances.</p>
      Expired?:
        type: Boolean
        description: <p>Whether or not the activation is expired.</p>
      CreatedDate?:
        type: CreatedDate
        description: <p>The date the activation was created.</p>
    description: <p>An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.</p>
  AddTagsToResourceRequest:
    type: object
    properties:
      ResourceType:
        type: ResourceTypeForTagging
        description: <p>Specifies the type of resource you are tagging.</p>
      ResourceId:
        type: ResourceId
        description: <p>The resource ID you want to tag.</p>
      Tags:
        type: TagList
        description: <p> One or more tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </p>
  AddTagsToResourceResult:
    type: object
  Association:
    type: object
    properties:
      Name?:
        type: DocumentName
        description: <p>The name of the SSM document.</p>
      InstanceId?:
        type: InstanceId
        description: <p>The ID of the instance.</p>
    description: <p>Describes an association of an SSM document and an instance.</p>
  AssociationDescription:
    type: object
    properties:
      Name?:
        type: DocumentName
        description: <p>The name of the SSM document.</p>
      InstanceId?:
        type: InstanceId
        description: <p>The ID of the instance.</p>
      Date?:
        type: DateTime
        description: <p>The date when the association was made.</p>
      Status?:
        type: AssociationStatus
        description: <p>The association status.</p>
      Parameters?:
        type: Parameters
        description: <p>A description of the parameters for a document. </p>
    description: <p>Describes the parameters for a document.</p>
  AssociationFilter:
    type: object
    properties:
      key:
        type: AssociationFilterKey
        description: <p>The name of the filter.</p>
      value:
        type: AssociationFilterValue
        description: <p>The filter value.</p>
    description: <p>Describes a filter.</p>
  AssociationStatus:
    type: object
    properties:
      Date:
        type: DateTime
        description: <p>The date when the status changed.</p>
      Name:
        type: AssociationStatusName
        description: <p>The status.</p>
      Message:
        type: StatusMessage
        description: <p>The reason for the status.</p>
      AdditionalInfo?:
        type: StatusAdditionalInfo
        description: <p>A user-defined string.</p>
    description: <p>Describes an association status.</p>
  CancelCommandRequest:
    type: object
    properties:
      CommandId:
        type: CommandId
        description: <p>The ID of the command you want to cancel.</p>
      InstanceIds?:
        type: InstanceIdList
        description: <p>(Optional) A list of instance IDs on which you want to cancel the command. If not provided, the command is canceled on every instance on which it was requested.</p>
    description: <p/>
  CancelCommandResult:
    type: object
    description: <p>Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.</p>
  Command:
    type: object
    properties:
      CommandId?:
        type: CommandId
        description: <p>A unique identifier for this command.</p>
      DocumentName?:
        type: DocumentName
        description: <p>The name of the SSM document requested for execution.</p>
      Comment?:
        type: Comment
        description: <p>User-specified information about the command, such as a brief description of what the command should do.</p>
      ExpiresAfter?:
        type: DateTime
        description: <p>If this time is reached and the command has not already started executing, it will not execute. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.</p>
      Parameters?:
        type: Parameters
        description: <p>The parameter values to be inserted in the SSM document when executing the command.</p>
      InstanceIds?:
        type: InstanceIdList
        description: <p>The instance IDs against which this command was requested.</p>
      RequestedDateTime?:
        type: DateTime
        description: <p>The date and time the command was requested.</p>
      Status?:
        type: CommandStatus
        description: <p>The status of the command.</p>
      OutputS3BucketName?:
        type: S3BucketName
        description: <p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.</p>
      OutputS3KeyPrefix?:
        type: S3KeyPrefix
        description: <p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.</p>
      ServiceRole?:
        type: ServiceRole
        description: <p>The IAM service role that SSM uses to act on your behalf when sending notifications about command status changes. </p>
      NotificationConfig?:
        type: NotificationConfig
        description: <p>Configurations for sending notifications about command status changes. </p>
    description: <p>Describes a command request.</p>
  CommandFilter:
    type: object
    properties:
      key:
        type: CommandFilterKey
        description: <p>The name of the filter. For example, requested date and time.</p>
      value:
        type: CommandFilterValue
        description: '<p>The filter value. For example: June 30, 2015.</p>'
    description: <p>Describes a command filter.</p>
  CommandInvocation:
    type: object
    properties:
      CommandId?:
        type: CommandId
        description: <p>The command against which this invocation was requested.</p>
      InstanceId?:
        type: InstanceId
        description: <p>The instance ID in which this invocation was requested.</p>
      Comment?:
        type: Comment
        description: <p>User-specified information about the command, such as a brief description of what the command should do.</p>
      DocumentName?:
        type: DocumentName
        description: <p>The document name that was requested for execution.</p>
      RequestedDateTime?:
        type: DateTime
        description: <p>The time and date the request was sent to this instance.</p>
      Status?:
        type: CommandInvocationStatus
        description: <p>Whether or not the invocation succeeded, failed, or is pending.</p>
      TraceOutput?:
        type: InvocationTraceOutput
        description: <p> Gets the trace output sent by the agent. </p>
      CommandPlugins?:
        type: CommandPluginList
      ServiceRole?:
        type: ServiceRole
        description: <p>The IAM service role that SSM uses to act on your behalf when sending notifications about command status changes on a per instance basis.</p>
      NotificationConfig?:
        type: NotificationConfig
        description: <p>Configurations for sending notifications about command status changes on a per instance basis.</p>
    description: <p>An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. </p>
  CommandPlugin:
    type: object
    properties:
      Name?:
        type: CommandPluginName
        description: '<p>The name of the plugin. Must be one of the following: aws:updateAgent,
          aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule,
          aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. </p>'
      Status?:
        type: CommandPluginStatus
        description: <p>The status of this plugin. You can execute a document with multiple plugins.</p>
      ResponseCode?:
        type: ResponseCode
        description: <p>A numeric response code generated after executing the plugin. </p>
      ResponseStartDateTime?:
        type: DateTime
        description: <p>The time the plugin started executing. </p>
      ResponseFinishDateTime?:
        type: DateTime
        description: <p>The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. </p>
      Output?:
        type: CommandPluginOutput
        description: <p>Output of the plugin execution.</p>
      OutputS3BucketName?:
        type: S3BucketName
        description: <p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.</p>
      OutputS3KeyPrefix?:
        type: S3KeyPrefix
        description: <p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. </p>
    description: <p>Describes plugin details.</p>
  CreateActivationRequest:
    type: object
    properties:
      Description?:
        type: ActivationDescription
        description: <p>A user-defined description of the resource that you want to register with Amazon EC2. </p>
      DefaultInstanceName?:
        type: DefaultInstanceName
        description: <p>The name of the registered, managed instance as it will appear in the Amazon EC2 console or when you use the AWS command line tools to list EC2 resources.</p>
      IamRole:
        type: IamRole
        description: <p>The Amazon Identity and Access Management (IAM) role that you want to assign to the managed instance. </p>
      RegistrationLimit?:
        type: RegistrationLimit | nil
        description: <p>Specify the maximum number of managed instances you want to register. The default value is 1 instance.</p>
      ExpirationDate?:
        type: ExpirationDate
        description: <p>The date by which this activation request should expire. The default value is 24 hours.</p>
  CreateActivationResult:
    type: object
    properties:
      ActivationId?:
        type: ActivationId
        description: <p>The ID number generated by the system when it processed the activation. The activation ID functions like a user name.</p>
      ActivationCode?:
        type: ActivationCode
        description: <p>The code the system generates when it processes the activation. The activation code functions like a password to validate the activation ID. </p>
  CreateAssociationBatchRequest:
    type: object
    properties:
      Entries:
        type: CreateAssociationBatchRequestEntries
        description: <p>One or more associations.</p>
  CreateAssociationBatchRequestEntry:
    type: object
    properties:
      Name?:
        type: DocumentName
        description: <p> The name of the configuration document. </p>
      InstanceId?:
        type: InstanceId
        description: <p> The ID of the instance. </p>
      Parameters?:
        type: Parameters
        description: <p>A description of the parameters for a document. </p>
    description: <p> Describes the association of an SSM document and an instance. </p>
  CreateAssociationBatchResult:
    type: object
    properties:
      Successful?:
        type: AssociationDescriptionList
        description: <p>Information about the associations that succeeded.</p>
      Failed?:
        type: FailedCreateAssociationList
        description: <p>Information about the associations that failed.</p>
  CreateAssociationRequest:
    type: object
    properties:
      Name:
        type: DocumentName
        description: <p>The name of the SSM document.</p>
      InstanceId:
        type: InstanceId
        description: <p>The instance ID.</p>
      Parameters?:
        type: Parameters
        description: <p>The parameters for the documents runtime configuration. </p>
  CreateAssociationResult:
    type: object
    properties:
      AssociationDescription?:
        type: AssociationDescription
        description: <p>Information about the association.</p>
  CreateDocumentRequest:
    type: object
    properties:
      Content:
        type: DocumentContent
        description: <p>A valid JSON string.</p>
      Name:
        type: DocumentName
        description: <p>A name for the SSM document.</p>
  CreateDocumentResult:
    type: object
    properties:
      DocumentDescription?:
        type: DocumentDescription
        description: <p>Information about the SSM document.</p>
  DeleteActivationRequest:
    type: object
    properties:
      ActivationId:
        type: ActivationId
        description: <p>The ID of the activation that you want to delete.</p>
  DeleteActivationResult:
    type: object
  DeleteAssociationRequest:
    type: object
    properties:
      Name:
        type: DocumentName
        description: <p>The name of the SSM document.</p>
      InstanceId:
        type: InstanceId
        description: <p>The ID of the instance.</p>
  DeleteAssociationResult:
    type: object
  DeleteDocumentRequest:
    type: object
    properties:
      Name:
        type: DocumentName
        description: <p>The name of the SSM document.</p>
  DeleteDocumentResult:
    type: object
  DeregisterManagedInstanceRequest:
    type: object
    properties:
      InstanceId:
        type: ManagedInstanceId
        description: <p>The ID assigned to the managed instance when you registered it using the activation process. </p>
  DeregisterManagedInstanceResult:
    type: object
  DescribeActivationsFilter:
    type: object
    properties:
      FilterKey?:
        type: DescribeActivationsFilterKeys
        description: <p>The name of the filter.</p>
      FilterValues?:
        type: StringList
        description: <p>The filter values.</p>
    description: <p>Filter for the DescribeActivation API.</p>
  DescribeActivationsRequest:
    type: object
    properties:
      Filters?:
        type: DescribeActivationsFilterList
        description: <p>A filter to view information about your activations.</p>
      MaxResults?:
        type: MaxResults | nil
        description: <p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
      NextToken?:
        type: NextToken
        description: <p>A token to start the list. Use this token to get the next set of results. </p>
  DescribeActivationsResult:
    type: object
    properties:
      ActivationList?:
        type: ActivationList
        description: <p>A list of activations for your AWS account.</p>
      NextToken?:
        type: NextToken
        description: <p> The token for the next set of items to return. Use this token to get the next set of results. </p>
  DescribeAssociationRequest:
    type: object
    properties:
      Name:
        type: DocumentName
        description: <p>The name of the SSM document.</p>
      InstanceId:
        type: InstanceId
        description: <p>The instance ID.</p>
  DescribeAssociationResult:
    type: object
    properties:
      AssociationDescription?:
        type: AssociationDescription
        description: <p>Information about the association.</p>
  DescribeDocumentPermissionRequest:
    type: object
    properties:
      Name:
        type: DocumentName
        description: <p>The name of the document for which you are the owner.</p>
      PermissionType:
        type: DocumentPermissionType
        description: <p>The permission type for the document. The permission type can be <i>Share</i>.</p>
  DescribeDocumentPermissionResponse:
    type: object
    properties:
      AccountIds?:
        type: AccountIdList
        description: <p>The account IDs that have permission to use this document. The ID can be either an AWS account or <i>All</i>.</p>
  DescribeDocumentRequest:
    type: object
    properties:
      Name:
        type: DocumentARN
        description: <p>The name of the SSM document.</p>
  DescribeDocumentResult:
    type: object
    properties:
      Document?:
        type: DocumentDescription
        description: <p>Information about the SSM document.</p>
  DescribeInstanceInformationRequest:
    type: object
    properties:
      InstanceInformationFilterList?:
        type: InstanceInformationFilterList
        description: <p>One or more filters. Use a filter to return a more specific list of instances.</p>
      MaxResults?:
        type: MaxResultsEC2Compatible | nil
        description: <p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. </p>
      NextToken?:
        type: NextToken
        description: <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
  DescribeInstanceInformationResult:
    type: object
    properties:
      InstanceInformationList?:
        type: InstanceInformationList
        description: <p>The instance information list.</p>
      NextToken?:
        type: NextToken
        description: <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty. </p>
  DocumentDescription:
    type: object
    properties:
      Sha1?:
        type: DocumentSha1
        description: <p>The SHA1 hash of the document, which you can use for verification purposes.</p>
      Hash?:
        type: DocumentHash
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      HashType?:
        type: DocumentHashType
        description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      Name?:
        type: DocumentARN
        description: <p>The name of the SSM document.</p>
      Owner?:
        type: DocumentOwner
        description: <p>The AWS user account of the person who created the document.</p>
      CreatedDate?:
        type: DateTime
        description: <p> The date when the SSM document was created. </p>
      Status?:
        type: DocumentStatus
        description: <p>The status of the SSM document.</p>
      Description?:
        type: DescriptionInDocument
        description: <p> A description of the document. </p>
      Parameters?:
        type: DocumentParameterList
        description: <p>A description of the parameters for a document.</p>
      PlatformTypes?:
        type: PlatformTypeList
        description: <p>The list of OS platforms compatible with this SSM document. </p>
    description: <p> Describes an SSM document. </p>
  DocumentFilter:
    type: object
    properties:
      key:
        type: DocumentFilterKey
        description: <p>The name of the filter.</p>
      value:
        type: DocumentFilterValue
        description: <p>The value of the filter.</p>
    description: <p>Describes a filter.</p>
  DocumentIdentifier:
    type: object
    properties:
      Name?:
        type: DocumentARN
        description: <p>The name of the SSM document.</p>
      Owner?:
        type: DocumentOwner
        description: <p>The AWS user account of the person who created the document.</p>
      PlatformTypes?:
        type: PlatformTypeList
        description: <p>The operating system platform. </p>
    description: <p>Describes the name of an SSM document.</p>
  DocumentParameter:
    type: object
    properties:
      Name?:
        type: DocumentParameterName
        description: <p>The name of the parameter.</p>
      Type?:
        type: DocumentParameterType
        description: <p>The type of parameter. The type can be either “String” or “StringList”.</p>
      Description?:
        type: DocumentParameterDescrption
        description: <p>A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.</p>
      DefaultValue?:
        type: DocumentParameterDefaultValue
        description: <p>If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.</p>
    description: <p>Parameters specified in the SSM document that execute on the server when the command is run. </p>
  FailedCreateAssociation:
    type: object
    properties:
      Entry?:
        type: CreateAssociationBatchRequestEntry
        description: <p>The association.</p>
      Message?:
        type: BatchErrorMessage
        description: <p>A description of the failure.</p>
      Fault?:
        type: Fault
        description: <p>The source of the failure.</p>
    description: <p>Describes a failed association.</p>
  GetDocumentRequest:
    type: object
    properties:
      Name:
        type: DocumentARN
        description: <p>The name of the SSM document.</p>
  GetDocumentResult:
    type: object
    properties:
      Name?:
        type: DocumentARN
        description: <p>The name of the SSM document.</p>
      Content?:
        type: DocumentContent
        description: <p>The contents of the SSM document.</p>
  InstanceInformation:
    type: object
    properties:
      InstanceId?:
        type: InstanceId
        description: <p>The instance ID. </p>
      PingStatus?:
        type: PingStatus
        description: <p>Connection status of the SSM agent. </p>
      LastPingDateTime?:
        type: DateTime | nil
        description: <p>The date and time when agent last pinged SSM service. </p>
      AgentVersion?:
        type: Version
        description: <p>The version of the SSM agent running on your Linux instance. </p>
      IsLatestVersion?:
        type: Boolean | nil
        description: <p>Indicates whether latest version of the SSM agent is running on your instance. </p>
      PlatformType?:
        type: PlatformType
        description: <p>The operating system platform type. </p>
      PlatformName?:
        type: String
        description: <p>The name of the operating system platform running on your instance. </p>
      PlatformVersion?:
        type: String
        description: <p>The version of the OS platform running on your instance. </p>
      ActivationId?:
        type: ActivationId
        description: <p>The activation ID created by SSM when the server or VM was registered.</p>
      IamRole?:
        type: IamRole
        description: <p>The Amazon Identity and Access Management (IAM) role assigned to EC2 instances or managed instances. </p>
      RegistrationDate?:
        type: DateTime | nil
        description: <p>The date the server or VM was registered with AWS as a managed instance.</p>
      ResourceType?:
        type: ResourceType
        description: <p>The type of instance. Instances are either EC2 instances or managed instances. </p>
      Name?:
        type: String
        description: <p>The name of the managed instance.</p>
      IPAddress?:
        type: IPAddress
        description: <p>The IP address of the managed instance.</p>
      ComputerName?:
        type: ComputerName
        description: <p>The fully qualified host name of the managed instance.</p>
    description: <p>Describes a filter for a specific list of instances. </p>
  InstanceInformationFilter:
    type: object
    properties:
      key:
        type: InstanceInformationFilterKey
        description: <p>The name of the filter. </p>
      valueSet:
        type: InstanceInformationFilterValueSet
        description: <p>The filter values. </p>
    description: <p>Describes a filter for a specific list of instances. </p>
  ListAssociationsRequest:
    type: object
    properties:
      AssociationFilterList:
        type: AssociationFilterList
        description: <p>One or more filters. Use a filter to return a more specific list of results.</p>
      MaxResults?:
        type: MaxResults | nil
        description: <p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
      NextToken?:
        type: NextToken
        description: <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
  ListAssociationsResult:
    type: object
    properties:
      Associations?:
        type: AssociationList
        description: <p>The associations.</p>
      NextToken?:
        type: NextToken
        description: <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
  ListCommandInvocationsRequest:
    type: object
    properties:
      CommandId?:
        type: CommandId
        description: <p>(Optional) The invocations for a specific command ID.</p>
      InstanceId?:
        type: InstanceId
        description: <p>(Optional) The command execution details for a specific instance ID.</p>
      MaxResults?:
        type: CommandMaxResults | nil
        description: <p>(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
      NextToken?:
        type: NextToken
        description: <p>(Optional) The token for the next set of items to return. (You received this token from a previous call.)</p>
      Filters?:
        type: CommandFilterList
        description: <p>(Optional) One or more filters. Use a filter to return a more specific list of results.</p>
      Details?:
        type: Boolean
        description: <p>(Optional) If set this returns the response of the command executions and any command output. By default this is set to False. </p>
  ListCommandInvocationsResult:
    type: object
    properties:
      CommandInvocations?:
        type: CommandInvocationList
        description: <p>(Optional) A list of all invocations. </p>
      NextToken?:
        type: NextToken
        description: <p>(Optional) The token for the next set of items to return. (You received this token from a previous call.)</p>
  ListCommandsRequest:
    type: object
    properties:
      CommandId?:
        type: CommandId
        description: <p>(Optional) If provided, lists only the specified command.</p>
      InstanceId?:
        type: InstanceId
        description: <p>(Optional) Lists commands issued against this instance ID.</p>
      MaxResults?:
        type: CommandMaxResults | nil
        description: <p>(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
      NextToken?:
        type: NextToken
        description: <p>(Optional) The token for the next set of items to return. (You received this token from a previous call.)</p>
      Filters?:
        type: CommandFilterList
        description: <p>(Optional) One or more filters. Use a filter to return a more specific list of results. </p>
  ListCommandsResult:
    type: object
    properties:
      Commands?:
        type: CommandList
        description: <p>(Optional) The list of commands requested by the user. </p>
      NextToken?:
        type: NextToken
        description: <p>(Optional) The token for the next set of items to return. (You received this token from a previous call.)</p>
  ListDocumentsRequest:
    type: object
    properties:
      DocumentFilterList?:
        type: DocumentFilterList
        description: <p>One or more filters. Use a filter to return a more specific list of results.</p>
      MaxResults?:
        type: MaxResults | nil
        description: <p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
      NextToken?:
        type: NextToken
        description: <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
  ListDocumentsResult:
    type: object
    properties:
      DocumentIdentifiers?:
        type: DocumentIdentifierList
        description: <p>The names of the SSM documents.</p>
      NextToken?:
        type: NextToken
        description: <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
  ListTagsForResourceRequest:
    type: object
    properties:
      ResourceType:
        type: ResourceTypeForTagging
        description: <p>Returns a list of tags for a specific resource type.</p>
      ResourceId:
        type: ResourceId
        description: <p>The resource ID for which you want to see a list of tags.</p>
  ListTagsForResourceResult:
    type: object
    properties:
      TagList?:
        type: TagList
        description: <p>A list of tags.</p>
  ModifyDocumentPermissionRequest:
    type: object
    properties:
      Name:
        type: DocumentName
        description: <p>The name of the document that you want to share.</p>
      PermissionType:
        type: DocumentPermissionType
        description: <p>The permission type for the document. The permission type can be <i>Share</i>.</p>
      AccountIdsToAdd?:
        type: AccountIdList
        description: <p>The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or <i>All</i>.</p>
      AccountIdsToRemove?:
        type: AccountIdList
        description: <p>The AWS user accounts that should no longer have access to the document. The AWS user account can either be a group of account IDs or <i>All</i>. This action has a higher priority than <i>AccountIdsToAdd</i>. If you specify an account ID to add and the same ID to remove, the system removes access to the document.</p>
  ModifyDocumentPermissionResponse:
    type: object
  NotificationConfig:
    type: object
    properties:
      NotificationArn?:
        type: NotificationArn
        description: <p>An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. SSM pushes notifications about command status changes to this topic.</p>
      NotificationEvents?:
        type: NotificationEventList
        description: '<p>The different events for which you can receive notifications.
          These events include the following: All (events), InProgress, Success, TimedOut,
          Cancelled, Failed. To learn more about these events, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-commands.html">Monitoring
          Commands</a> in the <i>Amazon Elastic Compute Cloud User Guide </i>.</p>'
      NotificationType?:
        type: NotificationType
        description: '<p>Command: Receive notification when the status of a command
          changes. Invocation: For commands sent to multiple instances, receive notification
          on a per-instance basis when the status of a command changes. </p>'
    description: <p>Configurations for sending notifications.</p>
  Parameters:
    type: object
    properties:
      //:
        type: ParameterValueList
  RemoveTagsFromResourceRequest:
    type: object
    properties:
      ResourceType:
        type: ResourceTypeForTagging
        description: <p>The type of resource of which you want to remove a tag.</p>
      ResourceId:
        type: ResourceId
        description: <p>The resource ID for which you want to remove tags.</p>
      TagKeys:
        type: KeyList
        description: <p>Tag keys that you want to remove from the specified resource.</p>
  RemoveTagsFromResourceResult:
    type: object
  SendCommandRequest:
    type: object
    properties:
      InstanceIds:
        type: InstanceIdList
        description: <p>Required. The instance IDs where the command should execute. You can specify a maximum of 50 IDs.</p>
      DocumentName:
        type: DocumentARN
        description: <p>Required. The name of the SSM document to execute. This can be an SSM public document or a custom document.</p>
      DocumentHash?:
        type: DocumentHash
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      DocumentHashType?:
        type: DocumentHashType
        description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      TimeoutSeconds?:
        type: TimeoutSeconds | nil
        description: <p>If this time is reached and the command has not already started executing, it will not execute.</p>
      Comment?:
        type: Comment
        description: <p>User-specified information about the command, such as a brief description of what the command should do.</p>
      Parameters?:
        type: Parameters
        description: <p>The required and optional parameters specified in the SSM document being executed.</p>
      OutputS3BucketName?:
        type: S3BucketName
        description: <p>The name of the S3 bucket where command execution responses should be stored.</p>
      OutputS3KeyPrefix?:
        type: S3KeyPrefix
        description: <p>The directory structure within the S3 bucket where the responses should be stored.</p>
      ServiceRoleArn?:
        type: ServiceRole
        description: <p>The IAM role that SSM uses to send notifications. </p>
      NotificationConfig?:
        type: NotificationConfig
        description: <p>Configurations for sending notifications.</p>
  SendCommandResult:
    type: object
    properties:
      Command?:
        type: Command
        description: <p>The request as it was received by SSM. Also provides the command ID which can be used future references to this request.</p>
  Tag:
    type: object
    properties:
      Key:
        type: TagKey
        description: <p>The name of the tag.</p>
      Value:
        type: TagValue
        description: <p>The value of the tag.</p>
    description: <p> Metadata that you assign to your managed instances. Tags enable you to categorize your managed instances in different ways, for example, by purpose, owner, or environment.</p>
  UpdateAssociationStatusRequest:
    type: object
    properties:
      Name:
        type: DocumentName
        description: <p>The name of the SSM document.</p>
      InstanceId:
        type: InstanceId
        description: <p>The ID of the instance.</p>
      AssociationStatus:
        type: AssociationStatus
        description: <p>The association status.</p>
  UpdateAssociationStatusResult:
    type: object
    properties:
      AssociationDescription?:
        type: AssociationDescription
        description: <p>Information about the association.</p>
  UpdateManagedInstanceRoleRequest:
    type: object
    properties:
      InstanceId:
        type: ManagedInstanceId
        description: <p>The ID of the managed instance where you want to update the role.</p>
      IamRole:
        type: IamRole
        description: <p>The IAM role you want to assign or change.</p>
  UpdateManagedInstanceRoleResult:
    type: object
/{AddTagsToResource}:
  uriParameters:
    AddTagsToResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Adds or overwrites one or more tags for the specified resource.
      Tags are metadata that you assign to your managed instances. Tags enable you
      to categorize your managed instances in different ways, for example, by purpose,
      owner, or environment. Each tag consists of a key and an optional value, both
      of which you define. For example, you could define a set of tags for your account''s
      managed instances that helps you track each instance''s owner and stack level.
      For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and
      Value=Production, Pre-Production, or Test. Each resource can have a maximum
      of 10 tags.   We recommend that you devise a set of tag keys that meets your
      needs for each resource type. Using a consistent set of tag keys makes it easier
      for you to manage your resources. You can search and filter the resources based
      on the tags you add. Tags don''t have any semantic meaning to Amazon EC2 and
      are interpreted strictly as a string of characters.  For more information about
      tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
      Your Amazon EC2 Resources</a> in the Amazon EC2 User Guide. '
    displayName: Add Tags To Resource
    body:
      application/json: AddTagsToResourceRequest
    responses:
      200:
        body:
          application/json: AddTagsToResourceResult
      400:
        description: InvalidResourceType
/{CancelCommand}:
  uriParameters:
    CancelCommand?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.
    displayName: Cancel Command
    body:
      application/json: CancelCommandRequest
    responses:
      200:
        body:
          application/json: CancelCommandResult
      400:
        description: InternalServerError
/{CreateActivation}:
  uriParameters:
    CreateActivation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Registers your on-premises server or virtual machine with Amazon
      EC2 so that you can manage these resources using Run Command. An on-premises
      server or virtual machine that has been registered with EC2 is called a managed
      instance. For more information about activations, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managed-instances.html">Setting
      Up Managed Instances (Linux)</a> or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/managed-instances.html">Setting
      Up Managed Instances (Windows)</a> in the Amazon EC2 User Guide. '
    displayName: Create Activation
    body:
      application/json: CreateActivationRequest
    responses:
      200:
        body:
          application/json: CreateActivationResult
      400:
        description: InternalServerError
/{CreateAssociation}:
  uriParameters:
    CreateAssociation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Associates the specified SSM document with the specified instance. When you associate an SSM document with an instance, the configuration agent on the instance (SSM agent for Linux and EC2Config service for Windows) processes the document and configures the instance as specified. If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.
    displayName: Create Association
    body:
      application/json: CreateAssociationRequest
    responses:
      200:
        body:
          application/json: CreateAssociationResult
      400:
        description: AssociationAlreadyExists
/{CreateAssociationBatch}:
  uriParameters:
    CreateAssociationBatch?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Associates the specified SSM document with the specified instances. When you associate an SSM document with an instance, the configuration agent on the instance (SSM agent for Linux and EC2Config service for Windows) processes the document and configures the instance as specified. If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.
    displayName: Create Association Batch
    body:
      application/json: CreateAssociationBatchRequest
    responses:
      200:
        body:
          application/json: CreateAssociationBatchResult
      400:
        description: InternalServerError
/{CreateDocument}:
  uriParameters:
    CreateDocument?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an SSM document. After you create an SSM document, you can use CreateAssociation to associate it with one or more running instances.
    displayName: Create Document
    body:
      application/json: CreateDocumentRequest
    responses:
      200:
        body:
          application/json: CreateDocumentResult
      400:
        description: DocumentAlreadyExists
/{DeleteActivation}:
  uriParameters:
    DeleteActivation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.
    displayName: Delete Activation
    body:
      application/json: DeleteActivationRequest
    responses:
      200:
        body:
          application/json: DeleteActivationResult
      400:
        description: InvalidActivationId
/{DeleteAssociation}:
  uriParameters:
    DeleteAssociation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disassociates the specified SSM document from the specified instance. When you disassociate an SSM document from an instance, it does not change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.
    displayName: Delete Association
    body:
      application/json: DeleteAssociationRequest
    responses:
      200:
        body:
          application/json: DeleteAssociationResult
      400:
        description: AssociationDoesNotExist
/{DeleteDocument}:
  uriParameters:
    DeleteDocument?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the SSM document and all instance associations to the document. Before you delete the SSM document, we recommend that you use DeleteAssociation to disassociate all instances that are associated with the document.
    displayName: Delete Document
    body:
      application/json: DeleteDocumentRequest
    responses:
      200:
        body:
          application/json: DeleteDocumentResult
      400:
        description: InternalServerError
/{DeregisterManagedInstance}:
  uriParameters:
    DeregisterManagedInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don’t plan to use Run Command on the server, we suggest uninstalling the SSM agent first.
    displayName: Deregister Managed Instance
    body:
      application/json: DeregisterManagedInstanceRequest
    responses:
      200:
        body:
          application/json: DeregisterManagedInstanceResult
      400:
        description: InvalidInstanceId
/{DescribeActivations}:
  uriParameters:
    DescribeActivations?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Details about the activation, including: the date and time the activation
      was created, the expiration date, the IAM role assigned to the instances in
      the activation, and the number of instances activated by this registration.'
    displayName: Describe Activations
    body:
      application/json: DescribeActivationsRequest
    responses:
      200:
        body:
          application/json: DescribeActivationsResult
      400:
        description: InvalidFilter
/{DescribeAssociation}:
  uriParameters:
    DescribeAssociation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the associations for the specified SSM document or instance.
    displayName: Describe Association
    body:
      application/json: DescribeAssociationRequest
    responses:
      200:
        body:
          application/json: DescribeAssociationResult
      400:
        description: AssociationDoesNotExist
/{DescribeDocument}:
  uriParameters:
    DescribeDocument?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified SSM document.
    displayName: Describe Document
    body:
      application/json: DescribeDocumentRequest
    responses:
      200:
        body:
          application/json: DescribeDocumentResult
      400:
        description: InternalServerError
/{DescribeDocumentPermission}:
  uriParameters:
    DescribeDocumentPermission?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes the permissions for an SSM document. If you created the
      document, you are the owner. If a document is shared, it can either be shared
      privately (by specifying a user’s AWS account ID) or publicly (<i>All</i>). '
    displayName: Describe Document Permission
    body:
      application/json: DescribeDocumentPermissionRequest
    responses:
      200:
        body:
          application/json: DescribeDocumentPermissionResponse
      400:
        description: InternalServerError
/{DescribeInstanceInformation}:
  uriParameters:
    DescribeInstanceInformation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes one or more of your instances. You can use this to get
      information about instances like the operating system platform, the SSM agent
      version (Linux), status etc. If you specify one or more instance IDs, it returns
      information for those instances. If you do not specify instance IDs, it returns
      information for all your instances. If you specify an instance ID that is not
      valid or an instance that you do not own, you receive an error. '
    displayName: Describe Instance Information
    body:
      application/json: DescribeInstanceInformationRequest
    responses:
      200:
        body:
          application/json: DescribeInstanceInformationResult
      400:
        description: InternalServerError
/{GetDocument}:
  uriParameters:
    GetDocument?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Gets the contents of the specified SSM document.
    displayName: Get Document
    body:
      application/json: GetDocumentRequest
    responses:
      200:
        body:
          application/json: GetDocumentResult
      400:
        description: InternalServerError
/{ListAssociations}:
  uriParameters:
    ListAssociations?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Lists the associations for the specified SSM document or instance.
    displayName: List Associations
    body:
      application/json: ListAssociationsRequest
    responses:
      200:
        body:
          application/json: ListAssociationsResult
      400:
        description: InternalServerError
/{ListCommandInvocations}:
  uriParameters:
    ListCommandInvocations?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.
    displayName: List Command Invocations
    body:
      application/json: ListCommandInvocationsRequest
    responses:
      200:
        body:
          application/json: ListCommandInvocationsResult
      400:
        description: InternalServerError
/{ListCommands}:
  uriParameters:
    ListCommands?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Lists the commands requested by users of the AWS account.
    displayName: List Commands
    body:
      application/json: ListCommandsRequest
    responses:
      200:
        body:
          application/json: ListCommandsResult
      400:
        description: InternalServerError
/{ListDocuments}:
  uriParameters:
    ListDocuments?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your SSM documents.
    displayName: List Documents
    body:
      application/json: ListDocumentsRequest
    responses:
      200:
        body:
          application/json: ListDocumentsResult
      400:
        description: InternalServerError
/{ListTagsForResource}:
  uriParameters:
    ListTagsForResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns a list of the tags assigned to the specified resource.
    displayName: List Tags For Resource
    body:
      application/json: ListTagsForResourceRequest
    responses:
      200:
        body:
          application/json: ListTagsForResourceResult
      400:
        description: InvalidResourceType
/{ModifyDocumentPermission}:
  uriParameters:
    ModifyDocumentPermission?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Share a document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.
    displayName: Modify Document Permission
    body:
      application/json: ModifyDocumentPermissionRequest
    responses:
      200:
        body:
          application/json: ModifyDocumentPermissionResponse
      400:
        description: InternalServerError
/{RemoveTagsFromResource}:
  uriParameters:
    RemoveTagsFromResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Removes all tags from the specified resource.
    displayName: Remove Tags From Resource
    body:
      application/json: RemoveTagsFromResourceRequest
    responses:
      200:
        body:
          application/json: RemoveTagsFromResourceResult
      400:
        description: InvalidResourceType
/{SendCommand}:
  uriParameters:
    SendCommand?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Executes commands on one or more remote instances.
    displayName: Send Command
    body:
      application/json: SendCommandRequest
    responses:
      200:
        body:
          application/json: SendCommandResult
      400:
        description: DuplicateInstanceId
/{UpdateAssociationStatus}:
  uriParameters:
    UpdateAssociationStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Updates the status of the SSM document associated with the specified instance.
    displayName: Update Association Status
    body:
      application/json: UpdateAssociationStatusRequest
    responses:
      200:
        body:
          application/json: UpdateAssociationStatusResult
      400:
        description: InternalServerError
/{UpdateManagedInstanceRole}:
  uriParameters:
    UpdateManagedInstanceRole?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.
    displayName: Update Managed Instance Role
    body:
      application/json: UpdateManagedInstanceRoleRequest
    responses:
      200:
        body:
          application/json: UpdateManagedInstanceRoleResult
      400:
        description: InvalidInstanceId
