#%RAML 1.0
title: AWS Directory Service
version: '2015-04-16'
description: '  This is the <i>AWS Directory Service API Reference</i>. This guide
  provides detailed information about AWS Directory Service operations, data types,
  parameters, and errors.'
mediaType:
- application/json
types:
  AccessUrl:
    type: string
    minLength: 1
    maxLength: 128
  AddedDateTime:
    type: datetime
  AliasName:
    type: string
    pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*
    minLength: 1
    maxLength: 62
  AttributeName:
    type: string
    minLength: 1
  AttributeValue:
    type: string
  Attributes:
    type: array
    items:
      type: Attribute
  AvailabilityZone:
    type: string
  AvailabilityZones:
    type: array
    items:
      type: AvailabilityZone
  CidrIp:
    type: string
    pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-9]|[1-2][0-9]|3[0-2]))$
  CidrIps:
    type: array
    items:
      type: CidrIp
  CloudOnlyDirectoriesLimitReached:
    type: boolean
  ComputerName:
    type: string
    minLength: 1
    maxLength: 15
  ComputerPassword:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 8
    maxLength: 64
  ConditionalForwarders:
    type: array
    items:
      type: ConditionalForwarder
  ConnectPassword:
    type: string
    minLength: 1
    maxLength: 128
  ConnectedDirectoriesLimitReached:
    type: boolean
  CreatedDateTime:
    type: datetime
  DeleteAssociatedConditionalForwarder:
    type: boolean
  Description:
    type: string
    pattern: ^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$
    minLength: 0
    maxLength: 128
  DirectoryDescriptions:
    type: array
    items:
      type: DirectoryDescription
    description: <p>A list of directory descriptions.</p>
  DirectoryId:
    type: string
    pattern: ^d-[0-9a-f]{10}$
  DirectoryIds:
    type: array
    items:
      type: DirectoryId
    description: <p>A list of directory identifiers.</p>
  DirectoryName:
    type: string
    pattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
  DirectoryShortName:
    type: string
    pattern: ^[^\\/:*?\"\<\>|.]+[^\\/:*?\"<>|]*$
  DirectorySize:
    type: string
    enum:
    - Small
    - Large
  DirectoryStage:
    type: string
    enum:
    - Requested
    - Creating
    - Created
    - Active
    - Inoperable
    - Impaired
    - Restoring
    - RestoreFailed
    - Deleting
    - Deleted
    - Failed
  DirectoryType:
    type: string
    enum:
    - SimpleAD
    - ADConnector
    - MicrosoftAD
  DnsIpAddrs:
    type: array
    items:
      type: IpAddr
  EventTopics:
    type: array
    items:
      type: EventTopic
  IpAddr:
    type: string
    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
  IpAddrs:
    type: array
    items:
      type: IpAddr
  IpRouteStatusMsg:
    type: string
    enum:
    - Adding
    - Added
    - Removing
    - Removed
    - AddFailed
    - RemoveFailed
  IpRouteStatusReason:
    type: string
  IpRoutes:
    type: array
    items:
      type: IpRoute
  IpRoutesInfo:
    type: array
    items:
      type: IpRouteInfo
  LastUpdatedDateTime:
    type: datetime
  LaunchTime:
    type: datetime
  Limit:
    type: integer
    format: int
    minimum: 0
  ManualSnapshotsLimitReached:
    type: boolean
  NextToken:
    type: string
  OrganizationalUnitDN:
    type: string
    minLength: 1
    maxLength: 2000
  Password:
    type: string
    pattern: (?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
  PortNumber:
    type: integer
    format: int
    minimum: 1025
    maximum: 65535
  RadiusAuthenticationProtocol:
    type: string
    enum:
    - PAP
    - CHAP
    - MS-CHAPv1
    - MS-CHAPv2
  RadiusDisplayLabel:
    type: string
    minLength: 1
    maxLength: 64
  RadiusRetries:
    type: integer
    format: int
    minimum: 0
    maximum: 10
  RadiusSharedSecret:
    type: string
    minLength: 8
    maxLength: 512
  RadiusStatus:
    type: string
    enum:
    - Creating
    - Completed
    - Failed
  RadiusTimeout:
    type: integer
    format: int
    minimum: 1
    maximum: 20
  RemoteDomainName:
    type: string
    pattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+[.]?$
  RemoteDomainNames:
    type: array
    items:
      type: RemoteDomainName
  ReplicationScope:
    type: string
    enum:
    - Domain
  ResourceId:
    type: string
    pattern: ^[d]-[0-9a-f]{10}$
  SID:
    type: string
    pattern: '[&\w+-.@]+'
    minLength: 1
    maxLength: 256
  SecurityGroupId:
    type: string
    pattern: ^(sg-[0-9a-f]{8})$
  Server:
    type: string
    minLength: 1
    maxLength: 256
  Servers:
    type: array
    items:
      type: Server
  SnapshotId:
    type: string
    pattern: ^s-[0-9a-f]{10}$
  SnapshotIds:
    type: array
    items:
      type: SnapshotId
    description: <p>A list of directory snapshot identifiers.</p>
  SnapshotName:
    type: string
    pattern: ^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$
    minLength: 0
    maxLength: 128
  SnapshotStatus:
    type: string
    enum:
    - Creating
    - Completed
    - Failed
  SnapshotType:
    type: string
    enum:
    - Auto
    - Manual
  Snapshots:
    type: array
    items:
      type: Snapshot
    description: <p>A list of descriptions of directory snapshots.</p>
  SsoEnabled:
    type: boolean
  StageReason:
    type: string
  StartTime:
    type: datetime
  StateLastUpdatedDateTime:
    type: datetime
  SubnetId:
    type: string
    pattern: ^(subnet-[0-9a-f]{8})$
  SubnetIds:
    type: array
    items:
      type: SubnetId
  TagKey:
    type: string
    pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
    minLength: 1
    maxLength: 128
  TagKeys:
    type: array
    items:
      type: TagKey
  TagValue:
    type: string
    pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
    minLength: 0
    maxLength: 256
  Tags:
    type: array
    items:
      type: Tag
  TopicArn:
    type: string
  TopicName:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 256
  TopicNames:
    type: array
    items:
      type: TopicName
  TopicStatus:
    type: string
    enum:
    - Registered
    - Topic not found
    - Failed
    - Deleted
  TrustDirection:
    type: string
    enum:
    - 'One-Way: Outgoing'
    - 'One-Way: Incoming'
    - Two-Way
  TrustId:
    type: string
    pattern: ^t-[0-9a-f]{10}$
  TrustIds:
    type: array
    items:
      type: TrustId
  TrustPassword:
    type: string
    minLength: 1
    maxLength: 128
  TrustState:
    type: string
    enum:
    - Creating
    - Created
    - Verifying
    - VerifyFailed
    - Verified
    - Deleting
    - Deleted
    - Failed
  TrustStateReason:
    type: string
  TrustType:
    type: string
    enum:
    - Forest
  Trusts:
    type: array
    items:
      type: Trust
  UpdateSecurityGroupForDirectoryControllers:
    type: boolean
  UseSameUsername:
    type: boolean
  UserName:
    type: string
    pattern: '[a-zA-Z0-9._-]+'
    minLength: 1
  VpcId:
    type: string
    pattern: ^(vpc-[0-9a-f]{8})$
  AddIpRoutesRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>Identifier (ID) of the directory to which to add the address block.</p>
      IpRoutes:
        type: IpRoutes
        description: <p>IP address blocks, using CIDR format, of the traffic to route. This is often the IP address block of the DNS server used for your on-premises domain.</p>
      UpdateSecurityGroupForDirectoryControllers?:
        type: UpdateSecurityGroupForDirectoryControllers
        description: '<p>If set to true, updates the inbound and outbound rules of
          the security group that has the description: "AWS created security group
          for <i>directory ID</i> directory controllers." Following are the new rules:
          </p> <p>Inbound:</p> <ul> <li> <p>Type: Custom UDP Rule, Protocol: UDP,
          Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol:
          UDP, Range: 123, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule,
          Protocol: UDP, Range: 138, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom
          UDP Rule, Protocol: UDP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type:
          Custom UDP Rule, Protocol: UDP, Range: 464, Source: 0.0.0.0/0</p> </li>
          <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 445, Source: 0.0.0.0/0</p>
          </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 88, Source: 0.0.0.0/0</p>
          </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 135, Source:
          0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range:
          445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol:
          TCP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule,
          Protocol: TCP, Range: 636, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom
          TCP Rule, Protocol: TCP, Range: 1024-65535, Source: 0.0.0.0/0</p> </li>
          <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 3268-33269, Source:
          0.0.0.0/0</p> </li> <li> <p>Type: DNS (UDP), Protocol: UDP, Range: 53, Source:
          0.0.0.0/0</p> </li> <li> <p>Type: DNS (TCP), Protocol: TCP, Range: 53, Source:
          0.0.0.0/0</p> </li> <li> <p>Type: LDAP, Protocol: TCP, Range: 389, Source:
          0.0.0.0/0</p> </li> <li> <p>Type: All ICMP, Protocol: All, Range: N/A, Source:
          0.0.0.0/0</p> </li> </ul> <p/> <p>Outbound:</p> <ul> <li> <p>Type: All traffic,
          Protocol: All, Range: All, Destination: 0.0.0.0/0</p> </li> </ul> <p>These
          security rules impact an internal network interface that is not exposed
          publicly.</p>'
  AddIpRoutesResult:
    type: object
  AddTagsToResourceRequest:
    type: object
    properties:
      ResourceId:
        type: ResourceId
        description: <p>Identifier (ID) for the directory to which to add the tag.</p>
      Tags:
        type: Tags
        description: <p>The tags to be assigned to the Amazon Directory Services directory.</p>
  AddTagsToResourceResult:
    type: object
  Attribute:
    type: object
    properties:
      Name?:
        type: AttributeName
        description: <p>The name of the attribute.</p>
      Value?:
        type: AttributeValue
        description: <p>The value of the attribute.</p>
    description: <p>Represents a named directory attribute.</p>
  Computer:
    type: object
    properties:
      ComputerId?:
        type: SID
        description: <p>The identifier of the computer.</p>
      ComputerName?:
        type: ComputerName
        description: <p>The computer name.</p>
      ComputerAttributes?:
        type: Attributes
        description: <p>An array of <a>Attribute</a> objects containing the LDAP attributes that belong to the computer account.</p>
    description: <p>Contains information about a computer account in a directory.</p>
  ConditionalForwarder:
    type: object
    properties:
      RemoteDomainName?:
        type: RemoteDomainName
        description: <p>The fully qualified domain name (FQDN) of the remote domains pointed to by the conditional forwarder.</p>
      DnsIpAddrs?:
        type: DnsIpAddrs
        description: <p>The IP addresses of the remote DNS server associated with RemoteDomainName. This is the IP address of the DNS server that your conditional forwarder points to.</p>
      ReplicationScope?:
        type: ReplicationScope
        description: <p>The replication scope of the conditional forwarder. The only allowed value is <code>Domain</code>, which will replicate the conditional forwarder to all of the domain controllers for your AWS directory.</p>
    description: <p>Points to a remote domain with which you are setting up a trust relationship. Conditional forwarders are required in order to set up a trust relationship with another domain.</p>
  ConnectDirectoryRequest:
    type: object
    properties:
      Name:
        type: DirectoryName
        description: <p>The fully-qualified name of the on-premises directory, such as <code>corp.example.com</code>.</p>
      ShortName?:
        type: DirectoryShortName
        description: <p>The NetBIOS name of the on-premises directory, such as <code>CORP</code>.</p>
      Password:
        type: ConnectPassword
        description: <p>The password for the on-premises user account.</p>
      Description?:
        type: Description
        description: <p>A textual description for the directory.</p>
      Size:
        type: DirectorySize
        description: <p>The size of the directory.</p>
      ConnectSettings:
        type: DirectoryConnectSettings
        description: <p>A <a>DirectoryConnectSettings</a> object that contains additional information for the operation.</p>
    description: <p>Contains the inputs for the <a>ConnectDirectory</a> operation.</p>
  ConnectDirectoryResult:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The identifier of the new directory.</p>
    description: <p>Contains the results of the <a>ConnectDirectory</a> operation.</p>
  CreateAliasRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory for which to create the alias.</p>
      Alias:
        type: AliasName
        description: <p>The requested alias.</p> <p>The alias must be unique amongst all aliases in AWS. This operation throws an <code>EntityAlreadyExistsException</code> error if the alias already exists.</p>
    description: <p>Contains the inputs for the <a>CreateAlias</a> operation.</p>
  CreateAliasResult:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The identifier of the directory.</p>
      Alias?:
        type: AliasName
        description: <p>The alias for the directory.</p>
    description: <p>Contains the results of the <a>CreateAlias</a> operation.</p>
  CreateComputerRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory in which to create the computer account.</p>
      ComputerName:
        type: ComputerName
        description: <p>The name of the computer account.</p>
      Password:
        type: ComputerPassword
        description: <p>A one-time password that is used to join the computer to the directory. You should generate a random, strong password to use for this parameter.</p>
      OrganizationalUnitDistinguishedName?:
        type: OrganizationalUnitDN
        description: <p>The fully-qualified distinguished name of the organizational unit to place the computer account in.</p>
      ComputerAttributes?:
        type: Attributes
        description: <p>An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to the computer account.</p>
    description: <p>Contains the inputs for the <a>CreateComputer</a> operation.</p>
  CreateComputerResult:
    type: object
    properties:
      Computer?:
        type: Computer
        description: <p>A <a>Computer</a> object that represents the computer account.</p>
    description: <p>Contains the results for the <a>CreateComputer</a> operation.</p>
  CreateConditionalForwarderRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The directory ID of the AWS directory for which you are creating the conditional forwarder.</p>
      RemoteDomainName:
        type: RemoteDomainName
        description: <p>The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.</p>
      DnsIpAddrs:
        type: DnsIpAddrs
        description: <p>The IP addresses of the remote DNS server associated with RemoteDomainName.</p>
    description: <p>Initiates the creation of a conditional forwarder for your AWS Directory Service for Microsoft Active Directory. Conditional forwarders are required in order to set up a trust relationship with another domain.</p>
  CreateConditionalForwarderResult:
    type: object
    description: <p>The result of a CreateConditinalForwarder request.</p>
  CreateDirectoryRequest:
    type: object
    properties:
      Name:
        type: DirectoryName
        description: <p>The fully qualified name for the directory, such as <code>corp.example.com</code>.</p>
      ShortName?:
        type: DirectoryShortName
        description: <p>The short name of the directory, such as <code>CORP</code>.</p>
      Password:
        type: Password
        description: <p>The password for the directory administrator. The directory creation process creates a directory administrator account with the username <code>Administrator</code> and this password.</p>
      Description?:
        type: Description
        description: <p>A textual description for the directory.</p>
      Size:
        type: DirectorySize
        description: <p>The size of the directory.</p>
      VpcSettings?:
        type: DirectoryVpcSettings
        description: <p>A <a>DirectoryVpcSettings</a> object that contains additional information for the operation.</p>
    description: <p>Contains the inputs for the <a>CreateDirectory</a> operation. </p>
  CreateDirectoryResult:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The identifier of the directory that was created.</p>
    description: <p>Contains the results of the <a>CreateDirectory</a> operation.</p>
  CreateMicrosoftADRequest:
    type: object
    properties:
      Name:
        type: DirectoryName
        description: <p>The fully qualified domain name for the directory, such as <code>corp.example.com</code>. This name will resolve inside your VPC only. It does not need to be publicly resolvable.</p>
      ShortName?:
        type: DirectoryShortName
        description: <p>The NetBIOS name for your domain. A short identifier for your domain, such as <code>CORP</code>. If you don't specify a NetBIOS name, it will default to the first part of your directory DNS. For example, <code>CORP</code> for the directory DNS <code>corp.example.com</code>. </p>
      Password:
        type: Password
        description: <p>The password for the default administrative user named <code>Admin</code>.</p>
      Description?:
        type: Description
        description: <p>A textual description for the directory. This label will appear on the AWS console <code>Directory Details</code> page after the directory is created.</p>
      VpcSettings:
        type: DirectoryVpcSettings
    description: <p>Creates a Microsoft AD in the AWS cloud.</p>
  CreateMicrosoftADResult:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The identifier of the directory that was created.</p>
    description: <p>Result of a CreateMicrosoftAD request.</p>
  CreateSnapshotRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory of which to take a snapshot.</p>
      Name?:
        type: SnapshotName
        description: <p>The descriptive name to apply to the snapshot.</p>
    description: <p>Contains the inputs for the <a>CreateSnapshot</a> operation.</p>
  CreateSnapshotResult:
    type: object
    properties:
      SnapshotId?:
        type: SnapshotId
        description: <p>The identifier of the snapshot that was created.</p>
    description: <p>Contains the results of the <a>CreateSnapshot</a> operation.</p>
  CreateTrustRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The Directory ID of the Microsoft AD in the AWS cloud for which to establish the trust relationship.</p>
      RemoteDomainName:
        type: RemoteDomainName
        description: <p>The Fully Qualified Domain Name (FQDN) of the external domain for which to create the trust relationship.</p>
      TrustPassword:
        type: TrustPassword
        description: <p>The trust password. The must be the same password that was used when creating the trust relationship on the external domain.</p>
      TrustDirection:
        type: TrustDirection
        description: <p>The direction of the trust relationship.</p>
      TrustType?:
        type: TrustType
        description: <p>The trust relationship type.</p>
      ConditionalForwarderIpAddrs?:
        type: DnsIpAddrs
        description: <p>The IP addresses of the remote DNS server associated with RemoteDomainName.</p>
    description: <p>AWS Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Microsoft AD in the AWS cloud, and your existing on-premises Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the AWS side of a trust relationship between a Microsoft AD in the AWS cloud and an external domain.</p>
  CreateTrustResult:
    type: object
    properties:
      TrustId?:
        type: TrustId
        description: <p>A unique identifier for the trust relationship that was created.</p>
    description: <p>The result of a CreateTrust request.</p>
  DeleteConditionalForwarderRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The directory ID for which you are deleting the conditional forwarder.</p>
      RemoteDomainName:
        type: RemoteDomainName
        description: <p>The fully qualified domain name (FQDN) of the remote domain with which you are deleting the conditional forwarder.</p>
    description: <p>Deletes a conditional forwarder.</p>
  DeleteConditionalForwarderResult:
    type: object
    description: <p>The result of a DeleteConditionalForwarder request.</p>
  DeleteDirectoryRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory to delete.</p>
    description: <p>Contains the inputs for the <a>DeleteDirectory</a> operation.</p>
  DeleteDirectoryResult:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The directory identifier.</p>
    description: <p>Contains the results of the <a>DeleteDirectory</a> operation.</p>
  DeleteSnapshotRequest:
    type: object
    properties:
      SnapshotId:
        type: SnapshotId
        description: <p>The identifier of the directory snapshot to be deleted.</p>
    description: <p>Contains the inputs for the <a>DeleteSnapshot</a> operation.</p>
  DeleteSnapshotResult:
    type: object
    properties:
      SnapshotId?:
        type: SnapshotId
        description: <p>The identifier of the directory snapshot that was deleted.</p>
    description: <p>Contains the results of the <a>DeleteSnapshot</a> operation.</p>
  DeleteTrustRequest:
    type: object
    properties:
      TrustId:
        type: TrustId
        description: <p>The Trust ID of the trust relationship to be deleted.</p>
      DeleteAssociatedConditionalForwarder?:
        type: DeleteAssociatedConditionalForwarder
        description: <p>Delete a conditional forwarder as part of a DeleteTrustRequest.</p>
    description: <p>Deletes the local side of an existing trust relationship between the Microsoft AD in the AWS cloud and the external domain.</p>
  DeleteTrustResult:
    type: object
    properties:
      TrustId?:
        type: TrustId
        description: <p>The Trust ID of the trust relationship that was deleted.</p>
    description: <p>The result of a DeleteTrust request.</p>
  DeregisterEventTopicRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The Directory ID to remove as a publisher. This directory will no longer send messages to the specified SNS topic.</p>
      TopicName:
        type: TopicName
        description: <p>The name of the SNS topic from which to remove the directory as a publisher.</p>
    description: <p>Removes the specified directory as a publisher to the specified SNS topic.</p>
  DeregisterEventTopicResult:
    type: object
    description: <p>The result of a DeregisterEventTopic request.</p>
  DescribeConditionalForwardersRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The directory ID for which to get the list of associated conditional forwarders.</p>
      RemoteDomainNames?:
        type: RemoteDomainNames
        description: <p>The fully qualified domain names (FQDN) of the remote domains for which to get the list of associated conditional forwarders. If this member is null, all conditional forwarders are returned.</p>
    description: <p>Describes a conditional forwarder.</p>
  DescribeConditionalForwardersResult:
    type: object
    properties:
      ConditionalForwarders?:
        type: ConditionalForwarders
        description: <p>The list of conditional forwarders that have been created.</p>
    description: <p>The result of a DescribeConditionalForwarder request.</p>
  DescribeDirectoriesRequest:
    type: object
    properties:
      DirectoryIds?:
        type: DirectoryIds
        description: <p>A list of identifiers of the directories for which to obtain the information. If this member is null, all directories that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>
      NextToken?:
        type: NextToken
        description: <p>The <i>DescribeDirectoriesResult.NextToken</i> value from a previous call to <a>DescribeDirectories</a>. Pass null if this is the first call.</p>
      Limit?:
        type: Limit
        description: <p>The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.</p>
    description: <p>Contains the inputs for the <a>DescribeDirectories</a> operation.</p>
  DescribeDirectoriesResult:
    type: object
    properties:
      DirectoryDescriptions?:
        type: DirectoryDescriptions
        description: <p>The list of <a>DirectoryDescription</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>
      NextToken?:
        type: NextToken
        description: <p>If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next set of items.</p>
    description: <p>Contains the results of the <a>DescribeDirectories</a> operation.</p>
  DescribeEventTopicsRequest:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The Directory ID for which to get the list of associated SNS topics. If this member is null, associations for all Directory IDs are returned.</p>
      TopicNames?:
        type: TopicNames
        description: <p>A list of SNS topic names for which to obtain the information. If this member is null, all associations for the specified Directory ID are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>
    description: <p>Describes event topics.</p>
  DescribeEventTopicsResult:
    type: object
    properties:
      EventTopics?:
        type: EventTopics
        description: <p>A list of SNS topic names that receive status messages from the specified Directory ID.</p>
    description: <p>The result of a DescribeEventTopic request.</p>
  DescribeSnapshotsRequest:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The identifier of the directory for which to retrieve snapshot information.</p>
      SnapshotIds?:
        type: SnapshotIds
        description: <p>A list of identifiers of the snapshots to obtain the information for. If this member is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i> members.</p>
      NextToken?:
        type: NextToken
        description: <p>The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>. Pass null if this is the first call.</p>
      Limit?:
        type: Limit
        description: <p>The maximum number of objects to return.</p>
    description: <p>Contains the inputs for the <a>DescribeSnapshots</a> operation.</p>
  DescribeSnapshotsResult:
    type: object
    properties:
      Snapshots?:
        type: Snapshots
        description: <p>The list of <a>Snapshot</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>
      NextToken?:
        type: NextToken
        description: <p>If not null, more results are available. Pass this value in the <i>NextToken</i> member of a subsequent call to <a>DescribeSnapshots</a>.</p>
    description: <p>Contains the results of the <a>DescribeSnapshots</a> operation.</p>
  DescribeTrustsRequest:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The Directory ID of the AWS directory that is a part of the requested trust relationship.</p>
      TrustIds?:
        type: TrustIds
        description: <p>A list of identifiers of the trust relationships for which to obtain the information. If this member is null, all trust relationships that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>
      NextToken?:
        type: NextToken
        description: <p>The <i>DescribeTrustsResult.NextToken</i> value from a previous call to <a>DescribeTrusts</a>. Pass null if this is the first call.</p>
      Limit?:
        type: Limit
        description: <p>The maximum number of objects to return.</p>
    description: <p>Describes the trust relationships for a particular Microsoft AD in the AWS cloud. If no input parameters are are provided, such as directory ID or trust ID, this request describes all the trust relationships.</p>
  DescribeTrustsResult:
    type: object
    properties:
      Trusts?:
        type: Trusts
        description: <p>The list of Trust objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>
      NextToken?:
        type: NextToken
        description: <p>If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeTrusts</a> to retrieve the next set of items.</p>
    description: <p>The result of a DescribeTrust request.</p>
  DirectoryConnectSettings:
    type: object
    properties:
      VpcId:
        type: VpcId
        description: <p>The identifier of the VPC in which the AD Connector is created.</p>
      SubnetIds:
        type: SubnetIds
        description: <p>A list of subnet identifiers in the VPC in which the AD Connector is created.</p>
      CustomerDnsIps:
        type: DnsIpAddrs
        description: <p>A list of one or more IP addresses of DNS servers or domain controllers in the on-premises directory.</p>
      CustomerUserName:
        type: UserName
        description: <p>The username of an account in the on-premises directory that is used to connect to the directory. This account must have the following privileges:</p> <ul> <li> <p>Read users and groups</p> </li> <li> <p>Create computer objects</p> </li> <li> <p>Join computers to the domain</p> </li> </ul>
    description: <p>Contains information for the <a>ConnectDirectory</a> operation when an AD Connector directory is being created.</p>
  DirectoryConnectSettingsDescription:
    type: object
    properties:
      VpcId?:
        type: VpcId
        description: <p>The identifier of the VPC that the AD Connector is in.</p>
      SubnetIds?:
        type: SubnetIds
        description: <p>A list of subnet identifiers in the VPC that the AD connector is in.</p>
      CustomerUserName?:
        type: UserName
        description: <p>The username of the service account in the on-premises directory.</p>
      SecurityGroupId?:
        type: SecurityGroupId
        description: <p>The security group identifier for the AD Connector directory.</p>
      AvailabilityZones?:
        type: AvailabilityZones
        description: <p>A list of the Availability Zones that the directory is in.</p>
      ConnectIps?:
        type: IpAddrs
        description: <p>The IP addresses of the AD Connector servers.</p>
    description: <p>Contains information about an AD Connector directory.</p>
  DirectoryDescription:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The directory identifier.</p>
      Name?:
        type: DirectoryName
        description: <p>The fully-qualified name of the directory.</p>
      ShortName?:
        type: DirectoryShortName
        description: <p>The short name of the directory.</p>
      Size?:
        type: DirectorySize
        description: <p>The directory size.</p>
      Alias?:
        type: AliasName
        description: <p>The alias for the directory. If no alias has been created for the directory, the alias is the directory identifier, such as <code>d-XXXXXXXXXX</code>.</p>
      AccessUrl?:
        type: AccessUrl
        description: <p>The access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>. If no alias has been created for the directory, <code>&lt;alias&gt;</code> is the directory identifier, such as <code>d-XXXXXXXXXX</code>.</p>
      Description?:
        type: Description
        description: <p>The textual description for the directory.</p>
      DnsIpAddrs?:
        type: DnsIpAddrs
        description: <p>The IP addresses of the DNS servers for the directory. For a Simple AD or Microsoft AD directory, these are the IP addresses of the Simple AD or Microsoft AD directory servers. For an AD Connector directory, these are the IP addresses of the DNS servers or domain controllers in the on-premises directory to which the AD Connector is connected.</p>
      Stage?:
        type: DirectoryStage
        description: <p>The current stage of the directory.</p>
      LaunchTime?:
        type: LaunchTime
        description: <p>Specifies when the directory was created.</p>
      StageLastUpdatedDateTime?:
        type: LastUpdatedDateTime
        description: <p>The date and time that the stage was last updated.</p>
      Type?:
        type: DirectoryType
        description: <p>The directory size.</p>
      VpcSettings?:
        type: DirectoryVpcSettingsDescription
        description: <p>A <a>DirectoryVpcSettingsDescription</a> object that contains additional information about a directory. This member is only present if the directory is a Simple AD or Managed AD directory.</p>
      ConnectSettings?:
        type: DirectoryConnectSettingsDescription
        description: <p>A <a>DirectoryConnectSettingsDescription</a> object that contains additional information about an AD Connector directory. This member is only present if the directory is an AD Connector directory.</p>
      RadiusSettings?:
        type: RadiusSettings
        description: <p>A <a>RadiusSettings</a> object that contains information about the RADIUS server configured for this directory.</p>
      RadiusStatus?:
        type: RadiusStatus
        description: <p>The status of the RADIUS MFA server connection.</p>
      StageReason?:
        type: StageReason
        description: <p>Additional information about the directory stage.</p>
      SsoEnabled?:
        type: SsoEnabled
        description: <p>Indicates if single-sign on is enabled for the directory. For more information, see <a>EnableSso</a> and <a>DisableSso</a>.</p>
    description: <p>Contains information about an AWS Directory Service directory.</p>
  DirectoryLimits:
    type: object
    properties:
      CloudOnlyDirectoriesLimit?:
        type: Limit
        description: <p>The maximum number of cloud directories allowed in the region.</p>
      CloudOnlyDirectoriesCurrentCount?:
        type: Limit
        description: <p>The current number of cloud directories in the region.</p>
      CloudOnlyDirectoriesLimitReached?:
        type: CloudOnlyDirectoriesLimitReached
        description: <p>Indicates if the cloud directory limit has been reached.</p>
      CloudOnlyMicrosoftADLimit?:
        type: Limit
        description: <p>The maximum number of Microsoft AD directories allowed in the region.</p>
      CloudOnlyMicrosoftADCurrentCount?:
        type: Limit
        description: <p>The current number of Microsoft AD directories in the region.</p>
      CloudOnlyMicrosoftADLimitReached?:
        type: CloudOnlyDirectoriesLimitReached
        description: <p>Indicates if the Microsoft AD directory limit has been reached.</p>
      ConnectedDirectoriesLimit?:
        type: Limit
        description: <p>The maximum number of connected directories allowed in the region.</p>
      ConnectedDirectoriesCurrentCount?:
        type: Limit
        description: <p>The current number of connected directories in the region.</p>
      ConnectedDirectoriesLimitReached?:
        type: ConnectedDirectoriesLimitReached
        description: <p>Indicates if the connected directory limit has been reached.</p>
    description: <p>Contains directory limit information for a region.</p>
  DirectoryVpcSettings:
    type: object
    properties:
      VpcId:
        type: VpcId
        description: <p>The identifier of the VPC in which to create the directory.</p>
      SubnetIds:
        type: SubnetIds
        description: <p>The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. AWS Directory Service creates a directory server and a DNS server in each of these subnets.</p>
    description: <p>Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.</p>
  DirectoryVpcSettingsDescription:
    type: object
    properties:
      VpcId?:
        type: VpcId
        description: <p>The identifier of the VPC that the directory is in.</p>
      SubnetIds?:
        type: SubnetIds
        description: <p>The identifiers of the subnets for the directory servers.</p>
      SecurityGroupId?:
        type: SecurityGroupId
        description: <p>The security group identifier for the directory. If the directory was created before 8/1/2014, this is the identifier of the directory members security group that was created when the directory was created. If the directory was created after this date, this value is null.</p>
      AvailabilityZones?:
        type: AvailabilityZones
        description: <p>The list of Availability Zones that the directory is in.</p>
    description: <p>Contains information about the directory.</p>
  DisableRadiusRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory for which to disable MFA.</p>
    description: <p>Contains the inputs for the <a>DisableRadius</a> operation.</p>
  DisableRadiusResult:
    type: object
    description: <p>Contains the results of the <a>DisableRadius</a> operation.</p>
  DisableSsoRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory for which to disable single-sign on.</p>
      UserName?:
        type: UserName
        description: <p>The username of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. This account must have privileges to remove a service principal name.</p> <p>If the AD Connector service account does not have privileges to remove a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to disable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>
      Password?:
        type: ConnectPassword
        description: <p>The password of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.</p>
    description: <p>Contains the inputs for the <a>DisableSso</a> operation.</p>
  DisableSsoResult:
    type: object
    description: <p>Contains the results of the <a>DisableSso</a> operation.</p>
  EnableRadiusRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory for which to enable MFA.</p>
      RadiusSettings:
        type: RadiusSettings
        description: <p>A <a>RadiusSettings</a> object that contains information about the RADIUS server.</p>
    description: <p>Contains the inputs for the <a>EnableRadius</a> operation.</p>
  EnableRadiusResult:
    type: object
    description: <p>Contains the results of the <a>EnableRadius</a> operation.</p>
  EnableSsoRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory for which to enable single-sign on.</p>
      UserName?:
        type: UserName
        description: <p>The username of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. This account must have privileges to add a service principal name.</p> <p>If the AD Connector service account does not have privileges to add a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to enable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>
      Password?:
        type: ConnectPassword
        description: <p>The password of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.</p>
    description: <p>Contains the inputs for the <a>EnableSso</a> operation.</p>
  EnableSsoResult:
    type: object
    description: <p>Contains the results of the <a>EnableSso</a> operation.</p>
  EventTopic:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The Directory ID of an AWS Directory Service directory that will publish status messages to an SNS topic.</p>
      TopicName?:
        type: TopicName
        description: <p>The name of an AWS SNS topic the receives status messages from the directory.</p>
      TopicArn?:
        type: TopicArn
        description: <p>The SNS topic ARN (Amazon Resource Name).</p>
      CreatedDateTime?:
        type: CreatedDateTime
        description: <p>The date and time of when you associated your directory with the SNS topic.</p>
      Status?:
        type: TopicStatus
        description: <p>The topic registration status.</p>
    description: <p>Information about SNS topic and AWS Directory Service directory associations.</p>
  GetDirectoryLimitsRequest:
    type: object
    description: <p>Contains the inputs for the <a>GetDirectoryLimits</a> operation.</p>
  GetDirectoryLimitsResult:
    type: object
    properties:
      DirectoryLimits?:
        type: DirectoryLimits
        description: <p>A <a>DirectoryLimits</a> object that contains the directory limits for the current region.</p>
    description: <p>Contains the results of the <a>GetDirectoryLimits</a> operation.</p>
  GetSnapshotLimitsRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>Contains the identifier of the directory to obtain the limits for.</p>
    description: <p>Contains the inputs for the <a>GetSnapshotLimits</a> operation.</p>
  GetSnapshotLimitsResult:
    type: object
    properties:
      SnapshotLimits?:
        type: SnapshotLimits
        description: <p>A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified directory.</p>
    description: <p>Contains the results of the <a>GetSnapshotLimits</a> operation.</p>
  IpRoute:
    type: object
    properties:
      CidrIp?:
        type: CidrIp
        description: <p>IP address block using CIDR format, for example 10.0.0.0/24. This is often the address block of the DNS server used for your on-premises domain. For a single IP address use a CIDR address block with /32. For example 10.0.0.0/32.</p>
      Description?:
        type: Description
        description: <p>Description of the address block.</p>
    description: <p>IP address block. This is often the address block of the DNS server used for your on-premises domain. </p>
  IpRouteInfo:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>Identifier (ID) of the directory associated with the IP addresses.</p>
      CidrIp?:
        type: CidrIp
        description: <p>IP address block in the <a>IpRoute</a>.</p>
      IpRouteStatusMsg?:
        type: IpRouteStatusMsg
        description: <p>The status of the IP address block.</p>
      AddedDateTime?:
        type: AddedDateTime
        description: <p>The date and time the address block was added to the directory.</p>
      IpRouteStatusReason?:
        type: IpRouteStatusReason
        description: <p>The reason for the IpRouteStatusMsg.</p>
      Description?:
        type: Description
        description: <p>Description of the <a>IpRouteInfo</a>.</p>
    description: <p>Information about one or more IP address blocks.</p>
  ListIpRoutesRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>Identifier (ID) of the directory for which you want to retrieve the IP addresses.</p>
      NextToken?:
        type: NextToken
        description: <p>The <i>ListIpRoutes.NextToken</i> value from a previous call to <a>ListIpRoutes</a>. Pass null if this is the first call.</p>
      Limit?:
        type: Limit
        description: <p>Maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.</p>
  ListIpRoutesResult:
    type: object
    properties:
      IpRoutesInfo?:
        type: IpRoutesInfo
        description: <p>A list of <a>IpRoute</a>s.</p>
      NextToken?:
        type: NextToken
        description: <p>If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>ListIpRoutes</a> to retrieve the next set of items.</p>
  ListTagsForResourceRequest:
    type: object
    properties:
      ResourceId:
        type: ResourceId
        description: <p>Identifier (ID) of the directory for which you want to retrieve tags.</p>
      NextToken?:
        type: NextToken
        description: <p>Reserved for future use.</p>
      Limit?:
        type: Limit
        description: <p>Reserved for future use.</p>
  ListTagsForResourceResult:
    type: object
    properties:
      Tags?:
        type: Tags
        description: <p>List of tags returned by the ListTagsForResource operation.</p>
      NextToken?:
        type: NextToken
        description: <p>Reserved for future use.</p>
  RadiusSettings:
    type: object
    properties:
      RadiusServers?:
        type: Servers
        description: <p>An array of strings that contains the IP addresses of the RADIUS server endpoints, or the IP addresses of your RADIUS server load balancer.</p>
      RadiusPort?:
        type: PortNumber
        description: <p>The port that your RADIUS server is using for communications. Your on-premises network must allow inbound traffic over this port from the AWS Directory Service servers.</p>
      RadiusTimeout?:
        type: RadiusTimeout
        description: <p>The amount of time, in seconds, to wait for the RADIUS server to respond.</p>
      RadiusRetries?:
        type: RadiusRetries
        description: <p>The maximum number of times that communication with the RADIUS server is attempted.</p>
      SharedSecret?:
        type: RadiusSharedSecret
        description: <p>Not currently used.</p>
      AuthenticationProtocol?:
        type: RadiusAuthenticationProtocol
        description: <p>The protocol specified for your RADIUS endpoints.</p>
      DisplayLabel?:
        type: RadiusDisplayLabel
        description: <p>Not currently used.</p>
      UseSameUsername?:
        type: UseSameUsername
        description: <p>Not currently used.</p>
    description: <p>Contains information about a Remote Authentication Dial In User Service (RADIUS) server.</p>
  RegisterEventTopicRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The Directory ID that will publish status messages to the SNS topic.</p>
      TopicName:
        type: TopicName
        description: <p>The SNS topic name to which the directory will publish status messages. This SNS topic must be in the same region as the specified Directory ID.</p>
    description: <p>Registers a new event topic.</p>
  RegisterEventTopicResult:
    type: object
    description: <p>The result of a RegisterEventTopic request.</p>
  RemoveIpRoutesRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>Identifier (ID) of the directory from which you want to remove the IP addresses.</p>
      CidrIps:
        type: CidrIps
        description: <p>IP address blocks that you want to remove.</p>
  RemoveIpRoutesResult:
    type: object
  RemoveTagsFromResourceRequest:
    type: object
    properties:
      ResourceId:
        type: ResourceId
        description: <p>Identifier (ID) of the directory from which to remove the tag.</p>
      TagKeys:
        type: TagKeys
        description: <p>The tag key (name) of the tag to be removed.</p>
  RemoveTagsFromResourceResult:
    type: object
  RestoreFromSnapshotRequest:
    type: object
    properties:
      SnapshotId:
        type: SnapshotId
        description: <p>The identifier of the snapshot to restore from.</p>
    description: <p>An object representing the inputs for the <a>RestoreFromSnapshot</a> operation.</p>
  RestoreFromSnapshotResult:
    type: object
    description: <p>Contains the results of the <a>RestoreFromSnapshot</a> operation.</p>
  Snapshot:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The directory identifier.</p>
      SnapshotId?:
        type: SnapshotId
        description: <p>The snapshot identifier.</p>
      Type?:
        type: SnapshotType
        description: <p>The snapshot type.</p>
      Name?:
        type: SnapshotName
        description: <p>The descriptive name of the snapshot.</p>
      Status?:
        type: SnapshotStatus
        description: <p>The snapshot status.</p>
      StartTime?:
        type: StartTime
        description: <p>The date and time that the snapshot was taken.</p>
    description: <p>Describes a directory snapshot.</p>
  SnapshotLimits:
    type: object
    properties:
      ManualSnapshotsLimit?:
        type: Limit
        description: <p>The maximum number of manual snapshots allowed.</p>
      ManualSnapshotsCurrentCount?:
        type: Limit
        description: <p>The current number of manual snapshots of the directory.</p>
      ManualSnapshotsLimitReached?:
        type: ManualSnapshotsLimitReached
        description: <p>Indicates if the manual snapshot limit has been reached.</p>
    description: <p>Contains manual snapshot limit information for a directory.</p>
  Tag:
    type: object
    properties:
      Key:
        type: TagKey
        description: '<p>Required name of the tag. The string value can be Unicode
          characters and cannot be prefixed with "aws:". The string can contain only
          the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='',
          ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").</p>'
      Value:
        type: TagValue
        description: '<p>The optional value of the tag. The string value can be Unicode
          characters. The string can contain only the set of Unicode letters, digits,
          white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").</p>'
    description: <p>Metadata assigned to an Amazon Directory Services directory consisting of a key-value pair.</p>
  Trust:
    type: object
    properties:
      DirectoryId?:
        type: DirectoryId
        description: <p>The Directory ID of the AWS directory involved in the trust relationship.</p>
      TrustId?:
        type: TrustId
        description: <p>The unique ID of the trust relationship.</p>
      RemoteDomainName?:
        type: RemoteDomainName
        description: <p>The Fully Qualified Domain Name (FQDN) of the external domain involved in the trust relationship.</p>
      TrustType?:
        type: TrustType
        description: <p>The trust relationship type.</p>
      TrustDirection?:
        type: TrustDirection
        description: <p>The trust relationship direction.</p>
      TrustState?:
        type: TrustState
        description: <p>The trust relationship state.</p>
      CreatedDateTime?:
        type: CreatedDateTime
        description: <p>The date and time that the trust relationship was created.</p>
      LastUpdatedDateTime?:
        type: LastUpdatedDateTime
        description: <p>The date and time that the trust relationship was last updated.</p>
      StateLastUpdatedDateTime?:
        type: StateLastUpdatedDateTime
        description: <p>The date and time that the TrustState was last updated.</p>
      TrustStateReason?:
        type: TrustStateReason
        description: <p>The reason for the TrustState.</p>
    description: <p>Describes a trust relationship between an Microsoft AD in the AWS cloud and an external domain.</p>
  UpdateConditionalForwarderRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The directory ID of the AWS directory for which to update the conditional forwarder.</p>
      RemoteDomainName:
        type: RemoteDomainName
        description: <p>The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.</p>
      DnsIpAddrs:
        type: DnsIpAddrs
        description: <p>The updated IP addresses of the remote DNS server associated with the conditional forwarder.</p>
    description: <p>Updates a conditional forwarder.</p>
  UpdateConditionalForwarderResult:
    type: object
    description: <p>The result of an UpdateConditionalForwarder request.</p>
  UpdateRadiusRequest:
    type: object
    properties:
      DirectoryId:
        type: DirectoryId
        description: <p>The identifier of the directory for which to update the RADIUS server information.</p>
      RadiusSettings:
        type: RadiusSettings
        description: <p>A <a>RadiusSettings</a> object that contains information about the RADIUS server.</p>
    description: <p>Contains the inputs for the <a>UpdateRadius</a> operation.</p>
  UpdateRadiusResult:
    type: object
    description: <p>Contains the results of the <a>UpdateRadius</a> operation.</p>
  VerifyTrustRequest:
    type: object
    properties:
      TrustId:
        type: TrustId
        description: <p>The unique Trust ID of the trust relationship to verify.</p>
    description: <p>Initiates the verification of an existing trust relationship between a Microsoft AD in the AWS cloud and an external domain.</p>
  VerifyTrustResult:
    type: object
    properties:
      TrustId?:
        type: TrustId
        description: <p>The unique Trust ID of the trust relationship that was verified.</p>
    description: <p>Result of a VerifyTrust request.</p>
/{AddIpRoutes}:
  uriParameters:
    AddIpRoutes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'If the DNS server for your on-premises domain uses a publicly addressable
    IP address, you must add a CIDR address block to correctly route traffic to and
    from your Microsoft AD on Amazon Web Services. <i>AddIpRoutes</i> adds this address
    block. You can also use <i>AddIpRoutes</i> to facilitate routing traffic that
    uses public IP ranges from your Microsoft AD on AWS to a peer VPC. '
  post:
    body:
      application/json: AddIpRoutesRequest
    responses:
      200:
        body:
          application/json: AddIpRoutesResult
      400:
        description: EntityDoesNotExistException
/{AddTagsToResource}:
  uriParameters:
    AddTagsToResource?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Adds or overwrites one or more tags for the specified Amazon Directory Services directory. Each directory can have a maximum of 10 tags. Each tag consists of a key and optional value. Tag keys must be unique to each resource.
  post:
    body:
      application/json: AddTagsToResourceRequest
    responses:
      200:
        body:
          application/json: AddTagsToResourceResult
      400:
        description: EntityDoesNotExistException
/{ConnectDirectory}:
  uriParameters:
    ConnectDirectory?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates an AD Connector to connect to an on-premises directory.
  post:
    body:
      application/json: ConnectDirectoryRequest
    responses:
      200:
        body:
          application/json: ConnectDirectoryResult
      400:
        description: DirectoryLimitExceededException
/{CreateAlias}:
  uriParameters:
    CreateAlias?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>. <important> After an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary. </important>
  post:
    body:
      application/json: CreateAliasRequest
    responses:
      200:
        body:
          application/json: CreateAliasResult
      400:
        description: EntityAlreadyExistsException
/{CreateComputer}:
  uriParameters:
    CreateComputer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates a computer account in the specified directory, and joins the computer to the directory.
  post:
    body:
      application/json: CreateComputerRequest
    responses:
      200:
        body:
          application/json: CreateComputerResult
      400:
        description: AuthenticationFailedException
/{CreateConditionalForwarder}:
  uriParameters:
    CreateConditionalForwarder?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates a conditional forwarder associated with your AWS directory. Conditional forwarders are required in order to set up a trust relationship with another domain. The conditional forwarder points to the trusted domain.
  post:
    body:
      application/json: CreateConditionalForwarderRequest
    responses:
      200:
        body:
          application/json: CreateConditionalForwarderResult
      400:
        description: EntityAlreadyExistsException
/{CreateDirectory}:
  uriParameters:
    CreateDirectory?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates a Simple AD directory.
  post:
    body:
      application/json: CreateDirectoryRequest
    responses:
      200:
        body:
          application/json: CreateDirectoryResult
      400:
        description: DirectoryLimitExceededException
/{CreateMicrosoftAD}:
  uriParameters:
    CreateMicrosoftAD?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates a Microsoft AD in the AWS cloud.
  post:
    body:
      application/json: CreateMicrosoftADRequest
    responses:
      200:
        body:
          application/json: CreateMicrosoftADResult
      400:
        description: DirectoryLimitExceededException
/{CreateSnapshot}:
  uriParameters:
    CreateSnapshot?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud. <note> You cannot take snapshots of AD Connector directories. </note>
  post:
    body:
      application/json: CreateSnapshotRequest
    responses:
      200:
        body:
          application/json: CreateSnapshotResult
      400:
        description: EntityDoesNotExistException
/{CreateTrust}:
  uriParameters:
    CreateTrust?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: AWS Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Microsoft AD in the AWS cloud, and your existing on-premises Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials. This action initiates the creation of the AWS side of a trust relationship between a Microsoft AD in the AWS cloud and an external domain.
  post:
    body:
      application/json: CreateTrustRequest
    responses:
      200:
        body:
          application/json: CreateTrustResult
      400:
        description: EntityAlreadyExistsException
/{DeleteConditionalForwarder}:
  uriParameters:
    DeleteConditionalForwarder?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Deletes a conditional forwarder that has been set up for your AWS directory.
  post:
    body:
      application/json: DeleteConditionalForwarderRequest
    responses:
      200:
        body:
          application/json: DeleteConditionalForwarderResult
      400:
        description: EntityDoesNotExistException
/{DeleteDirectory}:
  uriParameters:
    DeleteDirectory?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Deletes an AWS Directory Service directory.
  post:
    body:
      application/json: DeleteDirectoryRequest
    responses:
      200:
        body:
          application/json: DeleteDirectoryResult
      400:
        description: EntityDoesNotExistException
/{DeleteSnapshot}:
  uriParameters:
    DeleteSnapshot?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Deletes a directory snapshot.
  post:
    body:
      application/json: DeleteSnapshotRequest
    responses:
      200:
        body:
          application/json: DeleteSnapshotResult
      400:
        description: EntityDoesNotExistException
/{DeleteTrust}:
  uriParameters:
    DeleteTrust?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Deletes an existing trust relationship between your Microsoft AD in the AWS cloud and an external domain.
  post:
    body:
      application/json: DeleteTrustRequest
    responses:
      200:
        body:
          application/json: DeleteTrustResult
      400:
        description: EntityDoesNotExistException
/{DeregisterEventTopic}:
  uriParameters:
    DeregisterEventTopic?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Removes the specified directory as a publisher to the specified SNS topic.
  post:
    body:
      application/json: DeregisterEventTopicRequest
    responses:
      200:
        body:
          application/json: DeregisterEventTopicResult
      400:
        description: EntityDoesNotExistException
/{DescribeConditionalForwarders}:
  uriParameters:
    DescribeConditionalForwarders?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Obtains information about the conditional forwarders for this account. If no input parameters are provided for RemoteDomainNames, this request describes all conditional forwarders for the specified directory ID.
  post:
    body:
      application/json: DescribeConditionalForwardersRequest
    responses:
      200:
        body:
          application/json: DescribeConditionalForwardersResult
      400:
        description: EntityDoesNotExistException
/{DescribeDirectories}:
  uriParameters:
    DescribeDirectories?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Obtains information about the directories that belong to this account. You can retrieve information about specific directories by passing the directory identifiers in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the current account are returned. This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i> member contains a token that you pass in the next call to <a>DescribeDirectories</a> to retrieve the next set of items. You can also specify a maximum number of return results with the <i>Limit</i> parameter.
  post:
    body:
      application/json: DescribeDirectoriesRequest
    responses:
      200:
        body:
          application/json: DescribeDirectoriesResult
      400:
        description: EntityDoesNotExistException
/{DescribeEventTopics}:
  uriParameters:
    DescribeEventTopics?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Obtains information about which SNS topics receive status messages from the specified directory. If no input parameters are provided, such as DirectoryId or TopicName, this request describes all of the associations in the account.
  post:
    body:
      application/json: DescribeEventTopicsRequest
    responses:
      200:
        body:
          application/json: DescribeEventTopicsResult
      400:
        description: EntityDoesNotExistException
/{DescribeSnapshots}:
  uriParameters:
    DescribeSnapshots?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Obtains information about the directory snapshots that belong to this account. This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i> member contains a token that you pass in the next call to <a>DescribeSnapshots</a> to retrieve the next set of items. You can also specify a maximum number of return results with the <i>Limit</i> parameter.
  post:
    body:
      application/json: DescribeSnapshotsRequest
    responses:
      200:
        body:
          application/json: DescribeSnapshotsResult
      400:
        description: EntityDoesNotExistException
/{DescribeTrusts}:
  uriParameters:
    DescribeTrusts?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Obtains information about the trust relationships for this account. If no input parameters are provided, such as DirectoryId or TrustIds, this request describes all the trust relationships belonging to the account.
  post:
    body:
      application/json: DescribeTrustsRequest
    responses:
      200:
        body:
          application/json: DescribeTrustsResult
      400:
        description: EntityDoesNotExistException
/{DisableRadius}:
  uriParameters:
    DisableRadius?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory.
  post:
    body:
      application/json: DisableRadiusRequest
    responses:
      200:
        body:
          application/json: DisableRadiusResult
      400:
        description: EntityDoesNotExistException
/{DisableSso}:
  uriParameters:
    DisableSso?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Disables single-sign on for a directory.
  post:
    body:
      application/json: DisableSsoRequest
    responses:
      200:
        body:
          application/json: DisableSsoResult
      400:
        description: EntityDoesNotExistException
/{EnableRadius}:
  uriParameters:
    EnableRadius?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory.
  post:
    body:
      application/json: EnableRadiusRequest
    responses:
      200:
        body:
          application/json: EnableRadiusResult
      400:
        description: InvalidParameterException
/{EnableSso}:
  uriParameters:
    EnableSso?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Enables single-sign on for a directory.
  post:
    body:
      application/json: EnableSsoRequest
    responses:
      200:
        body:
          application/json: EnableSsoResult
      400:
        description: EntityDoesNotExistException
/{GetDirectoryLimits}:
  uriParameters:
    GetDirectoryLimits?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Obtains directory limit information for the current region.
  post:
    body:
      application/json: GetDirectoryLimitsRequest
    responses:
      200:
        body:
          application/json: GetDirectoryLimitsResult
      400:
        description: EntityDoesNotExistException
/{GetSnapshotLimits}:
  uriParameters:
    GetSnapshotLimits?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Obtains the manual snapshot limits for a directory.
  post:
    body:
      application/json: GetSnapshotLimitsRequest
    responses:
      200:
        body:
          application/json: GetSnapshotLimitsResult
      400:
        description: EntityDoesNotExistException
/{ListIpRoutes}:
  uriParameters:
    ListIpRoutes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Lists the address blocks that you have added to a directory.
  post:
    body:
      application/json: ListIpRoutesRequest
    responses:
      200:
        body:
          application/json: ListIpRoutesResult
      400:
        description: EntityDoesNotExistException
/{ListTagsForResource}:
  uriParameters:
    ListTagsForResource?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Lists all tags on an Amazon Directory Services directory.
  post:
    body:
      application/json: ListTagsForResourceRequest
    responses:
      200:
        body:
          application/json: ListTagsForResourceResult
      400:
        description: EntityDoesNotExistException
/{RegisterEventTopic}:
  uriParameters:
    RegisterEventTopic?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Associates a directory with an SNS topic. This establishes the directory as a publisher to the specified SNS topic. You can then receive email or text (SMS) messages when the status of your directory changes. You get notified if your directory goes from an Active status to an Impaired or Inoperable status. You also receive a notification when the directory returns to an Active status.
  post:
    body:
      application/json: RegisterEventTopicRequest
    responses:
      200:
        body:
          application/json: RegisterEventTopicResult
      400:
        description: EntityDoesNotExistException
/{RemoveIpRoutes}:
  uriParameters:
    RemoveIpRoutes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Removes IP address blocks from a directory.
  post:
    body:
      application/json: RemoveIpRoutesRequest
    responses:
      200:
        body:
          application/json: RemoveIpRoutesResult
      400:
        description: EntityDoesNotExistException
/{RemoveTagsFromResource}:
  uriParameters:
    RemoveTagsFromResource?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Removes tags from an Amazon Directory Services directory.
  post:
    body:
      application/json: RemoveTagsFromResourceRequest
    responses:
      200:
        body:
          application/json: RemoveTagsFromResourceResult
      400:
        description: EntityDoesNotExistException
/{RestoreFromSnapshot}:
  uriParameters:
    RestoreFromSnapshot?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Restores a directory using an existing directory snapshot. When you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten. This action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the <a>DescribeDirectories</a> operation with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes to <code>Active</code>, the restore operation is complete.
  post:
    body:
      application/json: RestoreFromSnapshotRequest
    responses:
      200:
        body:
          application/json: RestoreFromSnapshotResult
      400:
        description: EntityDoesNotExistException
/{UpdateConditionalForwarder}:
  uriParameters:
    UpdateConditionalForwarder?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Updates a conditional forwarder that has been set up for your AWS directory.
  post:
    body:
      application/json: UpdateConditionalForwarderRequest
    responses:
      200:
        body:
          application/json: UpdateConditionalForwarderResult
      400:
        description: EntityDoesNotExistException
/{UpdateRadius}:
  uriParameters:
    UpdateRadius?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector directory.
  post:
    body:
      application/json: UpdateRadiusRequest
    responses:
      200:
        body:
          application/json: UpdateRadiusResult
      400:
        description: InvalidParameterException
/{VerifyTrust}:
  uriParameters:
    VerifyTrust?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: AWS Directory Service for Microsoft Active Directory allows you to configure and verify trust relationships. This action verifies a trust relationship between your Microsoft AD in the AWS cloud and an external domain.
  post:
    body:
      application/json: VerifyTrustRequest
    responses:
      200:
        body:
          application/json: VerifyTrustResult
      400:
        description: EntityDoesNotExistException
