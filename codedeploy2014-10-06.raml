#%RAML 1.0
title: AWS CodeDeploy
version: '2014-10-06'
description: '   <b>Overview</b>   This reference guide provides descriptions of the
  AWS CodeDeploy APIs. For more information about AWS CodeDeploy, see the <a href="http://docs.aws.amazon.com/codedeploy/latest/userguide">AWS
  CodeDeploy User Guide</a>.   <b>Using the APIs</b>   You can use the AWS CodeDeploy
  APIs to work with the following: <ul> <li>  Applications are unique identifiers
  used by AWS CodeDeploy to ensure the correct combinations of revisions, deployment
  configurations, and deployment groups are being referenced during deployments.  You
  can use the AWS CodeDeploy APIs to create, delete, get, list, and update applications.
  </li> <li>  Deployment configurations are sets of deployment rules and success and
  failure conditions used by AWS CodeDeploy during deployments.  You can use the AWS
  CodeDeploy APIs to create, delete, get, and list deployment configurations. </li>
  <li>  Deployment groups are groups of instances to which application revisions can
  be deployed.  You can use the AWS CodeDeploy APIs to create, delete, get, list,
  and update deployment groups. </li> <li>  Instances represent Amazon EC2 instances
  to which application revisions are deployed. Instances are identified by their Amazon
  EC2 tags or Auto Scaling group names. Instances belong to deployment groups.  You
  can use the AWS CodeDeploy APIs to get and list instance. </li> <li>  Deployments
  represent the process of deploying revisions to instances.  You can use the AWS
  CodeDeploy APIs to create, get, list, and stop deployments. </li> <li>  Application
  revisions are archive files stored in Amazon S3 buckets or GitHub repositories.
  These revisions contain source content (such as source code, web pages, executable
  files, and deployment scripts) along with an application specification (AppSpec)
  file. (The AppSpec file is unique to AWS CodeDeploy; it defines the deployment actions
  you want AWS CodeDeploy to execute.) For application revisions stored in Amazon
  S3 buckets, an application revision is uniquely identified by its Amazon S3 object
  key and its ETag, version, or both. For application revisions stored in GitHub repositories,
  an application revision is uniquely identified by its repository name and commit
  ID. Application revisions are deployed through deployment groups.  You can use the
  AWS CodeDeploy APIs to get, list, and register application revisions. </li> </ul>'
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AlarmList:
    type: array
    items:
      type: Alarm
  AlarmName:
    type: string
  ApplicationId:
    type: string
  ApplicationName:
    type: string
    minLength: 1
    maxLength: 100
  ApplicationRevisionSortBy:
    type: string
    enum:
    - registerTime
    - firstUsedTime
    - lastUsedTime
  ApplicationsInfoList:
    type: array
    items:
      type: ApplicationInfo
  ApplicationsList:
    type: array
    items:
      type: ApplicationName
  AutoRollbackEvent:
    type: string
    enum:
    - DEPLOYMENT_FAILURE
    - DEPLOYMENT_STOP_ON_ALARM
    - DEPLOYMENT_STOP_ON_REQUEST
  AutoRollbackEventsList:
    type: array
    items:
      type: AutoRollbackEvent
  AutoScalingGroupHook:
    type: string
  AutoScalingGroupList:
    type: array
    items:
      type: AutoScalingGroup
  AutoScalingGroupName:
    type: string
  AutoScalingGroupNameList:
    type: array
    items:
      type: AutoScalingGroupName
  Boolean:
    type: boolean
  BundleType:
    type: string
    enum:
    - tar
    - tgz
    - zip
  CommitId:
    type: string
  DeploymentConfigId:
    type: string
  DeploymentConfigName:
    type: string
    minLength: 1
    maxLength: 100
  DeploymentConfigsList:
    type: array
    items:
      type: DeploymentConfigName
  DeploymentCreator:
    type: string
    enum:
    - user
    - autoscaling
    - codeDeployRollback
  DeploymentGroupId:
    type: string
  DeploymentGroupInfoList:
    type: array
    items:
      type: DeploymentGroupInfo
  DeploymentGroupName:
    type: string
    minLength: 1
    maxLength: 100
  DeploymentGroupsList:
    type: array
    items:
      type: DeploymentGroupName
  DeploymentId:
    type: string
  DeploymentStatus:
    type: string
    enum:
    - Created
    - Queued
    - InProgress
    - Succeeded
    - Failed
    - Stopped
  DeploymentStatusList:
    type: array
    items:
      type: DeploymentStatus
  DeploymentsInfoList:
    type: array
    items:
      type: DeploymentInfo
  DeploymentsList:
    type: array
    items:
      type: DeploymentId
  Description:
    type: string
  EC2TagFilterList:
    type: array
    items:
      type: EC2TagFilter
  EC2TagFilterType:
    type: string
    enum:
    - KEY_ONLY
    - VALUE_ONLY
    - KEY_AND_VALUE
  ETag:
    type: string
  ErrorCode:
    type: string
    enum:
    - DEPLOYMENT_GROUP_MISSING
    - APPLICATION_MISSING
    - REVISION_MISSING
    - IAM_ROLE_MISSING
    - IAM_ROLE_PERMISSIONS
    - NO_EC2_SUBSCRIPTION
    - OVER_MAX_INSTANCES
    - NO_INSTANCES
    - TIMEOUT
    - HEALTH_CONSTRAINTS_INVALID
    - HEALTH_CONSTRAINTS
    - INTERNAL_ERROR
    - THROTTLED
    - ALARM_ACTIVE
    - AGENT_ISSUE
    - AUTO_SCALING_IAM_ROLE_PERMISSIONS
    - AUTO_SCALING_CONFIGURATION
    - MANUAL_STOP
  ErrorMessage:
    type: string
  IamUserArn:
    type: string
  InstanceArn:
    type: string
  InstanceCount:
    type: integer
    format: long
  InstanceId:
    type: string
  InstanceInfoList:
    type: array
    items:
      type: InstanceInfo
  InstanceName:
    type: string
  InstanceNameList:
    type: array
    items:
      type: InstanceName
  InstanceStatus:
    type: string
    enum:
    - Pending
    - InProgress
    - Succeeded
    - Failed
    - Skipped
    - Unknown
  InstanceStatusList:
    type: array
    items:
      type: InstanceStatus
  InstanceSummaryList:
    type: array
    items:
      type: InstanceSummary
  InstancesList:
    type: array
    items:
      type: InstanceId
  Key:
    type: string
  LifecycleErrorCode:
    type: string
    enum:
    - Success
    - ScriptMissing
    - ScriptNotExecutable
    - ScriptTimedOut
    - ScriptFailed
    - UnknownError
  LifecycleEventList:
    type: array
    items:
      type: LifecycleEvent
  LifecycleEventName:
    type: string
  LifecycleEventStatus:
    type: string
    enum:
    - Pending
    - InProgress
    - Succeeded
    - Failed
    - Skipped
    - Unknown
  LifecycleMessage:
    type: string
  ListStateFilterAction:
    type: string
    enum:
    - include
    - exclude
    - ignore
  LogTail:
    type: string
  Message:
    type: string
  MinimumHealthyHostsType:
    type: string
    enum:
    - HOST_COUNT
    - FLEET_PERCENT
  MinimumHealthyHostsValue:
    type: integer
    format: int
  NextToken:
    type: string
  NullableBoolean:
    type: boolean
  RegistrationStatus:
    type: string
    enum:
    - Registered
    - Deregistered
  Repository:
    type: string
  RevisionInfoList:
    type: array
    items:
      type: RevisionInfo
  RevisionLocationList:
    type: array
    items:
      type: RevisionLocation
  RevisionLocationType:
    type: string
    enum:
    - S3
    - GitHub
  Role:
    type: string
  S3Bucket:
    type: string
  S3Key:
    type: string
  ScriptName:
    type: string
  SortOrder:
    type: string
    enum:
    - ascending
    - descending
  StopStatus:
    type: string
    enum:
    - Pending
    - Succeeded
  TagFilterList:
    type: array
    items:
      type: TagFilter
  TagFilterType:
    type: string
    enum:
    - KEY_ONLY
    - VALUE_ONLY
    - KEY_AND_VALUE
  TagList:
    type: array
    items:
      type: Tag
  Timestamp:
    type: datetime
  TriggerConfigList:
    type: array
    items:
      type: TriggerConfig
  TriggerEventType:
    type: string
    enum:
    - DeploymentStart
    - DeploymentSuccess
    - DeploymentFailure
    - DeploymentStop
    - DeploymentRollback
    - InstanceStart
    - InstanceSuccess
    - InstanceFailure
  TriggerEventTypeList:
    type: array
    items:
      type: TriggerEventType
  TriggerName:
    type: string
  TriggerTargetArn:
    type: string
  Value:
    type: string
  VersionId:
    type: string
  AddTagsToOnPremisesInstancesInput:
    type: object
    properties:
      tags:
        type: TagList
        description: <p>The tag key-value pairs to add to the on-premises instances.</p> <p>Keys and values are both required. Keys cannot be null or empty strings. Value-only tags are not allowed.</p>
      instanceNames:
        type: InstanceNameList
        description: <p>The names of the on-premises instances to which to add tags.</p>
    description: <p>Represents the input of, and adds tags to, an on-premises instance operation.</p>
  Alarm:
    type: object
    properties:
      name?:
        type: AlarmName
        description: <p>The name of the alarm. Maximum length is 255 characters. Each alarm name can be used only once in a list of alarms.</p>
    description: <p>Information about an alarm.</p>
  AlarmConfiguration:
    type: object
    properties:
      enabled?:
        type: Boolean
        description: <p>Indicates whether the alarm configuration is enabled.</p>
      ignorePollAlarmFailure?:
        type: Boolean
        description: '<p>Indicates whether a deployment should continue if information
          about the current state of alarms cannot be retrieved from Amazon CloudWatch.
          The default value is false.</p> <ul> <li> <p>true: The deployment will proceed
          even if alarm status information can''t be retrieved from Amazon CloudWatch.</p>
          </li> <li> <p>false: The deployment will stop if alarm status information
          can''t be retrieved from Amazon CloudWatch.</p> </li> </ul>'
      alarms?:
        type: AlarmList
        description: <p>A list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.</p>
    description: <p>Information about alarms associated with the deployment group.</p>
  ApplicationInfo:
    type: object
    properties:
      applicationId?:
        type: ApplicationId
        description: <p>The application ID.</p>
      applicationName?:
        type: ApplicationName
        description: <p>The application name.</p>
      createTime?:
        type: Timestamp
        description: <p>The time at which the application was created.</p>
      linkedToGitHub?:
        type: Boolean
        description: <p>True if the user has authenticated with GitHub for the specified application; otherwise, false.</p>
    description: <p>Information about an application.</p>
  AutoRollbackConfiguration:
    type: object
    properties:
      enabled?:
        type: Boolean
        description: <p>Indicates whether a defined automatic rollback configuration is currently enabled.</p>
      events?:
        type: AutoRollbackEventsList
        description: <p>The event type or types that trigger a rollback.</p>
    description: <p>Information about a configuration for automatically rolling back to a previous version of an application revision when a deployment doesn't complete successfully.</p>
  AutoScalingGroup:
    type: object
    properties:
      name?:
        type: AutoScalingGroupName
        description: <p>The Auto Scaling group name.</p>
      hook?:
        type: AutoScalingGroupHook
        description: <p>An Auto Scaling lifecycle event hook name.</p>
    description: <p>Information about an Auto Scaling group.</p>
  BatchGetApplicationRevisionsInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application about which to get revision information.</p>
      revisions:
        type: RevisionLocationList
        description: <p>Information to get about the application revisions, including type and location.</p>
    description: <p>Represents the input of a batch get application revisions operation.</p>
  BatchGetApplicationRevisionsOutput:
    type: object
    properties:
      applicationName?:
        type: ApplicationName
        description: <p>The name of the application that corresponds to the revisions.</p>
      errorMessage?:
        type: ErrorMessage
        description: <p>Information about errors that may have occurred during the API call.</p>
      revisions?:
        type: RevisionInfoList
        description: <p>Additional information about the revisions, including the type and location.</p>
    description: <p>Represents the output of a batch get application revisions operation.</p>
  BatchGetApplicationsInput:
    type: object
    properties:
      applicationNames?:
        type: ApplicationsList
        description: <p>A list of application names separated by spaces.</p>
    description: <p>Represents the input of a batch get applications operation.</p>
  BatchGetApplicationsOutput:
    type: object
    properties:
      applicationsInfo?:
        type: ApplicationsInfoList
        description: <p>Information about the applications.</p>
    description: <p>Represents the output of a batch get applications operation.</p>
  BatchGetDeploymentGroupsInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      deploymentGroupNames:
        type: DeploymentGroupsList
        description: <p>The deployment groups' names.</p>
    description: <p>Represents the input of a batch get deployment groups operation.</p>
  BatchGetDeploymentGroupsOutput:
    type: object
    properties:
      deploymentGroupsInfo?:
        type: DeploymentGroupInfoList
        description: <p>Information about the deployment groups.</p>
      errorMessage?:
        type: ErrorMessage
        description: <p>Information about errors that may have occurred during the API call.</p>
    description: <p>Represents the output of a batch get deployment groups operation.</p>
  BatchGetDeploymentInstancesInput:
    type: object
    properties:
      deploymentId:
        type: DeploymentId
        description: <p>The unique ID of a deployment.</p>
      instanceIds:
        type: InstancesList
        description: <p>The unique IDs of instances in the deployment group.</p>
    description: <p>Represents the input of a batch get deployment instances operation.</p>
  BatchGetDeploymentInstancesOutput:
    type: object
    properties:
      instancesSummary?:
        type: InstanceSummaryList
        description: <p>Information about the instance.</p>
      errorMessage?:
        type: ErrorMessage
        description: <p>Information about errors that may have occurred during the API call.</p>
    description: <p>Represents the output of a batch get deployment instance operation.</p>
  BatchGetDeploymentsInput:
    type: object
    properties:
      deploymentIds?:
        type: DeploymentsList
        description: <p>A list of deployment IDs, separated by spaces.</p>
    description: <p>Represents the input of a batch get deployments operation.</p>
  BatchGetDeploymentsOutput:
    type: object
    properties:
      deploymentsInfo?:
        type: DeploymentsInfoList
        description: <p>Information about the deployments.</p>
    description: <p>Represents the output of a batch get deployments operation.</p>
  BatchGetOnPremisesInstancesInput:
    type: object
    properties:
      instanceNames?:
        type: InstanceNameList
        description: <p>The names of the on-premises instances about which to get information.</p>
    description: <p>Represents the input of a batch get on-premises instances operation.</p>
  BatchGetOnPremisesInstancesOutput:
    type: object
    properties:
      instanceInfos?:
        type: InstanceInfoList
        description: <p>Information about the on-premises instances.</p>
    description: <p>Represents the output of a batch get on-premises instances operation.</p>
  CreateApplicationInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of the application. This name must be unique with the applicable IAM user or AWS account.</p>
    description: <p>Represents the input of a create application operation.</p>
  CreateApplicationOutput:
    type: object
    properties:
      applicationId?:
        type: ApplicationId
        description: <p>A unique application ID.</p>
    description: <p>Represents the output of a create application operation.</p>
  CreateDeploymentConfigInput:
    type: object
    properties:
      deploymentConfigName:
        type: DeploymentConfigName
        description: <p>The name of the deployment configuration to create.</p>
      minimumHealthyHosts?:
        type: MinimumHealthyHosts
        description: '<p>The minimum number of healthy instances that should be available
          at any time during the deployment. There are two parameters expected in
          the input: type and value.</p> <p>The type parameter takes either of the
          following values:</p> <ul> <li> <p>HOST_COUNT: The value parameter represents
          the minimum number of healthy instances as an absolute value.</p> </li>
          <li> <p>FLEET_PERCENT: The value parameter represents the minimum number
          of healthy instances as a percentage of the total number of instances in
          the deployment. If you specify FLEET_PERCENT, at the start of the deployment,
          AWS CodeDeploy converts the percentage to the equivalent number of instance
          and rounds up fractional instances.</p> </li> </ul> <p>The value parameter
          takes an integer.</p> <p>For example, to set a minimum of 95% healthy instance,
          specify a type of FLEET_PERCENT and a value of 95.</p>'
    description: <p>Represents the input of a create deployment configuration operation.</p>
  CreateDeploymentConfigOutput:
    type: object
    properties:
      deploymentConfigId?:
        type: DeploymentConfigId
        description: <p>A unique deployment configuration ID.</p>
    description: <p>Represents the output of a create deployment configuration operation.</p>
  CreateDeploymentGroupInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      deploymentGroupName:
        type: DeploymentGroupName
        description: <p>The name of a new deployment group for the specified application.</p>
      deploymentConfigName?:
        type: DeploymentConfigName
        description: <p>If specified, the deployment configuration name can be either one of the predefined configurations provided with AWS CodeDeploy or a custom deployment configuration that you create by calling the create deployment configuration operation.</p> <note> <p>CodeDeployDefault.OneAtATime is the default deployment configuration. It is used if a configuration isn't specified for the deployment or the deployment group.</p> </note> <p>The predefined deployment configurations include the following:</p> <ul> <li> <p> <b>CodeDeployDefault.AllAtOnce</b> attempts to deploy an application revision to as many instances as possible at once. The status of the overall deployment will be displayed as <b>Succeeded</b> if the application revision is deployed to one or more of the instances. The status of the overall deployment will be displayed as <b>Failed</b> if the application revision is not deployed to any of the instances. Using an example of nine instances, CodeDeployDefault.AllAtOnce will attempt to deploy to all nine instances at once. The overall deployment will succeed if deployment to even a single instance is successful; it will fail only if deployments to all nine instances fail. </p> </li> <li> <p> <b>CodeDeployDefault.HalfAtATime</b> deploys to up to half of the instances at a time (with fractions rounded down). The overall deployment succeeds if the application revision is deployed to at least half of the instances (with fractions rounded up); otherwise, the deployment fails. In the example of nine instances, it will deploy to up to four instances at a time. The overall deployment succeeds if deployment to five or more instances succeed; otherwise, the deployment fails. The deployment may be successfully deployed to some instances even if the overall deployment fails.</p> </li> <li> <p> <b>CodeDeployDefault.OneAtATime</b> deploys the application revision to only one instance at a time.</p> <p>For deployment groups that contain more than one instance:</p> <ul> <li> <p>The overall deployment succeeds if the application revision is deployed to all of the instances. The exception to this rule is if deployment to the last instance fails, the overall deployment still succeeds. This is because AWS CodeDeploy allows only one instance at a time to be taken offline with the CodeDeployDefault.OneAtATime configuration.</p> </li> <li> <p>The overall deployment fails as soon as the application revision fails to be deployed to any but the last instance. The deployment may be successfully deployed to some instances even if the overall deployment fails.</p> </li> <li> <p>In an example using nine instances, it will deploy to one instance at a time. The overall deployment succeeds if deployment to the first eight instances is successful; the overall deployment fails if deployment to any of the first eight instances fails.</p> </li> </ul> <p>For deployment groups that contain only one instance, the overall deployment is successful only if deployment to the single instance is successful</p> </li> </ul>
      ec2TagFilters?:
        type: EC2TagFilterList
        description: <p>The Amazon EC2 tags on which to filter.</p>
      onPremisesInstanceTagFilters?:
        type: TagFilterList
        description: <p>The on-premises instance tags on which to filter.</p>
      autoScalingGroups?:
        type: AutoScalingGroupNameList
        description: <p>A list of associated Auto Scaling groups.</p>
      serviceRoleArn:
        type: Role
        description: <p>A service role ARN that allows AWS CodeDeploy to act on the user's behalf when interacting with AWS services.</p>
      triggerConfigurations?:
        type: TriggerConfigList
        description: <p>Information about triggers to create when the deployment group is created. For examples, see <a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-sns.html">Create a Trigger for an AWS CodeDeploy Event</a> in the AWS CodeDeploy User Guide.</p>
      alarmConfiguration?:
        type: AlarmConfiguration
        description: <p>Information to add about Amazon CloudWatch alarms when the deployment group is created. </p>
      autoRollbackConfiguration?:
        type: AutoRollbackConfiguration
        description: <p>Configuration information for an automatic rollback that is added when a deployment group is created.</p>
    description: <p>Represents the input of a create deployment group operation.</p>
  CreateDeploymentGroupOutput:
    type: object
    properties:
      deploymentGroupId?:
        type: DeploymentGroupId
        description: <p>A unique deployment group ID.</p>
    description: <p>Represents the output of a create deployment group operation.</p>
  CreateDeploymentInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      deploymentGroupName?:
        type: DeploymentGroupName
        description: <p>The name of the deployment group.</p>
      revision?:
        type: RevisionLocation
        description: <p>The type and location of the revision to deploy.</p>
      deploymentConfigName?:
        type: DeploymentConfigName
        description: <p>The name of a deployment configuration associated with the applicable IAM user or AWS account.</p> <p>If not specified, the value configured in the deployment group will be used as the default. If the deployment group does not have a deployment configuration associated with it, then CodeDeployDefault.OneAtATime will be used by default.</p>
      description?:
        type: Description
        description: <p>A comment about the deployment.</p>
      ignoreApplicationStopFailures?:
        type: Boolean
        description: <p>If set to true, then if the deployment causes the ApplicationStop deployment lifecycle event to an instance to fail, the deployment to that instance will not be considered to have failed at that point and will continue on to the BeforeInstall deployment lifecycle event.</p> <p>If set to false or not specified, then if the deployment causes the ApplicationStop deployment lifecycle event to fail to an instance, the deployment to that instance will stop, and the deployment to that instance will be considered to have failed.</p>
      autoRollbackConfiguration?:
        type: AutoRollbackConfiguration
        description: <p>Configuration information for an automatic rollback that is added when a deployment is created.</p>
      updateOutdatedInstancesOnly?:
        type: Boolean
        description: <p>Indicates whether to deploy to all instances or only to instances that are not running the latest application revision.</p>
    description: <p>Represents the input of a create deployment operation.</p>
  CreateDeploymentOutput:
    type: object
    properties:
      deploymentId?:
        type: DeploymentId
        description: <p>A unique deployment ID.</p>
    description: <p>Represents the output of a create deployment operation.</p>
  DeleteApplicationInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
    description: <p>Represents the input of a delete application operation.</p>
  DeleteDeploymentConfigInput:
    type: object
    properties:
      deploymentConfigName:
        type: DeploymentConfigName
        description: <p>The name of a deployment configuration associated with the applicable IAM user or AWS account.</p>
    description: <p>Represents the input of a delete deployment configuration operation.</p>
  DeleteDeploymentGroupInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      deploymentGroupName:
        type: DeploymentGroupName
        description: <p>The name of an existing deployment group for the specified application.</p>
    description: <p>Represents the input of a delete deployment group operation.</p>
  DeleteDeploymentGroupOutput:
    type: object
    properties:
      hooksNotCleanedUp?:
        type: AutoScalingGroupList
        description: <p>If the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group.</p>
    description: <p>Represents the output of a delete deployment group operation.</p>
  DeploymentConfigInfo:
    type: object
    properties:
      deploymentConfigId?:
        type: DeploymentConfigId
        description: <p>The deployment configuration ID.</p>
      deploymentConfigName?:
        type: DeploymentConfigName
        description: <p>The deployment configuration name.</p>
      minimumHealthyHosts?:
        type: MinimumHealthyHosts
        description: <p>Information about the number or percentage of minimum healthy instance.</p>
      createTime?:
        type: Timestamp
        description: <p>The time at which the deployment configuration was created.</p>
    description: <p>Information about a deployment configuration.</p>
  DeploymentGroupInfo:
    type: object
    properties:
      applicationName?:
        type: ApplicationName
        description: <p>The application name.</p>
      deploymentGroupId?:
        type: DeploymentGroupId
        description: <p>The deployment group ID.</p>
      deploymentGroupName?:
        type: DeploymentGroupName
        description: <p>The deployment group name.</p>
      deploymentConfigName?:
        type: DeploymentConfigName
        description: <p>The deployment configuration name.</p>
      ec2TagFilters?:
        type: EC2TagFilterList
        description: <p>The Amazon EC2 tags on which to filter.</p>
      onPremisesInstanceTagFilters?:
        type: TagFilterList
        description: <p>The on-premises instance tags on which to filter.</p>
      autoScalingGroups?:
        type: AutoScalingGroupList
        description: <p>A list of associated Auto Scaling groups.</p>
      serviceRoleArn?:
        type: Role
        description: <p>A service role ARN.</p>
      targetRevision?:
        type: RevisionLocation
        description: <p>Information about the deployment group's target revision, including type and location.</p>
      triggerConfigurations?:
        type: TriggerConfigList
        description: <p>Information about triggers associated with the deployment group.</p>
      alarmConfiguration?:
        type: AlarmConfiguration
        description: <p>A list of alarms associated with the deployment group.</p>
      autoRollbackConfiguration?:
        type: AutoRollbackConfiguration
        description: <p>Information about the automatic rollback configuration associated with the deployment group.</p>
    description: <p>Information about a deployment group.</p>
  DeploymentInfo:
    type: object
    properties:
      applicationName?:
        type: ApplicationName
        description: <p>The application name.</p>
      deploymentGroupName?:
        type: DeploymentGroupName
        description: <p>The deployment group name.</p>
      deploymentConfigName?:
        type: DeploymentConfigName
        description: <p>The deployment configuration name.</p>
      deploymentId?:
        type: DeploymentId
        description: <p>The deployment ID.</p>
      revision?:
        type: RevisionLocation
        description: <p>Information about the location of stored application artifacts and the service from which to retrieve them.</p>
      status?:
        type: DeploymentStatus
        description: <p>The current state of the deployment as a whole.</p>
      errorInformation?:
        type: ErrorInformation
        description: <p>Information about any error associated with this deployment.</p>
      createTime?:
        type: Timestamp
        description: <p>A timestamp indicating when the deployment was created.</p>
      startTime?:
        type: Timestamp
        description: <p>A timestamp indicating when the deployment was deployed to the deployment group.</p> <p>In some cases, the reported value of the start time may be later than the complete time. This is due to differences in the clock settings of back-end servers that participate in the deployment process.</p>
      completeTime?:
        type: Timestamp
        description: <p>A timestamp indicating when the deployment was complete.</p>
      deploymentOverview?:
        type: DeploymentOverview
        description: <p>A summary of the deployment status of the instances in the deployment.</p>
      description?:
        type: Description
        description: <p>A comment about the deployment.</p>
      creator?:
        type: DeploymentCreator
        description: '<p>The means by which the deployment was created:</p> <ul> <li>
          <p>user: A user created the deployment.</p> </li> <li> <p>autoscaling: Auto
          Scaling created the deployment.</p> </li> <li> <p>codeDeployRollback: A
          rollback process created the deployment.</p> </li> </ul>'
      ignoreApplicationStopFailures?:
        type: Boolean
        description: <p>If true, then if the deployment causes the ApplicationStop deployment lifecycle event to an instance to fail, the deployment to that instance will not be considered to have failed at that point and will continue on to the BeforeInstall deployment lifecycle event.</p> <p>If false or not specified, then if the deployment causes the ApplicationStop deployment lifecycle event to an instance to fail, the deployment to that instance will stop, and the deployment to that instance will be considered to have failed.</p>
      autoRollbackConfiguration?:
        type: AutoRollbackConfiguration
        description: <p>Information about the automatic rollback configuration associated with the deployment.</p>
      updateOutdatedInstancesOnly?:
        type: Boolean
        description: <p>Indicates whether only instances that are not running the latest application revision are to be deployed to.</p>
      rollbackInfo?:
        type: RollbackInfo
        description: <p>Information about a deployment rollback.</p>
    description: <p>Information about a deployment.</p>
  DeploymentOverview:
    type: object
    properties:
      Pending?:
        type: InstanceCount
        description: <p>The number of instances in the deployment in a pending state.</p>
      InProgress?:
        type: InstanceCount
        description: <p>The number of instances in which the deployment is in progress.</p>
      Succeeded?:
        type: InstanceCount
        description: <p>The number of instances in the deployment to which revisions have been successfully deployed.</p>
      Failed?:
        type: InstanceCount
        description: <p>The number of instances in the deployment in a failed state.</p>
      Skipped?:
        type: InstanceCount
        description: <p>The number of instances in the deployment in a skipped state.</p>
    description: <p>Information about the deployment status of the instances in the deployment.</p>
  DeregisterOnPremisesInstanceInput:
    type: object
    properties:
      instanceName:
        type: InstanceName
        description: <p>The name of the on-premises instance to deregister.</p>
    description: <p>Represents the input of a deregister on-premises instance operation.</p>
  Diagnostics:
    type: object
    properties:
      errorCode?:
        type: LifecycleErrorCode
        description: '<p>The associated error code:</p> <ul> <li> <p>Success: The
          specified script ran.</p> </li> <li> <p>ScriptMissing: The specified script
          was not found in the specified location.</p> </li> <li> <p>ScriptNotExecutable:
          The specified script is not a recognized executable file type.</p> </li>
          <li> <p>ScriptTimedOut: The specified script did not finish running in the
          specified time period.</p> </li> <li> <p>ScriptFailed: The specified script
          failed to run as expected.</p> </li> <li> <p>UnknownError: The specified
          script did not run for an unknown reason.</p> </li> </ul>'
      scriptName?:
        type: ScriptName
        description: <p>The name of the script.</p>
      message?:
        type: LifecycleMessage
        description: <p>The message associated with the error.</p>
      logTail?:
        type: LogTail
        description: <p>The last portion of the diagnostic log.</p> <p>If available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.</p>
    description: <p>Diagnostic information about executable scripts that are part of a deployment.</p>
  EC2TagFilter:
    type: object
    properties:
      Key?:
        type: Key
        description: <p>The tag filter key.</p>
      Value?:
        type: Value
        description: <p>The tag filter value.</p>
      Type?:
        type: EC2TagFilterType
        description: '<p>The tag filter type:</p> <ul> <li> <p>KEY_ONLY: Key only.</p>
          </li> <li> <p>VALUE_ONLY: Value only.</p> </li> <li> <p>KEY_AND_VALUE: Key
          and value.</p> </li> </ul>'
    description: <p>Information about a tag filter.</p>
  ErrorInformation:
    type: object
    properties:
      code?:
        type: ErrorCode
        description: '<p>The error code:</p> <ul> <li> <p>APPLICATION_MISSING: The
          application was missing. This error code will most likely be raised if the
          application is deleted after the deployment is created but before it is
          started.</p> </li> <li> <p>DEPLOYMENT_GROUP_MISSING: The deployment group
          was missing. This error code will most likely be raised if the deployment
          group is deleted after the deployment is created but before it is started.</p>
          </li> <li> <p>HEALTH_CONSTRAINTS: The deployment failed on too many instances
          to be successfully deployed within the instance health constraints specified.</p>
          </li> <li> <p>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
          deployed within the instance health constraints specified.</p> </li> <li>
          <p>IAM_ROLE_MISSING: The service role cannot be accessed.</p> </li> <li>
          <p>IAM_ROLE_PERMISSIONS: The service role does not have the correct permissions.</p>
          </li> <li> <p>INTERNAL_ERROR: There was an internal error.</p> </li> <li>
          <p>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to the Amazon
          EC2 service.</p> </li> <li> <p>NO_INSTANCES: No instance were specified,
          or no instance can be found.</p> </li> <li> <p>OVER_MAX_INSTANCES: The maximum
          number of instance was exceeded.</p> </li> <li> <p>THROTTLED: The operation
          was throttled because the calling account exceeded the throttling limits
          of one or more AWS services.</p> </li> <li> <p>TIMEOUT: The deployment has
          timed out.</p> </li> <li> <p>REVISION_MISSING: The revision ID was missing.
          This error code will most likely be raised if the revision is deleted after
          the deployment is created but before it is started.</p> </li> </ul>'
      message?:
        type: ErrorMessage
        description: <p>An accompanying error message.</p>
    description: <p>Information about a deployment error.</p>
  GenericRevisionInfo:
    type: object
    properties:
      description?:
        type: Description
        description: <p>A comment about the revision.</p>
      deploymentGroups?:
        type: DeploymentGroupsList
        description: <p>The deployment groups for which this is the current target revision.</p>
      firstUsedTime?:
        type: Timestamp
        description: <p>When the revision was first used by AWS CodeDeploy.</p>
      lastUsedTime?:
        type: Timestamp
        description: <p>When the revision was last used by AWS CodeDeploy.</p>
      registerTime?:
        type: Timestamp
        description: <p>When the revision was registered with AWS CodeDeploy.</p>
    description: <p>Information about an application revision.</p>
  GetApplicationInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
    description: <p>Represents the input of a get application operation.</p>
  GetApplicationOutput:
    type: object
    properties:
      application?:
        type: ApplicationInfo
        description: <p>Information about the application.</p>
    description: <p>Represents the output of a get application operation.</p>
  GetApplicationRevisionInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of the application that corresponds to the revision.</p>
      revision:
        type: RevisionLocation
        description: <p>Information about the application revision to get, including type and location.</p>
    description: <p>Represents the input of a get application revision operation.</p>
  GetApplicationRevisionOutput:
    type: object
    properties:
      applicationName?:
        type: ApplicationName
        description: <p>The name of the application that corresponds to the revision.</p>
      revision?:
        type: RevisionLocation
        description: <p>Additional information about the revision, including type and location.</p>
      revisionInfo?:
        type: GenericRevisionInfo
        description: <p>General information about the revision.</p>
    description: <p>Represents the output of a get application revision operation.</p>
  GetDeploymentConfigInput:
    type: object
    properties:
      deploymentConfigName:
        type: DeploymentConfigName
        description: <p>The name of a deployment configuration associated with the applicable IAM user or AWS account.</p>
    description: <p>Represents the input of a get deployment configuration operation.</p>
  GetDeploymentConfigOutput:
    type: object
    properties:
      deploymentConfigInfo?:
        type: DeploymentConfigInfo
        description: <p>Information about the deployment configuration.</p>
    description: <p>Represents the output of a get deployment configuration operation.</p>
  GetDeploymentGroupInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      deploymentGroupName:
        type: DeploymentGroupName
        description: <p>The name of an existing deployment group for the specified application.</p>
    description: <p>Represents the input of a get deployment group operation.</p>
  GetDeploymentGroupOutput:
    type: object
    properties:
      deploymentGroupInfo?:
        type: DeploymentGroupInfo
        description: <p>Information about the deployment group.</p>
    description: <p>Represents the output of a get deployment group operation.</p>
  GetDeploymentInput:
    type: object
    properties:
      deploymentId:
        type: DeploymentId
        description: <p>A deployment ID associated with the applicable IAM user or AWS account.</p>
    description: <p>Represents the input of a get deployment operation.</p>
  GetDeploymentInstanceInput:
    type: object
    properties:
      deploymentId:
        type: DeploymentId
        description: <p>The unique ID of a deployment.</p>
      instanceId:
        type: InstanceId
        description: <p>The unique ID of an instance in the deployment group.</p>
    description: <p>Represents the input of a get deployment instance operation.</p>
  GetDeploymentInstanceOutput:
    type: object
    properties:
      instanceSummary?:
        type: InstanceSummary
        description: <p>Information about the instance.</p>
    description: <p>Represents the output of a get deployment instance operation.</p>
  GetDeploymentOutput:
    type: object
    properties:
      deploymentInfo?:
        type: DeploymentInfo
        description: <p>Information about the deployment.</p>
    description: <p>Represents the output of a get deployment operation.</p>
  GetOnPremisesInstanceInput:
    type: object
    properties:
      instanceName:
        type: InstanceName
        description: <p>The name of the on-premises instance about which to get information.</p>
    description: <p>Represents the input of a get on-premises instance operation.</p>
  GetOnPremisesInstanceOutput:
    type: object
    properties:
      instanceInfo?:
        type: InstanceInfo
        description: <p>Information about the on-premises instance.</p>
    description: <p>Represents the output of a get on-premises instance operation.</p>
  GitHubLocation:
    type: object
    properties:
      repository?:
        type: Repository
        description: <p>The GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision. </p> <p>Specified as account/repository.</p>
      commitId?:
        type: CommitId
        description: <p>The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.</p>
    description: <p>Information about the location of application artifacts stored in GitHub.</p>
  InstanceInfo:
    type: object
    properties:
      instanceName?:
        type: InstanceName
        description: <p>The name of the on-premises instance.</p>
      iamUserArn?:
        type: IamUserArn
        description: <p>The IAM user ARN associated with the on-premises instance.</p>
      instanceArn?:
        type: InstanceArn
        description: <p>The ARN of the on-premises instance.</p>
      registerTime?:
        type: Timestamp
        description: <p>The time at which the on-premises instance was registered.</p>
      deregisterTime?:
        type: Timestamp
        description: <p>If the on-premises instance was deregistered, the time at which the on-premises instance was deregistered.</p>
      tags?:
        type: TagList
        description: <p>The tags currently associated with the on-premises instance.</p>
    description: <p>Information about an on-premises instance.</p>
  InstanceSummary:
    type: object
    properties:
      deploymentId?:
        type: DeploymentId
        description: <p>The deployment ID.</p>
      instanceId?:
        type: InstanceId
        description: <p>The instance ID.</p>
      status?:
        type: InstanceStatus
        description: '<p>The deployment status for this instance:</p> <ul> <li> <p>Pending:
          The deployment is pending for this instance.</p> </li> <li> <p>In Progress:
          The deployment is in progress for this instance.</p> </li> <li> <p>Succeeded:
          The deployment has succeeded for this instance.</p> </li> <li> <p>Failed:
          The deployment has failed for this instance.</p> </li> <li> <p>Skipped:
          The deployment has been skipped for this instance.</p> </li> <li> <p>Unknown:
          The deployment status is unknown for this instance.</p> </li> </ul>'
      lastUpdatedAt?:
        type: Timestamp
        description: <p>A timestamp indicating when the instance information was last updated.</p>
      lifecycleEvents?:
        type: LifecycleEventList
        description: <p>A list of lifecycle events for this instance.</p>
    description: <p>Information about an instance in a deployment.</p>
  LifecycleEvent:
    type: object
    properties:
      lifecycleEventName?:
        type: LifecycleEventName
        description: <p>The deployment lifecycle event name, such as ApplicationStop, BeforeInstall, AfterInstall, ApplicationStart, or ValidateService.</p>
      diagnostics?:
        type: Diagnostics
        description: <p>Diagnostic information about the deployment lifecycle event.</p>
      startTime?:
        type: Timestamp
        description: <p>A timestamp indicating when the deployment lifecycle event started.</p>
      endTime?:
        type: Timestamp
        description: <p>A timestamp indicating when the deployment lifecycle event ended.</p>
      status?:
        type: LifecycleEventStatus
        description: '<p>The deployment lifecycle event status:</p> <ul> <li> <p>Pending:
          The deployment lifecycle event is pending.</p> </li> <li> <p>InProgress:
          The deployment lifecycle event is in progress.</p> </li> <li> <p>Succeeded:
          The deployment lifecycle event ran successfully.</p> </li> <li> <p>Failed:
          The deployment lifecycle event has failed.</p> </li> <li> <p>Skipped: The
          deployment lifecycle event has been skipped.</p> </li> <li> <p>Unknown:
          The deployment lifecycle event is unknown.</p> </li> </ul>'
    description: <p>Information about a deployment lifecycle event.</p>
  ListApplicationRevisionsInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      sortBy?:
        type: ApplicationRevisionSortBy
        description: '<p>The column name to use to sort the list results:</p> <ul>
          <li> <p>registerTime: Sort by the time the revisions were registered with
          AWS CodeDeploy.</p> </li> <li> <p>firstUsedTime: Sort by the time the revisions
          were first used in a deployment.</p> </li> <li> <p>lastUsedTime: Sort by
          the time the revisions were last used in a deployment.</p> </li> </ul> <p>If
          not specified or set to null, the results will be returned in an arbitrary
          order.</p>'
      sortOrder?:
        type: SortOrder
        description: '<p>The order in which to sort the list results:</p> <ul> <li>
          <p>ascending: ascending order.</p> </li> <li> <p>descending: descending
          order.</p> </li> </ul> <p>If not specified, the results will be sorted in
          ascending order.</p> <p>If set to null, the results will be sorted in an
          arbitrary order.</p>'
      s3Bucket?:
        type: S3Bucket
        description: <p>An Amazon S3 bucket name to limit the search for revisions.</p> <p>If set to null, all of the user's buckets will be searched.</p>
      s3KeyPrefix?:
        type: S3Key
        description: <p>A key prefix for the set of Amazon S3 objects to limit the search for revisions.</p>
      deployed?:
        type: ListStateFilterAction
        description: '<p>Whether to list revisions based on whether the revision is
          the target revision of an deployment group:</p> <ul> <li> <p>include: List
          revisions that are target revisions of a deployment group.</p> </li> <li>
          <p>exclude: Do not list revisions that are target revisions of a deployment
          group.</p> </li> <li> <p>ignore: List all revisions.</p> </li> </ul>'
      nextToken?:
        type: NextToken
        description: <p>An identifier returned from the previous list application revisions call. It can be used to return the next set of applications in the list.</p>
    description: <p>Represents the input of a list application revisions operation.</p>
  ListApplicationRevisionsOutput:
    type: object
    properties:
      revisions?:
        type: RevisionLocationList
        description: <p>A list of locations that contain the matching revisions.</p>
      nextToken?:
        type: NextToken
        description: <p>If a large amount of information is returned, an identifier will also be returned. It can be used in a subsequent list application revisions call to return the next set of application revisions in the list.</p>
    description: <p>Represents the output of a list application revisions operation.</p>
  ListApplicationsInput:
    type: object
    properties:
      nextToken?:
        type: NextToken
        description: <p>An identifier returned from the previous list applications call. It can be used to return the next set of applications in the list.</p>
    description: <p>Represents the input of a list applications operation.</p>
  ListApplicationsOutput:
    type: object
    properties:
      applications?:
        type: ApplicationsList
        description: <p>A list of application names.</p>
      nextToken?:
        type: NextToken
        description: <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list applications call to return the next set of applications, will also be returned. in the list.</p>
    description: <p>Represents the output of a list applications operation.</p>
  ListDeploymentConfigsInput:
    type: object
    properties:
      nextToken?:
        type: NextToken
        description: <p>An identifier returned from the previous list deployment configurations call. It can be used to return the next set of deployment configurations in the list. </p>
    description: <p>Represents the input of a list deployment configurations operation.</p>
  ListDeploymentConfigsOutput:
    type: object
    properties:
      deploymentConfigsList?:
        type: DeploymentConfigsList
        description: <p>A list of deployment configurations, including built-in configurations such as CodeDeployDefault.OneAtATime.</p>
      nextToken?:
        type: NextToken
        description: <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment configurations call to return the next set of deployment configurations in the list.</p>
    description: <p>Represents the output of a list deployment configurations operation.</p>
  ListDeploymentGroupsInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      nextToken?:
        type: NextToken
        description: <p>An identifier returned from the previous list deployment groups call. It can be used to return the next set of deployment groups in the list.</p>
    description: <p>Represents the input of a list deployment groups operation.</p>
  ListDeploymentGroupsOutput:
    type: object
    properties:
      applicationName?:
        type: ApplicationName
        description: <p>The application name.</p>
      deploymentGroups?:
        type: DeploymentGroupsList
        description: <p>A list of corresponding deployment group names.</p>
      nextToken?:
        type: NextToken
        description: <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.</p>
    description: <p>Represents the output of a list deployment groups operation.</p>
  ListDeploymentInstancesInput:
    type: object
    properties:
      deploymentId:
        type: DeploymentId
        description: <p>The unique ID of a deployment.</p>
      nextToken?:
        type: NextToken
        description: <p>An identifier returned from the previous list deployment instances call. It can be used to return the next set of deployment instances in the list.</p>
      instanceStatusFilter?:
        type: InstanceStatusList
        description: '<p>A subset of instances to list by status:</p> <ul> <li> <p>Pending:
          Include those instance with pending deployments.</p> </li> <li> <p>InProgress:
          Include those instance where deployments are still in progress.</p> </li>
          <li> <p>Succeeded: Include those instances with successful deployments.</p>
          </li> <li> <p>Failed: Include those instance with failed deployments.</p>
          </li> <li> <p>Skipped: Include those instance with skipped deployments.</p>
          </li> <li> <p>Unknown: Include those instance with deployments in an unknown
          state.</p> </li> </ul>'
    description: <p>Represents the input of a list deployment instances operation.</p>
  ListDeploymentInstancesOutput:
    type: object
    properties:
      instancesList?:
        type: InstancesList
        description: <p>A list of instance IDs.</p>
      nextToken?:
        type: NextToken
        description: <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment instances call to return the next set of deployment instances in the list.</p>
    description: <p>Represents the output of a list deployment instances operation.</p>
  ListDeploymentsInput:
    type: object
    properties:
      applicationName?:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      deploymentGroupName?:
        type: DeploymentGroupName
        description: <p>The name of an existing deployment group for the specified application.</p>
      includeOnlyStatuses?:
        type: DeploymentStatusList
        description: '<p>A subset of deployments to list by status:</p> <ul> <li>
          <p>Created: Include created deployments in the resulting list.</p> </li>
          <li> <p>Queued: Include queued deployments in the resulting list.</p> </li>
          <li> <p>In Progress: Include in-progress deployments in the resulting list.</p>
          </li> <li> <p>Succeeded: Include successful deployments in the resulting
          list.</p> </li> <li> <p>Failed: Include failed deployments in the resulting
          list.</p> </li> <li> <p>Stopped: Include stopped deployments in the resulting
          list.</p> </li> </ul>'
      createTimeRange?:
        type: TimeRange
        description: <p>A time range (start and end) for returning a subset of the list of deployments.</p>
      nextToken?:
        type: NextToken
        description: <p>An identifier returned from the previous list deployments call. It can be used to return the next set of deployments in the list.</p>
    description: <p>Represents the input of a list deployments operation.</p>
  ListDeploymentsOutput:
    type: object
    properties:
      deployments?:
        type: DeploymentsList
        description: <p>A list of deployment IDs.</p>
      nextToken?:
        type: NextToken
        description: <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployments call to return the next set of deployments in the list.</p>
    description: <p>Represents the output of a list deployments operation.</p>
  ListOnPremisesInstancesInput:
    type: object
    properties:
      registrationStatus?:
        type: RegistrationStatus
        description: '<p>The registration status of the on-premises instances:</p>
          <ul> <li> <p>Deregistered: Include deregistered on-premises instances in
          the resulting list.</p> </li> <li> <p>Registered: Include registered on-premises
          instances in the resulting list.</p> </li> </ul>'
      tagFilters?:
        type: TagFilterList
        description: <p>The on-premises instance tags that will be used to restrict the corresponding on-premises instance names returned.</p>
      nextToken?:
        type: NextToken
        description: <p>An identifier returned from the previous list on-premises instances call. It can be used to return the next set of on-premises instances in the list.</p>
    description: <p>Represents the input of a list on-premises instances operation.</p>
  ListOnPremisesInstancesOutput:
    type: object
    properties:
      instanceNames?:
        type: InstanceNameList
        description: <p>The list of matching on-premises instance names.</p>
      nextToken?:
        type: NextToken
        description: <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list on-premises instances call to return the next set of on-premises instances in the list.</p>
    description: <p>Represents the output of list on-premises instances operation.</p>
  MinimumHealthyHosts:
    type: object
    properties:
      value?:
        type: MinimumHealthyHostsValue
        description: <p>The minimum healthy instance value.</p>
      type?:
        type: MinimumHealthyHostsType
        description: '<p>The minimum healthy instance type:</p> <ul> <li> <p>HOST_COUNT:
          The minimum number of healthy instance as an absolute value.</p> </li> <li>
          <p>FLEET_PERCENT: The minimum number of healthy instance as a percentage
          of the total number of instance in the deployment.</p> </li> </ul> <p>In
          an example of nine instance, if a HOST_COUNT of six is specified, deploy
          to up to three instances at a time. The deployment will be successful if
          six or more instances are deployed to successfully; otherwise, the deployment
          fails. If a FLEET_PERCENT of 40 is specified, deploy to up to five instance
          at a time. The deployment will be successful if four or more instance are
          deployed to successfully; otherwise, the deployment fails.</p> <note> <p>In
          a call to the get deployment configuration operation, CodeDeployDefault.OneAtATime
          will return a minimum healthy instance type of MOST_CONCURRENCY and a value
          of 1. This means a deployment to only one instance at a time. (You cannot
          set the type to MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.)
          In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy will try
          to ensure that all instances but one are kept in a healthy state during
          the deployment. Although this allows one instance at a time to be taken
          offline for a new deployment, it also means that if the deployment to the
          last instance fails, the overall deployment still succeeds.</p> </note>'
    description: <p>Information about minimum healthy instance.</p>
  RegisterApplicationRevisionInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.</p>
      description?:
        type: Description
        description: <p>A comment about the revision.</p>
      revision:
        type: RevisionLocation
        description: <p>Information about the application revision to register, including type and location.</p>
    description: <p>Represents the input of a register application revision operation.</p>
  RegisterOnPremisesInstanceInput:
    type: object
    properties:
      instanceName:
        type: InstanceName
        description: <p>The name of the on-premises instance to register.</p>
      iamUserArn:
        type: IamUserArn
        description: <p>The ARN of the IAM user to associate with the on-premises instance.</p>
    description: <p>Represents the input of the register on-premises instance operation.</p>
  RemoveTagsFromOnPremisesInstancesInput:
    type: object
    properties:
      tags:
        type: TagList
        description: <p>The tag key-value pairs to remove from the on-premises instances.</p>
      instanceNames:
        type: InstanceNameList
        description: <p>The names of the on-premises instances from which to remove tags.</p>
    description: <p>Represents the input of a remove tags from on-premises instances operation.</p>
  RevisionInfo:
    type: object
    properties:
      revisionLocation?:
        type: RevisionLocation
      genericRevisionInfo?:
        type: GenericRevisionInfo
    description: <p>Information about an application revision.</p>
  RevisionLocation:
    type: object
    properties:
      revisionType?:
        type: RevisionLocationType
        description: '<p>The type of application revision:</p> <ul> <li> <p>S3: An
          application revision stored in Amazon S3.</p> </li> <li> <p>GitHub: An application
          revision stored in GitHub.</p> </li> </ul>'
      s3Location?:
        type: S3Location
      gitHubLocation?:
        type: GitHubLocation
    description: <p>Information about the location of an application revision.</p>
  RollbackInfo:
    type: object
    properties:
      rollbackDeploymentId?:
        type: DeploymentId
        description: <p>The ID of the deployment rollback.</p>
      rollbackTriggeringDeploymentId?:
        type: DeploymentId
        description: <p>The deployment ID of the deployment that was underway and triggered a rollback deployment because it failed or was stopped.</p>
      rollbackMessage?:
        type: Description
        description: <p>Information describing the status of a deployment rollback; for example, whether the deployment can't be rolled back, is in progress, failed, or succeeded. </p>
    description: <p>Information about a deployment rollback.</p>
  S3Location:
    type: object
    properties:
      bucket?:
        type: S3Bucket
        description: <p>The name of the Amazon S3 bucket where the application revision is stored.</p>
      key?:
        type: S3Key
        description: <p>The name of the Amazon S3 object that represents the bundled artifacts for the application revision.</p>
      bundleType?:
        type: BundleType
        description: '<p>The file type of the application revision. Must be one of
          the following:</p> <ul> <li> <p>tar: A tar archive file.</p> </li> <li>
          <p>tgz: A compressed tar archive file.</p> </li> <li> <p>zip: A zip archive
          file.</p> </li> </ul>'
      version?:
        type: VersionId
        description: <p>A specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.</p> <p>If the version is not specified, the system will use the most recent version by default.</p>
      eTag?:
        type: ETag
        description: <p>The ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.</p> <p>If the ETag is not specified as an input parameter, ETag validation of the object will be skipped.</p>
    description: <p>Information about the location of application artifacts stored in Amazon S3.</p>
  StopDeploymentInput:
    type: object
    properties:
      deploymentId:
        type: DeploymentId
        description: <p>The unique ID of a deployment.</p>
      autoRollbackEnabled?:
        type: NullableBoolean
        description: <p>Indicates, when a deployment is stopped, whether instances that have been updated should be rolled back to the previous version of the application revision.</p>
    description: <p>Represents the input of a stop deployment operation.</p>
  StopDeploymentOutput:
    type: object
    properties:
      status?:
        type: StopStatus
        description: '<p>The status of the stop deployment operation:</p> <ul> <li>
          <p>Pending: The stop operation is pending.</p> </li> <li> <p>Succeeded:
          The stop operation was successful.</p> </li> </ul>'
      statusMessage?:
        type: Message
        description: <p>An accompanying status message.</p>
    description: <p>Represents the output of a stop deployment operation.</p>
  Tag:
    type: object
    properties:
      Key?:
        type: Key
        description: <p>The tag's key.</p>
      Value?:
        type: Value
        description: <p>The tag's value.</p>
    description: <p>Information about a tag.</p>
  TagFilter:
    type: object
    properties:
      Key?:
        type: Key
        description: <p>The on-premises instance tag filter key.</p>
      Value?:
        type: Value
        description: <p>The on-premises instance tag filter value.</p>
      Type?:
        type: TagFilterType
        description: '<p>The on-premises instance tag filter type:</p> <ul> <li> <p>KEY_ONLY:
          Key only.</p> </li> <li> <p>VALUE_ONLY: Value only.</p> </li> <li> <p>KEY_AND_VALUE:
          Key and value.</p> </li> </ul>'
    description: <p>Information about an on-premises instance tag filter.</p>
  TimeRange:
    type: object
    properties:
      start?:
        type: Timestamp
        description: <p>The start time of the time range.</p> <note> <p>Specify null to leave the start time open-ended.</p> </note>
      end?:
        type: Timestamp
        description: <p>The end time of the time range.</p> <note> <p>Specify null to leave the end time open-ended.</p> </note>
    description: <p>Information about a time range.</p>
  TriggerConfig:
    type: object
    properties:
      triggerName?:
        type: TriggerName
        description: <p>The name of the notification trigger.</p>
      triggerTargetArn?:
        type: TriggerTargetArn
        description: <p>The ARN of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent.</p>
      triggerEvents?:
        type: TriggerEventTypeList
        description: <p>The event type or types for which notifications are triggered.</p>
    description: <p>Information about notification triggers for the deployment group.</p>
  UpdateApplicationInput:
    type: object
    properties:
      applicationName?:
        type: ApplicationName
        description: <p>The current name of the application you want to change.</p>
      newApplicationName?:
        type: ApplicationName
        description: <p>The new name to give the application.</p>
    description: <p>Represents the input of an update application operation.</p>
  UpdateDeploymentGroupInput:
    type: object
    properties:
      applicationName:
        type: ApplicationName
        description: <p>The application name corresponding to the deployment group to update.</p>
      currentDeploymentGroupName:
        type: DeploymentGroupName
        description: <p>The current name of the deployment group.</p>
      newDeploymentGroupName?:
        type: DeploymentGroupName
        description: <p>The new name of the deployment group, if you want to change it.</p>
      deploymentConfigName?:
        type: DeploymentConfigName
        description: <p>The replacement deployment configuration name to use, if you want to change it.</p>
      ec2TagFilters?:
        type: EC2TagFilterList
        description: <p>The replacement set of Amazon EC2 tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.</p>
      onPremisesInstanceTagFilters?:
        type: TagFilterList
        description: <p>The replacement set of on-premises instance tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.</p>
      autoScalingGroups?:
        type: AutoScalingGroupNameList
        description: <p>The replacement list of Auto Scaling groups to be included in the deployment group, if you want to change them. To keep the Auto Scaling groups, enter their names. To remove Auto Scaling groups, do not enter any Auto Scaling group names.</p>
      serviceRoleArn?:
        type: Role
        description: <p>A replacement ARN for the service role, if you want to change it.</p>
      triggerConfigurations?:
        type: TriggerConfigList
        description: <p>Information about triggers to change when the deployment group is updated. For examples, see <a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-edit.html">Modify Triggers in an AWS CodeDeploy Deployment Group</a> in the AWS CodeDeploy User Guide.</p>
      alarmConfiguration?:
        type: AlarmConfiguration
        description: <p>Information to add or change about Amazon CloudWatch alarms when the deployment group is updated. </p>
      autoRollbackConfiguration?:
        type: AutoRollbackConfiguration
        description: <p>Information for an automatic rollback configuration that is added or changed when a deployment group is updated.</p>
    description: <p>Represents the input of an update deployment group operation.</p>
  UpdateDeploymentGroupOutput:
    type: object
    properties:
      hooksNotCleanedUp?:
        type: AutoScalingGroupList
        description: <p>If the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the AWS account. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the AWS account.</p>
    description: <p>Represents the output of an update deployment group operation.</p>
/{AddTagsToOnPremisesInstances}:
  uriParameters:
    AddTagsToOnPremisesInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Add Tags To On Premises Instances
  post:
    description: Adds tags to on-premises instances.
    displayName: Add Tags To On Premises Instances
    body:
      application/json: AddTagsToOnPremisesInstancesInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: InstanceNameRequiredException
/{BatchGetApplicationRevisions}:
  uriParameters:
    BatchGetApplicationRevisions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Batch Get Application Revisions
  post:
    description: Gets information about one or more application revisions.
    displayName: Batch Get Application Revisions
    body:
      application/json: BatchGetApplicationRevisionsInput
    responses:
      200:
        body:
          application/json: BatchGetApplicationRevisionsOutput
      400:
        description: ApplicationDoesNotExistException
/{BatchGetApplications}:
  uriParameters:
    BatchGetApplications?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Batch Get Applications
  post:
    description: Gets information about one or more applications.
    displayName: Batch Get Applications
    body:
      application/json: BatchGetApplicationsInput
    responses:
      200:
        body:
          application/json: BatchGetApplicationsOutput
      400:
        description: ApplicationNameRequiredException
/{BatchGetDeploymentGroups}:
  uriParameters:
    BatchGetDeploymentGroups?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Batch Get Deployment Groups
  post:
    description: Get information about one or more deployment groups.
    displayName: Batch Get Deployment Groups
    body:
      application/json: BatchGetDeploymentGroupsInput
    responses:
      200:
        body:
          application/json: BatchGetDeploymentGroupsOutput
      400:
        description: ApplicationNameRequiredException
/{BatchGetDeploymentInstances}:
  uriParameters:
    BatchGetDeploymentInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Batch Get Deployment Instances
  post:
    description: Gets information about one or more instance that are part of a deployment group.
    displayName: Batch Get Deployment Instances
    body:
      application/json: BatchGetDeploymentInstancesInput
    responses:
      200:
        body:
          application/json: BatchGetDeploymentInstancesOutput
      400:
        description: DeploymentIdRequiredException
/{BatchGetDeployments}:
  uriParameters:
    BatchGetDeployments?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Batch Get Deployments
  post:
    description: Gets information about one or more deployments.
    displayName: Batch Get Deployments
    body:
      application/json: BatchGetDeploymentsInput
    responses:
      200:
        body:
          application/json: BatchGetDeploymentsOutput
      400:
        description: DeploymentIdRequiredException
/{BatchGetOnPremisesInstances}:
  uriParameters:
    BatchGetOnPremisesInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Batch Get On Premises Instances
  post:
    description: Gets information about one or more on-premises instances.
    displayName: Batch Get On Premises Instances
    body:
      application/json: BatchGetOnPremisesInstancesInput
    responses:
      200:
        body:
          application/json: BatchGetOnPremisesInstancesOutput
      400:
        description: InstanceNameRequiredException
/{CreateApplication}:
  uriParameters:
    CreateApplication?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Application
  post:
    description: Creates an application.
    displayName: Create Application
    body:
      application/json: CreateApplicationInput
    responses:
      200:
        body:
          application/json: CreateApplicationOutput
      400:
        description: ApplicationNameRequiredException
/{CreateDeployment}:
  uriParameters:
    CreateDeployment?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Deployment
  post:
    description: Deploys an application revision through the specified deployment group.
    displayName: Create Deployment
    body:
      application/json: CreateDeploymentInput
    responses:
      200:
        body:
          application/json: CreateDeploymentOutput
      400:
        description: ApplicationNameRequiredException
/{CreateDeploymentConfig}:
  uriParameters:
    CreateDeploymentConfig?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Deployment Config
  post:
    description: Creates a deployment configuration.
    displayName: Create Deployment Config
    body:
      application/json: CreateDeploymentConfigInput
    responses:
      200:
        body:
          application/json: CreateDeploymentConfigOutput
      400:
        description: InvalidDeploymentConfigNameException
/{CreateDeploymentGroup}:
  uriParameters:
    CreateDeploymentGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Deployment Group
  post:
    description: Creates a deployment group to which application revisions will be deployed.
    displayName: Create Deployment Group
    body:
      application/json: CreateDeploymentGroupInput
    responses:
      200:
        body:
          application/json: CreateDeploymentGroupOutput
      400:
        description: ApplicationNameRequiredException
/{DeleteApplication}:
  uriParameters:
    DeleteApplication?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Application
  post:
    description: Deletes an application.
    displayName: Delete Application
    body:
      application/json: DeleteApplicationInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: ApplicationNameRequiredException
/{DeleteDeploymentConfig}:
  uriParameters:
    DeleteDeploymentConfig?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Deployment Config
  post:
    description: Deletes a deployment configuration. <note> A deployment configuration cannot be deleted if it is currently in use. Predefined configurations cannot be deleted. </note>
    displayName: Delete Deployment Config
    body:
      application/json: DeleteDeploymentConfigInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: InvalidDeploymentConfigNameException
/{DeleteDeploymentGroup}:
  uriParameters:
    DeleteDeploymentGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Deployment Group
  post:
    description: Deletes a deployment group.
    displayName: Delete Deployment Group
    body:
      application/json: DeleteDeploymentGroupInput
    responses:
      200:
        body:
          application/json: DeleteDeploymentGroupOutput
      400:
        description: ApplicationNameRequiredException
/{DeregisterOnPremisesInstance}:
  uriParameters:
    DeregisterOnPremisesInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Deregister On Premises Instance
  post:
    description: Deregisters an on-premises instance.
    displayName: Deregister On Premises Instance
    body:
      application/json: DeregisterOnPremisesInstanceInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: InstanceNameRequiredException
/{GetApplication}:
  uriParameters:
    GetApplication?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Application
  post:
    description: Gets information about an application.
    displayName: Get Application
    body:
      application/json: GetApplicationInput
    responses:
      200:
        body:
          application/json: GetApplicationOutput
      400:
        description: ApplicationNameRequiredException
/{GetApplicationRevision}:
  uriParameters:
    GetApplicationRevision?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Application Revision
  post:
    description: Gets information about an application revision.
    displayName: Get Application Revision
    body:
      application/json: GetApplicationRevisionInput
    responses:
      200:
        body:
          application/json: GetApplicationRevisionOutput
      400:
        description: ApplicationDoesNotExistException
/{GetDeployment}:
  uriParameters:
    GetDeployment?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Deployment
  post:
    description: Gets information about a deployment.
    displayName: Get Deployment
    body:
      application/json: GetDeploymentInput
    responses:
      200:
        body:
          application/json: GetDeploymentOutput
      400:
        description: DeploymentIdRequiredException
/{GetDeploymentConfig}:
  uriParameters:
    GetDeploymentConfig?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Deployment Config
  post:
    description: Gets information about a deployment configuration.
    displayName: Get Deployment Config
    body:
      application/json: GetDeploymentConfigInput
    responses:
      200:
        body:
          application/json: GetDeploymentConfigOutput
      400:
        description: InvalidDeploymentConfigNameException
/{GetDeploymentGroup}:
  uriParameters:
    GetDeploymentGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Deployment Group
  post:
    description: Gets information about a deployment group.
    displayName: Get Deployment Group
    body:
      application/json: GetDeploymentGroupInput
    responses:
      200:
        body:
          application/json: GetDeploymentGroupOutput
      400:
        description: ApplicationNameRequiredException
/{GetDeploymentInstance}:
  uriParameters:
    GetDeploymentInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Deployment Instance
  post:
    description: Gets information about an instance as part of a deployment.
    displayName: Get Deployment Instance
    body:
      application/json: GetDeploymentInstanceInput
    responses:
      200:
        body:
          application/json: GetDeploymentInstanceOutput
      400:
        description: DeploymentIdRequiredException
/{GetOnPremisesInstance}:
  uriParameters:
    GetOnPremisesInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get On Premises Instance
  post:
    description: Gets information about an on-premises instance.
    displayName: Get On Premises Instance
    body:
      application/json: GetOnPremisesInstanceInput
    responses:
      200:
        body:
          application/json: GetOnPremisesInstanceOutput
      400:
        description: InstanceNameRequiredException
/{ListApplicationRevisions}:
  uriParameters:
    ListApplicationRevisions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Application Revisions
  post:
    description: Lists information about revisions for an application.
    displayName: List Application Revisions
    body:
      application/json: ListApplicationRevisionsInput
    responses:
      200:
        body:
          application/json: ListApplicationRevisionsOutput
      400:
        description: ApplicationDoesNotExistException
/{ListApplications}:
  uriParameters:
    ListApplications?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Applications
  post:
    description: Lists the applications registered with the applicable IAM user or AWS account.
    displayName: List Applications
    body:
      application/json: ListApplicationsInput
    responses:
      200:
        body:
          application/json: ListApplicationsOutput
      400:
        description: InvalidNextTokenException
/{ListDeploymentConfigs}:
  uriParameters:
    ListDeploymentConfigs?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Deployment Configs
  post:
    description: Lists the deployment configurations with the applicable IAM user or AWS account.
    displayName: List Deployment Configs
    body:
      application/json: ListDeploymentConfigsInput
    responses:
      200:
        body:
          application/json: ListDeploymentConfigsOutput
      400:
        description: InvalidNextTokenException
/{ListDeploymentGroups}:
  uriParameters:
    ListDeploymentGroups?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Deployment Groups
  post:
    description: Lists the deployment groups for an application registered with the applicable IAM user or AWS account.
    displayName: List Deployment Groups
    body:
      application/json: ListDeploymentGroupsInput
    responses:
      200:
        body:
          application/json: ListDeploymentGroupsOutput
      400:
        description: ApplicationNameRequiredException
/{ListDeploymentInstances}:
  uriParameters:
    ListDeploymentInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Deployment Instances
  post:
    description: Lists the instance for a deployment associated with the applicable IAM user or AWS account.
    displayName: List Deployment Instances
    body:
      application/json: ListDeploymentInstancesInput
    responses:
      200:
        body:
          application/json: ListDeploymentInstancesOutput
      400:
        description: DeploymentIdRequiredException
/{ListDeployments}:
  uriParameters:
    ListDeployments?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Deployments
  post:
    description: Lists the deployments in a deployment group for an application registered with the applicable IAM user or AWS account.
    displayName: List Deployments
    body:
      application/json: ListDeploymentsInput
    responses:
      200:
        body:
          application/json: ListDeploymentsOutput
      400:
        description: ApplicationNameRequiredException
/{ListOnPremisesInstances}:
  uriParameters:
    ListOnPremisesInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List On Premises Instances
  post:
    description: Gets a list of names for one or more on-premises instances. Unless otherwise specified, both registered and deregistered on-premises instance names will be listed. To list only registered or deregistered on-premises instance names, use the registration status parameter.
    displayName: List On Premises Instances
    body:
      application/json: ListOnPremisesInstancesInput
    responses:
      200:
        body:
          application/json: ListOnPremisesInstancesOutput
      400:
        description: InvalidRegistrationStatusException
/{RegisterApplicationRevision}:
  uriParameters:
    RegisterApplicationRevision?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Register Application Revision
  post:
    description: Registers with AWS CodeDeploy a revision for the specified application.
    displayName: Register Application Revision
    body:
      application/json: RegisterApplicationRevisionInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: ApplicationDoesNotExistException
/{RegisterOnPremisesInstance}:
  uriParameters:
    RegisterOnPremisesInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Register On Premises Instance
  post:
    description: Registers an on-premises instance.
    displayName: Register On Premises Instance
    body:
      application/json: RegisterOnPremisesInstanceInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: InstanceNameAlreadyRegisteredException
/{RemoveTagsFromOnPremisesInstances}:
  uriParameters:
    RemoveTagsFromOnPremisesInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Remove Tags From On Premises Instances
  post:
    description: Removes one or more tags from one or more on-premises instances.
    displayName: Remove Tags From On Premises Instances
    body:
      application/json: RemoveTagsFromOnPremisesInstancesInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: InstanceNameRequiredException
/{StopDeployment}:
  uriParameters:
    StopDeployment?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Stop Deployment
  post:
    description: Attempts to stop an ongoing deployment.
    displayName: Stop Deployment
    body:
      application/json: StopDeploymentInput
    responses:
      200:
        body:
          application/json: StopDeploymentOutput
      400:
        description: DeploymentIdRequiredException
/{UpdateApplication}:
  uriParameters:
    UpdateApplication?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Application
  post:
    description: Changes the name of an application.
    displayName: Update Application
    body:
      application/json: UpdateApplicationInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: ApplicationNameRequiredException
/{UpdateDeploymentGroup}:
  uriParameters:
    UpdateDeploymentGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Deployment Group
  post:
    description: Changes information about a deployment group.
    displayName: Update Deployment Group
    body:
      application/json: UpdateDeploymentGroupInput
    responses:
      200:
        body:
          application/json: UpdateDeploymentGroupOutput
      400:
        description: ApplicationNameRequiredException
