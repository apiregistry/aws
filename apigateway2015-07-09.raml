#%RAML 1.0
title: Amazon API Gateway
version: '2015-07-09'
description: '  Amazon API Gateway helps developers deliver robust, secure, and scalable
  mobile and web application back ends. Amazon API Gateway allows developers to securely
  connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2,
  or other publicly addressable web services that are hosted outside of AWS.'
mediaType:
- application/json
types:
  ApiKeysFormat:
    type: string
    enum:
    - csv
  AuthorizerType:
    type: string
    enum:
    - TOKEN
    - COGNITO_USER_POOLS
    description: <p>The authorizer type. the only current value is TOKEN.</p>
  Blob:
    type: file
  Boolean:
    type: boolean
  CacheClusterSize:
    type: string
    enum:
    - '0.5'
    - '1.6'
    - '6.1'
    - '13.5'
    - '28.4'
    - '58.2'
    - '118'
    - '237'
    description: <p>Returns the size of the <b>CacheCluster</b>.</p>
  CacheClusterStatus:
    type: string
    enum:
    - CREATE_IN_PROGRESS
    - AVAILABLE
    - DELETE_IN_PROGRESS
    - NOT_AVAILABLE
    - FLUSH_IN_PROGRESS
    description: <p>Returns the status of the <b>CacheCluster</b>.</p>
  Double:
    type: number
    format: double
  Integer:
    type: integer
    format: int
  IntegrationType:
    type: string
    enum:
    - HTTP
    - AWS
    - MOCK
    - HTTP_PROXY
    - AWS_PROXY
    description: <p>The integration type. The valid value is <code>HTTP</code> for integrating with an HTTP back end, <code>AWS</code> for any AWS service endpoints, <code>MOCK</code> for testing without actually invoking the back end, <code>HTTP_PROXY</code> for integrating with the HTTP proxy integration, or <code>AWS_PROXY</code> for integrating with the Lambda proxy integration type.</p>
  ListOfARNs:
    type: array
    items:
      type: ProviderARN
  ListOfApiKey:
    type: array
    items:
      type: ApiKey
  ListOfApiStage:
    type: array
    items:
      type: ApiStage
  ListOfAuthorizer:
    type: array
    items:
      type: Authorizer
  ListOfBasePathMapping:
    type: array
    items:
      type: BasePathMapping
  ListOfClientCertificate:
    type: array
    items:
      type: ClientCertificate
  ListOfDeployment:
    type: array
    items:
      type: Deployment
  ListOfDomainName:
    type: array
    items:
      type: DomainName
  ListOfLong:
    type: array
    items:
      type: Long
  ListOfModel:
    type: array
    items:
      type: Model
  ListOfPatchOperation:
    type: array
    items:
      type: PatchOperation
    description: A list of operations describing the updates to apply to the specified resource. The patches are applied in the order specified in the list.
  ListOfResource:
    type: array
    items:
      type: Resource
  ListOfRestApi:
    type: array
    items:
      type: RestApi
  ListOfStage:
    type: array
    items:
      type: Stage
  ListOfStageKeys:
    type: array
    items:
      type: StageKey
  ListOfString:
    type: array
    items:
      type: String
  ListOfUsage:
    type: array
    items:
      type: ListOfLong
  ListOfUsagePlan:
    type: array
    items:
      type: UsagePlan
  ListOfUsagePlanKey:
    type: array
    items:
      type: UsagePlanKey
  Long:
    type: integer
    format: long
  NullableBoolean:
    type: boolean
  NullableInteger:
    type: integer
    format: int
  Op:
    type: string
    enum:
    - add
    - remove
    - replace
    - move
    - copy
    - test
  ProviderARN:
    type: string
  PutMode:
    type: string
    enum:
    - merge
    - overwrite
  QuotaPeriodType:
    type: string
    enum:
    - DAY
    - WEEK
    - MONTH
  StatusCode:
    type: string
    pattern: '[1-5]\d\d'
    description: <p>The status code.</p>
  String:
    type: string
  Timestamp:
    type: datetime
  UnauthorizedCacheControlHeaderStrategy:
    type: string
    enum:
    - FAIL_WITH_403
    - SUCCEED_WITH_RESPONSE_HEADER
    - SUCCEED_WITHOUT_RESPONSE_HEADER
  Account:
    type: object
    properties:
      cloudwatchRoleArn?:
        type: String
        description: <p>The ARN of an Amazon CloudWatch role for the current <a>Account</a>. </p>
      throttleSettings?:
        type: ThrottleSettings
        description: <p>Specifies the API request limits configured for the current <a>Account</a>.</p>
      features?:
        type: ListOfString
        description: <p>A list of features supported for the account. When usage plans are enabled, the features list will include an entry of <code>"UsagePlans"</code>.</p>
      apiKeyVersion?:
        type: String
        description: <p>The version of the API keys used for the account.</p>
    description: '<p>Represents an AWS account that is associated with Amazon API
      Gateway.</p> <div class="remarks"> <p>To view the account info, call <code>GET</code>
      on this resource.</p> <h4>Error Codes</h4> <p>The following exception may be
      thrown when the request fails.</p> <ul> <li>UnauthorizedException</li> <li>NotFoundException</li>
      <li>TooManyRequestsException</li> </ul> <p>For detailed error code information,
      including the corresponding HTTP Status Codes, see <a href="http://docs.aws.amazon.com/apigateway/api-reference/handling-errors/#api-error-codes">API
      Gateway Error Codes</a></p> <h4>Example: Get the information about an account.</h4>
      <h5>Request</h5> <pre><code>GET /account HTTP/1.1 Content-Type: application/json
      Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization:
      AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request,
      SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash} </code></pre>
      <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status
      code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies":
      { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html",
      "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update":
      { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole",
      "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } } </code></pre>
      <p>In addition to making the REST API call directly, you can use the AWS CLI
      and an AWS SDK to access this resource.</p> </div> <div class="seeAlso"> <a
      href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-limits.html">API
      Gateway Limits</a> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html">Developer
      Guide</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-account.html">AWS
      CLI</a> </div>'
  ApiKey:
    type: object
    properties:
      id?:
        type: String
        description: <p>The identifier of the API Key.</p>
      value?:
        type: String
        description: <p>The value of the API Key.</p>
      name?:
        type: String
        description: <p>The name of the API Key.</p>
      description?:
        type: String
        description: <p>The description of the API Key.</p>
      enabled?:
        type: Boolean
        description: <p>Specifies whether the API Key can be used by callers.</p>
      createdDate?:
        type: Timestamp
        description: <p>The date when the API Key was created, in <a href="http://www.iso.org/iso/home/standards/iso8601.htm" target="_blank">ISO 8601 format</a>.</p>
      lastUpdatedDate?:
        type: Timestamp
        description: <p>When the API Key was last updated, in ISO 8601 format.</p>
      stageKeys?:
        type: ListOfString
        description: <p>A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.</p>
    description: <p>A resource that can be distributed to callers for executing <a>Method</a> resources that require an API key. API keys can be mapped to any <a>Stage</a> on any <a>RestApi</a>, which indicates that the callers with the API key can make requests to that stage.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html">Use API Keys</a> </div>
  ApiKeyIds:
    type: object
    properties:
      ids?:
        type: ListOfString
        description: <p>A list of all the <a>ApiKey</a> identifiers.</p>
      warnings?:
        type: ListOfString
        description: <p>A list of warning messages.</p>
    description: <p>The identifier of an API key used to reference an API key in a usage plan.</p>
  ApiKeys:
    type: object
    properties:
      warnings?:
        type: ListOfString
        description: <p>A list of warning messages logged during the import of API keys when the <code>failOnWarnings</code> option is set to true.</p>
      position?:
        type: String
      item?:
        type: ListOfApiKey
        description: <p>The current page of any <a>ApiKey</a> resources in the collection of <a>ApiKey</a> resources.</p>
    description: <p>Represents a collection of API keys as represented by an <a>ApiKeys</a> resource.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html">Use API Keys</a> </div>
  ApiStage:
    type: object
    properties:
      apiId?:
        type: String
        description: <p>API Id of the associated API stage in a usage plan.</p>
      stage?:
        type: String
        description: <p>API stage name of the associated API stage in a usage plan.</p>
    description: <p>API stage name of the associated API stage in a usage plan.</p>
  Authorizer:
    type: object
    properties:
      id?:
        type: String
        description: <p>The identifier for the authorizer resource.</p>
      name?:
        type: String
        description: <p>[Required] The name of the authorizer.</p>
      type?:
        type: AuthorizerType
        description: <p>[Required] The type of the authorizer. Currently, the only valid type is TOKEN.</p>
      providerARNs?:
        type: ListOfARNs
        description: <p>A list of the provider ARNs of the authorizer.</p>
      authType?:
        type: String
        description: <p>Optional customer-defined field, used in Swagger imports/exports. Has no functional impact.</p>
      authorizerUri?:
        type: String
        description: <p>[Required] Specifies the authorizer's Uniform Resource Identifier (URI). For TOKEN authorizers, this must be a well-formed Lambda function URI. The URI should be of the form <code>arn:aws:apigateway:{region}:lambda:path/{service_api}</code>. <code>Region</code> is used to determine the right endpoint. In this case, <code>path</code> is used to indicate that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations</p>
      authorizerCredentials?:
        type: String
        description: <p>Specifies the credentials required for the authorizer, if any. Two options are available. To specify an IAM role for Amazon API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.</p>
      identitySource?:
        type: String
        description: <p>[Required] The source of the identity in an incoming request. For TOKEN authorizers, this value is a mapping expression with the same syntax as integration parameter mappings. The only valid source for tokens is 'header', so the expression should match 'method.request.header.[headerName]'. The value of the header '[headerName]' will be interpreted as the incoming token.</p>
      identityValidationExpression?:
        type: String
        description: <p>A validation expression for the incoming identity. For TOKEN authorizers, this value should be a regular expression. The incoming token from the client is matched against this expression, and will proceed if the token matches. If the token doesn't match, the client receives a 401 Unauthorized response.</p>
      authorizerResultTtlInSeconds?:
        type: NullableInteger
        description: <p>The TTL in seconds of cached authorizer results. If greater than 0, API Gateway will cache authorizer responses. If this field is not set, the default value is 300. The maximum value is 3600, or 1 hour.</p>
    description: <p>Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html">Enable custom authorization</a> </div>
  Authorizers:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfAuthorizer
        description: <p>Gets the current list of <a>Authorizer</a> resources in the collection.</p>
    description: <p>Represents a collection of <a>Authorizer</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html">Enable custom authorization</a> </div>
  BasePathMapping:
    type: object
    properties:
      basePath?:
        type: String
        description: <p>The base path name that callers of the API must provide as part of the URL after the domain name.</p>
      restApiId?:
        type: String
        description: <p>The name of the API.</p>
      stage?:
        type: String
        description: <p>The name of the API's stage.</p>
    description: <p>Represents the base path that callers of the API must provide as part of the URL after the domain name.</p> <div class="remarks">A custom domain name plus a <code>BasePathMapping</code> specification identifies a deployed <a>RestApi</a> in a given stage of the owner <a>Account</a>.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Custom Domain Names</a> </div>
  BasePathMappings:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfBasePathMapping
        description: <p>The current page of any <a>BasePathMapping</a> resources in the collection of base path mapping resources.</p>
    description: <p>Represents a collection of <a>BasePathMapping</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Custom Domain Names</a> </div>
  ClientCertificate:
    type: object
    properties:
      clientCertificateId?:
        type: String
        description: <p>The identifier of the client certificate.</p>
      description?:
        type: String
        description: <p>The description of the client certificate.</p>
      pemEncodedCertificate?:
        type: String
        description: <p>The PEM-encoded public key of the client certificate, which can be used to configure certificate authentication in the integration endpoint .</p>
      createdDate?:
        type: Timestamp
        description: <p>The date when the client certificate was created, in <a href="http://www.iso.org/iso/home/standards/iso8601.htm" target="_blank">ISO 8601 format</a>.</p>
      expirationDate?:
        type: Timestamp
        description: <p>The date when the client certificate will expire, in <a href="http://www.iso.org/iso/home/standards/iso8601.htm" target="_blank">ISO 8601 format</a>.</p>
    description: <p>Represents a client certificate used to configure client-side SSL authentication while sending requests to the integration endpoint.</p> <div class="remarks">Client certificates are used authenticate an API by the back-end server. To authenticate an API client (or user), use a custom <a>Authorizer</a>.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html">Use Client-Side Certificate</a> </div>
  ClientCertificates:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfClientCertificate
        description: <p>The current page of any <a>ClientCertificate</a> resources in the collection of <a>ClientCertificate</a> resources.</p>
    description: <p>Represents a collection of <a>ClientCertificate</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html">Use Client-Side Certificate</a> </div>
  CreateApiKeyRequest:
    type: object
    properties:
      name?:
        type: String
        description: <p>The name of the <a>ApiKey</a>.</p>
      description?:
        type: String
        description: <p>The description of the <a>ApiKey</a>.</p>
      enabled?:
        type: Boolean
        description: <p>Specifies whether the <a>ApiKey</a> can be used by callers.</p>
      generateDistinctId?:
        type: Boolean
        description: <p>Specifies whether (<code>true</code>) or not (<code>false</code>) the key identifier is distinct from the created API key value.</p>
      value?:
        type: String
        description: <p>Specifies a value of the API key.</p>
      stageKeys?:
        type: ListOfStageKeys
        description: <p>DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API key.</p>
    description: <p>Request to create an <a>ApiKey</a> resource.</p>
  CreateDomainNameRequest:
    type: object
    properties:
      domainName:
        type: String
        description: <p>The name of the <a>DomainName</a> resource.</p>
      certificateName:
        type: String
        description: <p>The name of the certificate.</p>
      certificateBody:
        type: String
        description: <p>The body of the server certificate provided by your certificate authority.</p>
      certificatePrivateKey:
        type: String
        description: <p>Your certificate's private key.</p>
      certificateChain:
        type: String
        description: <p>The intermediate certificates and optionally the root certificate, one after the other without any blank lines. If you include the root certificate, your certificate chain must start with intermediate certificates and end with the root certificate. Use the intermediate certificates that were provided by your certificate authority. Do not include any intermediaries that are not in the chain of trust path.</p>
    description: <p>A request to create a new domain name.</p>
  CreateRestApiRequest:
    type: object
    properties:
      name:
        type: String
        description: <p>The name of the <a>RestApi</a>.</p>
      description?:
        type: String
        description: <p>The description of the <a>RestApi</a>.</p>
      cloneFrom?:
        type: String
        description: <p>The ID of the <a>RestApi</a> that you want to clone from.</p>
    description: <p>The POST Request to add a new <a>RestApi</a> resource to your collection.</p>
  CreateUsagePlanRequest:
    type: object
    properties:
      name:
        type: String
        description: <p>The name of the usage plan.</p>
      description?:
        type: String
        description: <p>The description of the usage plan.</p>
      apiStages?:
        type: ListOfApiStage
        description: <p>The associated API stages of the usage plan.</p>
      throttle?:
        type: ThrottleSettings
        description: <p>The throttling limits of the usage plan.</p>
      quota?:
        type: QuotaSettings
        description: <p>The quota of the usage plan.</p>
    description: <p>The POST request to create a usage plan with the name, description, throttle limits and quota limits, as well as the associated API stages, specified in the payload.</p>
  Deployment:
    type: object
    properties:
      id?:
        type: String
        description: <p>The identifier for the deployment resource.</p>
      description?:
        type: String
        description: <p>The description for the deployment resource.</p>
      createdDate?:
        type: Timestamp
        description: <p>The date and time that the deployment resource was created.</p>
      apiSummary?:
        type: PathToMapOfMethodSnapshot
        description: <p>A summary of the <a>RestApi</a> at the date and time that the deployment resource was created.</p>
    description: <p>An immutable representation of a <a>RestApi</a> resource that can be called by users using <a>Stages</a>. A deployment must be associated with a <a>Stage</a> for it to be callable over the Internet.</p> <div class="remarks">To create a deployment, call <code>POST</code> on the <a>Deployments</a> resource of a <a>RestApi</a>. To view, update, or delete a deployment, call <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> on the specified deployment resource (<code>/restapis/{restapi_id}/deployments/{deployment_id}</code>).</div> <div class="seeAlso"><a>RestApi</a>, <a>Deployments</a>, <a>Stage</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html">AWS CLI</a>, <a href="https://aws.amazon.com/tools/">AWS SDKs</a> </div>
  Deployments:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfDeployment
        description: <p>The current page of any <a>Deployment</a> resources in the collection of deployment resources.</p>
    description: <p>Represents a collection resource that contains zero or more references to your existing deployments, and links that guide you on how to interact with your collection. The collection offers a paginated view of the contained deployments.</p> <div class="remarks">To create a new deployment of a <a>RestApi</a>, make a <code>POST</code> request against this resource. To view, update, or delete an existing deployment, make a <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> request, respectively, on a specified <a>Deployment</a> resource.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html">Deploying an API</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html">AWS CLI</a>, <a href="https://aws.amazon.com/tools/">AWS SDKs</a> </div>
  DomainName:
    type: object
    properties:
      domainName?:
        type: String
        description: <p>The name of the <a>DomainName</a> resource.</p>
      certificateName?:
        type: String
        description: <p>The name of the certificate.</p>
      certificateUploadDate?:
        type: Timestamp
        description: <p>The date when the certificate was uploaded, in <a href="http://www.iso.org/iso/home/standards/iso8601.htm" target="_blank">ISO 8601 format</a>.</p>
      distributionDomainName?:
        type: String
        description: <p>The domain name of the Amazon CloudFront distribution. For more information, see the <a href="http://aws.amazon.com/documentation/cloudfront/" target="_blank">Amazon CloudFront documentation</a>.</p>
    description: <p>Represents a domain name that is contained in a simpler, more intuitive URL that can be called.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Client-Side Certificate</a> </div>
  DomainNames:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfDomainName
        description: <p>The current page of any <a>DomainName</a> resources in the collection of <a>DomainName</a> resources.</p>
    description: <p>Represents a collection of <a>DomainName</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Client-Side Certificate</a> </div>
  GenerateClientCertificateRequest:
    type: object
    properties:
      description?:
        type: String
        description: <p>The description of the <a>ClientCertificate</a>.</p>
    description: <p>A request to generate a <a>ClientCertificate</a> resource.</p>
  GetAccountRequest:
    type: object
    description: <p>Requests Amazon API Gateway to get information about the current <a>Account</a> resource.</p>
  Integration:
    type: object
    properties:
      type?:
        type: IntegrationType
        description: <p>Specifies the integration's type. The valid value is <code>HTTP</code> for integrating with an HTTP back end, <code>AWS</code> for any AWS service endpoints, <code>MOCK</code> for testing without actually invoking the back end, <code>HTTP_PROXY</code> for integrating with the HTTP proxy integration, or <code>AWS_PROXY</code> for integrating with the Lambda proxy integration type.</p>
      httpMethod?:
        type: String
        description: <p>Specifies the integration's HTTP method type.</p>
      uri?:
        type: String
        description: <p>Specifies the integration's Uniform Resource Identifier (URI). For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the <a href="https://www.ietf.org/rfc/rfc3986.txt" target="_blank">RFC-3986 specification</a>. For AWS integrations, the URI should be of the form <code>arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}</code>. <code>Region</code>, <code>subdomain</code> and <code>service</code> are used to determine the right endpoint. For AWS services that use the <code>Action=</code> query string parameter, <code>service_api</code> should be a valid action for the desired service. For RESTful AWS service APIs, <code>path</code> is used to indicate that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>.</p>
      credentials?:
        type: String
        description: <p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string <code>arn:aws:iam::\*:user/\*</code>. To use resource-based permissions on supported AWS services, specify null.</p>
      requestParameters?:
        type: MapOfStringToString
        description: <p>A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.</p>
      requestTemplates?:
        type: MapOfStringToString
        description: <p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.</p>
      passthroughBehavior?:
        type: String
        description: '<div> <p> Specifies how the method request body of an unmapped
          content type will be passed through the integration request to the back
          end without transformation. A content type is unmapped if no mapping template
          is defined in the integration or the content type does not match any of
          the mapped content types, as specified in <code>requestTemplates</code>.
          There are three valid values: <code>WHEN_NO_MATCH</code>, <code>WHEN_NO_TEMPLATES</code>,
          and <code>NEVER</code>. </p> <ul> <li> <code>WHEN_NO_MATCH</code> passes
          the method request body through the integration request to the back end
          without transformation when the method request content type does not match
          any content type associated with the mapping templates defined in the integration
          request. </li> <li> <code>WHEN_NO_TEMPLATES</code> passes the method request
          body through the integration request to the back end without transformation
          when no mapping template is defined in the integration request. If a template
          is defined when this option is selected, the method request of an unmapped
          content-type will be rejected with an HTTP <code>415 Unsupported Media Type</code>
          response. </li> <li> <code>NEVER</code> rejects the method request with
          an HTTP <code>415 Unsupported Media Type</code> response when either the
          method request content type does not match any content type associated with
          the mapping templates defined in the integration request or no mapping template
          is defined in the integration request. </li> </ul> </div>'
      cacheNamespace?:
        type: String
        description: <p>Specifies the integration's cache namespace.</p>
      cacheKeyParameters?:
        type: ListOfString
        description: <p>Specifies the integration's cache key parameters.</p>
      integrationResponses?:
        type: MapOfIntegrationResponse
        description: '<p>Specifies the integration''s responses.</p> <div class="remarks">
          <p/> <h4>Example: Get integration responses of a method</h4> <h5>Request</h5>
          <p/> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200
          HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com
          X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request,
          SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash} </code></pre>
          <h5>Response</h5> <p>The successful response returns <code>200 OK</code>
          status and a payload as follows:</p> <pre><code>{ "_links": { "curies":
          { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html",
          "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200",
          "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
          }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
          } }, "responseParameters": { "method.response.header.Content-Type": "''application/xml''"
          }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream
          in $input.path(''$.StreamNames''))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n"
          }, "statusCode": "200" }</code></pre> <p/> </div> <div class="seeAlso">
          <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating
          an API</a> </div>'
    description: <p>Represents an HTTP, AWS, or Mock integration.</p> <div class="remarks">In the API Gateway console, the built-in Lambda integration is an AWS integration.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>
  IntegrationResponse:
    type: object
    properties:
      statusCode?:
        type: StatusCode
        description: <p>Specifies the status code that is used to map the integration response to an existing <a>MethodResponse</a>.</p>
      selectionPattern?:
        type: String
        description: <p>Specifies the regular expression (regex) pattern used to choose an integration response based on the response from the back end. For example, if the success response returns nothing and the error response returns some string, you could use the <code>.+</code> regex to match error response. However, make sure that the error response does not contain any newline (<code>\n</code>) character in such cases. If the back end is an AWS Lambda function, the AWS Lambda function error header is matched. For all other HTTP and AWS back ends, the HTTP status code is matched.</p>
      responseParameters?:
        type: MapOfStringToString
        description: <p>A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> is a valid and unique response header name and <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.</p>
      responseTemplates?:
        type: MapOfStringToString
        description: <p>Specifies the templates used to transform the integration response body. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>
    description: <p>Represents an integration response. The status code must map to an existing <a>MethodResponse</a>, and parameters and templates can be used to transform the back-end response.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>
  MapOfHeaderValues:
    type: object
    properties:
      //:
        type: String
  MapOfIntegrationResponse:
    type: object
    properties:
      //:
        type: IntegrationResponse
  MapOfKeyUsages:
    type: object
    properties:
      //:
        type: ListOfUsage
  MapOfMethod:
    type: object
    properties:
      //:
        type: Method
  MapOfMethodResponse:
    type: object
    properties:
      //:
        type: MethodResponse
  MapOfMethodSettings:
    type: object
    properties:
      //:
        type: MethodSetting
  MapOfMethodSnapshot:
    type: object
    properties:
      //:
        type: MethodSnapshot
  MapOfStringToBoolean:
    type: object
    properties:
      //:
        type: NullableBoolean
  MapOfStringToList:
    type: object
    properties:
      //:
        type: ListOfString
  MapOfStringToString:
    type: object
    properties:
      //:
        type: String
  Method:
    type: object
    properties:
      httpMethod?:
        type: String
        description: <p>The method's HTTP verb.</p>
      authorizationType?:
        type: String
        description: <p>The method's authorization type.</p>
      authorizerId?:
        type: String
        description: <p>The identifier of an <a>Authorizer</a> to use on this method. The <code>authorizationType</code> must be <code>CUSTOM</code>.</p>
      apiKeyRequired?:
        type: NullableBoolean
        description: <p>A boolean flag specifying whether a valid <a>ApiKey</a> is required to invoke this method.</p>
      requestParameters?:
        type: MapOfStringToBoolean
        description: <p>A key-value map defining required or optional method request parameters that can be accepted by Amazon API Gateway. A key is a method request parameter name matching the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>). The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or templates.</p>
      requestModels?:
        type: MapOfStringToString
        description: <p>A key-value map specifying data schemas, represented by <a>Model</a> resources, (as the mapped value) of the request payloads of given content types (as the mapping key).</p>
      methodResponses?:
        type: MapOfMethodResponse
        description: '<p>Gets a method response associated with a given HTTP status
          code. </p> <div class="remarks"> <p>The collection of method responses are
          encapsulated in a key-value map, where the key is a response''s HTTP status
          code and the value is a <a>MethodResponse</a> resource that specifies the
          response returned to the caller from the back end through the integration
          response.</p> <h4>Example: Get a 200 OK response of a GET method</h4> <h5>Request</h5>
          <p/> <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200
          HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com
          Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256
          Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date,
          Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response
          returns a <code>200 OK</code> status code and a payload similar to the following:</p>
          <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html",
          "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200",
          "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200"
          }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200"
          } }, "responseModels": { "application/json": "Empty" }, "responseParameters":
          { "method.response.header.operator": false, "method.response.header.operand_2":
          false, "method.response.header.operand_1": false }, "statusCode": "200"
          }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-method-response.html">AWS
          CLI</a> </div>'
      methodIntegration?:
        type: Integration
        description: '<p>Gets the method''s integration responsible for passing the
          client-submitted request to the back end and performing necessary transformations
          to make the request compliant with the back end.</p> <div class="remarks">
          <p/> <h4>Example: </h4> <h5>Request</h5> <p/> <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration
          HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com
          Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256
          Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date,
          Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response
          returns a <code>200 OK</code> status code and a payload similar to the following:</p>
          <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html",
          "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html",
          "name": "integrationresponse", "templated": true } ], "self": { "href":
          "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete":
          { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration"
          }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200",
          "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration"
          }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}",
          "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch",
          "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod":
          "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json":
          "{\n \"a\": \"$input.params(''operand1'')\",\n \"b\": \"$input.params(''operand2'')\",
          \n \"op\": \"$input.params(''operator'')\" \n}" }, "type": "AWS", "uri":
          "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations",
          "_embedded": { "integration:responses": { "_links": { "self": { "href":
          "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200",
          "name": "200", "title": "200" }, "integrationresponse:delete": { "href":
          "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200"
          }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200"
          } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op",
          "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1":
          "integration.response.body.a" }, "responseTemplates": { "application/json":
          "#set($res = $input.path(''$''))\n{\n \"result\": \"$res.a, $res.b, $res.op
          => $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n
          \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" }
          } }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-integration.html">AWS
          CLI</a> </div>'
    description: '<p> Represents a client-facing interface by which the client calls
      the API to access back-end resources. A <b>Method</b> resource is integrated
      with an <a>Integration</a> resource. Both consist of a request and one or more
      responses. The method request takes the client input that is passed to the back
      end through the integration request. A method response returns the output from
      the back end to the client through an integration response. A method request
      is embodied in a <b>Method</b> resource, whereas an integration request is embodied
      in an <a>Integration</a> resource. On the other hand, a method response is represented
      by a <a>MethodResponse</a> resource, whereas an integration response is represented
      by an <a>IntegrationResponse</a> resource. </p> <div class="remarks"> <p/> <h4>Example:
      Retrive the GET method on a specified resource</h4> <h5>Request</h5> <p>The
      following example request retrieves the information about the GET method on
      an API resource (<code>3kzxbg5sa2</code>) of an API (<code>fugvjdxtri</code>).
      </p> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1
      Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date:
      20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request,
      SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>
      <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status
      code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies":
      [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html",
      "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html",
      "name": "integrationresponse", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html",
      "name": "method", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html",
      "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET",
      "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
      }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET"
      }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
      }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200",
      "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET"
      }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}",
      "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE",
      "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self":
      { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
      }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
      }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200",
      "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
      }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}",
      "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2",
      "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod":
      "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type":
      "''application/x-amz-json-1.1''" }, "requestTemplates": { "application/json":
      "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams",
      "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200",
      "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
      }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
      } }, "responseParameters": { "method.response.header.Content-Type": "''application/xml''"
      }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")"
      }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href":
      "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name":
      "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
      }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
      } }, "responseModels": { "application/json": "Empty" }, "responseParameters":
      { "method.response.header.Content-Type": false }, "statusCode": "200" } } }</code></pre>
      <p>In the example above, the response template for the <code>200 OK</code> response
      maps the JSON output from the <code>ListStreams</code> action in the back end
      to an XML output. The mapping template is URL-encoded as <code>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</code>
      and the output is decoded using the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#util-templat-reference">$util.urlDecode()</a>
      helper function.</p> </div> <div class="seeAlso"> <a>MethodResponse</a>, <a>Integration</a>,
      <a>IntegrationResponse</a>, <a>Resource</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings.html">Set
      up an API''s method</a> </div>'
  MethodResponse:
    type: object
    properties:
      statusCode?:
        type: StatusCode
        description: <p>The method response's status code.</p>
      responseParameters?:
        type: MapOfStringToBoolean
        description: <p>A key-value map specifying required or optional response parameters that Amazon API Gateway can send back to the caller. A key defines a method response header and the value specifies whether the associated method response header is required or not. The expression of the key must match the pattern <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. Amazon API Gateway passes certain integration response data to the method response headers specified here according to the mapping you prescribe in the API's <a>IntegrationResponse</a>. The integration response data that can be mapped include an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>'application/json'</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)</p>
      responseModels?:
        type: MapOfStringToString
        description: <p>Specifies the <a>Model</a> resources used for the response's content-type. Response models are represented as a key/value map, with a content-type as the key and a <a>Model</a> name as the value.</p>
    description: '<p>Represents a method response of a given HTTP status code returned
      to the client. The method response is passed from the back end through the associated
      integration response that can be transformed using a mapping template. </p>
      <div class="remarks"> <p/> <h4>Example: A <b>MethodResponse</b> instance of
      an API</h4> <h5>Request</h5> <p>The example request retrieves a <b>MethodResponse</b>
      of the 200 status code.</p> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200
      HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com
      X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request,
      SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>
      <h5>Response</h5> <p>The successful response returns <code>200 OK</code> status
      and a payload as follows:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html",
      "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200",
      "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
      }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
      } }, "responseModels": { "application/json": "Empty" }, "responseParameters":
      { "method.response.header.Content-Type": false }, "statusCode": "200" }</code></pre>
      <p/> </div> <div class="seeAlso"> <a>Method</a>, <a>IntegrationResponse</a>,
      <a>Integration</a> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating
      an API</a> </div>'
  MethodSetting:
    type: object
    properties:
      metricsEnabled?:
        type: Boolean
        description: <p>Specifies whether Amazon CloudWatch metrics are enabled for this method. The PATCH path for this setting is <code>/{method_setting_key}/metrics/enabled</code>, and the value is a Boolean.</p>
      loggingLevel?:
        type: String
        description: <p>Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/loglevel</code>, and the available levels are <code>OFF</code>, <code>ERROR</code>, and <code>INFO</code>.</p>
      dataTraceEnabled?:
        type: Boolean
        description: <p>Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/dataTrace</code>, and the value is a Boolean.</p>
      throttlingBurstLimit?:
        type: Integer
        description: <p>Specifies the throttling burst limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/burstLimit</code>, and the value is an integer.</p>
      throttlingRateLimit?:
        type: Double
        description: <p>Specifies the throttling rate limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/rateLimit</code>, and the value is a double.</p>
      cachingEnabled?:
        type: Boolean
        description: <p>Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/enabled</code>, and the value is a Boolean.</p>
      cacheTtlInSeconds?:
        type: Integer
        description: <p>Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/ttlInSeconds</code>, and the value is an integer.</p>
      cacheDataEncrypted?:
        type: Boolean
        description: <p>Specifies whether the cached responses are encrypted. The PATCH path for this setting is <code>/{method_setting_key}/caching/dataEncrypted</code>, and the value is a Boolean.</p>
      requireAuthorizationForCacheControl?:
        type: Boolean
        description: <p>Specifies whether authorization is required for a cache invalidation request. The PATCH path for this setting is <code>/{method_setting_key}/caching/requireAuthorizationForCacheControl</code>, and the value is a Boolean.</p>
      unauthorizedCacheControlHeaderStrategy?:
        type: UnauthorizedCacheControlHeaderStrategy
        description: <p>Specifies how to handle unauthorized requests for cache invalidation. The PATCH path for this setting is <code>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</code>, and the available values are <code>FAIL_WITH_403</code>, <code>SUCCEED_WITH_RESPONSE_HEADER</code>, <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code>.</p>
    description: <p>Specifies the method setting properties.</p>
  MethodSnapshot:
    type: object
    properties:
      authorizationType?:
        type: String
        description: <p>Specifies the type of authorization used for the method.</p>
      apiKeyRequired?:
        type: Boolean
        description: <p>Specifies whether the method requires a valid <a>ApiKey</a>.</p>
    description: <p>Represents a summary of a <a>Method</a> resource, given a particular date and time.</p>
  Model:
    type: object
    properties:
      id?:
        type: String
        description: <p>The identifier for the model resource.</p>
      name?:
        type: String
        description: <p>The name of the model.</p>
      description?:
        type: String
        description: <p>The description of the model.</p>
      schema?:
        type: String
        description: <p>The schema for the model. For <code>application/json</code> models, this should be <a href="http://json-schema.org/documentation.html" target="_blank">JSON-schema draft v4</a> model. Do not include "\*/" characters in the description of any properties because such "\*/" characters may be interpreted as the closing marker for comments in some languages, such as Java or JavaScript, causing the installation of your API's SDK generated by API Gateway to fail.</p>
      contentType?:
        type: String
        description: <p>The content-type for the model.</p>
    description: <p>Represents the data structure of a method's request or response payload.</p> <div class="remarks"> <p>A request model defines the data structure of the client-supplied request payload. A response model defines the data structure of the response payload returned by the back end. Although not required, models are useful for mapping payloads between the front end and back end.</p> <p>A model is used for generating an API's SDK, validating the input request body, and creating a skeletal mapping template.</p> </div> <div class="seeAlso"> <a>Method</a>, <a>MethodResponse</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html">Models and Mappings</a> </div>
  Models:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfModel
        description: <p>Gets the current <a>Model</a> resource in the collection.</p>
    description: <p>Represents a collection of <a>Model</a> resources.</p> <div class="seeAlso"> <a>Method</a>, <a>MethodResponse</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html">Models and Mappings</a> </div>
  PatchOperation:
    type: object
    properties:
      op?:
        type: Op
        description: <p>An update operation to be performed with this PATCH request. The valid value can be "add", "remove", or "replace". Not all valid operations are supported for a given resource. Support of the operations depends on specific operational contexts. Attempts to apply an unsupported operation on a resource will return an error message.</p>
      path?:
        type: String
        description: '<p>The <code>op</code> operation''s target, as identified by
          a <a href="https://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-08">JSON
          Pointer</a> value that references a location within the targeted resource.
          For example, if the target resource has an updateable property of <code>{"name":"value"}</code>,
          the path for this property is <code>/name</code>. If the <code>name</code>
          property value is a JSON object (e.g., <code>{"name": {"child/name": "child-value"}}</code>),
          the path for the <code>child/name</code> property will be <code>/name/child~1name</code>.
          Any slash ("/") character appearing in path names must be escaped with "~1",
          as shown in the example above. Each <code>op</code> operation can have only
          one <code>path</code> associated with it.</p>'
      value?:
        type: String
        description: <p>The new target value of the update operation. </p>
      from?:
        type: String
        description: <p> Not supported.</p>
    description: A single patch operation to apply to the specified resource. Please refer to http://tools.ietf.org/html/rfc6902#section-4 for an explanation of how each operation is used.
  PathToMapOfMethodSnapshot:
    type: object
    properties:
      //:
        type: MapOfMethodSnapshot
  QuotaSettings:
    type: object
    properties:
      limit?:
        type: Integer
        description: <p>The maximum number of requests that can be made in a given time period.</p>
      offset?:
        type: Integer
        description: <p>The number of requests subtracted from the given limit in the initial time period.</p>
      period?:
        type: QuotaPeriodType
        description: <p>The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".</p>
    description: <p>Quotas configured for a usage plan.</p>
  Resource:
    type: object
    properties:
      id?:
        type: String
        description: <p>The resource's identifier.</p>
      parentId?:
        type: String
        description: <p>The parent resource's identifier.</p>
      pathPart?:
        type: String
        description: <p>The last path segment for this resource.</p>
      path?:
        type: String
        description: <p>The full path for this resource.</p>
      resourceMethods?:
        type: MapOfMethod
        description: '<p>Gets an API resource''s method of a given HTTP verb.</p>
          <div class="remarks"> <p>The resource methods are a map of methods indexed
          by methods'' HTTP verbs enabled on the resource. This method map is included
          in the <code>200 OK</code> response of the <code>GET /restapis/{restapi_id}/resources/{resource_id}</code>
          or <code>GET /restapis/{restapi_id}/resources/{resource_id}?embed=methods</code>
          request.</p> <h4>Example: Get the GET method of an API resource</h4> <h5>Request</h5>
          <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1
          Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com
          X-Amz-Date: 20160608T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160608/us-east-1/apigateway/aws4_request,
          SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>
          <h5>Response</h5> <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html",
          "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html",
          "name": "integrationresponse", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html",
          "name": "method", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html",
          "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET",
          "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
          }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET"
          }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
          }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200",
          "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET"
          }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}",
          "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE",
          "httpMethod": "GET", "_embedded": { "method:integration": { "_links": {
          "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
          }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
          }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200",
          "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration"
          }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}",
          "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2",
          "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod":
          "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type":
          "''application/x-amz-json-1.1''" }, "requestTemplates": { "application/json":
          "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams",
          "_embedded": { "integration:responses": { "_links": { "self": { "href":
          "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200",
          "name": "200", "title": "200" }, "integrationresponse:delete": { "href":
          "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
          }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
          } }, "responseParameters": { "method.response.header.Content-Type": "''application/xml''"
          }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream
          in $input.path(''$.StreamNames''))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n"
          }, "statusCode": "200" } } }, "method:responses": { "_links": { "self":
          { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200",
          "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
          }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
          } }, "responseModels": { "application/json": "Empty" }, "responseParameters":
          { "method.response.header.Content-Type": false }, "statusCode": "200" }
          } }</code></pre> <p>If the <code>OPTIONS</code> is enabled on the resource,
          you can follow the example here to get that method. Just replace the <code>GET</code>
          of the last path segment in the request URL with <code>OPTIONS</code>.</p>
          </div> <div class="seeAlso"> </div>'
    description: <p>Represents an API resource.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>
  Resources:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfResource
        description: <p>Gets the current <a>Resource</a> resource in the collection.</p>
    description: <p>Represents a collection of <a>Resource</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>
  RestApi:
    type: object
    properties:
      id?:
        type: String
        description: <p>The API's identifier. This identifier is unique across all of your APIs in Amazon API Gateway.</p>
      name?:
        type: String
        description: <p>The API's name.</p>
      description?:
        type: String
        description: <p>The API's description.</p>
      createdDate?:
        type: Timestamp
        description: <p>The date when the API was created, in <a href="http://www.iso.org/iso/home/standards/iso8601.htm" target="_blank">ISO 8601 format</a>.</p>
      warnings?:
        type: ListOfString
        description: <p>The warning messages reported when <code>failonwarnings</code> is turned on during API import.</p>
    description: <p>Represents a REST API.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>
  RestApis:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfRestApi
        description: <p>An array of links to the current page of <a>RestApi</a> resources.</p>
    description: <p>Contains references to your APIs and links that guide you in how to interact with your collection. A collection offers a paginated view of your APIs.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>
  Stage:
    type: object
    properties:
      deploymentId?:
        type: String
        description: <p>The identifier of the <a>Deployment</a> that the stage points to.</p>
      clientCertificateId?:
        type: String
        description: <p>The identifier of a client certificate for an API stage.</p>
      stageName?:
        type: String
        description: <p>The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to Amazon API Gateway.</p>
      description?:
        type: String
        description: <p>The stage's description.</p>
      cacheClusterEnabled?:
        type: Boolean
        description: <p>Specifies whether a cache cluster is enabled for the stage.</p>
      cacheClusterSize?:
        type: CacheClusterSize
        description: <p>The size of the cache cluster for the stage, if enabled.</p>
      cacheClusterStatus?:
        type: CacheClusterStatus
        description: <p>The status of the cache cluster for the stage, if enabled.</p>
      methodSettings?:
        type: MapOfMethodSettings
        description: <p>A map that defines the method settings for a <a>Stage</a> resource. Keys (designated as <code>/{method_setting_key</code> below) are method paths defined as <code>{resource_path}/{http_method}</code> for an individual method override, or <code>/\*/\*</code> for overriding all methods in the stage. </p>
      variables?:
        type: MapOfStringToString
        description: <p>A map that defines the stage variables for a <a>Stage</a> resource. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.</p>
      createdDate?:
        type: Timestamp
        description: <p>The date and time that the stage was created, in <a href="http://www.iso.org/iso/home/standards/iso8601.htm" target="_blank">ISO 8601 format</a>.</p>
      lastUpdatedDate?:
        type: Timestamp
        description: <p>The date and time that information about the stage was last updated, in <a href="http://www.iso.org/iso/home/standards/iso8601.htm" target="_blank">ISO 8601 format</a>.</p>
    description: <p>Represents a unique identifier for a version of a deployed <a>RestApi</a> that is callable by users.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html">Deploy an API</a> </div>
  StageKey:
    type: object
    properties:
      restApiId?:
        type: String
        description: <p>A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.</p>
      stageName?:
        type: String
        description: <p>The stage name in the <a>RestApi</a> that the stage key references.</p>
    description: <p>A reference to a unique stage identified in the format <code>{restApiId}/{stage}</code>.</p>
  Stages:
    type: object
    properties:
      item?:
        type: ListOfStage
        description: <p>An individual <a>Stage</a> resource.</p>
    description: <p>A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/stages.html">Deploying API in Stages</a></div>
  Template:
    type: object
    properties:
      value?:
        type: String
        description: <p>The Apache <a href="http://velocity.apache.org/engine/devel/vtl-reference-guide.html" target="_blank">Velocity Template Language (VTL)</a> template content used for the template resource.</p>
    description: <p>Represents a mapping template used to transform a payload.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-mappings">Mapping Templates</a> </div>
  TestInvokeAuthorizerResponse:
    type: object
    properties:
      clientStatus?:
        type: Integer
        description: <p>The HTTP status code that the client would have received. Value is 0 if the authorizer succeeded.</p>
      log?:
        type: String
        description: <p>The Amazon API Gateway execution log for the test authorizer request.</p>
      latency?:
        type: Long
        description: <p>The execution latency of the test authorizer request.</p>
      principalId?:
        type: String
        description: <p>The principal identity returned by the <a>Authorizer</a></p>
      policy?:
        type: String
        description: <p>The JSON policy document returned by the <a>Authorizer</a></p>
      authorization?:
        type: MapOfStringToList
      claims?:
        type: MapOfStringToString
        description: <p>The <a href="http://openid.net/specs/openid-connect-core-1_0.html#StandardClaims">open identity claims</a>, with any supported custom attributes, returned from the Cognito Your User Pool configured for the API.</p>
    description: <p>Represents the response of the test invoke request for a custom <a>Authorizer</a></p>
  TestInvokeMethodResponse:
    type: object
    properties:
      status?:
        type: Integer
        description: <p>The HTTP status code.</p>
      body?:
        type: String
        description: <p>The body of the HTTP response.</p>
      headers?:
        type: MapOfHeaderValues
        description: <p>The headers of the HTTP response.</p>
      log?:
        type: String
        description: <p>The Amazon API Gateway execution log for the test invoke request.</p>
      latency?:
        type: Long
        description: <p>The execution latency of the test invoke request.</p>
    description: <p>Represents the response of the test invoke request in the HTTP method.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-test-method.html#how-to-test-method-console">Test API using the API Gateway console</a> </div>
  ThrottleSettings:
    type: object
    properties:
      burstLimit?:
        type: Integer
        description: <p>The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.</p>
      rateLimit?:
        type: Double
        description: <p>The API request steady-state rate limit.</p>
    description: <p> The API request rate limits.</p>
  UpdateAccountRequest:
    type: object
    properties:
      patchOperations?:
        type: ListOfPatchOperation
        description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
    description: <p>Requests Amazon API Gateway to change information about the current <a>Account</a> resource.</p>
  Usage:
    type: object
    properties:
      usagePlanId?:
        type: String
        description: <p>The plan Id associated with this usage data.</p>
      startDate?:
        type: String
        description: <p>The starting date of the usage data.</p>
      endDate?:
        type: String
        description: <p>The ending date of the usage data.</p>
      position?:
        type: String
      values?:
        type: MapOfKeyUsages
        description: '<p>The usage data, as daily logs of used and remaining quotas,
          over the specified time interval indexed over the API keys in a usage plan.
          For example, <code>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
          [100, 10]]}</code>, where <code>{api_key}</code> stands for an API key value
          and the daily log entry is of the format <code>[used quota, remaining quota]</code>.</p>'
    description: <p>Represents the usage data of a usage plan.</p> <div class="remarks"/> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-usage-plans-with-console.html#api-gateway-usage-plan-manage-usage">Manage Usage in a Usage Plan</a> </div>
  UsagePlan:
    type: object
    properties:
      id?:
        type: String
        description: <p>The identifier of a <a>UsagePlan</a> resource.</p>
      name?:
        type: String
        description: <p>The name of a usage plan.</p>
      description?:
        type: String
        description: <p>The description of a usage plan.</p>
      apiStages?:
        type: ListOfApiStage
        description: <p>The associated API stages of a usage plan.</p>
      throttle?:
        type: ThrottleSettings
        description: <p>The request throttle limits of a usage plan.</p>
      quota?:
        type: QuotaSettings
        description: <p>The maximum number of permitted requests per a given unit time interval.</p>
    description: <p>Represents a usage plan than can specify who can assess associated API stages with specified request limits and quotas.</p> <div class="remarks"> <p>In a usage plan, you associate an API by specifying the API's Id and a stage name of the specified API. You add plan customers by adding API keys to the plan. </p> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>
  UsagePlanKey:
    type: object
    properties:
      id?:
        type: String
        description: <p>The Id of a usage plan key.</p>
      type?:
        type: String
        description: <p>The type of a usage plan key. Currently, the valid key type is <code>API_KEY</code>.</p>
      value?:
        type: String
        description: <p>The value of a usage plan key.</p>
      name?:
        type: String
        description: <p>The name of a usage plan key.</p>
    description: <p>Represents a usage plan key to identify a plan customer.</p> <div class="remarks"> <p>To associate an API stage with a selected API key in a usage plan, you must create a UsagePlanKey resource to represent the selected <a>ApiKey</a>.</p> </div>" <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>
  UsagePlanKeys:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfUsagePlanKey
        description: <p>Gets the current item of the usage plan keys collection.</p>
    description: <p>Represents the collection of usage plan keys added to usage plans for the associated API keys and, possibly, other types of keys.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>
  UsagePlans:
    type: object
    properties:
      position?:
        type: String
      item?:
        type: ListOfUsagePlan
        description: <p>Gets the current item when enumerating the collection of <a>UsagePlan</a>.</p>
    description: <p>Represents a collection of usage plans for an AWS account.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>
/clientcertificates:
  /{clientcertificate_id}:
    uriParameters:
      clientcertificate_id?:
        type: String
        description: <p>The identifier of the <a>ClientCertificate</a> resource to be described.</p>
    get:
      description: Gets information about the current <a>ClientCertificate</a> resource.
      headers:
        clientcertificate_id?:
          type: String
          description: <p>The identifier of the <a>ClientCertificate</a> resource to be described.</p>
      responses:
        200:
          body:
            application/json: ClientCertificate
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        429:
          description: TooManyRequestsException
    delete:
      description: Deletes the <a>ClientCertificate</a> resource.
      headers:
        clientcertificate_id?:
          type: String
          description: <p>The identifier of the <a>ClientCertificate</a> resource to be deleted.</p>
      responses:
        202:
          body:
            application/json: null
        401:
          description: UnauthorizedException
        429:
          description: TooManyRequestsException
        400:
          description: BadRequestException
        404:
          description: NotFoundException
    patch:
      description: Changes information about an <a>ClientCertificate</a> resource.
      headers:
        clientcertificate_id?:
          type: String
          description: <p>The identifier of the <a>ClientCertificate</a> resource to be updated.</p>
      body:
        application/json:
          type: object
          properties:
            patchOperations?:
              type: ListOfPatchOperation
              description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
      responses:
        200:
          body:
            application/json: ClientCertificate
        401:
          description: UnauthorizedException
        429:
          description: TooManyRequestsException
        400:
          description: BadRequestException
        404:
          description: NotFoundException
  post:
    description: Generates a <a>ClientCertificate</a> resource.
    body:
      application/json: GenerateClientCertificateRequest
    responses:
      201:
        body:
          application/json: ClientCertificate
      401:
        description: UnauthorizedException
      429:
        description: TooManyRequestsException | LimitExceededException
  get:
    description: Gets a collection of <a>ClientCertificate</a> resources.
    queryParameters:
      position:
        type: String
        description: <p>The position of the current <a>ClientCertificate</a> resource in the collection to get information about.</p>
      limit:
        type: NullableInteger
        description: <p>The maximum number of <a>ClientCertificate</a> resources in the collection to get information about. The default limit is 25. It should be an integer between 1 - 500.</p>
    responses:
      200:
        body:
          application/json: ClientCertificates
      400:
        description: BadRequestException
      401:
        description: UnauthorizedException
      429:
        description: TooManyRequestsException
/domainnames:
  /{domain_name}:
    uriParameters:
      domain_name?:
        type: String
        description: <p>The name of the <a>DomainName</a> resource to be deleted.</p>
    /basepathmappings:
      /{base_path}:
        uriParameters:
          base_path?:
            type: String
            description: <p>The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Leave this blank if you do not want callers to specify any base path name after the domain name.</p>
        get:
          description: Describe a <a>BasePathMapping</a> resource.
          headers:
            domain_name?:
              type: String
              description: <p>The domain name of the <a>BasePathMapping</a> resource to be described.</p>
            base_path?:
              type: String
              description: <p>The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Leave this blank if you do not want callers to specify any base path name after the domain name.</p>
          responses:
            200:
              body:
                application/json: BasePathMapping
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
        patch:
          description: Changes information about the <a>BasePathMapping</a> resource.
          headers:
            domain_name?:
              type: String
              description: <p>The domain name of the <a>BasePathMapping</a> resource to change.</p>
            base_path?:
              type: String
              description: <p>The base path of the <a>BasePathMapping</a> resource to change.</p>
          body:
            application/json:
              type: object
              properties:
                patchOperations?:
                  type: ListOfPatchOperation
                  description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
          responses:
            200:
              body:
                application/json: BasePathMapping
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            409:
              description: ConflictException
            400:
              description: BadRequestException
            429:
              description: TooManyRequestsException
        delete:
          description: Deletes the <a>BasePathMapping</a> resource.
          headers:
            domain_name?:
              type: String
              description: <p>The domain name of the <a>BasePathMapping</a> resource to delete.</p>
            base_path?:
              type: String
              description: <p>The base path name of the <a>BasePathMapping</a> resource to delete.</p>
          responses:
            202:
              body:
                application/json: null
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
      get:
        description: Represents a collection of <a>BasePathMapping</a> resources.
        queryParameters:
          position:
            type: String
            description: <p>The position of the current <a>BasePathMapping</a> resource in the collection to get information about.</p>
          limit:
            type: NullableInteger
            description: <p>The maximum number of <a>BasePathMapping</a> resources in the collection to get information about. The default limit is 25. It should be an integer between 1 - 500.</p>
        headers:
          domain_name?:
            type: String
            description: <p>The domain name of a <a>BasePathMapping</a> resource.</p>
        responses:
          200:
            body:
              application/json: BasePathMappings
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
      post:
        description: Creates a new <a>BasePathMapping</a> resource.
        headers:
          domain_name?:
            type: String
            description: <p>The domain name of the <a>BasePathMapping</a> resource to create.</p>
        body:
          application/json:
            type: object
            properties:
              basePath?:
                type: String
                description: <p>The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Leave this blank if you do not want callers to specify a base path name after the domain name.</p>
              restApiId:
                type: String
                description: <p>The name of the API that you want to apply this mapping to.</p>
              stage?:
                type: String
                description: <p>The name of the API's stage that you want to use for this mapping. Leave this blank if you do not want callers to explicitly specify the stage name after any base path name.</p>
        responses:
          201:
            body:
              application/json: BasePathMapping
          401:
            description: UnauthorizedException
          409:
            description: ConflictException
          400:
            description: BadRequestException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
    delete:
      description: Deletes the <a>DomainName</a> resource.
      headers:
        domain_name?:
          type: String
          description: <p>The name of the <a>DomainName</a> resource to be deleted.</p>
      responses:
        202:
          body:
            application/json: null
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        429:
          description: TooManyRequestsException
    patch:
      description: Changes information about the <a>DomainName</a> resource.
      headers:
        domain_name?:
          type: String
          description: <p>The name of the <a>DomainName</a> resource to be changed.</p>
      body:
        application/json:
          type: object
          properties:
            patchOperations?:
              type: ListOfPatchOperation
              description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
      responses:
        200:
          body:
            application/json: DomainName
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        400:
          description: BadRequestException
        409:
          description: ConflictException
        429:
          description: TooManyRequestsException
    get:
      description: Represents a domain name that is contained in a simpler, more intuitive URL that can be called.
      headers:
        domain_name?:
          type: String
          description: <p>The name of the <a>DomainName</a> resource.</p>
      responses:
        200:
          body:
            application/json: DomainName
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        503:
          description: ServiceUnavailableException
        429:
          description: TooManyRequestsException
  get:
    description: Represents a collection of <a>DomainName</a> resources.
    queryParameters:
      position:
        type: String
        description: <p>The position of the current domain names to get information about.</p>
      limit:
        type: NullableInteger
        description: <p>The maximum number of <a>DomainName</a> resources in the collection to get information about. The default limit is 25. It should be an integer between 1 - 500.</p>
    responses:
      200:
        body:
          application/json: DomainNames
      400:
        description: BadRequestException
      401:
        description: UnauthorizedException
      429:
        description: TooManyRequestsException
  post:
    description: Creates a new domain name.
    body:
      application/json: CreateDomainNameRequest
    responses:
      201:
        body:
          application/json: DomainName
      401:
        description: UnauthorizedException
      400:
        description: BadRequestException
      409:
        description: ConflictException
      429:
        description: TooManyRequestsException
/restapis:
  /{restapi_id}:
    uriParameters:
      restapi_id?:
        type: String
        description: <p>The identifier of the <a>RestApi</a> to be exported.</p>
    /stages:
      /{stage_name}:
        uriParameters:
          stage_name?:
            type: String
            description: <p>The name of the <a>Stage</a> that will be exported.</p>
        /exports:
          /{export_type}:
            uriParameters:
              export_type?:
                type: String
                description: <p>The type of export. Currently only 'swagger' is supported.</p>
            get:
              description: Exports a deployed version of a <a>RestApi</a> in a specified format.
              queryParameters:
                parameters:
                  type: MapOfStringToString
                  description: '<p>A key-value map of query string parameters that
                    specify properties of the export, depending on the requested <code>exportType</code>.
                    For <code>exportType</code> <code>swagger</code>, any combination
                    of the following parameters are supported: <code>integrations</code>
                    will export the API with x-amazon-apigateway-integration extensions.
                    <code>authorizers</code> will export the API with x-amazon-apigateway-authorizer
                    extensions. <code>postman</code> will export the API with Postman
                    extensions, allowing for import to the Postman tool</p>'
              headers:
                restapi_id?:
                  type: String
                  description: <p>The identifier of the <a>RestApi</a> to be exported.</p>
                stage_name?:
                  type: String
                  description: <p>The name of the <a>Stage</a> that will be exported.</p>
                export_type?:
                  type: String
                  description: <p>The type of export. Currently only 'swagger' is supported.</p>
                Accept:
                  type: String
                  description: <p>The content-type of the export, for example <code>application/json</code>. Currently <code>application/json</code> and <code>application/yaml</code> are supported for <code>exportType</code> of <code>swagger</code>. This should be specified in the <code>Accept</code> header for direct API requests.</p>
              responses:
                200:
                  headers:
                    Content-Type:
                      type: String
                      description: <p>The content-type header value in the HTTP response. This will correspond to a valid 'accept' type in the request.</p>
                    Content-Disposition:
                      type: String
                      description: <p>The content-disposition header value in the HTTP response.</p>
                  body:
                    application/json:
                      type: Blob
                      description: <p>The binary blob response to <a>GetExport</a>, which contains the export.</p>
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                400:
                  description: BadRequestException
                429:
                  description: TooManyRequestsException
        /sdks:
          /{sdk_type}:
            uriParameters:
              sdk_type?:
                type: String
                description: <p>The language for the generated SDK. Currently <code>javascript</code>, <code>android</code>, and <code>objectivec</code> (for iOS) are supported.</p>
            get:
              description: Generates a client SDK for a <a>RestApi</a> and <a>Stage</a>.
              queryParameters:
                parameters:
                  type: MapOfStringToString
                  description: <p>A key-value map of query string parameters that specify properties of the SDK, depending on the requested <code>sdkType</code>. For <code>sdkType</code> of <code>objectivec</code>, a parameter named <code>classPrefix</code> is required. For <code>sdkType</code> of <code>android</code>, parameters named <code>groupId</code>, <code>artifactId</code>, <code>artifactVersion</code>, and <code>invokerPackage</code> are required.</p>
              headers:
                restapi_id?:
                  type: String
                  description: <p>The identifier of the <a>RestApi</a> that the SDK will use.</p>
                stage_name?:
                  type: String
                  description: <p>The name of the <a>Stage</a> that the SDK will use.</p>
                sdk_type?:
                  type: String
                  description: <p>The language for the generated SDK. Currently <code>javascript</code>, <code>android</code>, and <code>objectivec</code> (for iOS) are supported.</p>
              responses:
                200:
                  headers:
                    Content-Type:
                      type: String
                      description: <p>The content-type header value in the HTTP response.</p>
                    Content-Disposition:
                      type: String
                      description: <p>The content-disposition header value in the HTTP response.</p>
                  body:
                    application/json:
                      type: Blob
                      description: <p>The binary blob response to <a>GetSdk</a>, which contains the generated SDK.</p>
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                400:
                  description: BadRequestException
                429:
                  description: TooManyRequestsException
        /cache:
          /data:
            delete:
              description: Flushes a stage's cache.
              headers:
                restapi_id?:
                  type: String
                  description: <p>The API identifier of the stage to flush its cache.</p>
                stage_name?:
                  type: String
                  description: <p>The name of the stage to flush its cache.</p>
              responses:
                202:
                  body:
                    application/json: null
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                400:
                  description: BadRequestException
                429:
                  description: TooManyRequestsException
          /authorizers:
            delete:
              description: Flushes all authorizer cache entries on a stage.
              headers:
                restapi_id?:
                  type: String
                  description: <p>The API identifier of the stage to flush.</p>
                stage_name?:
                  type: String
                  description: <p>The name of the stage to flush.</p>
              responses:
                202:
                  body:
                    application/json: null
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                400:
                  description: BadRequestException
                429:
                  description: TooManyRequestsException
        patch:
          description: Changes information about a <a>Stage</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The identifier of the <a>RestApi</a> resource for the <a>Stage</a> resource to change information about.</p>
            stage_name?:
              type: String
              description: <p>The name of the <a>Stage</a> resource to change information about.</p>
          body:
            application/json:
              type: object
              properties:
                patchOperations?:
                  type: ListOfPatchOperation
                  description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
          responses:
            200:
              body:
                application/json: Stage
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            409:
              description: ConflictException
            400:
              description: BadRequestException
            429:
              description: TooManyRequestsException
        delete:
          description: Deletes a <a>Stage</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The identifier of the <a>RestApi</a> resource for the <a>Stage</a> resource to delete.</p>
            stage_name?:
              type: String
              description: <p>The name of the <a>Stage</a> resource to delete.</p>
          responses:
            202:
              body:
                application/json: null
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
            400:
              description: BadRequestException
        get:
          description: Gets information about a <a>Stage</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The identifier of the <a>RestApi</a> resource for the <a>Stage</a> resource to get information about.</p>
            stage_name?:
              type: String
              description: <p>The name of the <a>Stage</a> resource to get information about.</p>
          responses:
            200:
              body:
                application/json: Stage
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
      get:
        description: Gets information about one or more <a>Stage</a> resources.
        queryParameters:
          deploymentId:
            type: String
            description: <p>The stages' deployment identifiers.</p>
        headers:
          restapi_id?:
            type: String
            description: <p>The stages' API identifiers.</p>
        responses:
          200:
            body:
              application/json: Stages
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
      post:
        description: 'Creates a new <a>Stage</a> resource that references a pre-existing
          <a>Deployment</a> for the API. '
        headers:
          restapi_id?:
            type: String
            description: <p>The identifier of the <a>RestApi</a> resource for the <a>Stage</a> resource to create.</p>
        body:
          application/json:
            type: object
            properties:
              stageName:
                type: String
                description: <p>The name for the <a>Stage</a> resource.</p>
              deploymentId:
                type: String
                description: <p>The identifier of the <a>Deployment</a> resource for the <a>Stage</a> resource.</p>
              description?:
                type: String
                description: <p>The description of the <a>Stage</a> resource.</p>
              cacheClusterEnabled?:
                type: Boolean
                description: <p>Whether cache clustering is enabled for the stage.</p>
              cacheClusterSize?:
                type: CacheClusterSize
                description: <p>The stage's cache cluster size.</p>
              variables?:
                type: MapOfStringToString
                description: <p>A map that defines the stage variables for the new <a>Stage</a> resource. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.</p>
        responses:
          201:
            body:
              application/json: Stage
          401:
            description: UnauthorizedException
          400:
            description: BadRequestException
          404:
            description: NotFoundException
          409:
            description: ConflictException
          429:
            description: LimitExceededException | TooManyRequestsException
    /models:
      /{model_name}:
        uriParameters:
          model_name?:
            type: String
            description: <p>The name of the model as an identifier.</p>
        /default_template:
          get:
            description: Generates a sample mapping template that can be used to transform a payload into the structure of a model.
            headers:
              restapi_id?:
                type: String
                description: <p>The ID of the <a>RestApi</a> under which the model exists.</p>
              model_name?:
                type: String
                description: <p>The name of the model for which to generate a template.</p>
            responses:
              200:
                body:
                  application/json: Template
              401:
                description: UnauthorizedException
              404:
                description: NotFoundException
              400:
                description: BadRequestException
              429:
                description: TooManyRequestsException
        get:
          description: Describes an existing model defined for a <a>RestApi</a> resource.
          queryParameters:
            flatten:
              type: Boolean
              description: <p>A query parameter of a Boolean value to resolve (<code>true</code>) all external model references and returns a flattened model schema or not (<code>false</code>) The default is <code>false</code>.</p>
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier under which the <a>Model</a> exists.</p>
            model_name?:
              type: String
              description: <p>The name of the model as an identifier.</p>
          responses:
            200:
              body:
                application/json: Model
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
        patch:
          description: Changes information about a model.
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier under which the model exists.</p>
            model_name?:
              type: String
              description: <p>The name of the model to update.</p>
          body:
            application/json:
              type: object
              properties:
                patchOperations?:
                  type: ListOfPatchOperation
                  description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
          responses:
            200:
              body:
                application/json: Model
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            400:
              description: BadRequestException
            409:
              description: ConflictException
            429:
              description: TooManyRequestsException
        delete:
          description: Deletes a model.
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> under which the model will be deleted.</p>
            model_name?:
              type: String
              description: <p>The name of the model to delete.</p>
          responses:
            202:
              body:
                application/json: null
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
            400:
              description: BadRequestException
            409:
              description: ConflictException
      post:
        description: Adds a new <a>Model</a> resource to an existing <a>RestApi</a> resource.
        headers:
          restapi_id?:
            type: String
            description: <p>The <a>RestApi</a> identifier under which the <a>Model</a> will be created.</p>
        body:
          application/json:
            type: object
            properties:
              name:
                type: String
                description: <p>The name of the model.</p>
              description?:
                type: String
                description: <p>The description of the model.</p>
              schema?:
                type: String
                description: <p>The schema for the model. For <code>application/json</code> models, this should be <a href="http://json-schema.org/documentation.html" target="_blank">JSON-schema draft v4</a> model.</p>
              contentType:
                type: String
                description: <p>The content-type for the model.</p>
        responses:
          201:
            body:
              application/json: Model
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          409:
            description: ConflictException
          429:
            description: LimitExceededException | TooManyRequestsException
      get:
        description: Describes existing <a>Models</a> defined for a <a>RestApi</a> resource.
        queryParameters:
          position:
            type: String
            description: <p>The position of the next set of results in the <a>Models</a> resource to get information about.</p>
          limit:
            type: NullableInteger
            description: <p>The maximum number of models in the collection to get information about. The default limit is 25. It should be an integer between 1 - 500.</p>
        headers:
          restapi_id?:
            type: String
            description: <p>The <a>RestApi</a> identifier.</p>
        responses:
          200:
            body:
              application/json: Models
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
    /resources:
      /{resource_id}:
        uriParameters:
          resource_id?:
            type: String
            description: <p>The <a>Resource</a> identifier for the new <a>Method</a> resource.</p>
        /methods:
          /{http_method}:
            uriParameters:
              http_method?:
                type: String
                description: <p>Specifies the method request's HTTP method type.</p>
            /integration:
              /responses:
                /{status_code}:
                  uriParameters:
                    status_code?:
                      type: StatusCode
                      description: <p>Specifies a get integration response request's status code.</p>
                  get:
                    description: Represents a get integration response.
                    headers:
                      restapi_id?:
                        type: String
                        description: <p>Specifies a get integration response request's API identifier.</p>
                      resource_id?:
                        type: String
                        description: <p>Specifies a get integration response request's resource identifier.</p>
                      http_method?:
                        type: String
                        description: <p>Specifies a get integration response request's HTTP method.</p>
                      status_code?:
                        type: StatusCode
                        description: <p>Specifies a get integration response request's status code.</p>
                    responses:
                      200:
                        body:
                          application/json: IntegrationResponse
                      401:
                        description: UnauthorizedException
                      404:
                        description: NotFoundException
                      429:
                        description: TooManyRequestsException
                  patch:
                    description: Represents an update integration response.
                    headers:
                      restapi_id?:
                        type: String
                        description: <p>Specifies an update integration response request's API identifier.</p>
                      resource_id?:
                        type: String
                        description: <p>Specifies an update integration response request's resource identifier.</p>
                      http_method?:
                        type: String
                        description: <p>Specifies an update integration response request's HTTP method.</p>
                      status_code?:
                        type: StatusCode
                        description: <p>Specifies an update integration response request's status code.</p>
                    body:
                      application/json:
                        type: object
                        properties:
                          patchOperations?:
                            type: ListOfPatchOperation
                            description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
                    responses:
                      200:
                        body:
                          application/json: IntegrationResponse
                      401:
                        description: UnauthorizedException
                      404:
                        description: NotFoundException
                      409:
                        description: ConflictException
                      400:
                        description: BadRequestException
                      429:
                        description: TooManyRequestsException
                  delete:
                    description: Represents a delete integration response.
                    headers:
                      restapi_id?:
                        type: String
                        description: <p>Specifies a delete integration response request's API identifier.</p>
                      resource_id?:
                        type: String
                        description: <p>Specifies a delete integration response request's resource identifier.</p>
                      http_method?:
                        type: String
                        description: <p>Specifies a delete integration response request's HTTP method.</p>
                      status_code?:
                        type: StatusCode
                        description: <p>Specifies a delete integration response request's status code.</p>
                    responses:
                      204:
                        body:
                          application/json: null
                      401:
                        description: UnauthorizedException
                      404:
                        description: NotFoundException
                      429:
                        description: TooManyRequestsException
                      400:
                        description: BadRequestException
                      409:
                        description: ConflictException
                  put:
                    description: Represents a put integration.
                    headers:
                      restapi_id?:
                        type: String
                        description: <p>Specifies a put integration response request's API identifier.</p>
                      resource_id?:
                        type: String
                        description: <p>Specifies a put integration response request's resource identifier.</p>
                      http_method?:
                        type: String
                        description: <p>Specifies a put integration response request's HTTP method.</p>
                      status_code?:
                        type: StatusCode
                        description: <p>Specifies the status code that is used to map the integration response to an existing <a>MethodResponse</a>.</p>
                    body:
                      application/json:
                        type: object
                        properties:
                          selectionPattern?:
                            type: String
                            description: <p>Specifies the selection pattern of a put integration response.</p>
                          responseParameters?:
                            type: MapOfStringToString
                            description: <p>A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> must be a valid and unique response header name and <code>JSON-expression</code> a valid JSON expression without the <code>$</code> prefix.</p>
                          responseTemplates?:
                            type: MapOfStringToString
                            description: <p>Specifies a put integration response's templates.</p>
                    responses:
                      201:
                        body:
                          application/json: IntegrationResponse
                      401:
                        description: UnauthorizedException
                      404:
                        description: NotFoundException
                      429:
                        description: LimitExceededException | TooManyRequestsException
                      400:
                        description: BadRequestException
                      409:
                        description: ConflictException
              patch:
                description: Represents an update integration.
                headers:
                  restapi_id?:
                    type: String
                    description: <p>Represents an update integration request's API identifier.</p>
                  resource_id?:
                    type: String
                    description: <p>Represents an update integration request's resource identifier.</p>
                  http_method?:
                    type: String
                    description: <p>Represents an update integration request's HTTP method.</p>
                body:
                  application/json:
                    type: object
                    properties:
                      patchOperations?:
                        type: ListOfPatchOperation
                        description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
                responses:
                  200:
                    body:
                      application/json: Integration
                  401:
                    description: UnauthorizedException
                  404:
                    description: NotFoundException
                  400:
                    description: BadRequestException
                  429:
                    description: TooManyRequestsException
                  409:
                    description: ConflictException
              delete:
                description: Represents a delete integration.
                headers:
                  restapi_id?:
                    type: String
                    description: <p>Specifies a delete integration request's API identifier.</p>
                  resource_id?:
                    type: String
                    description: <p>Specifies a delete integration request's resource identifier.</p>
                  http_method?:
                    type: String
                    description: <p>Specifies a delete integration request's HTTP method.</p>
                responses:
                  204:
                    body:
                      application/json: null
                  401:
                    description: UnauthorizedException
                  404:
                    description: NotFoundException
                  429:
                    description: TooManyRequestsException
                  409:
                    description: ConflictException
              get:
                description: Represents a get integration.
                headers:
                  restapi_id?:
                    type: String
                    description: <p>Specifies a get integration request's API identifier.</p>
                  resource_id?:
                    type: String
                    description: <p>Specifies a get integration request's resource identifier</p>
                  http_method?:
                    type: String
                    description: <p>Specifies a get integration request's HTTP method.</p>
                responses:
                  200:
                    body:
                      application/json: Integration
                  401:
                    description: UnauthorizedException
                  404:
                    description: NotFoundException
                  429:
                    description: TooManyRequestsException
              put:
                description: Represents a put integration.
                headers:
                  restapi_id?:
                    type: String
                    description: <p>Specifies a put integration request's API identifier.</p>
                  resource_id?:
                    type: String
                    description: <p>Specifies a put integration request's resource ID.</p>
                  http_method?:
                    type: String
                    description: <p>Specifies a put integration request's HTTP method.</p>
                body:
                  application/json:
                    type: object
                    properties:
                      type:
                        type: IntegrationType
                        description: <p>Specifies a put integration input's type.</p>
                      httpMethod?:
                        type: String
                        description: <p>Specifies a put integration HTTP method. When the integration type is HTTP or AWS, this field is required.</p>
                      uri?:
                        type: String
                        description: <p>Specifies a put integration input's Uniform Resource Identifier (URI). When the integration type is HTTP or AWS, this field is required. For integration with Lambda as an AWS service proxy, this value is of the 'arn:aws:apigateway:&lt;region&gt;:lambda:path/2015-03-31/functions/&lt;functionArn&gt;/invocations' format.</p>
                      credentials?:
                        type: String
                        description: <p>Specifies whether credentials are required for a put integration.</p>
                      requestParameters?:
                        type: MapOfStringToString
                        description: <p>A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.</p>
                      requestTemplates?:
                        type: MapOfStringToString
                        description: <p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.</p>
                      passthroughBehavior?:
                        type: String
                        description: '<p>Specifies the pass-through behavior for incoming
                          requests based on the Content-Type header in the request,
                          and the available mapping templates specified as the <code>requestTemplates</code>
                          property on the Integration resource. There are three valid
                          values: <code>WHEN_NO_MATCH</code>, <code>WHEN_NO_TEMPLATES</code>,
                          and <code>NEVER</code>. </p> <ul> <li><p><code>WHEN_NO_MATCH</code>
                          passes the request body for unmapped content types through
                          to the integration back end without transformation.</p></li>
                          <li><p><code>NEVER</code> rejects unmapped content types
                          with an HTTP 415 ''Unsupported Media Type'' response.</p></li>
                          <li><p><code>WHEN_NO_TEMPLATES</code> allows pass-through
                          when the integration has NO content types mapped to templates.
                          However if there is at least one content type defined, unmapped
                          content types will be rejected with the same 415 response.</p></li>
                          </ul>'
                      cacheNamespace?:
                        type: String
                        description: <p>Specifies a put integration input's cache namespace.</p>
                      cacheKeyParameters?:
                        type: ListOfString
                        description: <p>Specifies a put integration input's cache key parameters.</p>
                responses:
                  201:
                    body:
                      application/json: Integration
                  401:
                    description: UnauthorizedException
                  400:
                    description: BadRequestException
                  409:
                    description: ConflictException
                  404:
                    description: NotFoundException
                  429:
                    description: TooManyRequestsException
            /responses:
              /{status_code}:
                uriParameters:
                  status_code?:
                    type: StatusCode
                    description: <p>The method response's status code.</p>
                put:
                  description: Adds a <a>MethodResponse</a> to an existing <a>Method</a> resource.
                  headers:
                    restapi_id?:
                      type: String
                      description: <p>The <a>RestApi</a> identifier for the <a>Method</a> resource.</p>
                    resource_id?:
                      type: String
                      description: <p>The <a>Resource</a> identifier for the <a>Method</a> resource.</p>
                    http_method?:
                      type: String
                      description: <p>The HTTP verb of the <a>Method</a> resource.</p>
                    status_code?:
                      type: StatusCode
                      description: <p>The method response's status code.</p>
                  body:
                    application/json:
                      type: object
                      properties:
                        responseParameters?:
                          type: MapOfStringToBoolean
                          description: <p>A key-value map specifying required or optional response parameters that Amazon API Gateway can send back to the caller. A key defines a method response header name and the associated value is a Boolean flag indicating whether the method response parameter is required or not. The method response header names must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The response parameter names defined here are available in the integration response to be mapped from an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>'application/json'</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)</p>
                        responseModels?:
                          type: MapOfStringToString
                          description: <p>Specifies the <a>Model</a> resources used for the response's content type. Response models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.</p>
                  responses:
                    201:
                      body:
                        application/json: MethodResponse
                    401:
                      description: UnauthorizedException
                    404:
                      description: NotFoundException
                    409:
                      description: ConflictException
                    429:
                      description: LimitExceededException | TooManyRequestsException
                    400:
                      description: BadRequestException
                patch:
                  description: Updates an existing <a>MethodResponse</a> resource.
                  headers:
                    restapi_id?:
                      type: String
                      description: <p>The <a>RestApi</a> identifier for the <a>MethodResponse</a> resource.</p>
                    resource_id?:
                      type: String
                      description: <p>The <a>Resource</a> identifier for the <a>MethodResponse</a> resource.</p>
                    http_method?:
                      type: String
                      description: <p>The HTTP verb of the <a>Method</a> resource.</p>
                    status_code?:
                      type: StatusCode
                      description: <p>The status code for the <a>MethodResponse</a> resource.</p>
                  body:
                    application/json:
                      type: object
                      properties:
                        patchOperations?:
                          type: ListOfPatchOperation
                          description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
                  responses:
                    201:
                      body:
                        application/json: MethodResponse
                    401:
                      description: UnauthorizedException
                    404:
                      description: NotFoundException
                    409:
                      description: ConflictException
                    429:
                      description: LimitExceededException | TooManyRequestsException
                    400:
                      description: BadRequestException
                delete:
                  description: Deletes an existing <a>MethodResponse</a> resource.
                  headers:
                    restapi_id?:
                      type: String
                      description: <p>The <a>RestApi</a> identifier for the <a>MethodResponse</a> resource.</p>
                    resource_id?:
                      type: String
                      description: <p>The <a>Resource</a> identifier for the <a>MethodResponse</a> resource.</p>
                    http_method?:
                      type: String
                      description: <p>The HTTP verb of the <a>Method</a> resource.</p>
                    status_code?:
                      type: StatusCode
                      description: <p>The status code identifier for the <a>MethodResponse</a> resource.</p>
                  responses:
                    204:
                      body:
                        application/json: null
                    401:
                      description: UnauthorizedException
                    404:
                      description: NotFoundException
                    429:
                      description: TooManyRequestsException
                    400:
                      description: BadRequestException
                    409:
                      description: ConflictException
                get:
                  description: Describes a <a>MethodResponse</a> resource.
                  headers:
                    restapi_id?:
                      type: String
                      description: <p>The <a>RestApi</a> identifier for the <a>MethodResponse</a> resource.</p>
                    resource_id?:
                      type: String
                      description: <p>The <a>Resource</a> identifier for the <a>MethodResponse</a> resource.</p>
                    http_method?:
                      type: String
                      description: <p>The HTTP verb of the <a>Method</a> resource.</p>
                    status_code?:
                      type: StatusCode
                      description: <p>The status code for the <a>MethodResponse</a> resource.</p>
                  responses:
                    200:
                      body:
                        application/json: MethodResponse
                    401:
                      description: UnauthorizedException
                    404:
                      description: NotFoundException
                    429:
                      description: TooManyRequestsException
            put:
              description: Add a method to an existing <a>Resource</a> resource.
              headers:
                restapi_id?:
                  type: String
                  description: <p>The <a>RestApi</a> identifier for the new <a>Method</a> resource.</p>
                resource_id?:
                  type: String
                  description: <p>The <a>Resource</a> identifier for the new <a>Method</a> resource.</p>
                http_method?:
                  type: String
                  description: <p>Specifies the method request's HTTP method type.</p>
              body:
                application/json:
                  type: object
                  properties:
                    authorizationType:
                      type: String
                      description: <p>Specifies the type of authorization used for the method.</p>
                    authorizerId?:
                      type: String
                      description: <p>Specifies the identifier of an <a>Authorizer</a> to use on this Method, if the type is CUSTOM.</p>
                    apiKeyRequired?:
                      type: Boolean
                      description: <p>Specifies whether the method required a valid <a>ApiKey</a>.</p>
                    requestParameters?:
                      type: MapOfStringToBoolean
                      description: <p>A key-value map defining required or optional method request parameters that can be accepted by Amazon API Gateway. A key defines a method request parameter name matching the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>). The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or body-mapping templates.</p>
                    requestModels?:
                      type: MapOfStringToString
                      description: <p>Specifies the <a>Model</a> resources used for the request's content type. Request models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.</p>
              responses:
                201:
                  body:
                    application/json: Method
                400:
                  description: BadRequestException
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                409:
                  description: ConflictException
                429:
                  description: LimitExceededException | TooManyRequestsException
            post:
              description: Simulate the execution of a <a>Method</a> in your <a>RestApi</a> with headers, parameters, and an incoming request body.
              headers:
                restapi_id?:
                  type: String
                  description: <p>Specifies a test invoke method request's API identifier.</p>
                resource_id?:
                  type: String
                  description: <p>Specifies a test invoke method request's resource ID.</p>
                http_method?:
                  type: String
                  description: <p>Specifies a test invoke method request's HTTP method.</p>
              body:
                application/json:
                  type: object
                  properties:
                    pathWithQueryString?:
                      type: String
                      description: <p>The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.</p>
                    body?:
                      type: String
                      description: <p>The simulated request body of an incoming invocation request.</p>
                    headers?:
                      type: MapOfHeaderValues
                      description: <p>A key-value map of headers to simulate an incoming invocation request.</p>
                    clientCertificateId?:
                      type: String
                      description: <p>A <a>ClientCertificate</a> identifier to use in the test invocation. API Gateway will use the certificate when making the HTTPS request to the defined back-end endpoint.</p>
                    stageVariables?:
                      type: MapOfStringToString
                      description: <p>A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.</p>
              responses:
                200:
                  body:
                    application/json: TestInvokeMethodResponse
                400:
                  description: BadRequestException
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                429:
                  description: TooManyRequestsException
            get:
              description: Describe an existing <a>Method</a> resource.
              headers:
                restapi_id?:
                  type: String
                  description: <p>The <a>RestApi</a> identifier for the <a>Method</a> resource.</p>
                resource_id?:
                  type: String
                  description: <p>The <a>Resource</a> identifier for the <a>Method</a> resource.</p>
                http_method?:
                  type: String
                  description: <p>Specifies the method request's HTTP method type.</p>
              responses:
                200:
                  body:
                    application/json: Method
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                429:
                  description: TooManyRequestsException
            patch:
              description: Updates an existing <a>Method</a> resource.
              headers:
                restapi_id?:
                  type: String
                  description: <p>The <a>RestApi</a> identifier for the <a>Method</a> resource.</p>
                resource_id?:
                  type: String
                  description: <p>The <a>Resource</a> identifier for the <a>Method</a> resource.</p>
                http_method?:
                  type: String
                  description: <p>The HTTP verb of the <a>Method</a> resource.</p>
              body:
                application/json:
                  type: object
                  properties:
                    patchOperations?:
                      type: ListOfPatchOperation
                      description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
              responses:
                200:
                  body:
                    application/json: Method
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                400:
                  description: BadRequestException
                409:
                  description: ConflictException
                429:
                  description: TooManyRequestsException
            delete:
              description: Deletes an existing <a>Method</a> resource.
              headers:
                restapi_id?:
                  type: String
                  description: <p>The <a>RestApi</a> identifier for the <a>Method</a> resource.</p>
                resource_id?:
                  type: String
                  description: <p>The <a>Resource</a> identifier for the <a>Method</a> resource.</p>
                http_method?:
                  type: String
                  description: <p>The HTTP verb of the <a>Method</a> resource.</p>
              responses:
                204:
                  body:
                    application/json: null
                401:
                  description: UnauthorizedException
                404:
                  description: NotFoundException
                429:
                  description: TooManyRequestsException
                409:
                  description: ConflictException
        patch:
          description: Changes information about a <a>Resource</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier for the <a>Resource</a> resource.</p>
            resource_id?:
              type: String
              description: <p>The identifier of the <a>Resource</a> resource.</p>
          body:
            application/json:
              type: object
              properties:
                patchOperations?:
                  type: ListOfPatchOperation
                  description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
          responses:
            200:
              body:
                application/json: Resource
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            409:
              description: ConflictException
            400:
              description: BadRequestException
            429:
              description: TooManyRequestsException
        get:
          description: Lists information about a resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier for the resource.</p>
            resource_id?:
              type: String
              description: <p>The identifier for the <a>Resource</a> resource.</p>
          responses:
            200:
              body:
                application/json: Resource
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
        delete:
          description: Deletes a <a>Resource</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier for the <a>Resource</a> resource.</p>
            resource_id?:
              type: String
              description: <p>The identifier of the <a>Resource</a> resource.</p>
          responses:
            202:
              body:
                application/json: null
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            400:
              description: BadRequestException
            409:
              description: ConflictException
            429:
              description: TooManyRequestsException
      /{parent_id}:
        uriParameters:
          parent_id?:
            type: String
            description: <p>The parent resource's identifier.</p>
        post:
          description: Creates a <a>Resource</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The identifier of the <a>RestApi</a> for the resource. </p>
            parent_id?:
              type: String
              description: <p>The parent resource's identifier.</p>
          body:
            application/json:
              type: object
              properties:
                pathPart:
                  type: String
                  description: <p>The last path segment for this resource.</p>
          responses:
            201:
              body:
                application/json: Resource
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            409:
              description: ConflictException
            429:
              description: LimitExceededException | TooManyRequestsException
            400:
              description: BadRequestException
      get:
        description: Lists information about a collection of <a>Resource</a> resources.
        queryParameters:
          position:
            type: String
            description: <p>The position of the next set of results in the current <a>Resources</a> resource to get information about.</p>
          limit:
            type: NullableInteger
            description: <p>The maximum number of <a>Resource</a> resources in the collection to get information about. The default limit is 25. It should be an integer between 1 - 500.</p>
        headers:
          restapi_id?:
            type: String
            description: <p>The <a>RestApi</a> identifier for the Resource.</p>
        responses:
          200:
            body:
              application/json: Resources
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
    /deployments:
      /{deployment_id}:
        uriParameters:
          deployment_id?:
            type: String
            description: <p>The replacement identifier for the <a>Deployment</a> resource to change information about.</p>
        patch:
          description: Changes information about a <a>Deployment</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The replacement identifier of the <a>RestApi</a> resource for the <a>Deployment</a> resource to change information about.</p>
            deployment_id?:
              type: String
              description: <p>The replacement identifier for the <a>Deployment</a> resource to change information about.</p>
          body:
            application/json:
              type: object
              properties:
                patchOperations?:
                  type: ListOfPatchOperation
                  description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
          responses:
            200:
              body:
                application/json: Deployment
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            400:
              description: BadRequestException
            429:
              description: TooManyRequestsException
            503:
              description: ServiceUnavailableException
        delete:
          description: Deletes a <a>Deployment</a> resource. Deleting a deployment will only succeed if there are no <a>Stage</a> resources associated with it.
          headers:
            restapi_id?:
              type: String
              description: <p>The identifier of the <a>RestApi</a> resource for the <a>Deployment</a> resource to delete.</p>
            deployment_id?:
              type: String
              description: <p>The identifier of the <a>Deployment</a> resource to delete.</p>
          responses:
            202:
              body:
                application/json: null
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            400:
              description: BadRequestException
            429:
              description: TooManyRequestsException
        get:
          description: Gets information about a <a>Deployment</a> resource.
          headers:
            restapi_id?:
              type: String
              description: <p>The identifier of the <a>RestApi</a> resource for the <a>Deployment</a> resource to get information about.</p>
            deployment_id?:
              type: String
              description: <p>The identifier of the <a>Deployment</a> resource to get information about.</p>
          responses:
            200:
              body:
                application/json: Deployment
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
            503:
              description: ServiceUnavailableException
      post:
        description: Creates a <a>Deployment</a> resource, which makes a specified <a>RestApi</a> callable over the internet.
        headers:
          restapi_id?:
            type: String
            description: <p>The <a>RestApi</a> resource identifier for the <a>Deployment</a> resource to create.</p>
        body:
          application/json:
            type: object
            properties:
              stageName:
                type: String
                description: <p>The name of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.</p>
              stageDescription?:
                type: String
                description: <p>The description of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.</p>
              description?:
                type: String
                description: <p>The description for the <a>Deployment</a> resource to create.</p>
              cacheClusterEnabled?:
                type: NullableBoolean
                description: <p>Enables a cache cluster for the <a>Stage</a> resource specified in the input.</p>
              cacheClusterSize?:
                type: CacheClusterSize
                description: <p>Specifies the cache cluster size for the <a>Stage</a> resource specified in the input, if a cache cluster is enabled.</p>
              variables?:
                type: MapOfStringToString
                description: <p>A map that defines the stage variables for the <a>Stage</a> resource that is associated with the new deployment. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.</p>
        responses:
          201:
            body:
              application/json: Deployment
          401:
            description: UnauthorizedException
          400:
            description: BadRequestException
          404:
            description: NotFoundException
          409:
            description: ConflictException
          429:
            description: LimitExceededException | TooManyRequestsException
          503:
            description: ServiceUnavailableException
      get:
        description: Gets information about a <a>Deployments</a> collection.
        queryParameters:
          position:
            type: String
            description: <p>The position of the current <a>Deployment</a> resource in the collection to get information about.</p>
          limit:
            type: NullableInteger
            description: <p>The maximum number of <a>Deployment</a> resources in the collection to get information about. The default limit is 25. It should be an integer between 1 - 500.</p>
        headers:
          restapi_id?:
            type: String
            description: <p>The identifier of the <a>RestApi</a> resource for the collection of <a>Deployment</a> resources to get information about.</p>
        responses:
          200:
            body:
              application/json: Deployments
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          429:
            description: TooManyRequestsException
          503:
            description: ServiceUnavailableException
    /authorizers:
      /{authorizer_id}:
        uriParameters:
          authorizer_id?:
            type: String
            description: <p>The identifier of the <a>Authorizer</a> resource.</p>
        get:
          description: Describe an existing <a>Authorizer</a> resource. <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-authorizer.html">AWS CLI</a></div>
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier for the <a>Authorizer</a> resource.</p>
            authorizer_id?:
              type: String
              description: <p>The identifier of the <a>Authorizer</a> resource.</p>
          responses:
            200:
              body:
                application/json: Authorizer
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
        patch:
          description: Updates an existing <a>Authorizer</a> resource. <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/update-authorizer.html">AWS CLI</a></div>
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier for the <a>Authorizer</a> resource.</p>
            authorizer_id?:
              type: String
              description: <p>The identifier of the <a>Authorizer</a> resource.</p>
          body:
            application/json:
              type: object
              properties:
                patchOperations?:
                  type: ListOfPatchOperation
                  description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
          responses:
            200:
              body:
                application/json: Authorizer
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            400:
              description: BadRequestException
            429:
              description: TooManyRequestsException
        delete:
          description: Deletes an existing <a>Authorizer</a> resource. <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/delete-authorizer.html">AWS CLI</a></div>
          headers:
            restapi_id?:
              type: String
              description: <p>The <a>RestApi</a> identifier for the <a>Authorizer</a> resource.</p>
            authorizer_id?:
              type: String
              description: <p>The identifier of the <a>Authorizer</a> resource.</p>
          responses:
            202:
              body:
                application/json: null
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
            400:
              description: BadRequestException
            409:
              description: ConflictException
        post:
          description: Simulate the execution of an <a>Authorizer</a> in your <a>RestApi</a> with headers, parameters, and an incoming request body. <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html">Enable custom authorizers</a> </div>
          headers:
            restapi_id?:
              type: String
              description: <p>Specifies a test invoke authorizer request's <a>RestApi</a> identifier.</p>
            authorizer_id?:
              type: String
              description: <p>Specifies a test invoke authorizer request's <a>Authorizer</a> ID.</p>
          body:
            application/json:
              type: object
              properties:
                headers?:
                  type: MapOfHeaderValues
                  description: <p>[Required] A key-value map of headers to simulate an incoming invocation request. This is where the incoming authorization token, or identity source, should be specified.</p>
                pathWithQueryString?:
                  type: String
                  description: <p>[Optional] The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.</p>
                body?:
                  type: String
                  description: <p>[Optional] The simulated request body of an incoming invocation request.</p>
                stageVariables?:
                  type: MapOfStringToString
                  description: <p>A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.</p>
                additionalContext?:
                  type: MapOfStringToString
                  description: <p>[Optional] A key-value map of additional context variables.</p>
          responses:
            200:
              body:
                application/json: TestInvokeAuthorizerResponse
            400:
              description: BadRequestException
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
      post:
        description: Adds a new <a>Authorizer</a> resource to an existing <a>RestApi</a> resource. <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/create-authorizer.html">AWS CLI</a></div>
        headers:
          restapi_id?:
            type: String
            description: <p>The <a>RestApi</a> identifier under which the <a>Authorizer</a> will be created.</p>
        body:
          application/json:
            type: object
            properties:
              name:
                type: String
                description: <p>[Required] The name of the authorizer.</p>
              type:
                type: AuthorizerType
                description: <p>[Required] The type of the authorizer.</p>
              providerARNs?:
                type: ListOfARNs
                description: <p>A list of the Cognito Your User Pool authorizer's provider ARNs.</p>
              authType?:
                type: String
                description: <p>Optional customer-defined field, used in Swagger imports/exports. Has no functional impact.</p>
              authorizerUri?:
                type: String
                description: <p>[Required] Specifies the authorizer's Uniform Resource Identifier (URI).</p>
              authorizerCredentials?:
                type: String
                description: <p>Specifies the credentials required for the authorizer, if any.</p>
              identitySource:
                type: String
                description: <p>[Required] The source of the identity in an incoming request.</p>
              identityValidationExpression?:
                type: String
                description: <p>A validation expression for the incoming identity.</p>
              authorizerResultTtlInSeconds?:
                type: NullableInteger
                description: <p>The TTL of cached authorizer results.</p>
        responses:
          201:
            body:
              application/json: Authorizer
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: LimitExceededException | TooManyRequestsException
      get:
        description: Describe an existing <a>Authorizers</a> resource. <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-authorizers.html">AWS CLI</a></div>
        queryParameters:
          position:
            type: String
            description: <p>If not all <a>Authorizer</a> resources in the response were present, the position will specify where to start the next page of results.</p>
          limit:
            type: NullableInteger
            description: <p>Limit the number of <a>Authorizer</a> resources in the response.</p>
        headers:
          restapi_id?:
            type: String
            description: <p>The <a>RestApi</a> identifier for the <a>Authorizers</a> resource.</p>
        responses:
          200:
            body:
              application/json: Authorizers
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
    delete:
      description: Deletes the specified API.
      headers:
        restapi_id?:
          type: String
          description: <p>The ID of the <a>RestApi</a> you want to delete.</p>
      responses:
        202:
          body:
            application/json: null
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        429:
          description: TooManyRequestsException
        400:
          description: BadRequestException
    patch:
      description: Changes information about the specified API.
      headers:
        restapi_id?:
          type: String
          description: <p>The ID of the <a>RestApi</a> you want to update.</p>
      body:
        application/json:
          type: object
          properties:
            patchOperations?:
              type: ListOfPatchOperation
              description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
      responses:
        200:
          body:
            application/json: RestApi
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        409:
          description: ConflictException
        400:
          description: BadRequestException
        429:
          description: TooManyRequestsException
    put:
      description: A feature of the Amazon API Gateway control service for updating an existing API with an input of external API definitions. The update can take the form of merging the supplied definition into the existing API or overwriting the existing API.
      queryParameters:
        mode:
          type: PutMode
          description: <p>The <code>mode</code> query parameter to specify the update mode. Valid values are "merge" and "overwrite". By default, the update mode is "merge".</p>
        failonwarnings:
          type: Boolean
          description: <p>A query parameter to indicate whether to rollback the API update (<code>true</code>) or not (<code>false</code>) when a warning is encountered. The default value is <code>false</code>.</p>
        parameters:
          type: MapOfStringToString
          description: <p>Custom headers supplied as part of the request. </p>
      headers:
        restapi_id?:
          type: String
          description: <p>The identifier of the <a>RestApi</a> to be updated. </p>
      body:
        application/json:
          type: Blob
          description: <p>The PUT request body containing external API definitions. Currently, only Swagger definition JSON files are supported.</p>
      responses:
        200:
          body:
            application/json: RestApi
        401:
          description: UnauthorizedException
        429:
          description: LimitExceededException | TooManyRequestsException
        404:
          description: NotFoundException
        400:
          description: BadRequestException
        409:
          description: ConflictException
    get:
      description: Lists the <a>RestApi</a> resource in the collection.
      headers:
        restapi_id?:
          type: String
          description: <p>The identifier of the <a>RestApi</a> resource.</p>
      responses:
        200:
          body:
            application/json: RestApi
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        429:
          description: TooManyRequestsException
  post:
    description: Creates a new <a>RestApi</a> resource.
    body:
      application/json: CreateRestApiRequest
    responses:
      201:
        body:
          application/json: RestApi
      401:
        description: UnauthorizedException
      429:
        description: LimitExceededException | TooManyRequestsException
      400:
        description: BadRequestException
  get:
    description: Lists the <a>RestApis</a> resources for your collection.
    queryParameters:
      position:
        type: String
        description: <p>The position of the current <a>RestApis</a> resource in the collection to get information about.</p>
      limit:
        type: NullableInteger
        description: <p>The maximum number of <a>RestApi</a> resources in the collection to get information about. The default limit is 25. It should be an integer between 1 - 500.</p>
    responses:
      200:
        body:
          application/json: RestApis
      400:
        description: BadRequestException
      401:
        description: UnauthorizedException
      429:
        description: TooManyRequestsException
/apikeys:
  /{api_Key}:
    uriParameters:
      api_Key?:
        type: String
        description: <p>The identifier of the <a>ApiKey</a> resource to be deleted.</p>
    delete:
      description: Deletes the <a>ApiKey</a> resource.
      headers:
        api_Key?:
          type: String
          description: <p>The identifier of the <a>ApiKey</a> resource to be deleted.</p>
      responses:
        202:
          body:
            application/json: null
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        429:
          description: TooManyRequestsException
    get:
      description: Gets information about the current <a>ApiKey</a> resource.
      queryParameters:
        includeValue:
          type: Boolean
          description: <p>A boolean flag to specify whether (<code>true</code>) or not (<code>false</code>) the result contains the key value.</p>
      headers:
        api_Key?:
          type: String
          description: <p>The identifier of the <a>ApiKey</a> resource.</p>
      responses:
        200:
          body:
            application/json: ApiKey
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        429:
          description: TooManyRequestsException
    patch:
      description: Changes information about an <a>ApiKey</a> resource.
      headers:
        api_Key?:
          type: String
          description: <p>The identifier of the <a>ApiKey</a> resource to be updated.</p>
      body:
        application/json:
          type: object
          properties:
            patchOperations?:
              type: ListOfPatchOperation
              description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
      responses:
        200:
          body:
            application/json: ApiKey
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        400:
          description: BadRequestException
        429:
          description: TooManyRequestsException
        409:
          description: ConflictException
  post:
    description: Create an <a>ApiKey</a> resource.  <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/create-api-key.html">AWS CLI</a></div>
    body:
      application/json: CreateApiKeyRequest
    responses:
      201:
        body:
          application/json: ApiKey
      401:
        description: UnauthorizedException
      404:
        description: NotFoundException
      429:
        description: TooManyRequestsException | LimitExceededException
      400:
        description: BadRequestException
      409:
        description: ConflictException
  get:
    description: Gets information about the current <a>ApiKeys</a> resource.
    queryParameters:
      position:
        type: String
        description: <p>The position of the current <a>ApiKeys</a> resource to get information about.</p>
      limit:
        type: NullableInteger
        description: <p>The maximum number of <a>ApiKeys</a> to get information about.</p>
      name:
        type: String
        description: <p>The name of queried API keys.</p>
      includeValues:
        type: Boolean
        description: <p>A boolean flag to specify whether (<code>true</code>) or not (<code>false</code>) the result contains key values.</p>
    responses:
      200:
        body:
          application/json: ApiKeys
      400:
        description: BadRequestException
      401:
        description: UnauthorizedException
      429:
        description: TooManyRequestsException
/usageplans:
  /{usageplanId}:
    uriParameters:
      usageplanId?:
        type: String
        description: <p>The Id of the to-be-updated usage plan.</p>
    /keys:
      /{keyId}:
        uriParameters:
          keyId?:
            type: String
            description: <p>The identifier of the API key associated with the usage plan in which a temporary extension is granted to the remaining quota.</p>
        /usage:
          patch:
            description: Grants a temporary extension to the reamining quota of a usage plan associated with a specified API key.
            headers:
              usageplanId?:
                type: String
                description: <p>The Id of the usage plan associated with the usage data.</p>
              keyId?:
                type: String
                description: <p>The identifier of the API key associated with the usage plan in which a temporary extension is granted to the remaining quota.</p>
            body:
              application/json:
                type: object
                properties:
                  patchOperations?:
                    type: ListOfPatchOperation
                    description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
            responses:
              200:
                body:
                  application/json: Usage
              401:
                description: UnauthorizedException
              429:
                description: TooManyRequestsException
              400:
                description: BadRequestException
              404:
                description: NotFoundException
        get:
          description: Gets a usage plan key of a given key identifier.
          headers:
            usageplanId?:
              type: String
              description: <p>The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-retrieved <a>UsagePlanKey</a> resource representing a plan customer.</p>
            keyId?:
              type: String
              description: <p>The key Id of the to-be-retrieved <a>UsagePlanKey</a> resource representing a plan customer.</p>
          responses:
            200:
              body:
                application/json: UsagePlanKey
            400:
              description: BadRequestException
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
        delete:
          description: Deletes a usage plan key and remove the underlying API key from the associated usage plan.
          headers:
            usageplanId?:
              type: String
              description: <p>The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-deleted <a>UsagePlanKey</a> resource representing a plan customer.</p>
            keyId?:
              type: String
              description: <p>The Id of the <a>UsagePlanKey</a> resource to be deleted.</p>
          responses:
            202:
              body:
                application/json: null
            400:
              description: BadRequestException
            409:
              description: ConflictException
            401:
              description: UnauthorizedException
            404:
              description: NotFoundException
            429:
              description: TooManyRequestsException
      post:
        description: Creates a usage plan key for adding an existing API key to a usage plan.
        headers:
          usageplanId?:
            type: String
            description: <p>The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-created <a>UsagePlanKey</a> resource representing a plan customer.</p>
        body:
          application/json:
            type: object
            properties:
              keyId:
                type: String
                description: <p>The identifier of a <a>UsagePlanKey</a> resource for a plan customer.</p>
              keyType:
                type: String
                description: <p>The type of a <a>UsagePlanKey</a> resource for a plan customer.</p>
        responses:
          201:
            body:
              application/json: UsagePlanKey
          400:
            description: BadRequestException
          409:
            description: ConflictException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
      get:
        description: Gets all the usage plan keys representing the API keys added to a specified usage plan.
        queryParameters:
          position:
            type: String
            description: <p>A query parameter specifying the zero-based index specifying the position of a usage plan key.</p>
          limit:
            type: NullableInteger
            description: <p>A query parameter specifying the maximum number usage plan keys returned by the GET request.</p>
          name:
            type: String
            description: <p>A query parameter specifying the name of the to-be-returned usage plan keys.</p>
        headers:
          usageplanId?:
            type: String
            description: <p>The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-retrieved <a>UsagePlanKey</a> resource representing a plan customer.</p>
        responses:
          200:
            body:
              application/json: UsagePlanKeys
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
    /usage:
      get:
        description: Gets the usage data of a usage plan in a specified time interval.
        queryParameters:
          keyId:
            type: String
            description: <p>The Id of the API key associated with the resultant usage data.</p>
          startDate?:
            type: String
            description: <p>The starting date (e.g., 2016-01-01) of the usage data.</p>
          endDate?:
            type: String
            description: <p>The ending date (e.g., 2016-12-31) of the usage data.</p>
          position:
            type: String
            description: <p>Position</p>
          limit:
            type: NullableInteger
            description: <p>The maximum number of results to be returned.</p>
        headers:
          usageplanId?:
            type: String
            description: <p>The Id of the usage plan associated with the usage data.</p>
        responses:
          200:
            body:
              application/json: Usage
          400:
            description: BadRequestException
          401:
            description: UnauthorizedException
          404:
            description: NotFoundException
          429:
            description: TooManyRequestsException
    patch:
      description: Updates a usage plan of a given plan Id.
      headers:
        usageplanId?:
          type: String
          description: <p>The Id of the to-be-updated usage plan.</p>
      body:
        application/json:
          type: object
          properties:
            patchOperations?:
              type: ListOfPatchOperation
              description: <p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>
      responses:
        200:
          body:
            application/json: UsagePlan
        401:
          description: UnauthorizedException
        429:
          description: TooManyRequestsException
        400:
          description: BadRequestException
        404:
          description: NotFoundException
        409:
          description: ConflictException
    delete:
      description: Deletes a usage plan of a given plan Id.
      headers:
        usageplanId?:
          type: String
          description: <p>The Id of the to-be-deleted usage plan.</p>
      responses:
        202:
          body:
            application/json: null
        401:
          description: UnauthorizedException
        429:
          description: TooManyRequestsException
        400:
          description: BadRequestException
        404:
          description: NotFoundException
    get:
      description: Gets a usage plan of a given plan identifier.
      headers:
        usageplanId?:
          type: String
          description: <p>The identifier of the <a>UsagePlan</a> resource to be retrieved.</p>
      responses:
        200:
          body:
            application/json: UsagePlan
        400:
          description: BadRequestException
        401:
          description: UnauthorizedException
        404:
          description: NotFoundException
        429:
          description: TooManyRequestsException
  post:
    description: 'Creates a usage plan with the throttle and quota limits, as well
      as the associated API stages, specified in the payload. '
    body:
      application/json: CreateUsagePlanRequest
    responses:
      201:
        body:
          application/json: UsagePlan
      400:
        description: BadRequestException
      401:
        description: UnauthorizedException
      429:
        description: TooManyRequestsException | LimitExceededException
      409:
        description: ConflictException
  get:
    description: Gets all the usage plans of the caller's account.
    queryParameters:
      position:
        type: String
        description: <p>The zero-based array index specifying the position of the to-be-retrieved <a>UsagePlan</a> resource.</p>
      keyId:
        type: String
        description: <p>The identifier of the API key associated with the usage plans.</p>
      limit:
        type: NullableInteger
        description: <p>The number of <a>UsagePlan</a> resources to be returned as the result.</p>
    responses:
      200:
        body:
          application/json: UsagePlans
      400:
        description: BadRequestException
      401:
        description: UnauthorizedException
      429:
        description: TooManyRequestsException
      409:
        description: ConflictException
/restapis?mode=import:
  post:
    description: A feature of the Amazon API Gateway control service for creating a new API from an external API definition file.
    queryParameters:
      failonwarnings:
        type: Boolean
        description: <p>A query parameter to indicate whether to rollback the API creation (<code>true</code>) or not (<code>false</code>) when a warning is encountered. The default value is <code>false</code>.</p>
      parameters:
        type: MapOfStringToString
        description: <p>Custom header parameters as part of the request.</p>
    body:
      application/json:
        type: Blob
        description: <p>The POST request body containing external API definitions. Currently, only Swagger definition JSON files are supported.</p>
    responses:
      201:
        body:
          application/json: RestApi
      401:
        description: UnauthorizedException
      429:
        description: LimitExceededException | TooManyRequestsException
      400:
        description: BadRequestException
      409:
        description: ConflictException
/account:
  patch:
    description: Changes information about the current <a>Account</a> resource.
    body:
      application/json: UpdateAccountRequest
    responses:
      200:
        body:
          application/json: Account
      401:
        description: UnauthorizedException
      400:
        description: BadRequestException
      404:
        description: NotFoundException
      429:
        description: TooManyRequestsException
  get:
    description: Gets information about the current <a>Account</a> resource.
    body:
      application/json: GetAccountRequest
    responses:
      200:
        body:
          application/json: Account
      401:
        description: UnauthorizedException
      404:
        description: NotFoundException
      429:
        description: TooManyRequestsException
/apikeys?mode=import:
  post:
    description: Import API keys from an external source, such as a CSV-formatted file.
    queryParameters:
      format?:
        type: ApiKeysFormat
        description: <p>A query parameter to specify the input format to imported API keys. Currently, only the <code>csv</code> format is supported.</p>
      failonwarnings:
        type: Boolean
        description: <p>A query parameter to indicate whether to rollback <a>ApiKey</a> importation (<code>true</code>) or not (<code>false</code>) when error is encountered.</p>
    body:
      application/json:
        type: Blob
        description: <p>The payload of the POST request to import API keys. For the payload format, see <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-key-file-format.html">API Key File Format</a>.</p>
    responses:
      201:
        body:
          application/json: ApiKeyIds
      401:
        description: UnauthorizedException
      404:
        description: NotFoundException
      429:
        description: TooManyRequestsException | LimitExceededException
      400:
        description: BadRequestException
      409:
        description: ConflictException
