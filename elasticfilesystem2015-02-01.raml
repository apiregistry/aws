#%RAML 1.0
title: Amazon Elastic File System
version: '2015-02-01'
description: '  Amazon Elastic File System (Amazon EFS) provides simple, scalable
  file storage for use with Amazon EC2 instances in the AWS Cloud. With Amazon EFS,
  storage capacity is elastic, growing and shrinking automatically as you add and
  remove files, so your applications have the storage they need, when they need it.
  For more information, see the <a href="http://docs.aws.amazon.com/efs/latest/ug/api-reference.html">User
  Guide</a>.'
mediaType:
- application/json
types:
  AwsAccountId:
    type: string
  CreationToken:
    type: string
    minLength: 1
    maxLength: 64
  FileSystemDescriptions:
    type: array
    items:
      type: FileSystemDescription
  FileSystemId:
    type: string
  FileSystemSizeValue:
    type: integer
    format: long
    minimum: 0
  IpAddress:
    type: string
  LifeCycleState:
    type: string
    enum:
    - creating
    - available
    - deleting
    - deleted
  Marker:
    type: string
  MaxItems:
    type: integer
    format: int
    minimum: 1
  MountTargetCount:
    type: integer
    format: int
    minimum: 0
  MountTargetDescriptions:
    type: array
    items:
      type: MountTargetDescription
  MountTargetId:
    type: string
  NetworkInterfaceId:
    type: string
  PerformanceMode:
    type: string
    enum:
    - generalPurpose
    - maxIO
  SecurityGroup:
    type: string
  SecurityGroups:
    type: array
    maxItems: 5
    items:
      type: SecurityGroup
  SubnetId:
    type: string
  TagKey:
    type: string
    minLength: 1
    maxLength: 128
  TagKeys:
    type: array
    items:
      type: TagKey
  TagValue:
    type: string
    maxLength: 256
  Tags:
    type: array
    items:
      type: Tag
  Timestamp:
    type: datetime
  CreateFileSystemRequest:
    type: object
    properties:
      CreationToken:
        type: CreationToken
        description: <p>String of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</p>
      PerformanceMode?:
        type: PerformanceMode
        description: <p>The <code>PerformanceMode</code> of the file system. We recommend <code>generalPurpose</code> performance mode for most file systems. File systems using the <code>maxIO</code> performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. This can't be changed after the file system has been created.</p>
  CreateMountTargetRequest:
    type: object
    properties:
      FileSystemId:
        type: FileSystemId
        description: <p>ID of the file system for which to create the mount target.</p>
      SubnetId:
        type: SubnetId
        description: <p>ID of the subnet to add the mount target in.</p>
      IpAddress?:
        type: IpAddress
        description: <p>Valid IPv4 address within the address range of the specified subnet.</p>
      SecurityGroups?:
        type: SecurityGroups
        description: <p>Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>. These must be for the same VPC as subnet specified.</p>
    description: <p/>
  DescribeFileSystemsResponse:
    type: object
    properties:
      Marker?:
        type: Marker
        description: <p>Present if provided by caller in the request (String).</p>
      FileSystems?:
        type: FileSystemDescriptions
        description: <p>Array of file system descriptions.</p>
      NextMarker?:
        type: Marker
        description: <p>Present if there are more file systems than returned in the response (String). You can use the <code>NextMarker</code> in the subsequent request to fetch the descriptions.</p>
  DescribeMountTargetSecurityGroupsResponse:
    type: object
    properties:
      SecurityGroups:
        type: SecurityGroups
        description: <p>Array of security groups.</p>
  DescribeMountTargetsResponse:
    type: object
    properties:
      Marker?:
        type: Marker
        description: <p>If the request included the <code>Marker</code>, the response returns that value in this field.</p>
      MountTargets?:
        type: MountTargetDescriptions
        description: <p>Returns the file system's mount targets as an array of <code>MountTargetDescription</code> objects.</p>
      NextMarker?:
        type: Marker
        description: <p>If a value is present, there are more mount targets to return. In a subsequent request, you can provide <code>Marker</code> in your request with this value to retrieve the next set of mount targets.</p>
    description: <p/>
  DescribeTagsResponse:
    type: object
    properties:
      Marker?:
        type: Marker
        description: <p>If the request included a <code>Marker</code>, the response returns that value in this field.</p>
      Tags:
        type: Tags
        description: <p>Returns tags associated with the file system as an array of <code>Tag</code> objects. </p>
      NextMarker?:
        type: Marker
        description: <p>If a value is present, there are more tags to return. In a subsequent request, you can provide the value of <code>NextMarker</code> as the value of the <code>Marker</code> parameter in your next request to retrieve the next set of tags.</p>
    description: <p/>
  FileSystemDescription:
    type: object
    properties:
      OwnerId:
        type: AwsAccountId
        description: <p>AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.</p>
      CreationToken:
        type: CreationToken
        description: <p>Opaque string specified in the request.</p>
      FileSystemId:
        type: FileSystemId
        description: <p>ID of the file system, assigned by Amazon EFS.</p>
      CreationTime:
        type: Timestamp
        description: <p>Time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).</p>
      LifeCycleState:
        type: LifeCycleState
        description: <p>Lifecycle phase of the file system.</p>
      Name?:
        type: TagValue
        description: <p>You can add tags to a file system, including a <code>Name</code> tag. For more information, see <a>CreateTags</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. </p>
      NumberOfMountTargets:
        type: MountTargetCount
        description: <p>Current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.</p>
      SizeInBytes:
        type: FileSystemSize
        description: <p>Latest known metered size (in bytes) of data stored in the file system, in bytes, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. Note that the value does not represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value will represent actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size the file system was at any instant in time. </p>
      PerformanceMode:
        type: PerformanceMode
        description: <p>The <code>PerformanceMode</code> of the file system.</p>
    description: <p>Description of the file system.</p>
  FileSystemSize:
    type: object
    properties:
      Value:
        type: FileSystemSizeValue
        description: <p>Latest known metered size (in bytes) of data stored in the file system.</p>
      Timestamp?:
        type: Timestamp
        description: <p>Time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.</p>
    description: <p>Latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. Note that the value does not represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value will represent the actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not necessarily the exact size the file system was at any instant in time.</p>
  MountTargetDescription:
    type: object
    properties:
      OwnerId?:
        type: AwsAccountId
        description: <p>AWS account ID that owns the resource.</p>
      MountTargetId:
        type: MountTargetId
        description: <p>System-assigned mount target ID.</p>
      FileSystemId:
        type: FileSystemId
        description: <p>ID of the file system for which the mount target is intended.</p>
      SubnetId:
        type: SubnetId
        description: <p>ID of the mount target's subnet.</p>
      LifeCycleState:
        type: LifeCycleState
        description: <p>Lifecycle state of the mount target.</p>
      IpAddress?:
        type: IpAddress
        description: <p>Address at which the file system may be mounted via the mount target.</p>
      NetworkInterfaceId?:
        type: NetworkInterfaceId
        description: <p>ID of the network interface that Amazon EFS created when it created the mount target.</p>
    description: <p>Provides a description of a mount target.</p>
  Tag:
    type: object
    properties:
      Key:
        type: TagKey
        description: <p>Tag key (String). The key can't start with <code>aws:</code>.</p>
      Value:
        type: TagValue
        description: <p>Value of the tag key.</p>
    description: '<p>A tag is a key-value pair. Allowed characters: letters, whitespace,
      and numbers, representable in UTF-8, and the following characters:<code> + -
      = . _ : /</code> </p>'
/2015-02-01:
  /tags:
    /{FileSystemId}:
      uriParameters:
        FileSystemId?:
          type: FileSystemId
          description: <p>ID of the file system whose tag set you want to retrieve.</p>
      description: 'Returns the tags associated with a file system. The order of tags
        returned in the response of one <code>DescribeTags</code> call and the order
        of tags returned across the responses of a multi-call iteration (when using
        pagination) is unspecified.   This operation requires permissions for the
        <code>elasticfilesystem:DescribeTags</code> action. '
      get:
        queryParameters:
          MaxItems:
            type: MaxItems
            description: <p>(Optional) Maximum number of file system tags to return in the response. It must be an integer with a value greater than zero.</p>
          Marker:
            type: Marker
            description: <p>(Optional) Opaque pagination token returned from a previous <code>DescribeTags</code> operation (String). If present, it specifies to continue the list from where the previous call left off.</p>
        headers:
          FileSystemId?:
            type: FileSystemId
            description: <p>ID of the file system whose tag set you want to retrieve.</p>
        responses:
          200:
            body:
              application/json: DescribeTagsResponse
          400:
            description: BadRequest
          500:
            description: InternalServerError
          404:
            description: FileSystemNotFound
  /create-tags:
    /{FileSystemId}:
      uriParameters:
        FileSystemId?:
          type: FileSystemId
          description: <p>ID of the file system whose tags you want to modify (String). This operation modifies the tags only, not the file system.</p>
      description: Creates or overwrites tags associated with a file system. Each tag is a key-value pair. If a tag key specified in the request already exists on the file system, this operation overwrites its value with the value provided in the request. If you add the <code>Name</code> tag to your file system, Amazon EFS returns it in the response to the <a>DescribeFileSystems</a> operation.  This operation requires permission for the <code>elasticfilesystem:CreateTags</code> action.
      post:
        headers:
          FileSystemId?:
            type: FileSystemId
            description: <p>ID of the file system whose tags you want to modify (String). This operation modifies the tags only, not the file system.</p>
        body:
          application/json:
            type: object
            properties:
              Tags:
                type: Tags
                description: <p>Array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value pair. </p>
        responses:
          204:
            body:
              application/json: null
          400:
            description: BadRequest
          500:
            description: InternalServerError
          404:
            description: FileSystemNotFound
  /file-systems:
    description: 'Returns the description of a specific Amazon EFS file system if
      either the file system <code>CreationToken</code> or the <code>FileSystemId</code>
      is provided. Otherwise, it returns descriptions of all file systems owned by
      the caller''s AWS account in the AWS Region of the endpoint that you''re calling.  When
      retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
      parameter to limit the number of descriptions in a response. If more file system
      descriptions remain, Amazon EFS returns a <code>NextMarker</code>, an opaque
      token, in the response. In this case, you should send a subsequent request with
      the <code>Marker</code> request parameter set to the value of <code>NextMarker</code>.  To
      retrieve a list of your file system descriptions, this operation is used in
      an iterative process, where <code>DescribeFileSystems</code> is called first
      without the <code>Marker</code> and then the operation continues to call it
      with the <code>Marker</code> parameter set to the value of the <code>NextMarker</code>
      from the previous response until the response has no <code>NextMarker</code>.  The
      implementation may return fewer than <code>MaxItems</code> file system descriptions
      while still including a <code>NextMarker</code> value.   The order of file systems
      returned in the response of one <code>DescribeFileSystems</code> call and the
      order of file systems returned across the responses of a multi-call iteration
      is unspecified.   This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code>
      action. '
    /{FileSystemId}:
      uriParameters:
        FileSystemId?:
          type: FileSystemId
          description: <p>ID of the file system you want to delete.</p>
      description: Deletes a file system, permanently severing access to its contents. Upon return, the file system no longer exists and you can't access any contents of the deleted file system.  You can't delete a file system that is in use. That is, if the file system has any mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a> and <a>DeleteMountTarget</a>.  <note> The <code>DeleteFileSystem</code> call returns while the file system state is still <code>deleting</code>. You can check the file system deletion status by calling the <a>DescribeFileSystems</a> operation, which returns a list of file systems in your account. If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error. </note> This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code> action.
      delete:
        headers:
          FileSystemId?:
            type: FileSystemId
            description: <p>ID of the file system you want to delete.</p>
        responses:
          204:
            body:
              application/json: null
          400:
            description: BadRequest
          500:
            description: InternalServerError
          404:
            description: FileSystemNotFound
          409:
            description: FileSystemInUse
    post:
      body:
        application/json: CreateFileSystemRequest
      responses:
        201:
          body:
            application/json: FileSystemDescription
        400:
          description: BadRequest
        500:
          description: InternalServerError
        409:
          description: FileSystemAlreadyExists
        403:
          description: FileSystemLimitExceeded
    get:
      queryParameters:
        MaxItems:
          type: MaxItems
          description: <p>(Optional) Specifies the maximum number of file systems to return in the response (integer). This parameter value must be greater than 0. The number of items that Amazon EFS returns is the minimum of the <code>MaxItems</code> parameter specified in the request and the service's internal maximum number of items per page. </p>
        Marker:
          type: Marker
          description: <p>(Optional) Opaque pagination token returned from a previous <code>DescribeFileSystems</code> operation (String). If present, specifies to continue the list from where the returning call had left off. </p>
        CreationToken:
          type: CreationToken
          description: <p>(Optional) Restricts the list to the file system with this creation token (String). You specify a creation token when you create an Amazon EFS file system.</p>
        FileSystemId:
          type: FileSystemId
          description: <p>(Optional) ID of the file system whose description you want to retrieve (String).</p>
      responses:
        200:
          body:
            application/json: DescribeFileSystemsResponse
        400:
          description: BadRequest
        500:
          description: InternalServerError
        404:
          description: FileSystemNotFound
  /mount-targets:
    description: Returns the descriptions of all the current mount targets, or a specific mount target, for a file system. When requesting all of the current mount targets, the order of mount targets returned in the response is unspecified. This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code> action, on either the file system ID that you specify in <code>FileSystemId</code>, or on the file system of the mount target that you specify in <code>MountTargetId</code>.
    /{MountTargetId}:
      uriParameters:
        MountTargetId?:
          type: MountTargetId
          description: <p>ID of the mount target whose security groups you want to modify.</p>
      description: 'Deletes the specified mount target. This operation forcibly breaks
        any mounts of the file system via the mount target that is being deleted,
        which might disrupt instances or applications using those mounts. To avoid
        applications getting cut off abruptly, you might consider unmounting any mounts
        of the mount target, if feasible. The operation also deletes the associated
        network interface. Uncommitted writes may be lost, but breaking a mount target
        using this operation does not corrupt the file system itself. The file system
        you created remains. You can mount an EC2 instance in your VPC via another
        mount target. This operation requires permissions for the following action
        on the file system: <ul> <li>  <code>elasticfilesystem:DeleteMountTarget</code>  </li>
        </ul> <note> The <code>DeleteMountTarget</code> call returns while the mount
        target state is still <code>deleting</code>. You can check the mount target
        deletion by calling the <a>DescribeMountTargets</a> operation, which returns
        a list of mount target descriptions for the given file system.  </note> The
        operation also requires permissions for the following Amazon EC2 action on
        the mount target''s network interface: <ul> <li>  <code>ec2:DeleteNetworkInterface</code>  </li>
        </ul>'
      /security-groups:
        description: 'Returns the security groups currently in effect for a mount
          target. This operation requires that the network interface of the mount
          target has been created and the lifecycle state of the mount target is not
          <code>deleted</code>. This operation requires permissions for the following
          actions: <ul> <li>  <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code>
          action on the mount target''s file system.  </li> <li>  <code>ec2:DescribeNetworkInterfaceAttribute</code>
          action on the mount target''s network interface.  </li> </ul>'
        put:
          headers:
            MountTargetId?:
              type: MountTargetId
              description: <p>ID of the mount target whose security groups you want to modify.</p>
          body:
            application/json:
              type: object
              properties:
                SecurityGroups?:
                  type: SecurityGroups
                  description: <p>Array of up to five VPC security group IDs.</p>
          responses:
            204:
              body:
                application/json: null
            400:
              description: BadRequest | SecurityGroupLimitExceeded | SecurityGroupNotFound
            500:
              description: InternalServerError
            404:
              description: MountTargetNotFound
            409:
              description: IncorrectMountTargetState
        get:
          headers:
            MountTargetId?:
              type: MountTargetId
              description: <p>ID of the mount target whose security groups you want to retrieve.</p>
          responses:
            200:
              body:
                application/json: DescribeMountTargetSecurityGroupsResponse
            400:
              description: BadRequest
            500:
              description: InternalServerError
            404:
              description: MountTargetNotFound
            409:
              description: IncorrectMountTargetState
      delete:
        headers:
          MountTargetId?:
            type: MountTargetId
            description: <p>ID of the mount target to delete (String).</p>
        responses:
          204:
            body:
              application/json: null
          400:
            description: BadRequest
          500:
            description: InternalServerError
          504:
            description: DependencyTimeout
          404:
            description: MountTargetNotFound
    post:
      body:
        application/json: CreateMountTargetRequest
      responses:
        200:
          body:
            application/json: MountTargetDescription
        400:
          description: BadRequest | SubnetNotFound | SecurityGroupLimitExceeded | SecurityGroupNotFound | UnsupportedAvailabilityZone
        500:
          description: InternalServerError
        404:
          description: FileSystemNotFound
        409:
          description: IncorrectFileSystemLifeCycleState | MountTargetConflict | NoFreeAddressesInSubnet | IpAddressInUse | NetworkInterfaceLimitExceeded
    get:
      queryParameters:
        MaxItems:
          type: MaxItems
          description: <p>(Optional) Maximum number of mount targets to return in the response. It must be an integer with a value greater than zero.</p>
        Marker:
          type: Marker
          description: <p>(Optional) Opaque pagination token returned from a previous <code>DescribeMountTargets</code> operation (String). If present, it specifies to continue the list from where the previous returning call left off.</p>
        FileSystemId:
          type: FileSystemId
          description: <p>(Optional) ID of the file system whose mount targets you want to list (String). It must be included in your request if <code>MountTargetId</code> is not included.</p>
        MountTargetId:
          type: MountTargetId
          description: <p>(Optional) ID of the mount target that you want to have described (String). It must be included in your request if <code>FileSystemId</code> is not included.</p>
      responses:
        200:
          body:
            application/json: DescribeMountTargetsResponse
        400:
          description: BadRequest
        500:
          description: InternalServerError
        404:
          description: FileSystemNotFound | MountTargetNotFound
  /delete-tags:
    /{FileSystemId}:
      uriParameters:
        FileSystemId?:
          type: FileSystemId
          description: <p>ID of the file system whose tags you want to delete (String).</p>
      description: Deletes the specified tags from a file system. If the <code>DeleteTags</code> request includes a tag key that does not exist, Amazon EFS ignores it and doesn't cause an error. For more information about tags and related restrictions, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>. This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code> action.
      post:
        headers:
          FileSystemId?:
            type: FileSystemId
            description: <p>ID of the file system whose tags you want to delete (String).</p>
        body:
          application/json:
            type: object
            properties:
              TagKeys:
                type: TagKeys
                description: <p>List of tag keys to delete.</p>
        responses:
          204:
            body:
              application/json: null
          400:
            description: BadRequest
          500:
            description: InternalServerError
          404:
            description: FileSystemNotFound
