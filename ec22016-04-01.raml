#%RAML 1.0
title: Amazon Elastic Compute Cloud
version: '2016-04-01'
description: '  Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing
  capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your
  need to invest in hardware up front, so you can develop and deploy applications
  faster.'
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AccountAttributeList:
    type: array
    items:
      type: AccountAttribute
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AccountAttributeName:
    type: string
    enum:
    - supported-platforms
    - default-vpc
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AccountAttributeNameStringList:
    type: array
    items:
      type: AccountAttributeName
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AccountAttributeValueList:
    type: array
    items:
      type: AccountAttributeValue
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ActiveInstanceSet:
    type: array
    items:
      type: ActiveInstance
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ActivityStatus:
    type: string
    enum:
    - error
    - pending_fulfillment
    - pending_termination
    - fulfilled
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AddressList:
    type: array
    items:
      type: Address
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Affinity:
    type: string
    enum:
    - default
    - host
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AllocationIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AllocationState:
    type: string
    enum:
    - available
    - under-assessment
    - permanent-failure
    - released
    - released-permanent-failure
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AllocationStrategy:
    type: string
    enum:
    - lowestPrice
    - diversified
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ArchitectureValues:
    type: string
    enum:
    - i386
    - x86_64
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AttachmentStatus:
    type: string
    enum:
    - attaching
    - attached
    - detaching
    - detached
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AutoPlacement:
    type: string
    enum:
    - 'on'
    - 'off'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AvailabilityZoneList:
    type: array
    items:
      type: AvailabilityZone
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AvailabilityZoneMessageList:
    type: array
    items:
      type: AvailabilityZoneMessage
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AvailabilityZoneState:
    type: string
    enum:
    - available
    - information
    - impaired
    - unavailable
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AvailableInstanceCapacityList:
    type: array
    items:
      type: InstanceCapacity
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  BatchState:
    type: string
    enum:
    - submitted
    - active
    - cancelled
    - failed
    - cancelled_running
    - cancelled_terminating
    - modifying
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Blob:
    type: file
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  BlockDeviceMappingList:
    type: array
    items:
      type: BlockDeviceMapping
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  BlockDeviceMappingRequestList:
    type: array
    items:
      type: BlockDeviceMapping
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Boolean:
    type: boolean
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  BundleIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  BundleTaskList:
    type: array
    items:
      type: BundleTask
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  BundleTaskState:
    type: string
    enum:
    - pending
    - waiting-for-shutdown
    - bundling
    - storing
    - cancelling
    - complete
    - failed
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CancelBatchErrorCode:
    type: string
    enum:
    - fleetRequestIdDoesNotExist
    - fleetRequestIdMalformed
    - fleetRequestNotInCancellableState
    - unexpectedError
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CancelSpotFleetRequestsErrorSet:
    type: array
    items:
      type: CancelSpotFleetRequestsErrorItem
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CancelSpotFleetRequestsSuccessSet:
    type: array
    items:
      type: CancelSpotFleetRequestsSuccessItem
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CancelSpotInstanceRequestState:
    type: string
    enum:
    - active
    - open
    - closed
    - cancelled
    - completed
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CancelledSpotInstanceRequestList:
    type: array
    items:
      type: CancelledSpotInstanceRequest
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ClassicLinkDnsSupportList:
    type: array
    items:
      type: ClassicLinkDnsSupport
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ClassicLinkInstanceList:
    type: array
    items:
      type: ClassicLinkInstance
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ContainerFormat:
    type: string
    enum:
    - ova
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ConversionIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ConversionTaskState:
    type: string
    enum:
    - active
    - cancelling
    - cancelled
    - completed
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CreateVolumePermissionList:
    type: array
    items:
      type: CreateVolumePermission
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CurrencyCodeValues:
    type: string
    enum:
    - USD
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CustomerGatewayIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  CustomerGatewayList:
    type: array
    items:
      type: CustomerGateway
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DatafeedSubscriptionState:
    type: string
    enum:
    - Active
    - Inactive
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DateTime:
    type: datetime
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeConversionTaskList:
    type: array
    items:
      type: ConversionTask
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DeviceType:
    type: string
    enum:
    - ebs
    - instance-store
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DhcpConfigurationList:
    type: array
    items:
      type: DhcpConfiguration
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DhcpConfigurationValueList:
    type: array
    items:
      type: AttributeValue
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DhcpOptionsIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DhcpOptionsList:
    type: array
    items:
      type: DhcpOptions
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DiskImageFormat:
    type: string
    enum:
    - VMDK
    - RAW
    - VHD
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DiskImageList:
    type: array
    items:
      type: DiskImage
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DomainType:
    type: string
    enum:
    - vpc
    - standard
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Double:
    type: number
    format: double
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  EventCode:
    type: string
    enum:
    - instance-reboot
    - system-reboot
    - system-maintenance
    - instance-retirement
    - instance-stop
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  EventType:
    type: string
    enum:
    - instanceChange
    - fleetRequestChange
    - error
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ExcessCapacityTerminationPolicy:
    type: string
    enum:
    - noTermination
    - default
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ExecutableByStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ExportEnvironment:
    type: string
    enum:
    - citrix
    - vmware
    - microsoft
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ExportTaskIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ExportTaskList:
    type: array
    items:
      type: ExportTask
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ExportTaskState:
    type: string
    enum:
    - active
    - cancelling
    - cancelled
    - completed
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  FilterList:
    type: array
    items:
      type: Filter
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  FleetType:
    type: string
    enum:
    - request
    - maintain
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Float:
    type: number
    format: float
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  FlowLogSet:
    type: array
    items:
      type: FlowLog
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  FlowLogsResourceType:
    type: string
    enum:
    - VPC
    - Subnet
    - NetworkInterface
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  GatewayType:
    type: string
    enum:
    - ipsec.1
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  GroupIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  GroupIdentifierList:
    type: array
    items:
      type: GroupIdentifier
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  GroupIds:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  GroupNameStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HistoryRecords:
    type: array
    items:
      type: HistoryRecord
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HostInstanceList:
    type: array
    items:
      type: HostInstance
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HostList:
    type: array
    items:
      type: Host
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HostOfferingSet:
    type: array
    items:
      type: HostOffering
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HostReservationIdSet:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HostReservationSet:
    type: array
    items:
      type: HostReservation
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HostTenancy:
    type: string
    enum:
    - dedicated
    - host
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  HypervisorType:
    type: string
    enum:
    - ovm
    - xen
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  IdFormatList:
    type: array
    items:
      type: IdFormat
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImageAttributeName:
    type: string
    enum:
    - description
    - kernel
    - ramdisk
    - launchPermission
    - productCodes
    - blockDeviceMapping
    - sriovNetSupport
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImageDiskContainerList:
    type: array
    items:
      type: ImageDiskContainer
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImageIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImageList:
    type: array
    items:
      type: Image
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImageState:
    type: string
    enum:
    - pending
    - available
    - invalid
    - deregistered
    - transient
    - failed
    - error
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImageTypeValues:
    type: string
    enum:
    - machine
    - kernel
    - ramdisk
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImportImageTaskList:
    type: array
    items:
      type: ImportImageTask
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImportInstanceVolumeDetailSet:
    type: array
    items:
      type: ImportInstanceVolumeDetailItem
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImportSnapshotTaskList:
    type: array
    items:
      type: ImportSnapshotTask
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ImportTaskIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceAttributeName:
    type: string
    enum:
    - instanceType
    - kernel
    - ramdisk
    - userData
    - disableApiTermination
    - instanceInitiatedShutdownBehavior
    - rootDeviceName
    - blockDeviceMapping
    - productCodes
    - sourceDestCheck
    - groupSet
    - ebsOptimized
    - sriovNetSupport
    - enaSupport
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceBlockDeviceMappingList:
    type: array
    items:
      type: InstanceBlockDeviceMapping
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceBlockDeviceMappingSpecificationList:
    type: array
    items:
      type: InstanceBlockDeviceMappingSpecification
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceCountList:
    type: array
    items:
      type: InstanceCount
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceIdSet:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceLifecycleType:
    type: string
    enum:
    - spot
    - scheduled
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceList:
    type: array
    items:
      type: Instance
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceMonitoringList:
    type: array
    items:
      type: InstanceMonitoring
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceNetworkInterfaceList:
    type: array
    items:
      type: InstanceNetworkInterface
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceNetworkInterfaceSpecificationList:
    type: array
    items:
      type: InstanceNetworkInterfaceSpecification
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstancePrivateIpAddressList:
    type: array
    items:
      type: InstancePrivateIpAddress
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceStateChangeList:
    type: array
    items:
      type: InstanceStateChange
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceStateName:
    type: string
    enum:
    - pending
    - running
    - shutting-down
    - terminated
    - stopping
    - stopped
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceStatusDetailsList:
    type: array
    items:
      type: InstanceStatusDetails
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceStatusEventList:
    type: array
    items:
      type: InstanceStatusEvent
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceStatusList:
    type: array
    items:
      type: InstanceStatus
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceType:
    type: string
    enum:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - cr1.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - x1.4xlarge
    - x1.8xlarge
    - x1.16xlarge
    - x1.32xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - cc1.4xlarge
    - cc2.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - cg1.4xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InstanceTypeList:
    type: array
    items:
      type: InstanceType
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Integer:
    type: integer
    format: int
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InternetGatewayAttachmentList:
    type: array
    items:
      type: InternetGatewayAttachment
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  InternetGatewayList:
    type: array
    items:
      type: InternetGateway
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  IpPermissionList:
    type: array
    items:
      type: IpPermission
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  IpRangeList:
    type: array
    items:
      type: IpRange
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  IpRanges:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  KeyNameStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  KeyPairList:
    type: array
    items:
      type: KeyPairInfo
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  LaunchPermissionList:
    type: array
    items:
      type: LaunchPermission
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  LaunchSpecsList:
    type: array
    minItems: 1
    items:
      type: SpotFleetLaunchSpecification
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ListingState:
    type: string
    enum:
    - available
    - sold
    - cancelled
    - pending
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ListingStatus:
    type: string
    enum:
    - active
    - pending
    - cancelled
    - closed
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Long:
    type: integer
    format: long
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  MaxResults:
    type: integer
    format: int
    minimum: 5
    maximum: 255
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  MonitoringState:
    type: string
    enum:
    - disabled
    - disabling
    - enabled
    - pending
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  MoveStatus:
    type: string
    enum:
    - movingToVpc
    - restoringToClassic
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  MovingAddressStatusSet:
    type: array
    items:
      type: MovingAddressStatus
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NatGatewayAddressList:
    type: array
    items:
      type: NatGatewayAddress
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NatGatewayList:
    type: array
    items:
      type: NatGateway
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NatGatewayState:
    type: string
    enum:
    - pending
    - failed
    - available
    - deleting
    - deleted
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkAclAssociationList:
    type: array
    items:
      type: NetworkAclAssociation
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkAclEntryList:
    type: array
    items:
      type: NetworkAclEntry
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkAclList:
    type: array
    items:
      type: NetworkAcl
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkInterfaceAttribute:
    type: string
    enum:
    - description
    - groupSet
    - sourceDestCheck
    - attachment
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkInterfaceIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkInterfaceList:
    type: array
    items:
      type: NetworkInterface
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkInterfacePrivateIpAddressList:
    type: array
    items:
      type: NetworkInterfacePrivateIpAddress
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkInterfaceStatus:
    type: string
    enum:
    - available
    - attaching
    - in-use
    - detaching
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NetworkInterfaceType:
    type: string
    enum:
    - interface
    - natGateway
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NewDhcpConfigurationList:
    type: array
    items:
      type: NewDhcpConfiguration
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  NextToken:
    type: string
    minLength: 1
    maxLength: 1024
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  OccurrenceDayRequestSet:
    type: array
    items:
      type: Integer
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  OccurrenceDaySet:
    type: array
    items:
      type: Integer
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  OfferingTypeValues:
    type: string
    enum:
    - Heavy Utilization
    - Medium Utilization
    - Light Utilization
    - No Upfront
    - Partial Upfront
    - All Upfront
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  OperationType:
    type: string
    enum:
    - add
    - remove
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  OwnerStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PaymentOption:
    type: string
    enum:
    - AllUpfront
    - PartialUpfront
    - NoUpfront
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PermissionGroup:
    type: string
    enum:
    - all
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PlacementGroupList:
    type: array
    items:
      type: PlacementGroup
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PlacementGroupState:
    type: string
    enum:
    - pending
    - available
    - deleting
    - deleted
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PlacementGroupStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PlacementStrategy:
    type: string
    enum:
    - cluster
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PlatformValues:
    type: string
    enum:
    - Windows
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PrefixListIdList:
    type: array
    items:
      type: PrefixListId
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PrefixListIdSet:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PrefixListSet:
    type: array
    items:
      type: PrefixList
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PriceScheduleList:
    type: array
    items:
      type: PriceSchedule
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PriceScheduleSpecificationList:
    type: array
    items:
      type: PriceScheduleSpecification
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PricingDetailsList:
    type: array
    items:
      type: PricingDetail
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PrivateIpAddressConfigSet:
    type: array
    items:
      type: ScheduledInstancesPrivateIpAddressConfig
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PrivateIpAddressSpecificationList:
    type: array
    items:
      type: PrivateIpAddressSpecification
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PrivateIpAddressStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ProductCodeList:
    type: array
    items:
      type: ProductCode
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ProductCodeStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ProductCodeValues:
    type: string
    enum:
    - devpay
    - marketplace
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ProductDescriptionList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PropagatingVgwList:
    type: array
    items:
      type: PropagatingVgw
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PublicIpStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PurchaseRequestSet:
    type: array
    minItems: 1
    items:
      type: PurchaseRequest
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PurchaseSet:
    type: array
    items:
      type: Purchase
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PurchasedScheduledInstanceSet:
    type: array
    items:
      type: ScheduledInstance
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RIProductDescription:
    type: string
    enum:
    - Linux/UNIX
    - Linux/UNIX (Amazon VPC)
    - Windows
    - Windows (Amazon VPC)
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReasonCodesList:
    type: array
    items:
      type: ReportInstanceReasonCodes
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RecurringChargeFrequency:
    type: string
    enum:
    - Hourly
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RecurringChargesList:
    type: array
    items:
      type: RecurringCharge
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RegionList:
    type: array
    items:
      type: Region
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RegionNameStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReportInstanceReasonCodes:
    type: string
    enum:
    - instance-stuck-in-state
    - unresponsive
    - not-accepting-credentials
    - password-not-available
    - performance-network
    - performance-instance-store
    - performance-ebs-volume
    - performance-other
    - other
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReportStatusType:
    type: string
    enum:
    - ok
    - impaired
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RequestHostIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RequestHostIdSet:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservationList:
    type: array
    items:
      type: Reservation
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservationState:
    type: string
    enum:
    - payment-pending
    - payment-failed
    - active
    - retired
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstanceState:
    type: string
    enum:
    - payment-pending
    - active
    - payment-failed
    - retired
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesConfigurationList:
    type: array
    items:
      type: ReservedInstancesConfiguration
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesList:
    type: array
    items:
      type: ReservedInstances
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesListingList:
    type: array
    items:
      type: ReservedInstancesListing
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesModificationIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesModificationList:
    type: array
    items:
      type: ReservedInstancesModification
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesModificationResultList:
    type: array
    items:
      type: ReservedInstancesModificationResult
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesOfferingIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedInstancesOfferingList:
    type: array
    items:
      type: ReservedInstancesOffering
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ReservedIntancesIds:
    type: array
    items:
      type: ReservedInstancesId
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ResetImageAttributeName:
    type: string
    enum:
    - launchPermission
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ResourceIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ResourceType:
    type: string
    enum:
    - customer-gateway
    - dhcp-options
    - image
    - instance
    - internet-gateway
    - network-acl
    - network-interface
    - reserved-instances
    - route-table
    - snapshot
    - spot-instances-request
    - subnet
    - security-group
    - volume
    - vpc
    - vpn-connection
    - vpn-gateway
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ResponseHostIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ResponseHostIdSet:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RestorableByStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RouteList:
    type: array
    items:
      type: Route
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RouteOrigin:
    type: string
    enum:
    - CreateRouteTable
    - CreateRoute
    - EnableVgwRoutePropagation
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RouteState:
    type: string
    enum:
    - active
    - blackhole
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RouteTableAssociationList:
    type: array
    items:
      type: RouteTableAssociation
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RouteTableList:
    type: array
    items:
      type: RouteTable
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  RuleAction:
    type: string
    enum:
    - allow
    - deny
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ScheduledInstanceAvailabilitySet:
    type: array
    items:
      type: ScheduledInstanceAvailability
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ScheduledInstanceIdRequestSet:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ScheduledInstanceSet:
    type: array
    items:
      type: ScheduledInstance
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ScheduledInstancesBlockDeviceMappingSet:
    type: array
    items:
      type: ScheduledInstancesBlockDeviceMapping
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ScheduledInstancesNetworkInterfaceSet:
    type: array
    items:
      type: ScheduledInstancesNetworkInterface
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ScheduledInstancesSecurityGroupIdSet:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SecurityGroupIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SecurityGroupList:
    type: array
    items:
      type: SecurityGroup
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SecurityGroupReferences:
    type: array
    items:
      type: SecurityGroupReference
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SecurityGroupStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ShutdownBehavior:
    type: string
    enum:
    - stop
    - terminate
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SnapshotAttributeName:
    type: string
    enum:
    - productCodes
    - createVolumePermission
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SnapshotDetailList:
    type: array
    items:
      type: SnapshotDetail
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SnapshotIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SnapshotList:
    type: array
    items:
      type: Snapshot
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SnapshotState:
    type: string
    enum:
    - pending
    - completed
    - error
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SpotFleetRequestConfigSet:
    type: array
    items:
      type: SpotFleetRequestConfig
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SpotInstanceRequestIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SpotInstanceRequestList:
    type: array
    items:
      type: SpotInstanceRequest
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SpotInstanceState:
    type: string
    enum:
    - open
    - active
    - closed
    - cancelled
    - failed
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SpotInstanceType:
    type: string
    enum:
    - one-time
    - persistent
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SpotPriceHistoryList:
    type: array
    items:
      type: SpotPrice
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  StaleIpPermissionSet:
    type: array
    items:
      type: StaleIpPermission
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  StaleSecurityGroupSet:
    type: array
    items:
      type: StaleSecurityGroup
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  State:
    type: string
    enum:
    - Pending
    - Available
    - Deleting
    - Deleted
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Status:
    type: string
    enum:
    - MoveInProgress
    - InVpc
    - InClassic
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  StatusName:
    type: string
    enum:
    - reachability
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  StatusType:
    type: string
    enum:
    - passed
    - failed
    - insufficient-data
    - initializing
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  String:
    type: string
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SubnetIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SubnetList:
    type: array
    items:
      type: Subnet
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SubnetState:
    type: string
    enum:
    - pending
    - available
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  SummaryStatus:
    type: string
    enum:
    - ok
    - impaired
    - insufficient-data
    - not-applicable
    - initializing
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  TagDescriptionList:
    type: array
    items:
      type: TagDescription
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  TagList:
    type: array
    items:
      type: Tag
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  TelemetryStatus:
    type: string
    enum:
    - UP
    - DOWN
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  Tenancy:
    type: string
    enum:
    - default
    - dedicated
    - host
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  TrafficType:
    type: string
    enum:
    - ACCEPT
    - REJECT
    - ALL
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  UnsuccessfulItemList:
    type: array
    items:
      type: UnsuccessfulItem
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  UnsuccessfulItemSet:
    type: array
    items:
      type: UnsuccessfulItem
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  UserGroupStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  UserIdGroupPairList:
    type: array
    items:
      type: UserIdGroupPair
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  UserIdGroupPairSet:
    type: array
    items:
      type: UserIdGroupPair
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  UserIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ValueStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VgwTelemetryList:
    type: array
    items:
      type: VgwTelemetry
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VirtualizationType:
    type: string
    enum:
    - hvm
    - paravirtual
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeAttachmentList:
    type: array
    items:
      type: VolumeAttachment
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeAttachmentState:
    type: string
    enum:
    - attaching
    - attached
    - detaching
    - detached
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeAttributeName:
    type: string
    enum:
    - autoEnableIO
    - productCodes
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeList:
    type: array
    items:
      type: Volume
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeState:
    type: string
    enum:
    - creating
    - available
    - in-use
    - deleting
    - deleted
    - error
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeStatusActionsList:
    type: array
    items:
      type: VolumeStatusAction
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeStatusDetailsList:
    type: array
    items:
      type: VolumeStatusDetails
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeStatusEventsList:
    type: array
    items:
      type: VolumeStatusEvent
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeStatusInfoStatus:
    type: string
    enum:
    - ok
    - impaired
    - insufficient-data
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeStatusList:
    type: array
    items:
      type: VolumeStatusItem
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeStatusName:
    type: string
    enum:
    - io-enabled
    - io-performance
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VolumeType:
    type: string
    enum:
    - standard
    - io1
    - gp2
    - sc1
    - st1
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcAttachmentList:
    type: array
    items:
      type: VpcAttachment
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcAttributeName:
    type: string
    enum:
    - enableDnsSupport
    - enableDnsHostnames
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcClassicLinkIdList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcClassicLinkList:
    type: array
    items:
      type: VpcClassicLink
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcEndpointSet:
    type: array
    items:
      type: VpcEndpoint
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcList:
    type: array
    items:
      type: Vpc
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcPeeringConnectionList:
    type: array
    items:
      type: VpcPeeringConnection
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcPeeringConnectionStateReasonCode:
    type: string
    enum:
    - initiating-request
    - pending-acceptance
    - active
    - deleted
    - rejected
    - failed
    - expired
    - provisioning
    - deleting
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpcState:
    type: string
    enum:
    - pending
    - available
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpnConnectionIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpnConnectionList:
    type: array
    items:
      type: VpnConnection
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpnGatewayIdStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpnGatewayList:
    type: array
    items:
      type: VpnGateway
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpnState:
    type: string
    enum:
    - pending
    - available
    - deleting
    - deleted
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpnStaticRouteList:
    type: array
    items:
      type: VpnStaticRoute
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  VpnStaticRouteSource:
    type: string
    enum:
    - Static
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ZoneNameStringList:
    type: array
    items:
      type: String
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  AcceptVpcPeeringConnectionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcPeeringConnectionId?:
        type: String
        description: <p>The ID of the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AcceptVpcPeeringConnection.</p>
  AcceptVpcPeeringConnectionResult:
    type: object
    properties:
      vpcPeeringConnection?:
        type: VpcPeeringConnection
        description: <p>Information about the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AcceptVpcPeeringConnection.</p>
  AccountAttribute:
    type: object
    properties:
      attributeName?:
        type: String
        description: <p>The name of the account attribute.</p>
      attributeValueSet?:
        type: AccountAttributeValueList
        description: <p>One or more values for the account attribute.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an account attribute.</p>
  AccountAttributeValue:
    type: object
    properties:
      attributeValue?:
        type: String
        description: <p>The value of the attribute.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a value of an account attribute.</p>
  ActiveInstance:
    type: object
    properties:
      instanceType?:
        type: String
        description: <p>The instance type.</p>
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      spotInstanceRequestId?:
        type: String
        description: <p>The ID of the Spot instance request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a running instance in a Spot fleet.</p>
  Address:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance that the address is associated with (if any).</p>
      publicIp?:
        type: String
        description: <p>The Elastic IP address.</p>
      allocationId?:
        type: String
        description: <p>The ID representing the allocation of the address for use with EC2-VPC.</p>
      associationId?:
        type: String
        description: <p>The ID representing the association of the address with an instance in a VPC.</p>
      domain?:
        type: DomainType
        description: <p>Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).</p>
      networkInterfaceId?:
        type: String
        description: <p>The ID of the network interface.</p>
      networkInterfaceOwnerId?:
        type: String
        description: <p>The ID of the AWS account that owns the network interface.</p>
      privateIpAddress?:
        type: String
        description: <p>The private IP address associated with the Elastic IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an Elastic IP address.</p>
  AllocateAddressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Domain?:
        type: DomainType
        description: '<p>Set to <code>vpc</code> to allocate the address for use with
          instances in a VPC.</p> <p>Default: The address is for use with instances
          in EC2-Classic.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AllocateAddress.</p>
  AllocateAddressResult:
    type: object
    properties:
      publicIp?:
        type: String
        description: <p>The Elastic IP address.</p>
      domain?:
        type: DomainType
        description: <p>Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).</p>
      allocationId?:
        type: String
        description: <p>[EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AllocateAddress.</p>
  AllocateHostsRequest:
    type: object
    properties:
      autoPlacement?:
        type: AutoPlacement
        description: '<p>This is enabled by default. This property allows instances
          to be automatically placed onto available Dedicated Hosts, when you are
          launching instances without specifying a host ID.</p> <p>Default: Enabled</p>'
      clientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p>
      instanceType:
        type: String
        description: <p>Specify the instance type that you want your Dedicated Hosts to be configured for. When you specify the instance type, that is the only instance type that you can launch onto that host.</p>
      quantity:
        type: Integer
        description: <p>The number of Dedicated Hosts you want to allocate to your account with these parameters.</p>
      availabilityZone:
        type: String
        description: <p>The Availability Zone for the Dedicated Hosts.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AllocateHosts.</p>
  AllocateHostsResult:
    type: object
    properties:
      hostIdSet?:
        type: ResponseHostIdList
        description: <p>The ID of the allocated Dedicated Host. This is used when you want to launch an instance onto a specific host.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AllocateHosts.</p>
  AssignPrivateIpAddressesRequest:
    type: object
    properties:
      networkInterfaceId:
        type: String
        description: <p>The ID of the network interface.</p>
      privateIpAddress?:
        type: PrivateIpAddressStringList
        description: <p>One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.</p> <p>If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>
      secondaryPrivateIpAddressCount?:
        type: Integer
        description: <p>The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.</p>
      allowReassignment?:
        type: Boolean
        description: <p>Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AssignPrivateIpAddresses.</p>
  AssociateAddressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId?:
        type: String
        description: <p>The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached.</p>
      PublicIp?:
        type: String
        description: <p>The Elastic IP address. This is required for EC2-Classic.</p>
      AllocationId?:
        type: String
        description: <p>[EC2-VPC] The allocation ID. This is required for EC2-VPC.</p>
      networkInterfaceId?:
        type: String
        description: <p>[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.</p>
      privateIpAddress?:
        type: String
        description: <p>[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.</p>
      allowReassociation?:
        type: Boolean
        description: <p>[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AssociateAddress.</p>
  AssociateAddressResult:
    type: object
    properties:
      associationId?:
        type: String
        description: <p>[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AssociateAddress.</p>
  AssociateDhcpOptionsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      DhcpOptionsId:
        type: String
        description: <p>The ID of the DHCP options set, or <code>default</code> to associate no DHCP options with the VPC.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AssociateDhcpOptions.</p>
  AssociateRouteTableRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      subnetId:
        type: String
        description: <p>The ID of the subnet.</p>
      routeTableId:
        type: String
        description: <p>The ID of the route table.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AssociateRouteTable.</p>
  AssociateRouteTableResult:
    type: object
    properties:
      associationId?:
        type: String
        description: <p>The route table association ID (needed to disassociate the route table).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AssociateRouteTable.</p>
  AttachClassicLinkVpcRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      instanceId:
        type: String
        description: <p>The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.</p>
      vpcId:
        type: String
        description: <p>The ID of a ClassicLink-enabled VPC.</p>
      SecurityGroupId:
        type: GroupIdStringList
        description: <p>The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AttachClassicLinkVpc.</p>
  AttachClassicLinkVpcResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AttachClassicLinkVpc.</p>
  AttachInternetGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      internetGatewayId:
        type: String
        description: <p>The ID of the Internet gateway.</p>
      vpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AttachInternetGateway.</p>
  AttachNetworkInterfaceRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkInterfaceId:
        type: String
        description: <p>The ID of the network interface.</p>
      instanceId:
        type: String
        description: <p>The ID of the instance.</p>
      deviceIndex:
        type: Integer
        description: <p>The index of the device for the network interface attachment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AttachNetworkInterface.</p>
  AttachNetworkInterfaceResult:
    type: object
    properties:
      attachmentId?:
        type: String
        description: <p>The ID of the network interface attachment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AttachNetworkInterface.</p>
  AttachVolumeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId:
        type: String
        description: <p>The ID of the EBS volume. The volume and instance must be within the same Availability Zone.</p>
      InstanceId:
        type: String
        description: <p>The ID of the instance.</p>
      Device:
        type: String
        description: <p>The device name to expose to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AttachVolume.</p>
  AttachVpnGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpnGatewayId:
        type: String
        description: <p>The ID of the virtual private gateway.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AttachVpnGateway.</p>
  AttachVpnGatewayResult:
    type: object
    properties:
      attachment?:
        type: VpcAttachment
        description: <p>Information about the attachment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of AttachVpnGateway.</p>
  AttributeBooleanValue:
    type: object
    properties:
      value?:
        type: Boolean
        description: <p>The attribute value. The valid values are <code>true</code> or <code>false</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a value for a resource attribute that is a Boolean value.</p>
  AttributeValue:
    type: object
    properties:
      value?:
        type: String
        description: <p>The attribute value. Note that the value is case-sensitive.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a value for a resource attribute that is a String.</p>
  AuthorizeSecurityGroupEgressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      groupId:
        type: String
        description: <p>The ID of the security group.</p>
      sourceSecurityGroupName?:
        type: String
        description: <p>The name of a destination security group. To authorize outbound access to a destination security group, we recommend that you use a set of IP permissions instead.</p>
      sourceSecurityGroupOwnerId?:
        type: String
        description: <p>The AWS account number for a destination security group. To authorize outbound access to a destination security group, we recommend that you use a set of IP permissions instead.</p>
      ipProtocol?:
        type: String
        description: <p>The IP protocol name or number. We recommend that you specify the protocol in a set of IP permissions instead.</p>
      fromPort?:
        type: Integer
        description: <p>The start of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.</p>
      toPort?:
        type: Integer
        description: <p>The end of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.</p>
      cidrIp?:
        type: String
        description: <p>The CIDR IP address range. We recommend that you specify the CIDR range in a set of IP permissions instead.</p>
      ipPermissions?:
        type: IpPermissionList
        description: <p>A set of IP permissions. You can't specify a destination security group and a CIDR IP address range.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AuthorizeSecurityGroupEgress.</p>
  AuthorizeSecurityGroupIngressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      GroupName?:
        type: String
        description: <p>[EC2-Classic, default VPC] The name of the security group.</p>
      GroupId?:
        type: String
        description: <p>The ID of the security group. Required for a nondefault VPC.</p>
      SourceSecurityGroupName?:
        type: String
        description: '<p>[EC2-Classic, default VPC] The name of the source security
          group. You can''t specify this parameter in combination with the following
          parameters: the CIDR IP address range, the start of the port range, the
          IP protocol, and the end of the port range. Creates rules that grant full
          ICMP, UDP, and TCP access. To create a rule with a specific IP protocol
          and port range, use a set of IP permissions instead. For EC2-VPC, the source
          security group must be in the same VPC.</p>'
      SourceSecurityGroupOwnerId?:
        type: String
        description: '<p>[EC2-Classic] The AWS account number for the source security
          group, if the source security group is in a different account. You can''t
          specify this parameter in combination with the following parameters: the
          CIDR IP address range, the IP protocol, the start of the port range, and
          the end of the port range. Creates rules that grant full ICMP, UDP, and
          TCP access. To create a rule with a specific IP protocol and port range,
          use a set of IP permissions instead.</p>'
      IpProtocol?:
        type: String
        description: <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). (VPC only) Use <code>-1</code> to specify all traffic. If you specify <code>-1</code>, traffic on all ports is allowed, regardless of any ports you specify.</p>
      FromPort?:
        type: Integer
        description: <p>The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types.</p>
      ToPort?:
        type: Integer
        description: <p>The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type.</p>
      CidrIp?:
        type: String
        description: <p>The CIDR IP address range. You can't specify this parameter when specifying a source security group.</p>
      IpPermissions?:
        type: IpPermissionList
        description: <p>A set of IP permissions. Can be used to specify multiple rules in a single command.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for AuthorizeSecurityGroupIngress.</p>
  AvailabilityZone:
    type: object
    properties:
      zoneName?:
        type: String
        description: <p>The name of the Availability Zone.</p>
      zoneState?:
        type: AvailabilityZoneState
        description: <p>The state of the Availability Zone.</p>
      regionName?:
        type: String
        description: <p>The name of the region.</p>
      messageSet?:
        type: AvailabilityZoneMessageList
        description: <p>Any messages about the Availability Zone.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an Availability Zone.</p>
  AvailabilityZoneMessage:
    type: object
    properties:
      message?:
        type: String
        description: <p>The message about the Availability Zone.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a message about an Availability Zone.</p>
  AvailableCapacity:
    type: object
    properties:
      availableInstanceCapacity?:
        type: AvailableInstanceCapacityList
        description: <p>The total number of instances that the Dedicated Host supports.</p>
      availableVCpus?:
        type: Integer
        description: <p>The number of vCPUs available on the Dedicated Host.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>The capacity information for instances launched onto the Dedicated Host.</p>
  BlobAttributeValue:
    type: object
    properties:
      value?:
        type: Blob
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  BlockDeviceMapping:
    type: object
    properties:
      virtualName?:
        type: String
        description: '<p>The virtual device name (<code>ephemeral</code>N). Instance
          store volumes are numbered starting from 0. An instance type with 2 available
          instance store volumes can specify mappings for <code>ephemeral0</code>
          and <code>ephemeral1</code>.The number of available instance store volumes
          depends on the instance type. After you connect to the instance, you must
          mount the volume.</p> <p>Constraints: For M3 instances, you must specify
          instance store volumes in the block device mapping for the instance. When
          you launch an M3 instance, we ignore any instance store volumes specified
          in the block device mapping for the AMI.</p>'
      deviceName?:
        type: String
        description: <p>The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
      ebs?:
        type: EbsBlockDevice
        description: <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
      noDevice?:
        type: String
        description: <p>Suppresses the specified device included in the block device mapping of the AMI.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a block device mapping.</p>
  BundleInstanceRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: String
        description: '<p>The ID of the instance to bundle.</p> <p>Type: String</p>
          <p>Default: None</p> <p>Required: Yes</p>'
      Storage:
        type: Storage
        description: <p>The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for BundleInstance.</p>
  BundleInstanceResult:
    type: object
    properties:
      bundleInstanceTask?:
        type: BundleTask
        description: <p>Information about the bundle task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of BundleInstance.</p>
  BundleTask:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance associated with this bundle task.</p>
      bundleId?:
        type: String
        description: <p>The ID of the bundle task.</p>
      state?:
        type: BundleTaskState
        description: <p>The state of the task.</p>
      startTime?:
        type: DateTime
        description: <p>The time this task started.</p>
      updateTime?:
        type: DateTime
        description: <p>The time of the most recent update for the task.</p>
      storage?:
        type: Storage
        description: <p>The Amazon S3 storage locations.</p>
      progress?:
        type: String
        description: <p>The level of task completion, as a percent (for example, 20%).</p>
      error?:
        type: BundleTaskError
        description: <p>If the task fails, a description of the error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a bundle task.</p>
  BundleTaskError:
    type: object
    properties:
      code?:
        type: String
        description: <p>The error code.</p>
      message?:
        type: String
        description: <p>The error message.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an error for <a>BundleInstance</a>.</p>
  CancelBundleTaskRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      BundleId:
        type: String
        description: <p>The ID of the bundle task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CancelBundleTask.</p>
  CancelBundleTaskResult:
    type: object
    properties:
      bundleInstanceTask?:
        type: BundleTask
        description: <p>Information about the bundle task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CancelBundleTask.</p>
  CancelConversionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      conversionTaskId:
        type: String
        description: <p>The ID of the conversion task.</p>
      reasonMessage?:
        type: String
        description: <p>The reason for canceling the conversion task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CancelConversionTask.</p>
  CancelExportTaskRequest:
    type: object
    properties:
      exportTaskId:
        type: String
        description: <p>The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CancelExportTask.</p>
  CancelImportTaskRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImportTaskId?:
        type: String
        description: <p>The ID of the import image or import snapshot task to be canceled.</p>
      CancelReason?:
        type: String
        description: <p>The reason for canceling the task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CancelImportTask.</p>
  CancelImportTaskResult:
    type: object
    properties:
      importTaskId?:
        type: String
        description: <p>The ID of the task being canceled.</p>
      state?:
        type: String
        description: <p>The current state of the task being canceled.</p>
      previousState?:
        type: String
        description: <p>The current state of the task being canceled.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for CancelImportTask.</p>
  CancelReservedInstancesListingRequest:
    type: object
    properties:
      reservedInstancesListingId:
        type: String
        description: <p>The ID of the Reserved Instance listing.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CancelReservedInstancesListing.</p>
  CancelReservedInstancesListingResult:
    type: object
    properties:
      reservedInstancesListingsSet?:
        type: ReservedInstancesListingList
        description: <p>The Reserved Instance listing.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CancelReservedInstancesListing.</p>
  CancelSpotFleetRequestsError:
    type: object
    properties:
      code:
        type: CancelBatchErrorCode
        description: <p>The error code.</p>
      message:
        type: String
        description: <p>The description for the error code.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Spot fleet error.</p>
  CancelSpotFleetRequestsErrorItem:
    type: object
    properties:
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      error:
        type: CancelSpotFleetRequestsError
        description: <p>The error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Spot fleet request that was not successfully canceled.</p>
  CancelSpotFleetRequestsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      spotFleetRequestId:
        type: ValueStringList
        description: <p>The IDs of the Spot fleet requests.</p>
      terminateInstances:
        type: Boolean
        description: <p>Indicates whether to terminate instances for a Spot fleet request if it is canceled successfully.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CancelSpotFleetRequests.</p>
  CancelSpotFleetRequestsResponse:
    type: object
    properties:
      unsuccessfulFleetRequestSet?:
        type: CancelSpotFleetRequestsErrorSet
        description: <p>Information about the Spot fleet requests that are not successfully canceled.</p>
      successfulFleetRequestSet?:
        type: CancelSpotFleetRequestsSuccessSet
        description: <p>Information about the Spot fleet requests that are successfully canceled.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CancelSpotFleetRequests.</p>
  CancelSpotFleetRequestsSuccessItem:
    type: object
    properties:
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      currentSpotFleetRequestState:
        type: BatchState
        description: <p>The current state of the Spot fleet request.</p>
      previousSpotFleetRequestState:
        type: BatchState
        description: <p>The previous state of the Spot fleet request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Spot fleet request that was successfully canceled.</p>
  CancelSpotInstanceRequestsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SpotInstanceRequestId:
        type: SpotInstanceRequestIdList
        description: <p>One or more Spot instance request IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CancelSpotInstanceRequests.</p>
  CancelSpotInstanceRequestsResult:
    type: object
    properties:
      spotInstanceRequestSet?:
        type: CancelledSpotInstanceRequestList
        description: <p>One or more Spot instance requests.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CancelSpotInstanceRequests.</p>
  CancelledSpotInstanceRequest:
    type: object
    properties:
      spotInstanceRequestId?:
        type: String
        description: <p>The ID of the Spot instance request.</p>
      state?:
        type: CancelSpotInstanceRequestState
        description: <p>The state of the Spot instance request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a request to cancel a Spot instance.</p>
  ClassicLinkDnsSupport:
    type: object
    properties:
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      classicLinkDnsSupported?:
        type: Boolean
        description: <p>Indicates whether ClassicLink DNS support is enabled for the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the ClassicLink DNS support status of a VPC.</p>
  ClassicLinkInstance:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>A list of security groups.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a linked EC2-Classic instance.</p>
  ClientData:
    type: object
    properties:
      UploadStart?:
        type: DateTime
        description: <p>The time that the disk upload starts.</p>
      UploadEnd?:
        type: DateTime
        description: <p>The time that the disk upload ends.</p>
      UploadSize?:
        type: Double
        description: <p>The size of the uploaded disk image, in GiB.</p>
      Comment?:
        type: String
        description: <p>A user-defined comment about the disk upload.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the client-specific data.</p>
  ConfirmProductInstanceRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ProductCode:
        type: String
        description: <p>The product code. This must be a product code that you own.</p>
      InstanceId:
        type: String
        description: <p>The ID of the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ConfirmProductInstance.</p>
  ConfirmProductInstanceResult:
    type: object
    properties:
      ownerId?:
        type: String
        description: <p>The AWS account ID of the instance owner. This is only present if the product code is attached to the instance.</p>
      return?:
        type: Boolean
        description: <p>The return value of the request. Returns <code>true</code> if the specified product code is owned by the requester and associated with the specified instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ConfirmProductInstance.</p>
  ConversionTask:
    type: object
    properties:
      conversionTaskId:
        type: String
        description: <p>The ID of the conversion task.</p>
      expirationTime?:
        type: String
        description: <p>The time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel the task.</p>
      importInstance?:
        type: ImportInstanceTaskDetails
        description: <p>If the task is for importing an instance, this contains information about the import instance task.</p>
      importVolume?:
        type: ImportVolumeTaskDetails
        description: <p>If the task is for importing a volume, this contains information about the import volume task.</p>
      state:
        type: ConversionTaskState
        description: <p>The state of the conversion task.</p>
      statusMessage?:
        type: String
        description: <p>The status message related to the conversion task.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a conversion task.</p>
  CopyImageRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SourceRegion:
        type: String
        description: <p>The name of the region that contains the AMI to copy.</p>
      SourceImageId:
        type: String
        description: <p>The ID of the AMI to copy.</p>
      Name:
        type: String
        description: <p>The name of the new AMI in the destination region.</p>
      Description?:
        type: String
        description: <p>A description for the new AMI in the destination region.</p>
      ClientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      encrypted?:
        type: Boolean
        description: <p>Specifies whether the destination snapshots of the copied image should be encrypted. The default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with <code>KmsKeyId</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      kmsKeyId?:
        type: String
        description: <p>The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of an image during a copy operation. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. The specified CMK must exist in the region that the snapshot is being copied to. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CopyImage.</p>
  CopyImageResult:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the new AMI.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CopyImage.</p>
  CopySnapshotRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SourceRegion:
        type: String
        description: <p>The ID of the region that contains the snapshot to be copied.</p>
      SourceSnapshotId:
        type: String
        description: <p>The ID of the EBS snapshot to copy.</p>
      Description?:
        type: String
        description: <p>A description for the EBS snapshot.</p>
      destinationRegion?:
        type: String
        description: <p>The destination region to use in the <code>PresignedUrl</code> parameter of a snapshot copy operation. This parameter is only valid for specifying the destination region in a <code>PresignedUrl</code> parameter, where it is required.</p> <note> <p> <code>CopySnapshot</code> sends the snapshot copy to the regional endpoint that you send the HTTP request to, such as <code>ec2.us-east-1.amazonaws.com</code> (in the AWS CLI, this is specified with the <code>--region</code> parameter or the default region in your AWS configuration file).</p> </note>
      presignedUrl?:
        type: String
        description: <p>The pre-signed URL that facilitates copying an encrypted snapshot. This parameter is only required when copying an encrypted snapshot with the Amazon EC2 Query API; it is available as an optional parameter in all other cases. The <code>PresignedUrl</code> should use the snapshot source endpoint, the <code>CopySnapshot</code> action, and include the <code>SourceRegion</code>, <code>SourceSnapshotId</code>, and <code>DestinationRegion</code> parameters. The <code>PresignedUrl</code> must be signed using AWS Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests by Using Query Parameters (AWS Signature Version 4)</a> in the <i>Amazon Simple Storage Service API Reference</i>. An invalid or improperly signed <code>PresignedUrl</code> will cause the copy operation to fail asynchronously, and the snapshot will move to an <code>error</code> state.</p>
      encrypted?:
        type: Boolean
        description: <p>Specifies whether the destination snapshot should be encrypted. You can encrypt a copy of an unencrypted snapshot using this flag, but you cannot use it to create an unencrypted copy from an encrypted snapshot. Your default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with <code>KmsKeyId</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      kmsKeyId?:
        type: String
        description: <p>The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when creating the snapshot copy. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. The specified CMK must exist in the region that the snapshot is being copied to. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CopySnapshot.</p>
  CopySnapshotResult:
    type: object
    properties:
      snapshotId?:
        type: String
        description: <p>The ID of the new snapshot.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CopySnapshot.</p>
  CreateCustomerGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Type:
        type: GatewayType
        description: <p>The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).</p>
      IpAddress:
        type: String
        description: <p>The Internet-routable IP address for the customer gateway's outside interface. The address must be static.</p>
      BgpAsn:
        type: Integer
        description: '<p>For devices that support BGP, the customer gateway''s BGP
          ASN.</p> <p>Default: 65000</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateCustomerGateway.</p>
  CreateCustomerGatewayResult:
    type: object
    properties:
      customerGateway?:
        type: CustomerGateway
        description: <p>Information about the customer gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateCustomerGateway.</p>
  CreateDhcpOptionsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      dhcpConfiguration:
        type: NewDhcpConfigurationList
        description: <p>A DHCP configuration option.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateDhcpOptions.</p>
  CreateDhcpOptionsResult:
    type: object
    properties:
      dhcpOptions?:
        type: DhcpOptions
        description: <p>A set of DHCP options.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateDhcpOptions.</p>
  CreateFlowLogsRequest:
    type: object
    properties:
      ResourceId:
        type: ValueStringList
        description: '<p>One or more subnet, network interface, or VPC IDs.</p> <p>Constraints:
          Maximum of 1000 resources</p>'
      ResourceType:
        type: FlowLogsResourceType
        description: <p>The type of resource on which to create the flow log.</p>
      TrafficType:
        type: TrafficType
        description: <p>The type of traffic to log.</p>
      LogGroupName:
        type: String
        description: <p>The name of the CloudWatch log group.</p>
      DeliverLogsPermissionArn:
        type: String
        description: <p>The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group.</p>
      ClientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateFlowLogs.</p>
  CreateFlowLogsResult:
    type: object
    properties:
      flowLogIdSet?:
        type: ValueStringList
        description: <p>The IDs of the flow logs.</p>
      clientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request.</p>
      unsuccessful?:
        type: UnsuccessfulItemSet
        description: <p>Information about the flow logs that could not be created successfully.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateFlowLogs.</p>
  CreateImageRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      instanceId:
        type: String
        description: <p>The ID of the instance.</p>
      name:
        type: String
        description: '<p>A name for the new image.</p> <p>Constraints: 3-128 alphanumeric
          characters, parentheses (()), square brackets ([]), spaces ( ), periods
          (.), slashes (/), dashes (-), single quotes (''), at-signs (@), or underscores(_)</p>'
      description?:
        type: String
        description: <p>A description for the new image.</p>
      noReboot?:
        type: Boolean
        description: <p>By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the 'No Reboot' option is set, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed.</p>
      blockDeviceMapping?:
        type: BlockDeviceMappingRequestList
        description: <p>Information about one or more block device mappings.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateImage.</p>
  CreateImageResult:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the new AMI.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateImage.</p>
  CreateInstanceExportTaskRequest:
    type: object
    properties:
      description?:
        type: String
        description: <p>A description for the conversion task or the resource being exported. The maximum length is 255 bytes.</p>
      instanceId:
        type: String
        description: <p>The ID of the instance.</p>
      targetEnvironment?:
        type: ExportEnvironment
        description: <p>The target virtualization environment.</p>
      exportToS3?:
        type: ExportToS3TaskSpecification
        description: <p>The format and location for an instance export task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateInstanceExportTask.</p>
  CreateInstanceExportTaskResult:
    type: object
    properties:
      exportTask?:
        type: ExportTask
        description: <p>Information about the instance export task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for CreateInstanceExportTask.</p>
  CreateInternetGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateInternetGateway.</p>
  CreateInternetGatewayResult:
    type: object
    properties:
      internetGateway?:
        type: InternetGateway
        description: <p>Information about the Internet gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateInternetGateway.</p>
  CreateKeyPairRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      KeyName:
        type: String
        description: '<p>A unique name for the key pair.</p> <p>Constraints: Up to
          255 ASCII characters</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateKeyPair.</p>
  CreateNatGatewayRequest:
    type: object
    properties:
      SubnetId:
        type: String
        description: <p>The subnet in which to create the NAT gateway.</p>
      AllocationId:
        type: String
        description: <p>The allocation ID of an Elastic IP address to associate with the NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.</p>
      ClientToken?:
        type: String
        description: '<p>Unique, case-sensitive identifier you provide to ensure the
          idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
          to Ensure Idempotency</a>.</p> <p>Constraint: Maximum 64 ASCII characters.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateNatGateway.</p>
  CreateNatGatewayResult:
    type: object
    properties:
      natGateway?:
        type: NatGateway
        description: <p>Information about the NAT gateway.</p>
      clientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateNatGateway.</p>
  CreateNetworkAclEntryRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkAclId:
        type: String
        description: <p>The ID of the network ACL.</p>
      ruleNumber:
        type: Integer
        description: '<p>The rule number for the entry (for example, 100). ACL entries
          are processed in ascending order by rule number.</p> <p>Constraints: Positive
          integer from 1 to 32766. The range 32767 to 65535 is reserved for internal
          use.</p>'
      protocol:
        type: String
        description: <p>The protocol. A value of -1 means all protocols.</p>
      ruleAction:
        type: RuleAction
        description: <p>Indicates whether to allow or deny the traffic that matches the rule.</p>
      egress:
        type: Boolean
        description: <p>Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).</p>
      cidrBlock:
        type: String
        description: <p>The network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).</p>
      Icmp?:
        type: IcmpTypeCode
        description: '<p>ICMP protocol: The ICMP type and code. Required if specifying
          ICMP for the protocol.</p>'
      portRange?:
        type: PortRange
        description: '<p>TCP or UDP protocols: The range of ports the rule applies
          to.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateNetworkAclEntry.</p>
  CreateNetworkAclRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateNetworkAcl.</p>
  CreateNetworkAclResult:
    type: object
    properties:
      networkAcl?:
        type: NetworkAcl
        description: <p>Information about the network ACL.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateNetworkAcl.</p>
  CreateNetworkInterfaceRequest:
    type: object
    properties:
      subnetId:
        type: String
        description: <p>The ID of the subnet to associate with the network interface.</p>
      description?:
        type: String
        description: <p>A description for the network interface.</p>
      privateIpAddress?:
        type: String
        description: <p>The primary private IP address of the network interface. If you don't specify an IP address, Amazon EC2 selects one for you from the subnet range. If you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code> as primary (only one IP address can be designated as primary).</p>
      SecurityGroupId?:
        type: SecurityGroupIdStringList
        description: <p>The IDs of one or more security groups.</p>
      privateIpAddresses?:
        type: PrivateIpAddressSpecificationList
        description: <p>One or more private IP addresses.</p>
      secondaryPrivateIpAddressCount?:
        type: Integer
        description: <p>The number of secondary private IP addresses to assign to a network interface. When you specify a number of secondary IP addresses, Amazon EC2 selects these IP addresses within the subnet range. You can't specify this option and specify more than one private IP address using <code>privateIpAddresses</code>.</p> <p>The number of IP addresses you can assign to a network interface varies by instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">Private IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateNetworkInterface.</p>
  CreateNetworkInterfaceResult:
    type: object
    properties:
      networkInterface?:
        type: NetworkInterface
        description: <p>Information about the network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateNetworkInterface.</p>
  CreatePlacementGroupRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      groupName:
        type: String
        description: '<p>A name for the placement group.</p> <p>Constraints: Up to
          255 ASCII characters</p>'
      strategy:
        type: PlacementStrategy
        description: <p>The placement strategy.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreatePlacementGroup.</p>
  CreateReservedInstancesListingRequest:
    type: object
    properties:
      reservedInstancesId:
        type: String
        description: <p>The ID of the active Reserved Instance.</p>
      instanceCount:
        type: Integer
        description: <p>The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.</p>
      priceSchedules:
        type: PriceScheduleSpecificationList
        description: <p>A list specifying the price of the Reserved Instance for each month remaining in the Reserved Instance term.</p>
      clientToken:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateReservedInstancesListing.</p>
  CreateReservedInstancesListingResult:
    type: object
    properties:
      reservedInstancesListingsSet?:
        type: ReservedInstancesListingList
        description: <p>Information about the Reserved Instance listing.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateReservedInstancesListing.</p>
  CreateRouteRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      routeTableId:
        type: String
        description: <p>The ID of the route table for the route.</p>
      destinationCidrBlock:
        type: String
        description: <p>The CIDR address block used for the destination match. Routing decisions are based on the most specific match.</p>
      gatewayId?:
        type: String
        description: <p>The ID of an Internet gateway or virtual private gateway attached to your VPC.</p>
      instanceId?:
        type: String
        description: <p>The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.</p>
      networkInterfaceId?:
        type: String
        description: <p>The ID of a network interface.</p>
      vpcPeeringConnectionId?:
        type: String
        description: <p>The ID of a VPC peering connection.</p>
      natGatewayId?:
        type: String
        description: <p>The ID of a NAT gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateRoute.</p>
  CreateRouteResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateRoute.</p>
  CreateRouteTableRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateRouteTable.</p>
  CreateRouteTableResult:
    type: object
    properties:
      routeTable?:
        type: RouteTable
        description: <p>Information about the route table.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateRouteTable.</p>
  CreateSecurityGroupRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      GroupName:
        type: String
        description: '<p>The name of the security group.</p> <p>Constraints: Up to
          255 characters in length</p> <p>Constraints for EC2-Classic: ASCII characters</p>
          <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>'
      GroupDescription:
        type: String
        description: '<p>A description for the security group. This is informational
          only.</p> <p>Constraints: Up to 255 characters in length</p> <p>Constraints
          for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z,
          0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>'
      VpcId?:
        type: String
        description: <p>[EC2-VPC] The ID of the VPC. Required for EC2-VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateSecurityGroup.</p>
  CreateSecurityGroupResult:
    type: object
    properties:
      groupId?:
        type: String
        description: <p>The ID of the security group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateSecurityGroup.</p>
  CreateSnapshotRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId:
        type: String
        description: <p>The ID of the EBS volume.</p>
      Description?:
        type: String
        description: <p>A description for the snapshot.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateSnapshot.</p>
  CreateSpotDatafeedSubscriptionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      bucket:
        type: String
        description: <p>The Amazon S3 bucket in which to store the Spot instance data feed.</p>
      prefix?:
        type: String
        description: <p>A prefix for the data feed file names.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateSpotDatafeedSubscription.</p>
  CreateSpotDatafeedSubscriptionResult:
    type: object
    properties:
      spotDatafeedSubscription?:
        type: SpotDatafeedSubscription
        description: <p>The Spot instance data feed subscription.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateSpotDatafeedSubscription.</p>
  CreateSubnetRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC.</p>
      CidrBlock:
        type: String
        description: <p>The network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.</p>
      AvailabilityZone?:
        type: String
        description: '<p>The Availability Zone for the subnet.</p> <p>Default: AWS
          selects one for you. If you create more than one subnet in your VPC, we
          may not necessarily select a different zone for each subnet.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateSubnet.</p>
  CreateSubnetResult:
    type: object
    properties:
      subnet?:
        type: Subnet
        description: <p>Information about the subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateSubnet.</p>
  CreateTagsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ResourceId:
        type: ResourceIdList
        description: <p>The IDs of one or more resources to tag. For example, ami-1a2b3c4d.</p>
      Tag:
        type: TagList
        description: <p>One or more tags. The <code>value</code> parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateTags.</p>
  CreateVolumePermission:
    type: object
    properties:
      userId?:
        type: String
        description: <p>The specific AWS account ID that is to be added or removed from a volume's list of create volume permissions.</p>
      group?:
        type: PermissionGroup
        description: <p>The specific group that is to be added or removed from a volume's list of create volume permissions.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the user or group to be added or removed from the permissions for a volume.</p>
  CreateVolumePermissionModifications:
    type: object
    properties:
      Add?:
        type: CreateVolumePermissionList
        description: <p>Adds a specific AWS account ID or group to a volume's list of create volume permissions.</p>
      Remove?:
        type: CreateVolumePermissionList
        description: <p>Removes a specific AWS account ID or group from a volume's list of create volume permissions.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes modifications to the permissions for a volume.</p>
  CreateVolumeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Size?:
        type: Integer
        description: '<p>The size of the volume, in GiBs.</p> <p>Constraints: 1-16384
          for <code>gp2</code>, 4-16384 for <code>io1</code>, 500-16384 for <code>st1</code>,
          500-16384 for <code>sc1</code>, and 1-1024 for <code>standard</code>. If
          you specify a snapshot, the volume size must be equal to or larger than
          the snapshot size.</p> <p>Default: If you''re creating the volume from a
          snapshot and don''t specify a volume size, the default is the snapshot size.</p>'
      SnapshotId?:
        type: String
        description: <p>The snapshot from which to create the volume.</p>
      AvailabilityZone:
        type: String
        description: <p>The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a> to list the Availability Zones that are currently available to you.</p>
      VolumeType?:
        type: VolumeType
        description: '<p>The volume type. This can be <code>gp2</code> for General
          Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code>
          for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code>
          for Magnetic volumes.</p> <p>Default: <code>standard</code> </p>'
      Iops?:
        type: Integer
        description: '<p>Only valid for Provisioned IOPS SSD volumes. The number of
          I/O operations per second (IOPS) to provision for the volume, with a maximum
          ratio of 30 IOPS/GiB.</p> <p>Constraint: Range is 100 to 20000 for Provisioned
          IOPS SSD volumes </p>'
      encrypted?:
        type: Boolean
        description: <p>Specifies whether the volume should be encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are automatically encrypted. There is no way to create an encrypted volume from an unencrypted snapshot or vice versa. If your AMI uses encrypted volumes, you can only launch it on supported instance types. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      KmsKeyId?:
        type: String
        description: <p>The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateVolume.</p>
  CreateVpcEndpointRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC in which the endpoint will be used.</p>
      ServiceName:
        type: String
        description: <p>The AWS service name, in the form <code>com.amazonaws.<i>region</i>.<i>service</i> </code>. To get a list of available services, use the <a>DescribeVpcEndpointServices</a> request.</p>
      PolicyDocument?:
        type: String
        description: <p>A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.</p>
      RouteTableId?:
        type: ValueStringList
        description: <p>One or more route table IDs.</p>
      ClientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateVpcEndpoint.</p>
  CreateVpcEndpointResult:
    type: object
    properties:
      vpcEndpoint?:
        type: VpcEndpoint
        description: <p>Information about the endpoint.</p>
      clientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateVpcEndpoint.</p>
  CreateVpcPeeringConnectionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcId?:
        type: String
        description: <p>The ID of the requester VPC.</p>
      peerVpcId?:
        type: String
        description: <p>The ID of the VPC with which you are creating the VPC peering connection.</p>
      peerOwnerId?:
        type: String
        description: '<p>The AWS account ID of the owner of the peer VPC.</p> <p>Default:
          Your AWS account ID</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateVpcPeeringConnection.</p>
  CreateVpcPeeringConnectionResult:
    type: object
    properties:
      vpcPeeringConnection?:
        type: VpcPeeringConnection
        description: <p>Information about the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateVpcPeeringConnection.</p>
  CreateVpcRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      CidrBlock:
        type: String
        description: <p>The network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>.</p>
      instanceTenancy?:
        type: Tenancy
        description: '<p>The tenancy options for instances launched into the VPC.
          For <code>default</code>, instances are launched with shared tenancy by
          default. You can launch instances with any tenancy into a shared tenancy
          VPC. For <code>dedicated</code>, instances are launched as dedicated tenancy
          instances by default. You can only launch instances with a tenancy of <code>dedicated</code>
          or <code>host</code> into a dedicated tenancy VPC. </p> <p> <b>Important:</b>
          The <code>host</code> value cannot be used with this parameter. Use the
          <code>default</code> or <code>dedicated</code> values only.</p> <p>Default:
          <code>default</code> </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateVpc.</p>
  CreateVpcResult:
    type: object
    properties:
      vpc?:
        type: Vpc
        description: <p>Information about the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateVpc.</p>
  CreateVpnConnectionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Type:
        type: String
        description: <p>The type of VPN connection (<code>ipsec.1</code>).</p>
      CustomerGatewayId:
        type: String
        description: <p>The ID of the customer gateway.</p>
      VpnGatewayId:
        type: String
        description: <p>The ID of the virtual private gateway.</p>
      options?:
        type: VpnConnectionOptionsSpecification
        description: '<p>Indicates whether the VPN connection requires static routes.
          If you are creating a VPN connection for a device that does not support
          BGP, you must specify <code>true</code>.</p> <p>Default: <code>false</code>
          </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateVpnConnection.</p>
  CreateVpnConnectionResult:
    type: object
    properties:
      vpnConnection?:
        type: VpnConnection
        description: <p>Information about the VPN connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateVpnConnection.</p>
  CreateVpnConnectionRouteRequest:
    type: object
    properties:
      VpnConnectionId:
        type: String
        description: <p>The ID of the VPN connection.</p>
      DestinationCidrBlock:
        type: String
        description: <p>The CIDR block associated with the local subnet of the customer network.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateVpnConnectionRoute.</p>
  CreateVpnGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Type:
        type: GatewayType
        description: <p>The type of VPN connection this virtual private gateway supports.</p>
      AvailabilityZone?:
        type: String
        description: <p>The Availability Zone for the virtual private gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for CreateVpnGateway.</p>
  CreateVpnGatewayResult:
    type: object
    properties:
      vpnGateway?:
        type: VpnGateway
        description: <p>Information about the virtual private gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of CreateVpnGateway.</p>
  CustomerGateway:
    type: object
    properties:
      customerGatewayId?:
        type: String
        description: <p>The ID of the customer gateway.</p>
      state?:
        type: String
        description: <p>The current state of the customer gateway (<code>pending | available | deleting | deleted</code>).</p>
      type?:
        type: String
        description: <p>The type of VPN connection the customer gateway supports (<code>ipsec.1</code>).</p>
      ipAddress?:
        type: String
        description: <p>The Internet-routable IP address of the customer gateway's outside interface.</p>
      bgpAsn?:
        type: String
        description: <p>The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the customer gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a customer gateway.</p>
  DeleteCustomerGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      CustomerGatewayId:
        type: String
        description: <p>The ID of the customer gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteCustomerGateway.</p>
  DeleteDhcpOptionsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      DhcpOptionsId:
        type: String
        description: <p>The ID of the DHCP options set.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteDhcpOptions.</p>
  DeleteFlowLogsRequest:
    type: object
    properties:
      FlowLogId:
        type: ValueStringList
        description: <p>One or more flow log IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteFlowLogs.</p>
  DeleteFlowLogsResult:
    type: object
    properties:
      unsuccessful?:
        type: UnsuccessfulItemSet
        description: <p>Information about the flow logs that could not be deleted successfully.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DeleteFlowLogs.</p>
  DeleteInternetGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      internetGatewayId:
        type: String
        description: <p>The ID of the Internet gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteInternetGateway.</p>
  DeleteKeyPairRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      KeyName:
        type: String
        description: <p>The name of the key pair.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteKeyPair.</p>
  DeleteNatGatewayRequest:
    type: object
    properties:
      NatGatewayId:
        type: String
        description: <p>The ID of the NAT gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteNatGateway.</p>
  DeleteNatGatewayResult:
    type: object
    properties:
      natGatewayId?:
        type: String
        description: <p>The ID of the NAT gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DeleteNatGateway.</p>
  DeleteNetworkAclEntryRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkAclId:
        type: String
        description: <p>The ID of the network ACL.</p>
      ruleNumber:
        type: Integer
        description: <p>The rule number of the entry to delete.</p>
      egress:
        type: Boolean
        description: <p>Indicates whether the rule is an egress rule.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteNetworkAclEntry.</p>
  DeleteNetworkAclRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkAclId:
        type: String
        description: <p>The ID of the network ACL.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteNetworkAcl.</p>
  DeleteNetworkInterfaceRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkInterfaceId:
        type: String
        description: <p>The ID of the network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteNetworkInterface.</p>
  DeletePlacementGroupRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      groupName:
        type: String
        description: <p>The name of the placement group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeletePlacementGroup.</p>
  DeleteRouteRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      routeTableId:
        type: String
        description: <p>The ID of the route table.</p>
      destinationCidrBlock:
        type: String
        description: <p>The CIDR range for the route. The value you specify must match the CIDR for the route exactly.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteRoute.</p>
  DeleteRouteTableRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      routeTableId:
        type: String
        description: <p>The ID of the route table.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteRouteTable.</p>
  DeleteSecurityGroupRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      GroupName?:
        type: String
        description: <p>[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.</p>
      GroupId?:
        type: String
        description: <p>The ID of the security group. Required for a nondefault VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteSecurityGroup.</p>
  DeleteSnapshotRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SnapshotId:
        type: String
        description: <p>The ID of the EBS snapshot.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteSnapshot.</p>
  DeleteSpotDatafeedSubscriptionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteSpotDatafeedSubscription.</p>
  DeleteSubnetRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SubnetId:
        type: String
        description: <p>The ID of the subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteSubnet.</p>
  DeleteTagsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      resourceId:
        type: ResourceIdList
        description: <p>The ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource ID.</p>
      tag?:
        type: TagList
        description: <p>One or more tags to delete. If you omit the <code>value</code> parameter, we delete the tag regardless of its value. If you specify this parameter with an empty string as the value, we delete the key only if its value is an empty string.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteTags.</p>
  DeleteVolumeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId:
        type: String
        description: <p>The ID of the volume.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteVolume.</p>
  DeleteVpcEndpointsRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcEndpointId:
        type: ValueStringList
        description: <p>One or more endpoint IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteVpcEndpoints.</p>
  DeleteVpcEndpointsResult:
    type: object
    properties:
      unsuccessful?:
        type: UnsuccessfulItemSet
        description: <p>Information about the endpoints that were not successfully deleted.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DeleteVpcEndpoints.</p>
  DeleteVpcPeeringConnectionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcPeeringConnectionId:
        type: String
        description: <p>The ID of the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteVpcPeeringConnection.</p>
  DeleteVpcPeeringConnectionResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DeleteVpcPeeringConnection.</p>
  DeleteVpcRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteVpc.</p>
  DeleteVpnConnectionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpnConnectionId:
        type: String
        description: <p>The ID of the VPN connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteVpnConnection.</p>
  DeleteVpnConnectionRouteRequest:
    type: object
    properties:
      VpnConnectionId:
        type: String
        description: <p>The ID of the VPN connection.</p>
      DestinationCidrBlock:
        type: String
        description: <p>The CIDR block associated with the local subnet of the customer network.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteVpnConnectionRoute.</p>
  DeleteVpnGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpnGatewayId:
        type: String
        description: <p>The ID of the virtual private gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeleteVpnGateway.</p>
  DeregisterImageRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImageId:
        type: String
        description: <p>The ID of the AMI.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DeregisterImage.</p>
  DescribeAccountAttributesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      attributeName?:
        type: AccountAttributeNameStringList
        description: <p>One or more account attribute names.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeAccountAttributes.</p>
  DescribeAccountAttributesResult:
    type: object
    properties:
      accountAttributeSet?:
        type: AccountAttributeList
        description: <p>Information about one or more account attributes.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeAccountAttributes.</p>
  DescribeAddressesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      PublicIp?:
        type: PublicIpStringList
        description: '<p>[EC2-Classic] One or more Elastic IP addresses.</p> <p>Default:
          Describes all your Elastic IP addresses.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</p> </li> <li> <p> <code>association-id</code> - [EC2-VPC] The association ID for the address.</p> </li> <li> <p> <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>) or in a VPC (<code>vpc</code>).</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-owner-id</code> - The AWS account ID of the owner.</p> </li> <li> <p> <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with the Elastic IP address.</p> </li> <li> <p> <code>public-ip</code> - The Elastic IP address.</p> </li> </ul>
      AllocationId?:
        type: AllocationIdList
        description: '<p>[EC2-VPC] One or more allocation IDs.</p> <p>Default: Describes
          all your Elastic IP addresses.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeAddresses.</p>
  DescribeAddressesResult:
    type: object
    properties:
      addressesSet?:
        type: AddressList
        description: <p>Information about one or more Elastic IP addresses.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeAddresses.</p>
  DescribeAvailabilityZonesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ZoneName?:
        type: ZoneNameStringList
        description: <p>The names of one or more Availability Zones.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>message</code> - Information about the Availability Zone.</p> </li> <li> <p> <code>region-name</code> - The name of the region for the Availability Zone (for example, <code>us-east-1</code>).</p> </li> <li> <p> <code>state</code> - The state of the Availability Zone (<code>available</code> | <code>information</code> | <code>impaired</code> | <code>unavailable</code>).</p> </li> <li> <p> <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>).</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeAvailabilityZones.</p>
  DescribeAvailabilityZonesResult:
    type: object
    properties:
      availabilityZoneInfo?:
        type: AvailabilityZoneList
        description: <p>Information about one or more Availability Zones.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeAvailabiltyZones.</p>
  DescribeBundleTasksRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      BundleId?:
        type: BundleIdStringList
        description: '<p>One or more bundle task IDs.</p> <p>Default: Describes all
          your bundle tasks.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>bundle-id</code> - The ID of the bundle task.</p> </li> <li> <p> <code>error-code</code> - If the task failed, the error code returned.</p> </li> <li> <p> <code>error-message</code> - If the task failed, the error message returned.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p> </li> <li> <p> <code>s3-prefix</code> - The beginning of the AMI name.</p> </li> <li> <p> <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p> </li> <li> <p> <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update for the task.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeBundleTasks.</p>
  DescribeBundleTasksResult:
    type: object
    properties:
      bundleInstanceTasksSet?:
        type: BundleTaskList
        description: <p>Information about one or more bundle tasks.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeBundleTasks.</p>
  DescribeClassicLinkInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId?:
        type: InstanceIdStringList
        description: <p>One or more instance IDs. Must be instances linked to a VPC through ClassicLink.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of a VPC security group that's associated with the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p> </li> </ul>
      nextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
      maxResults?:
        type: Integer
        description: '<p>The maximum number of results to return for the request in
          a single page. The remaining results of the initial request can be seen
          by sending another request with the returned <code>NextToken</code> value.
          This value can be between 5 and 1000; if <code>MaxResults</code> is given
          a value larger than 1000, only 1000 results are returned. You cannot specify
          this parameter and the instance IDs parameter in the same request.</p> <p>Constraint:
          If the value is greater than 1000, we return only 1000 items.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeClassicLinkInstances.</p>
  DescribeClassicLinkInstancesResult:
    type: object
    properties:
      instancesSet?:
        type: ClassicLinkInstanceList
        description: <p>Information about one or more linked EC2-Classic instances.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeClassicLinkInstances.</p>
  DescribeConversionTasksRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      filter?:
        type: FilterList
        description: <p>One or more filters.</p>
      conversionTaskId?:
        type: ConversionIdStringList
        description: <p>One or more conversion task IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeConversionTasks.</p>
  DescribeConversionTasksResult:
    type: object
    properties:
      conversionTasks?:
        type: DescribeConversionTaskList
        description: <p>Information about the conversion tasks.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for DescribeConversionTasks.</p>
  DescribeCustomerGatewaysRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      CustomerGatewayId?:
        type: CustomerGatewayIdStringList
        description: '<p>One or more customer gateway IDs.</p> <p>Default: Describes
          all your customer gateways.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of the customer gateway.</p> </li> <li> <p> <code>ip-address</code> - The IP address of the customer gateway's Internet-routable external interface.</p> </li> <li> <p> <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>type</code> - The type of customer gateway. Currently, the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeCustomerGateways.</p>
  DescribeCustomerGatewaysResult:
    type: object
    properties:
      customerGatewaySet?:
        type: CustomerGatewayList
        description: <p>Information about one or more customer gateways.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeCustomerGateways.</p>
  DescribeDhcpOptionsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      DhcpOptionsId?:
        type: DhcpOptionsIdStringList
        description: '<p>The IDs of one or more DHCP options sets.</p> <p>Default:
          Describes all your DHCP options sets.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</p> </li> <li> <p> <code>value</code> - The value for one of the options.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeDhcpOptions.</p>
  DescribeDhcpOptionsResult:
    type: object
    properties:
      dhcpOptionsSet?:
        type: DhcpOptionsList
        description: <p>Information about one or more DHCP options sets.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeDhcpOptions.</p>
  DescribeExportTasksRequest:
    type: object
    properties:
      exportTaskId?:
        type: ExportTaskIdStringList
        description: <p>One or more export task IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeExportTasks.</p>
  DescribeExportTasksResult:
    type: object
    properties:
      exportTaskSet?:
        type: ExportTaskList
        description: <p>Information about the export tasks.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for DescribeExportTasks.</p>
  DescribeFlowLogsRequest:
    type: object
    properties:
      FlowLogId?:
        type: ValueStringList
        description: <p>One or more flow log IDs.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p> </li> <li> <p> <code>flow-log-id</code> - The ID of the flow log.</p> </li> <li> <p> <code>log-group-name</code> - The name of the log group.</p> </li> <li> <p> <code>resource-id</code> - The ID of the VPC, subnet, or network interface.</p> </li> <li> <p> <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code> | <code>ALL</code>)</p> </li> </ul>
      NextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the flow log IDs parameter in the same request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeFlowLogs.</p>
  DescribeFlowLogsResult:
    type: object
    properties:
      flowLogSet?:
        type: FlowLogSet
        description: <p>Information about the flow logs.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeFlowLogs.</p>
  DescribeHostReservationOfferingsRequest:
    type: object
    properties:
      OfferingId?:
        type: String
        description: <p>The ID of the reservation offering.</p>
      MinDuration?:
        type: Integer
        description: <p>This is the minimum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year.</p>
      MaxDuration?:
        type: Integer
        description: <p>This is the maximum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family of the offering (e.g., <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>No Upfront</code> | <code>Partial Upfront</code> | <code>All Upfront</code>).</p> </li> </ul>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error.</p>
      NextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeHostReservationOfferingsResult:
    type: object
    properties:
      offeringSet?:
        type: HostOfferingSet
        description: <p>Information about the offerings.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeHostReservationsRequest:
    type: object
    properties:
      HostReservationIdSet?:
        type: HostReservationIdSet
        description: <p>One or more host reservation IDs.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family (e.g., <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>No Upfront</code> | <code>Partial Upfront</code> | <code>All Upfront</code>).</p> </li> <li> <p> <code>state</code> - The state of the reservation (<code>payment-pending</code> | <code>payment-failed</code> | <code>active</code> | <code>retired</code>).</p> </li> </ul>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error.</p>
      NextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeHostReservationsResult:
    type: object
    properties:
      hostReservationSet?:
        type: HostReservationSet
        description: <p>Details about the reservation's configuration.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeHostsRequest:
    type: object
    properties:
      hostId?:
        type: RequestHostIdList
        description: <p>The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.</p>
      nextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
      maxResults?:
        type: Integer
        description: <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error. You cannot specify this parameter and the host IDs parameter in the same request.</p>
      filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>instance-type</code> - The instance type size that the Dedicated Host is configured to support.</p> </li> <li> <p> <code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code> | <code>off</code>).</p> </li> <li> <p> <code>host-reservation-id</code> - The ID of the reservation assigned to this host.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance</p> </li> <li> <p> <code>state</code>- The allocation state of the Dedicated Host (<code>available</code> | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code> | <code>released-permanent-failure</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the host.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeHosts.</p>
  DescribeHostsResult:
    type: object
    properties:
      hostSet?:
        type: HostList
        description: <p>Information about the Dedicated Hosts.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeHosts.</p>
  DescribeIdFormatRequest:
    type: object
    properties:
      Resource?:
        type: String
        description: '<p>The type of resource: <code>instance</code> | <code>reservation</code>
          | <code>snapshot</code> | <code>volume</code> </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeIdFormat.</p>
  DescribeIdFormatResult:
    type: object
    properties:
      statusSet?:
        type: IdFormatList
        description: <p>Information about the ID format for the resource.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeIdFormat.</p>
  DescribeIdentityIdFormatRequest:
    type: object
    properties:
      resource?:
        type: String
        description: '<p>The type of resource: <code>instance</code> | <code>reservation</code>
          | <code>snapshot</code> | <code>volume</code> </p>'
      principalArn:
        type: String
        description: <p>The ARN of the principal, which can be an IAM role, IAM user, or the root user.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeIdentityIdFormat.</p>
  DescribeIdentityIdFormatResult:
    type: object
    properties:
      statusSet?:
        type: IdFormatList
        description: <p>Information about the ID format for the resources.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeIdentityIdFormat.</p>
  DescribeImageAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImageId:
        type: String
        description: <p>The ID of the AMI.</p>
      Attribute:
        type: ImageAttributeName
        description: '<p>The AMI attribute.</p> <p> <b>Note</b>: Depending on your
          account privileges, the <code>blockDeviceMapping</code> attribute may return
          a <code>Client.AuthFailure</code> error. If this happens, use <a>DescribeImages</a>
          to get information about the block device mapping for the AMI.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeImageAttribute.</p>
  DescribeImagesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImageId?:
        type: ImageIdStringList
        description: '<p>One or more image IDs.</p> <p>Default: Describes all images
          available to you.</p>'
      Owner?:
        type: OwnerStringList
        description: <p>Filters the images by the owner. Specify an AWS account ID, <code>self</code> (owner is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>). Omitting this option returns all images for which you have launch permissions, regardless of ownership.</p>
      ExecutableBy?:
        type: ExecutableByStringList
        description: <p>Scopes the images by users with explicit launch permissions. Specify an AWS account ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name for the EBS volume (for example, <code>/dev/sdh</code>).</p> </li> <li> <p> <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the EBS volume.</p> </li> <li> <p> <code>block-device-mapping.volume-size</code> - The volume size of the EBS volume, in GiB.</p> </li> <li> <p> <code>block-device-mapping.volume-type</code> - The volume type of the EBS volume (<code>gp2</code> | <code>io1</code> | <code>st1 </code>| <code>sc1</code> | <code>standard</code>).</p> </li> <li> <p> <code>description</code> - The description of the image (provided during image creation).</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>image-id</code> - The ID of the image.</p> </li> <li> <p> <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> | <code>ramdisk</code>).</p> </li> <li> <p> <code>is-public</code> - A Boolean that indicates whether the image is public.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>manifest-location</code> - The location of the image manifest.</p> </li> <li> <p> <code>name</code> - The name of the AMI (provided during image creation).</p> </li> <li> <p> <code>owner-alias</code> - String value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the image owner.</p> </li> <li> <p> <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>product-code.type</code> - The type of the product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>root-device-name</code> - The name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>state</code> - The state of the image (<code>available</code> | <code>pending</code> | <code>failed</code>).</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - The message for the state change.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> | <code>hvm</code>).</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeImages.</p>
  DescribeImagesResult:
    type: object
    properties:
      imagesSet?:
        type: ImageList
        description: <p>Information about one or more images.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeImages.</p>
  DescribeImportImageTasksRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImportTaskId?:
        type: ImportTaskIdList
        description: <p>A list of import image task IDs.</p>
      NextToken?:
        type: String
        description: <p>A token that indicates the next page of results.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
      Filters?:
        type: FilterList
        description: '<p>Filter tasks using the <code>task-state</code> filter and
          one of the following values: active, completed, deleting, deleted.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeImportImageTasks.</p>
  DescribeImportImageTasksResult:
    type: object
    properties:
      importImageTaskSet?:
        type: ImportImageTaskList
        description: <p>A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days.</p>
      nextToken?:
        type: String
        description: <p>The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for DescribeImportImageTasks.</p>
  DescribeImportSnapshotTasksRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImportTaskId?:
        type: ImportTaskIdList
        description: <p>A list of import snapshot task IDs.</p>
      NextToken?:
        type: String
        description: <p>A token that indicates the next page of results.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
      Filters?:
        type: FilterList
        description: <p>One or more filters.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeImportSnapshotTasks.</p>
  DescribeImportSnapshotTasksResult:
    type: object
    properties:
      importSnapshotTaskSet?:
        type: ImportSnapshotTaskList
        description: <p>A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days.</p>
      nextToken?:
        type: String
        description: <p>The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for DescribeImportSnapshotTasks.</p>
  DescribeInstanceAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      instanceId:
        type: String
        description: <p>The ID of the instance.</p>
      attribute:
        type: InstanceAttributeName
        description: '<p>The instance attribute.</p> <p>Note: The <code>enaSupport</code>
          attribute is not supported at this time.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeInstanceAttribute.</p>
  DescribeInstanceStatusRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId?:
        type: InstanceIdStringList
        description: '<p>One or more instance IDs.</p> <p>Default: Describes all your
          instances.</p> <p>Constraints: Maximum 100 explicitly specified instance
          IDs.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code> | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code> | <code>instance-stop</code>).</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-status.reachability</code> - Filters on instance status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>instance-status.status</code> - The status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> <li> <p> <code>system-status.reachability</code> - Filters on system status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>system-status.status</code> - The system status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> </ul>
      NextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.</p>
      includeAllInstances?:
        type: Boolean
        description: '<p>When <code>true</code>, includes the health status for all
          instances. When <code>false</code>, includes the health status for running
          instances only.</p> <p>Default: <code>false</code> </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeInstanceStatus.</p>
  DescribeInstanceStatusResult:
    type: object
    properties:
      instanceStatusSet?:
        type: InstanceStatusList
        description: <p>One or more instance status descriptions.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeInstanceStatus.</p>
  DescribeInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId?:
        type: InstanceIdStringList
        description: '<p>One or more instance IDs.</p> <p>Default: Describes all your
          instances.</p>'
      Filter?:
        type: FilterList
        description: '<p>One or more filters.</p> <ul> <li> <p> <code>affinity</code>
          - The affinity setting for an instance running on a Dedicated Host (<code>default</code>
          | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The
          instance architecture (<code>i386</code> | <code>x86_64</code>).</p> </li>
          <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p>
          </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach
          time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p>
          </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> -
          A Boolean that indicates whether the EBS volume is deleted on instance termination.</p>
          </li> <li> <p> <code>block-device-mapping.device-name</code> - The device
          name for the EBS volume (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
          </li> <li> <p> <code>block-device-mapping.status</code> - The status for
          the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code>
          | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code>
          - The volume ID of the EBS volume.</p> </li> <li> <p> <code>client-token</code>
          - The idempotency token you provided when you launched the instance.</p>
          </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p>
          </li> <li> <p> <code>group-id</code> - The ID of the security group for
          the instance. EC2-Classic only.</p> </li> <li> <p> <code>group-name</code>
          - The name of the security group for the instance. EC2-Classic only.</p>
          </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which
          the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code>
          - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>).</p>
          </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile
          associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>image-id</code>
          - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code>
          - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code>
          - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code>
          | <code>scheduled</code>).</p> </li> <li> <p> <code>instance-state-code</code>
          - The state of the instance, as a 16-bit unsigned integer. The high byte
          is an opaque internal value and should be ignored. The low byte is set based
          on the state represented. The valid values are: 0 (pending), 16 (running),
          32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p>
          </li> <li> <p> <code>instance-state-name</code> - The state of the instance
          (<code>pending</code> | <code>running</code> | <code>shutting-down</code>
          | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p>
          </li> <li> <p> <code>instance-type</code> - The type of instance (for example,
          <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code>
          - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code>
          - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code>
          - The public IP address of the instance.</p> </li> <li> <p> <code>kernel-id</code>
          - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of
          the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code>
          - When launching multiple instances, this is the index for the instance
          in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p>
          <code>launch-time</code> - The time when the instance was launched.</p>
          </li> <li> <p> <code>monitoring-state</code> - Indicates whether monitoring
          is enabled for the instance (<code>disabled</code> | <code>enabled</code>).</p>
          </li> <li> <p> <code>owner-id</code> - The AWS account ID of the instance
          owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of
          the placement group for the instance.</p> </li> <li> <p> <code>platform</code>
          - The platform. Use <code>windows</code> if you have Windows instances;
          otherwise, leave blank.</p> </li> <li> <p> <code>private-dns-name</code>
          - The private DNS name of the instance.</p> </li> <li> <p> <code>private-ip-address</code>
          - The private IP address of the instance.</p> </li> <li> <p> <code>product-code</code>
          - The product code associated with the AMI used to launch the instance.</p>
          </li> <li> <p> <code>product-code.type</code> - The type of product code
          (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code>
          - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for
          the current state of the instance (for example, shows "User Initiated [date]"
          when you stop or terminate the instance). Similar to the state-reason-code
          filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity
          that launched the instance on your behalf (for example, AWS Management Console,
          Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code>
          - The ID of the instance''s reservation. A reservation ID is created any
          time you launch an instance. A reservation ID has a one-to-one relationship
          with an instance launch request, but can be associated with more than one
          instance if you launch multiple instances using the same launch request.
          For example, if you launch one instance, you''ll get one reservation ID.
          If you launch ten instances using the same launch request, you''ll also
          get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code>
          - The name of the root device for the instance (for example, <code>/dev/sda1</code>
          or <code>/dev/xvda</code>).</p> </li> <li> <p> <code>root-device-type</code>
          - The type of root device that the instance uses (<code>ebs</code> | <code>instance-store</code>).</p>
          </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance
          performs source/destination checking. A value of <code>true</code> means
          that checking is enabled, and <code>false</code> means checking is disabled.
          The value must be <code>false</code> for the instance to perform network
          address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code>
          - The ID of the Spot instance request.</p> </li> <li> <p> <code>state-reason-code</code>
          - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code>
          - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code>
          - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i>
          - The key/value combination of a tag assigned to the resource, where <code>tag</code>:<i>key</i>
          is the tag''s key. </p> </li> <li> <p> <code>tag-key</code> - The key of
          a tag assigned to the resource. This filter is independent of the <code>tag-value</code>
          filter. For example, if you use both the filter "tag-key=Purpose" and the
          filter "tag-value=X", you get any resources assigned both the tag key Purpose
          (regardless of what the tag''s value is), and the tag value X (regardless
          of what the tag''s key is). If you want to list only resources where Purpose
          is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li>
          <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource.
          This filter is independent of the <code>tag-key</code> filter.</p> </li>
          <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code>
          | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>virtualization-type</code>
          - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p>
          </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance
          is running in.</p> </li> <li> <p> <code>network-interface.description</code>
          - The description of the network interface.</p> </li> <li> <p> <code>network-interface.subnet-id</code>
          - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code>
          - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code>
          - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.owner-id</code>
          - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.availability-zone</code>
          - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.requester-id</code>
          - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code>
          - Indicates whether the network interface is being managed by AWS.</p> </li>
          <li> <p> <code>network-interface.status</code> - The status of the network
          interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li>
          <p> <code>network-interface.mac-address</code> - The MAC address of the
          network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code>
          - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.source-dest-check</code>
          - Whether the network interface performs source/destination checking. A
          value of <code>true</code> means checking is enabled, and <code>false</code>
          means checking is disabled. The value must be <code>false</code> for the
          network interface to perform network address translation (NAT) in your VPC.</p>
          </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security
          group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code>
          - The name of a security group associated with the network interface.</p>
          </li> <li> <p> <code>network-interface.attachment.attachment-id</code> -
          The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code>
          - The ID of the instance to which the network interface is attached.</p>
          </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code>
          - The owner ID of the instance to which the network interface is attached.</p>
          </li> <li> <p> <code>network-interface.addresses.private-ip-address</code>
          - The private IP address associated with the network interface.</p> </li>
          <li> <p> <code>network-interface.attachment.device-index</code> - The device
          index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.status</code>
          - The status of the attachment (<code>attaching</code> | <code>attached</code>
          | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code>
          - The time that the network interface was attached to an instance.</p> </li>
          <li> <p> <code>network-interface.attachment.delete-on-termination</code>
          - Specifies whether the attachment is deleted when an instance is terminated.</p>
          </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies
          whether the IP address of the network interface is the primary private IP
          address.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code>
          - The ID of the association of an Elastic IP address with a network interface.</p>
          </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code>
          - The owner ID of the private IP address associated with the network interface.</p>
          </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic
          IP address bound to the network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code>
          - The owner of the Elastic IP address associated with the network interface.</p>
          </li> <li> <p> <code>association.allocation-id</code> - The allocation ID
          returned when you allocated the Elastic IP address for your network interface.</p>
          </li> <li> <p> <code>association.association-id</code> - The association
          ID returned when the network interface was associated with an IP address.</p>
          </li> </ul>'
      nextToken?:
        type: String
        description: <p>The token to request the next page of results.</p>
      maxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter or tag filters in the same call.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeInstances.</p>
  DescribeInstancesResult:
    type: object
    properties:
      reservationSet?:
        type: ReservationList
        description: <p>Zero or more reservations.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeInstances.</p>
  DescribeInternetGatewaysRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      internetGatewayId?:
        type: ValueStringList
        description: '<p>One or more Internet gateway IDs.</p> <p>Default: Describes
          all your Internet gateways.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>available</code>). Present only if a VPC is attached.</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>internet-gateway-id</code> - The ID of the Internet gateway.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeInternetGateways.</p>
  DescribeInternetGatewaysResult:
    type: object
    properties:
      internetGatewaySet?:
        type: InternetGatewayList
        description: <p>Information about one or more Internet gateways.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeInternetGateways.</p>
  DescribeKeyPairsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      KeyName?:
        type: KeyNameStringList
        description: '<p>One or more key pair names.</p> <p>Default: Describes all
          your key pairs.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>fingerprint</code> - The fingerprint of the key pair.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeKeyPairs.</p>
  DescribeKeyPairsResult:
    type: object
    properties:
      keySet?:
        type: KeyPairList
        description: <p>Information about one or more key pairs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeKeyPairs.</p>
  DescribeMovingAddressesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      publicIp?:
        type: ValueStringList
        description: <p>One or more Elastic IP addresses.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results.</p>
      filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p> </li> </ul>
      maxResults?:
        type: Integer
        description: '<p>The maximum number of results to return for the request in
          a single page. The remaining results of the initial request can be seen
          by sending another request with the returned <code>NextToken</code> value.
          This value can be between 5 and 1000; if <code>MaxResults</code> is given
          a value outside of this range, an error is returned.</p> <p>Default: If
          no value is provided, the default is 1000.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeMovingAddresses.</p>
  DescribeMovingAddressesResult:
    type: object
    properties:
      movingAddressStatusSet?:
        type: MovingAddressStatusSet
        description: <p>The status for each Elastic IP address.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeMovingAddresses.</p>
  DescribeNatGatewaysRequest:
    type: object
    properties:
      NatGatewayId?:
        type: ValueStringList
        description: <p>One or more NAT gateway IDs.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>nat-gateway-id</code> - The ID of the NAT gateway.</p> </li> <li> <p> <code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</p> </li> </ul>
      MaxResults?:
        type: Integer
        description: '<p>The maximum number of items to return for this request. The
          request returns a token that you can specify in a subsequent call to get
          the next set of results.</p> <p>Constraint: If the value specified is greater
          than 1000, we return only 1000 items.</p>'
      NextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeNatGateways.</p>
  DescribeNatGatewaysResult:
    type: object
    properties:
      natGatewaySet?:
        type: NatGatewayList
        description: <p>Information about the NAT gateways.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeNatGateways.</p>
  DescribeNetworkAclsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      NetworkAclId?:
        type: ValueStringList
        description: '<p>One or more network ACL IDs.</p> <p>Default: Describes all
          your network ACLs.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>association.association-id</code> - The ID of an association ID for the ACL.</p> </li> <li> <p> <code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p> </li> <li> <p> <code>entry.cidr</code> - The CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.egress</code> - Indicates whether the entry applies to egress traffic.</p> </li> <li> <p> <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p> </li> <li> <p> <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p> </li> <li> <p> <code>entry.port-range.from</code> - The start of the port range specified in the entry. </p> </li> <li> <p> <code>entry.port-range.to</code> - The end of the port range specified in the entry. </p> </li> <li> <p> <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p> </li> <li> <p> <code>entry.rule-number</code> - The number of an entry (in other words, rule) in the ACL's set of entries.</p> </li> <li> <p> <code>network-acl-id</code> - The ID of the network ACL.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network ACL.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeNetworkAcls.</p>
  DescribeNetworkAclsResult:
    type: object
    properties:
      networkAclSet?:
        type: NetworkAclList
        description: <p>Information about one or more network ACLs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeNetworkAcls.</p>
  DescribeNetworkInterfaceAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkInterfaceId:
        type: String
        description: <p>The ID of the network interface.</p>
      attribute?:
        type: NetworkInterfaceAttribute
        description: <p>The attribute of the network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeNetworkInterfaceAttribute.</p>
  DescribeNetworkInterfaceAttributeResult:
    type: object
    properties:
      networkInterfaceId?:
        type: String
        description: <p>The ID of the network interface.</p>
      description?:
        type: AttributeValue
        description: <p>The description of the network interface.</p>
      sourceDestCheck?:
        type: AttributeBooleanValue
        description: <p>Indicates whether source/destination checking is enabled.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>The security groups associated with the network interface.</p>
      attachment?:
        type: NetworkInterfaceAttachment
        description: <p>The attachment (if any) of the network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeNetworkInterfaceAttribute.</p>
  DescribeNetworkInterfacesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      NetworkInterfaceId?:
        type: NetworkInterfaceIdList
        description: '<p>One or more network interface IDs.</p> <p>Default: Describes
          all your network interfaces.</p>'
      filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>addresses.private-ip-address</code> - The private IP addresses associated with the network interface.</p> </li> <li> <p> <code>addresses.primary</code> - Whether the private IP address is the primary IP address associated with the network interface. </p> </li> <li> <p> <code>addresses.association.public-ip</code> - The association ID returned when the network interface was associated with the Elastic IP address.</p> </li> <li> <p> <code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p> </li> <li> <p> <code>association.association-id</code> - The association ID returned when the network interface was associated with an IP address.</p> </li> <li> <p> <code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address for your network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code> - The owner of the Elastic IP address associated with the network interface.</p> </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic IP address bound to the network interface.</p> </li> <li> <p> <code>association.public-dns-name</code> - The public DNS name for the network interface.</p> </li> <li> <p> <code>attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>attachment.attach.time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.nat-gateway-id</code> - The ID of the NAT gateway to which the network interface is attached.</p> </li> <li> <p> <code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the network interface.</p> </li> <li> <p> <code>description</code> - The description of the network interface.</p> </li> <li> <p> <code>group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the network interface owner.</p> </li> <li> <p> <code>private-ip-address</code> - The private IP address or addresses of the network interface.</p> </li> <li> <p> <code>private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>requester-managed</code> - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>source-desk-check</code> - Indicates whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>; if a network interface is attached to an instance the status is <code>in-use</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network interface.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeNetworkInterfaces.</p>
  DescribeNetworkInterfacesResult:
    type: object
    properties:
      networkInterfaceSet?:
        type: NetworkInterfaceList
        description: <p>Information about one or more network interfaces.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeNetworkInterfaces.</p>
  DescribePlacementGroupsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      groupName?:
        type: PlacementGroupStringList
        description: '<p>One or more placement group names.</p> <p>Default: Describes
          all your placement groups, or only those otherwise specified.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>group-name</code> - The name of the placement group.</p> </li> <li> <p> <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>strategy</code> - The strategy of the placement group (<code>cluster</code>).</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribePlacementGroups.</p>
  DescribePlacementGroupsResult:
    type: object
    properties:
      placementGroupSet?:
        type: PlacementGroupList
        description: <p>One or more placement groups.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribePlacementGroups.</p>
  DescribePrefixListsRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      PrefixListId?:
        type: ValueStringList
        description: <p>One or more prefix list IDs.</p>
      Filter?:
        type: FilterList
        description: '<p>One or more filters.</p> <ul> <li> <p> <code>prefix-list-id</code>:
          The ID of a prefix list.</p> </li> <li> <p> <code>prefix-list-name</code>:
          The name of a prefix list.</p> </li> </ul>'
      MaxResults?:
        type: Integer
        description: '<p>The maximum number of items to return for this request. The
          request returns a token that you can specify in a subsequent call to get
          the next set of results.</p> <p>Constraint: If the value specified is greater
          than 1000, we return only 1000 items.</p>'
      NextToken?:
        type: String
        description: <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribePrefixLists.</p>
  DescribePrefixListsResult:
    type: object
    properties:
      prefixListSet?:
        type: PrefixListSet
        description: <p>All available prefix lists.</p>
      nextToken?:
        type: String
        description: <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribePrefixLists.</p>
  DescribeRegionsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      RegionName?:
        type: RegionNameStringList
        description: <p>The names of one or more regions.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>endpoint</code> - The endpoint of the region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p> </li> <li> <p> <code>region-name</code> - The name of the region (for example, <code>us-east-1</code>).</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeRegions.</p>
  DescribeRegionsResult:
    type: object
    properties:
      regionInfo?:
        type: RegionList
        description: <p>Information about one or more regions.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeRegions.</p>
  DescribeReservedInstancesListingsRequest:
    type: object
    properties:
      reservedInstancesId?:
        type: String
        description: <p>One or more Reserved Instance IDs.</p>
      reservedInstancesListingId?:
        type: String
        description: <p>One or more Reserved Instance listing IDs.</p>
      filters?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances.</p> </li> <li> <p> <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeReservedInstancesListings.</p>
  DescribeReservedInstancesListingsResult:
    type: object
    properties:
      reservedInstancesListingsSet?:
        type: ReservedInstancesListingList
        description: <p>Information about the Reserved Instance listing.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeReservedInstancesListings.</p>
  DescribeReservedInstancesModificationsRequest:
    type: object
    properties:
      ReservedInstancesModificationId?:
        type: ReservedInstancesModificationIdStringList
        description: <p>IDs for the submitted modification request.</p>
      nextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>client-token</code> - The idempotency token for the modification request.</p> </li> <li> <p> <code>create-date</code> - The time when the modification request was created.</p> </li> <li> <p> <code>effective-date</code> - The time when the modification becomes effective.</p> </li> <li> <p> <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p> </li> <li> <p> <code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p> </li> <li> <p> <code>reserved-instances-modification-id</code> - The ID of the modification request.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> <li> <p> <code>update-date</code> - The time when the modification request was last updated.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeReservedInstancesModifications.</p>
  DescribeReservedInstancesModificationsResult:
    type: object
    properties:
      reservedInstancesModificationsSet?:
        type: ReservedInstancesModificationList
        description: <p>The Reserved Instance modification information.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeReservedInstancesModifications.</p>
  DescribeReservedInstancesOfferingsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ReservedInstancesOfferingId?:
        type: ReservedInstancesOfferingIdStringList
        description: <p>One or more Reserved Instances offering IDs.</p>
      InstanceType?:
        type: InstanceType
        description: <p>The instance type that the reservation will cover (for example, <code>m1.small</code>). For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      AvailabilityZone?:
        type: String
        description: <p>The Availability Zone in which the Reserved Instance can be used.</p>
      ProductDescription?:
        type: RIProductDescription
        description: <p>The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the description are for use with Amazon VPC.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (for example, one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from both AWS and the Reserved Instance Marketplace are listed.</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>) </p> </li> <li> <p> <code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>
      instanceTenancy?:
        type: Tenancy
        description: '<p>The tenancy of the instances covered by the reservation.
          A Reserved Instance with a tenancy of <code>dedicated</code> is applied
          to instances that run in a VPC on single-tenant hardware (i.e., Dedicated
          Instances).</p> <p>Default: <code>default</code> </p>'
      offeringType?:
        type: OfferingTypeValues
        description: <p>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. </p>
      nextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
      maxResults?:
        type: Integer
        description: '<p>The maximum number of results to return for the request in
          a single page. The remaining results of the initial request can be seen
          by sending another request with the returned <code>NextToken</code> value.
          The maximum is 100.</p> <p>Default: 100</p>'
      IncludeMarketplace?:
        type: Boolean
        description: <p>Include Reserved Instance Marketplace offerings in the response.</p>
      MinDuration?:
        type: Long
        description: '<p>The minimum duration (in seconds) to filter when searching
          for offerings.</p> <p>Default: 2592000 (1 month)</p>'
      MaxDuration?:
        type: Long
        description: '<p>The maximum duration (in seconds) to filter when searching
          for offerings.</p> <p>Default: 94608000 (3 years)</p>'
      MaxInstanceCount?:
        type: Integer
        description: '<p>The maximum number of instances to filter when searching
          for offerings.</p> <p>Default: 20</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeReservedInstancesOfferings.</p>
  DescribeReservedInstancesOfferingsResult:
    type: object
    properties:
      reservedInstancesOfferingsSet?:
        type: ReservedInstancesOfferingList
        description: <p>A list of Reserved Instances offerings.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeReservedInstancesOfferings.</p>
  DescribeReservedInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ReservedInstancesId?:
        type: ReservedInstancesIdStringList
        description: '<p>One or more Reserved Instance IDs.</p> <p>Default: Describes
          all your Reserved Instances, or only those otherwise specified.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instance.</p> </li> <li> <p> <code>start</code> - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>state</code> - The state of the Reserved Instance (<code>payment-pending</code> | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>
      offeringType?:
        type: OfferingTypeValues
        description: <p>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. </p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeReservedInstances.</p>
  DescribeReservedInstancesResult:
    type: object
    properties:
      reservedInstancesSet?:
        type: ReservedInstancesList
        description: <p>A list of Reserved Instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for DescribeReservedInstances.</p>
  DescribeRouteTablesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      RouteTableId?:
        type: ValueStringList
        description: '<p>One or more route table IDs.</p> <p>Default: Describes all
          your route tables.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p> <code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The CIDR range specified in a route in the table.</p> </li> <li> <p> <code>route.destination-prefix-list-id</code> - The ID (prefix) of the AWS service specified in a route in the table.</p> </li> <li> <p> <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p> <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p> <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p> <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p> <code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p> <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeRouteTables.</p>
  DescribeRouteTablesResult:
    type: object
    properties:
      routeTableSet?:
        type: RouteTableList
        description: <p>Information about one or more route tables.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeRouteTables.</p>
  DescribeScheduledInstanceAvailabilityRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Recurrence:
        type: ScheduledInstanceRecurrenceRequest
        description: <p>The schedule recurrence.</p>
      FirstSlotStartTimeRange:
        type: SlotDateTimeRangeRequest
        description: <p>The time period for the first schedule to start.</p>
      MinSlotDurationInHours?:
        type: Integer
        description: <p>The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p>
      MaxSlotDurationInHours?:
        type: Integer
        description: <p>The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code> and less than 1,720.</p>
      NextToken?:
        type: String
        description: <p>The token for the next set of results.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeScheduledInstanceAvailability.</p>
  DescribeScheduledInstanceAvailabilityResult:
    type: object
    properties:
      nextToken?:
        type: String
        description: <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
      scheduledInstanceAvailabilitySet?:
        type: ScheduledInstanceAvailabilitySet
        description: <p>Information about the available Scheduled Instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeScheduledInstanceAvailability.</p>
  DescribeScheduledInstancesRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ScheduledInstanceId?:
        type: ScheduledInstanceIdRequestSet
        description: <p>One or more Scheduled Instance IDs.</p>
      SlotStartTimeRange?:
        type: SlotStartTimeRangeRequest
        description: <p>The time period for the first schedule to start.</p>
      NextToken?:
        type: String
        description: <p>The token for the next set of results.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeScheduledInstances.</p>
  DescribeScheduledInstancesResult:
    type: object
    properties:
      nextToken?:
        type: String
        description: <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
      scheduledInstanceSet?:
        type: ScheduledInstanceSet
        description: <p>Information about the Scheduled Instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeScheduledInstances.</p>
  DescribeSecurityGroupReferencesRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.</p>
      GroupId:
        type: GroupIds
        description: <p>One or more security group IDs in your account.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeSecurityGroupReferencesResult:
    type: object
    properties:
      securityGroupReferenceSet?:
        type: SecurityGroupReferences
        description: <p>Information about the VPCs with the referencing security groups.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeSecurityGroupsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      GroupName?:
        type: GroupNameStringList
        description: '<p>[EC2-Classic and default VPC only] One or more security group
          names. You can specify either the security group name or the security group
          ID. For security groups in a nondefault VPC, use the <code>group-name</code>
          filter to describe security groups by name.</p> <p>Default: Describes all
          your security groups.</p>'
      GroupId?:
        type: GroupIdStringList
        description: '<p>One or more security group IDs. Required for security groups
          in a nondefault VPC.</p> <p>Default: Describes all your security groups.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p> <ul> <li> <p> <code>description</code> - The description of the security group.</p> </li> <li> <p> <code>egress.ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS service to which the security group allows access.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group. </p> </li> <li> <p> <code>group-name</code> - The name of the security group.</p> </li> <li> <p> <code>ip-permission.cidr</code> - A CIDR range that has been granted permission.</p> </li> <li> <p> <code>ip-permission.from-port</code> - The start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>ip-permission.group-id</code> - The ID of a security group that has been granted permission.</p> </li> <li> <p> <code>ip-permission.group-name</code> - The name of a security group that has been granted permission.</p> </li> <li> <p> <code>ip-permission.protocol</code> - The IP protocol for the permission (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>ip-permission.to-port</code> - The end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>ip-permission.user-id</code> - The ID of an AWS account that has been granted permission.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the owner of the security group.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the security group.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the security group.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSecurityGroups.</p>
  DescribeSecurityGroupsResult:
    type: object
    properties:
      securityGroupInfo?:
        type: SecurityGroupList
        description: <p>Information about one or more security groups.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSecurityGroups.</p>
  DescribeSnapshotAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SnapshotId:
        type: String
        description: <p>The ID of the EBS snapshot.</p>
      Attribute:
        type: SnapshotAttributeName
        description: <p>The snapshot attribute you would like to view.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSnapshotAttribute.</p>
  DescribeSnapshotAttributeResult:
    type: object
    properties:
      snapshotId?:
        type: String
        description: <p>The ID of the EBS snapshot.</p>
      createVolumePermission?:
        type: CreateVolumePermissionList
        description: <p>A list of permissions for creating volumes from the snapshot.</p>
      productCodes?:
        type: ProductCodeList
        description: <p>A list of product codes.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSnapshotAttribute.</p>
  DescribeSnapshotsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SnapshotId?:
        type: SnapshotIdStringList
        description: '<p>One or more snapshot IDs.</p> <p>Default: Describes snapshots
          for which you have launch permissions.</p>'
      Owner?:
        type: OwnerStringList
        description: <p>Returns the snapshots owned by the specified owner. Multiple owners can be specified.</p>
      RestorableBy?:
        type: RestorableByStringList
        description: <p>One or more AWS accounts IDs that can create volumes from the snapshot.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>description</code> - A description of the snapshot.</p> </li> <li> <p> <code>owner-alias</code> - Value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM consolew.</p> </li> <li> <p> <code>owner-id</code> - The ID of the AWS account that owns the snapshot.</p> </li> <li> <p> <code>progress</code> - The progress of the snapshot, as a percentage (for example, 80%).</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot ID.</p> </li> <li> <p> <code>start-time</code> - The time stamp when the snapshot was initiated.</p> </li> <li> <p> <code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume the snapshot is for.</p> </li> <li> <p> <code>volume-size</code> - The size of the volume, in GiB.</p> </li> </ul>
      NextToken?:
        type: String
        description: <p>The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSnapshots.</p>
  DescribeSnapshotsResult:
    type: object
    properties:
      snapshotSet?:
        type: SnapshotList
        description: <p>Information about the snapshots.</p>
      nextToken?:
        type: String
        description: <p>The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code> request. When the results of a <code>DescribeSnapshots</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSnapshots.</p>
  DescribeSpotDatafeedSubscriptionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSpotDatafeedSubscription.</p>
  DescribeSpotDatafeedSubscriptionResult:
    type: object
    properties:
      spotDatafeedSubscription?:
        type: SpotDatafeedSubscription
        description: <p>The Spot instance data feed subscription.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSpotDatafeedSubscription.</p>
  DescribeSpotFleetInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      nextToken?:
        type: String
        description: <p>The token for the next set of results.</p>
      maxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSpotFleetInstances.</p>
  DescribeSpotFleetInstancesResponse:
    type: object
    properties:
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      activeInstanceSet:
        type: ActiveInstanceSet
        description: <p>The running instances. Note that this list is refreshed periodically and might be out of date.</p>
      nextToken?:
        type: String
        description: <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSpotFleetInstances.</p>
  DescribeSpotFleetRequestHistoryRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      eventType?:
        type: EventType
        description: <p>The type of events to describe. By default, all events are described.</p>
      startTime:
        type: DateTime
        description: <p>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      nextToken?:
        type: String
        description: <p>The token for the next set of results.</p>
      maxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSpotFleetRequestHistory.</p>
  DescribeSpotFleetRequestHistoryResponse:
    type: object
    properties:
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      startTime:
        type: DateTime
        description: <p>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      lastEvaluatedTime:
        type: DateTime
        description: <p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>
      historyRecordSet:
        type: HistoryRecords
        description: <p>Information about the events in the history of the Spot fleet request.</p>
      nextToken?:
        type: String
        description: <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSpotFleetRequestHistory.</p>
  DescribeSpotFleetRequestsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      spotFleetRequestId?:
        type: ValueStringList
        description: <p>The IDs of the Spot fleet requests.</p>
      nextToken?:
        type: String
        description: <p>The token for the next set of results.</p>
      maxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSpotFleetRequests.</p>
  DescribeSpotFleetRequestsResponse:
    type: object
    properties:
      spotFleetRequestConfigSet:
        type: SpotFleetRequestConfigSet
        description: <p>Information about the configuration of your Spot fleet.</p>
      nextToken?:
        type: String
        description: <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSpotFleetRequests.</p>
  DescribeSpotInstanceRequestsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SpotInstanceRequestId?:
        type: SpotInstanceRequestIdList
        description: <p>One or more Spot instance request IDs.</p>
      Filter?:
        type: FilterList
        description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone-group</code>
          - The Availability Zone group.</p> </li> <li> <p> <code>create-time</code>
          - The time stamp when the Spot instance request was created.</p> </li> <li>
          <p> <code>fault-code</code> - The fault code related to the request.</p>
          </li> <li> <p> <code>fault-message</code> - The fault message related to
          the request.</p> </li> <li> <p> <code>instance-id</code> - The ID of the
          instance that fulfilled the request.</p> </li> <li> <p> <code>launch-group</code>
          - The Spot instance launch group.</p> </li> <li> <p> <code>launch.block-device-mapping.delete-on-termination</code>
          - Indicates whether the Amazon EBS volume is deleted on instance termination.</p>
          </li> <li> <p> <code>launch.block-device-mapping.device-name</code> - The
          device name for the Amazon EBS volume (for example, <code>/dev/sdh</code>).</p>
          </li> <li> <p> <code>launch.block-device-mapping.snapshot-id</code> - The
          ID of the snapshot used for the Amazon EBS volume.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-size</code>
          - The size of the Amazon EBS volume, in GiB.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-type</code>
          - The type of the Amazon EBS volume: <code>gp2</code> for General Purpose
          SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput
          Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code> for
          Magnetic.</p> </li> <li> <p> <code>launch.group-id</code> - The security
          group for the instance.</p> </li> <li> <p> <code>launch.image-id</code>
          - The ID of the AMI.</p> </li> <li> <p> <code>launch.instance-type</code>
          - The type of instance (for example, <code>m3.medium</code>).</p> </li>
          <li> <p> <code>launch.kernel-id</code> - The kernel ID.</p> </li> <li> <p>
          <code>launch.key-name</code> - The name of the key pair the instance launched
          with.</p> </li> <li> <p> <code>launch.monitoring-enabled</code> - Whether
          monitoring is enabled for the Spot instance.</p> </li> <li> <p> <code>launch.ramdisk-id</code>
          - The RAM disk ID.</p> </li> <li> <p> <code>network-interface.network-interface-id</code>
          - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.device-index</code>
          - The index of the device for the network interface attachment on the instance.</p>
          </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the
          subnet for the instance.</p> </li> <li> <p> <code>network-interface.description</code>
          - A description of the network interface.</p> </li> <li> <p> <code>network-interface.private-ip-address</code>
          - The primary private IP address of the network interface.</p> </li> <li>
          <p> <code>network-interface.delete-on-termination</code> - Indicates whether
          the network interface is deleted when the instance is terminated.</p> </li>
          <li> <p> <code>network-interface.group-id</code> - The ID of the security
          group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code>
          - The name of the security group associated with the network interface.</p>
          </li> <li> <p> <code>network-interface.addresses.primary</code> - Indicates
          whether the IP address is the primary private IP address.</p> </li> <li>
          <p> <code>product-description</code> - The product description associated
          with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p>
          </li> <li> <p> <code>spot-instance-request-id</code> - The Spot instance
          request ID.</p> </li> <li> <p> <code>spot-price</code> - The maximum hourly
          price for any Spot instance launched to fulfill the request.</p> </li> <li>
          <p> <code>state</code> - The state of the Spot instance request (<code>open</code>
          | <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>).
          Spot bid status information can help you track your Amazon EC2 Spot instance
          requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot
          Bid Status</a> in the Amazon Elastic Compute Cloud User Guide.</p> </li>
          <li> <p> <code>status-code</code> - The short code describing the most recent
          evaluation of your Spot instance request.</p> </li> <li> <p> <code>status-message</code>
          - The message explaining the status of the Spot instance request.</p> </li>
          <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination
          of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code>
          - The key of a tag assigned to the resource. This filter is independent
          of the <code>tag-value</code> filter. For example, if you use both the filter
          "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
          both the tag key Purpose (regardless of what the tag''s value is), and the
          tag value X (regardless of what the tag''s key is). If you want to list
          only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
          filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned
          to the resource. This filter is independent of the <code>tag-key</code>
          filter.</p> </li> <li> <p> <code>type</code> - The type of Spot instance
          request (<code>one-time</code> | <code>persistent</code>).</p> </li> <li>
          <p> <code>launched-availability-zone</code> - The Availability Zone in which
          the bid is launched.</p> </li> <li> <p> <code>valid-from</code> - The start
          date of the request.</p> </li> <li> <p> <code>valid-until</code> - The end
          date of the request.</p> </li> </ul>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSpotInstanceRequests.</p>
  DescribeSpotInstanceRequestsResult:
    type: object
    properties:
      spotInstanceRequestSet?:
        type: SpotInstanceRequestList
        description: <p>One or more Spot instance requests.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSpotInstanceRequests.</p>
  DescribeSpotPriceHistoryRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      startTime?:
        type: DateTime
        description: <p>The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      endTime?:
        type: DateTime
        description: <p>The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      InstanceType?:
        type: InstanceTypeList
        description: <p>Filters the results by the specified instance types.</p>
      ProductDescription?:
        type: ProductDescriptionList
        description: <p>Filters the results by the specified basic product descriptions.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for which prices should be returned.</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p> </li> <li> <p> <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p> </li> <li> <p> <code>timestamp</code> - The timestamp of the Spot price history, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.</p> </li> </ul>
      availabilityZone?:
        type: String
        description: <p>Filters the results by the specified Availability Zone.</p>
      maxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
      nextToken?:
        type: String
        description: <p>The token for the next set of results.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSpotPriceHistory.</p>
  DescribeSpotPriceHistoryResult:
    type: object
    properties:
      spotPriceHistorySet?:
        type: SpotPriceHistoryList
        description: <p>The historical Spot prices.</p>
      nextToken?:
        type: String
        description: <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSpotPriceHistory.</p>
  DescribeStaleSecurityGroupsRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC.</p>
      MaxResults?:
        type: MaxResults
        description: <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p>
      NextToken?:
        type: NextToken
        description: <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeStaleSecurityGroupsResult:
    type: object
    properties:
      staleSecurityGroupSet?:
        type: StaleSecurityGroupSet
        description: <p>Information about the stale security groups.</p>
      nextToken?:
        type: String
        description: <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  DescribeSubnetsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SubnetId?:
        type: SubnetIdStringList
        description: '<p>One or more subnet IDs.</p> <p>Default: Describes all your
          subnets.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>availabilityZone</code> - The Availability Zone for the subnet. You can also use <code>availability-zone</code> as the filter name.</p> </li> <li> <p> <code>available-ip-address-count</code> - The number of IP addresses in the subnet that are available.</p> </li> <li> <p> <code>cidrBlock</code> - The CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidr-block</code> as the filter names.</p> </li> <li> <p> <code>defaultForAz</code> - Indicates whether this is the default subnet for the Availability Zone. You can also use <code>default-for-az</code> as the filter name.</p> </li> <li> <p> <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeSubnets.</p>
  DescribeSubnetsResult:
    type: object
    properties:
      subnetSet?:
        type: SubnetList
        description: <p>Information about one or more subnets.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeSubnets.</p>
  DescribeTagsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>key</code> - The tag key.</p> </li> <li> <p> <code>resource-id</code> - The resource ID.</p> </li> <li> <p> <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p> </li> <li> <p> <code>value</code> - The tag value.</p> </li> </ul>
      maxResults?:
        type: Integer
        description: <p>The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
      nextToken?:
        type: String
        description: <p>The token to retrieve the next page of results.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeTags.</p>
  DescribeTagsResult:
    type: object
    properties:
      tagSet?:
        type: TagDescriptionList
        description: <p>A list of tags.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return..</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeTags.</p>
  DescribeVolumeAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId:
        type: String
        description: <p>The ID of the volume.</p>
      Attribute?:
        type: VolumeAttributeName
        description: <p>The instance attribute.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVolumeAttribute.</p>
  DescribeVolumeAttributeResult:
    type: object
    properties:
      volumeId?:
        type: String
        description: <p>The ID of the volume.</p>
      autoEnableIO?:
        type: AttributeBooleanValue
        description: <p>The state of <code>autoEnableIO</code> attribute.</p>
      productCodes?:
        type: ProductCodeList
        description: <p>A list of product codes.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVolumeAttribute.</p>
  DescribeVolumeStatusRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId?:
        type: VolumeIdStringList
        description: '<p>One or more volume IDs.</p> <p>Default: Describes all your
          volumes.</p>'
      Filter?:
        type: FilterList
        description: '<p>One or more filters.</p> <ul> <li> <p> <code>action.code</code>
          - The action code for the event (for example, <code>enable-volume-io</code>).</p>
          </li> <li> <p> <code>action.description</code> - A description of the action.</p>
          </li> <li> <p> <code>action.event-id</code> - The event ID associated with
          the action.</p> </li> <li> <p> <code>availability-zone</code> - The Availability
          Zone of the instance.</p> </li> <li> <p> <code>event.description</code>
          - A description of the event.</p> </li> <li> <p> <code>event.event-id</code>
          - The event ID.</p> </li> <li> <p> <code>event.event-type</code> - The event
          type (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>;
          for <code>io-performance</code>: <code>io-performance:degraded</code> |
          <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).</p>
          </li> <li> <p> <code>event.not-after</code> - The latest end time for the
          event.</p> </li> <li> <p> <code>event.not-before</code> - The earliest start
          time for the event.</p> </li> <li> <p> <code>volume-status.details-name</code>
          - The cause for <code>volume-status.status</code> (<code>io-enabled</code>
          | <code>io-performance</code>).</p> </li> <li> <p> <code>volume-status.details-status</code>
          - The status of <code>volume-status.details-name</code> (for <code>io-enabled</code>:
          <code>passed</code> | <code>failed</code>; for <code>io-performance</code>:
          <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code>
          | <code>stalled</code>).</p> </li> <li> <p> <code>volume-status.status</code>
          - The status of the volume (<code>ok</code> | <code>impaired</code> | <code>warning</code>
          | <code>insufficient-data</code>).</p> </li> </ul>'
      NextToken?:
        type: String
        description: <p>The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code> request. When the results of the request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
      MaxResults?:
        type: Integer
        description: <p>The maximum number of volume results returned by <code>DescribeVolumeStatus</code> in paginated output. When this parameter is used, the request only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVolumeStatus.</p>
  DescribeVolumeStatusResult:
    type: object
    properties:
      volumeStatusSet?:
        type: VolumeStatusList
        description: <p>A list of volumes.</p>
      nextToken?:
        type: String
        description: <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVolumeStatus.</p>
  DescribeVolumesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId?:
        type: VolumeIdStringList
        description: <p>One or more volume IDs.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>attachment.attach-time</code> - The time stamp when the attachment initiated.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance termination.</p> </li> <li> <p> <code>attachment.device</code> - The device name that is exposed to the instance (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance the volume is attached to.</p> </li> <li> <p> <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone in which the volume was created.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the volume was created.</p> </li> <li> <p> <code>encrypted</code> - The encryption status of the volume.</p> </li> <li> <p> <code>size</code> - The size of the volume, in GiB.</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot from which the volume was created.</p> </li> <li> <p> <code>status</code> - The status of the volume (<code>creating</code> | <code>available</code> | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>volume-id</code> - The volume ID.</p> </li> <li> <p> <code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.</p> </li> </ul>
      nextToken?:
        type: String
        description: <p>The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>
      maxResults?:
        type: Integer
        description: <p>The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVolumes.</p>
  DescribeVolumesResult:
    type: object
    properties:
      volumeSet?:
        type: VolumeList
        description: <p>Information about the volumes.</p>
      nextToken?:
        type: String
        description: <p>The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code> request. When the results of a <code>DescribeVolumes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVolumes.</p>
  DescribeVpcAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC.</p>
      Attribute:
        type: VpcAttributeName
        description: <p>The VPC attribute.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpcAttribute.</p>
  DescribeVpcAttributeResult:
    type: object
    properties:
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      enableDnsSupport?:
        type: AttributeBooleanValue
        description: <p>Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.</p>
      enableDnsHostnames?:
        type: AttributeBooleanValue
        description: <p>Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpcAttribute.</p>
  DescribeVpcClassicLinkDnsSupportRequest:
    type: object
    properties:
      VpcIds?:
        type: VpcClassicLinkIdList
        description: <p>One or more VPC IDs.</p>
      maxResults?:
        type: MaxResults
        description: <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p>
      nextToken?:
        type: NextToken
        description: <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpcClassicLinkDnsSupport.</p>
  DescribeVpcClassicLinkDnsSupportResult:
    type: object
    properties:
      vpcs?:
        type: ClassicLinkDnsSupportList
        description: <p>Information about the ClassicLink DNS support status of the VPCs.</p>
      nextToken?:
        type: NextToken
        description: <p>The token to use when requesting the next set of items.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpcClassicLinkDnsSupport.</p>
  DescribeVpcClassicLinkRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcId?:
        type: VpcClassicLinkIdList
        description: <p>One or more VPCs for which you want to describe the ClassicLink status.</p>
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpcClassicLink.</p>
  DescribeVpcClassicLinkResult:
    type: object
    properties:
      vpcSet?:
        type: VpcClassicLinkList
        description: <p>The ClassicLink status of one or more VPCs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpcClassicLink.</p>
  DescribeVpcEndpointServicesRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      MaxResults?:
        type: Integer
        description: '<p>The maximum number of items to return for this request. The
          request returns a token that you can specify in a subsequent call to get
          the next set of results.</p> <p>Constraint: If the value is greater than
          1000, we return only 1000 items.</p>'
      NextToken?:
        type: String
        description: <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpcEndpointServices.</p>
  DescribeVpcEndpointServicesResult:
    type: object
    properties:
      serviceNameSet?:
        type: ValueStringList
        description: <p>A list of supported AWS services.</p>
      nextToken?:
        type: String
        description: <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpcEndpointServices.</p>
  DescribeVpcEndpointsRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcEndpointId?:
        type: ValueStringList
        description: <p>One or more endpoint IDs.</p>
      Filter?:
        type: FilterList
        description: '<p>One or more filters.</p> <ul> <li> <p> <code>service-name</code>:
          The name of the AWS service.</p> </li> <li> <p> <code>vpc-id</code>: The
          ID of the VPC in which the endpoint resides.</p> </li> <li> <p> <code>vpc-endpoint-id</code>:
          The ID of the endpoint.</p> </li> <li> <p> <code>vpc-endpoint-state</code>:
          The state of the endpoint. (<code>pending</code> | <code>available</code>
          | <code>deleting</code> | <code>deleted</code>)</p> </li> </ul>'
      MaxResults?:
        type: Integer
        description: '<p>The maximum number of items to return for this request. The
          request returns a token that you can specify in a subsequent call to get
          the next set of results.</p> <p>Constraint: If the value is greater than
          1000, we return only 1000 items.</p>'
      NextToken?:
        type: String
        description: <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpcEndpoints.</p>
  DescribeVpcEndpointsResult:
    type: object
    properties:
      vpcEndpointSet?:
        type: VpcEndpointSet
        description: <p>Information about the endpoints.</p>
      nextToken?:
        type: String
        description: <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpcEndpoints.</p>
  DescribeVpcPeeringConnectionsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcPeeringConnectionId?:
        type: ValueStringList
        description: '<p>One or more VPC peering connection IDs.</p> <p>Default: Describes
          all your VPC peering connections.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>accepter-vpc-info.cidr-block</code> - The CIDR block of the peer VPC.</p> </li> <li> <p> <code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the peer VPC.</p> </li> <li> <p> <code>accepter-vpc-info.vpc-id</code> - The ID of the peer VPC.</p> </li> <li> <p> <code>expiration-time</code> - The expiration date and time for the VPC peering connection.</p> </li> <li> <p> <code>requester-vpc-info.cidr-block</code> - The CIDR block of the requester's VPC.</p> </li> <li> <p> <code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the requester VPC.</p> </li> <li> <p> <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p> </li> <li> <p> <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code> | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code> | <code>deleted</code> | <code>rejected</code>).</p> </li> <li> <p> <code>status-message</code> - A message that provides more information about the status of the VPC peering connection, if applicable.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpcPeeringConnections.</p>
  DescribeVpcPeeringConnectionsResult:
    type: object
    properties:
      vpcPeeringConnectionSet?:
        type: VpcPeeringConnectionList
        description: <p>Information about the VPC peering connections.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpcPeeringConnections.</p>
  DescribeVpcsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcId?:
        type: VpcIdStringList
        description: '<p>One or more VPC IDs.</p> <p>Default: Describes all your VPCs.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>cidr</code> - The CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>isDefault</code> - Indicates whether the VPC is the default VPC.</p> </li> <li> <p> <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpcs.</p>
  DescribeVpcsResult:
    type: object
    properties:
      vpcSet?:
        type: VpcList
        description: <p>Information about one or more VPCs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpcs.</p>
  DescribeVpnConnectionsRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpnConnectionId?:
        type: VpnConnectionIdStringList
        description: '<p>One or more VPN connection IDs.</p> <p>Default: Describes
          your VPN connections.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p> </li> <li> <p> <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p> </li> <li> <p> <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-connection-id</code> - The ID of the VPN connection.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpnConnections.</p>
  DescribeVpnConnectionsResult:
    type: object
    properties:
      vpnConnectionSet?:
        type: VpnConnectionList
        description: <p>Information about one or more VPN connections.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpnConnections.</p>
  DescribeVpnGatewaysRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpnGatewayId?:
        type: VpnGatewayIdStringList
        description: '<p>One or more virtual private gateway IDs.</p> <p>Default:
          Describes all your virtual private gateways.</p>'
      Filter?:
        type: FilterList
        description: <p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p> </li> <li> <p> <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DescribeVpnGateways.</p>
  DescribeVpnGatewaysResult:
    type: object
    properties:
      vpnGatewaySet?:
        type: VpnGatewayList
        description: <p>Information about one or more virtual private gateways.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DescribeVpnGateways.</p>
  DetachClassicLinkVpcRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      instanceId:
        type: String
        description: <p>The ID of the instance to unlink from the VPC.</p>
      vpcId:
        type: String
        description: <p>The ID of the VPC to which the instance is linked.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DetachClassicLinkVpc.</p>
  DetachClassicLinkVpcResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DetachClassicLinkVpc.</p>
  DetachInternetGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      internetGatewayId:
        type: String
        description: <p>The ID of the Internet gateway.</p>
      vpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DetachInternetGateway.</p>
  DetachNetworkInterfaceRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      attachmentId:
        type: String
        description: <p>The ID of the attachment.</p>
      force?:
        type: Boolean
        description: <p>Specifies whether to force a detachment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DetachNetworkInterface.</p>
  DetachVolumeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId:
        type: String
        description: <p>The ID of the volume.</p>
      InstanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      Device?:
        type: String
        description: <p>The device name.</p>
      Force?:
        type: Boolean
        description: <p>Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DetachVolume.</p>
  DetachVpnGatewayRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpnGatewayId:
        type: String
        description: <p>The ID of the virtual private gateway.</p>
      VpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DetachVpnGateway.</p>
  DhcpConfiguration:
    type: object
    properties:
      key?:
        type: String
        description: <p>The name of a DHCP option.</p>
      valueSet?:
        type: DhcpConfigurationValueList
        description: <p>One or more values for the DHCP option.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a DHCP configuration option.</p>
  DhcpOptions:
    type: object
    properties:
      dhcpOptionsId?:
        type: String
        description: <p>The ID of the set of DHCP options.</p>
      dhcpConfigurationSet?:
        type: DhcpConfigurationList
        description: <p>One or more DHCP options in the set.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the DHCP options set.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a set of DHCP options.</p>
  DisableVgwRoutePropagationRequest:
    type: object
    properties:
      RouteTableId:
        type: String
        description: <p>The ID of the route table.</p>
      GatewayId:
        type: String
        description: <p>The ID of the virtual private gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DisableVgwRoutePropagation.</p>
  DisableVpcClassicLinkDnsSupportRequest:
    type: object
    properties:
      VpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DisableVpcClassicLinkDnsSupport.</p>
  DisableVpcClassicLinkDnsSupportResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DisableVpcClassicLinkDnsSupport.</p>
  DisableVpcClassicLinkRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DisableVpcClassicLink.</p>
  DisableVpcClassicLinkResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of DisableVpcClassicLink.</p>
  DisassociateAddressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      PublicIp?:
        type: String
        description: <p>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</p>
      AssociationId?:
        type: String
        description: <p>[EC2-VPC] The association ID. Required for EC2-VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DisassociateAddress.</p>
  DisassociateRouteTableRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      associationId:
        type: String
        description: <p>The association ID representing the current association between the route table and subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for DisassociateRouteTable.</p>
  DiskImage:
    type: object
    properties:
      Image?:
        type: DiskImageDetail
        description: <p>Information about the disk image.</p>
      Description?:
        type: String
        description: <p>A description of the disk image.</p>
      Volume?:
        type: VolumeDetail
        description: <p>Information about the volume.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a disk image.</p>
  DiskImageDescription:
    type: object
    properties:
      format:
        type: DiskImageFormat
        description: <p>The disk image format.</p>
      size:
        type: Long
        description: <p>The size of the disk image, in GiB.</p>
      importManifestUrl:
        type: String
        description: <p>A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
      checksum?:
        type: String
        description: <p>The checksum computed for the disk image.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a disk image.</p>
  DiskImageDetail:
    type: object
    properties:
      format:
        type: DiskImageFormat
        description: <p>The disk image format.</p>
      bytes:
        type: Long
        description: <p>The size of the disk image, in GiB.</p>
      importManifestUrl:
        type: String
        description: <p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a disk image.</p>
  DiskImageVolumeDescription:
    type: object
    properties:
      size?:
        type: Long
        description: <p>The size of the volume, in GiB.</p>
      id:
        type: String
        description: <p>The volume identifier.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a disk image volume.</p>
  EbsBlockDevice:
    type: object
    properties:
      snapshotId?:
        type: String
        description: <p>The ID of the snapshot.</p>
      volumeSize?:
        type: Integer
        description: '<p>The size of the volume, in GiB.</p> <p>Constraints: 1-16384
          for General Purpose SSD (<code>gp2</code>), 4-16384 for Provisioned IOPS
          SSD (<code>io1</code>), 500-16384 for Throughput Optimized HDD (<code>st1</code>),
          500-16384 for Cold HDD (<code>sc1</code>), and 1-1024 for Magnetic (<code>standard</code>)
          volumes. If you specify a snapshot, the volume size must be equal to or
          larger than the snapshot size.</p> <p>Default: If you''re creating the volume
          from a snapshot and don''t specify a volume size, the default is the snapshot
          size.</p>'
      deleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the EBS volume is deleted on instance termination.</p>
      volumeType?:
        type: VolumeType
        description: '<p>The volume type: <code>gp2</code>, <code>io1</code>, <code>st1</code>,
          <code>sc1</code>, or <code>standard</code>.</p> <p>Default: <code>standard</code>
          </p>'
      iops?:
        type: Integer
        description: '<p>The number of I/O operations per second (IOPS) that the volume
          supports. For <code>io1</code>, this represents the number of IOPS that
          are provisioned for the volume. For <code>gp2</code>, this represents the
          baseline performance of the volume and the rate at which the volume accumulates
          I/O credits for bursting. For more information about General Purpose SSD
          baseline performance, I/O credits, and bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
          EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
          <p>Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and
          100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter
          is required for requests to create <code>io1</code> volumes; it is not used
          in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>,
          or <code>standard</code> volumes.</p>'
      encrypted?:
        type: Boolean
        description: <p>Indicates whether the EBS volume is encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a block device for an EBS volume.</p>
  EbsInstanceBlockDevice:
    type: object
    properties:
      volumeId?:
        type: String
        description: <p>The ID of the EBS volume.</p>
      status?:
        type: AttachmentStatus
        description: <p>The attachment state.</p>
      attachTime?:
        type: DateTime
        description: <p>The time stamp when the attachment initiated.</p>
      deleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the volume is deleted on instance termination.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a parameter used to set up an EBS volume in a block device mapping.</p>
  EbsInstanceBlockDeviceSpecification:
    type: object
    properties:
      volumeId?:
        type: String
        description: <p>The ID of the EBS volume.</p>
      deleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the volume is deleted on instance termination.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes information used to set up an EBS volume specified in a block device mapping.</p>
  EnableVgwRoutePropagationRequest:
    type: object
    properties:
      RouteTableId:
        type: String
        description: <p>The ID of the route table.</p>
      GatewayId:
        type: String
        description: <p>The ID of the virtual private gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for EnableVgwRoutePropagation.</p>
  EnableVolumeIORequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      volumeId:
        type: String
        description: <p>The ID of the volume.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for EnableVolumeIO.</p>
  EnableVpcClassicLinkDnsSupportRequest:
    type: object
    properties:
      VpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for EnableVpcClassicLinkDnsSupport.</p>
  EnableVpcClassicLinkDnsSupportResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of EnableVpcClassicLinkDnsSupport.</p>
  EnableVpcClassicLinkRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcId:
        type: String
        description: <p>The ID of the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for EnableVpcClassicLink.</p>
  EnableVpcClassicLinkResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of EnableVpcClassicLink.</p>
  EventInformation:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance. This information is available only for <code>instanceChange</code> events.</p>
      eventSubType?:
        type: String
        description: <p>The event.</p> <p>The following are the <code>error</code> events.</p> <ul> <li> <p> <code>iamFleetRoleInvalid</code> - The Spot fleet did not have the required permissions either to launch or terminate an instance.</p> </li> <li> <p> <code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.</p> </li> <li> <p> <code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid. For more information, see the description of the event.</p> </li> <li> <p> <code>spotInstanceCountLimitExceeded</code> - You've reached the limit on the number of Spot instances that you can launch.</p> </li> </ul> <p>The following are the <code>fleetRequestChange</code> events.</p> <ul> <li> <p> <code>active</code> - The Spot fleet has been validated and Amazon EC2 is attempting to maintain the target number of running Spot instances.</p> </li> <li> <p> <code>cancelled</code> - The Spot fleet is canceled and has no running Spot instances. The Spot fleet will be deleted two days after its instances were terminated.</p> </li> <li> <p> <code>cancelled_running</code> - The Spot fleet is canceled and will not launch additional Spot instances, but its existing Spot instances continue to run until they are interrupted or terminated.</p> </li> <li> <p> <code>cancelled_terminating</code> - The Spot fleet is canceled and its Spot instances are terminating.</p> </li> <li> <p> <code>expired</code> - The Spot fleet request has expired. A subsequent event indicates that the instances were terminated, if the request was created with <code>TerminateInstancesWithExpiration</code> set.</p> </li> <li> <p> <code>modify_in_progress</code> - A request to modify the Spot fleet request was accepted and is in progress.</p> </li> <li> <p> <code>modify_successful</code> - The Spot fleet request was modified.</p> </li> <li> <p> <code>price_update</code> - The bid price for a launch configuration was adjusted because it was too high. This change is permanent.</p> </li> <li> <p> <code>submitted</code> - The Spot fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of Spot instances.</p> </li> </ul> <p>The following are the <code>instanceChange</code> events.</p> <ul> <li> <p> <code>launched</code> - A bid was fulfilled and a new instance was launched.</p> </li> <li> <p> <code>terminated</code> - An instance was terminated by the user.</p> </li> </ul>
      eventDescription?:
        type: String
        description: <p>The description of the event.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Spot fleet event.</p>
  ExportTask:
    type: object
    properties:
      exportTaskId?:
        type: String
        description: <p>The ID of the export task.</p>
      description?:
        type: String
        description: <p>A description of the resource being exported.</p>
      state?:
        type: ExportTaskState
        description: <p>The state of the export task.</p>
      statusMessage?:
        type: String
        description: <p>The status message related to the export task.</p>
      instanceExport?:
        type: InstanceExportDetails
        description: <p>Information about the instance to export.</p>
      exportToS3?:
        type: ExportToS3Task
        description: <p>Information about the export task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an instance export task.</p>
  ExportToS3Task:
    type: object
    properties:
      diskImageFormat?:
        type: DiskImageFormat
        description: <p>The format for the exported image.</p>
      containerFormat?:
        type: ContainerFormat
        description: <p>The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.</p>
      s3Bucket?:
        type: String
        description: <p>The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.</p>
      s3Key?:
        type: String
        description: <p>The encryption key for your S3 bucket.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the format and location for an instance export task.</p>
  ExportToS3TaskSpecification:
    type: object
    properties:
      diskImageFormat?:
        type: DiskImageFormat
        description: <p>The format for the exported image.</p>
      containerFormat?:
        type: ContainerFormat
        description: <p>The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.</p>
      s3Bucket?:
        type: String
        description: <p>The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.</p>
      s3Prefix?:
        type: String
        description: <p>The image is written to a single object in the S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an instance export task.</p>
  Filter:
    type: object
    properties:
      Name?:
        type: String
        description: <p>The name of the filter. Filter names are case-sensitive.</p>
      Value?:
        type: ValueStringList
        description: <p>One or more filter values. Filter values are case-sensitive.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria, such as tags, attributes, or IDs.</p>
  FlowLog:
    type: object
    properties:
      creationTime?:
        type: DateTime
        description: <p>The date and time the flow log was created.</p>
      flowLogId?:
        type: String
        description: <p>The flow log ID.</p>
      flowLogStatus?:
        type: String
        description: <p>The status of the flow log (<code>ACTIVE</code>).</p>
      resourceId?:
        type: String
        description: <p>The ID of the resource on which the flow log was created.</p>
      trafficType?:
        type: TrafficType
        description: <p>The type of traffic captured for the flow log.</p>
      logGroupName?:
        type: String
        description: <p>The name of the flow log group.</p>
      deliverLogsStatus?:
        type: String
        description: <p>The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p>
      deliverLogsErrorMessage?:
        type: String
        description: <p>Information about the error that occurred. <code>Rate limited</code> indicates that CloudWatch logs throttling has been applied for one or more network interfaces, or that you've reached the limit on the number of CloudWatch Logs log groups that you can create. <code>Access error</code> indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. <code>Unknown error</code> indicates an internal error.</p>
      deliverLogsPermissionArn?:
        type: String
        description: <p>The ARN of the IAM role that posts logs to CloudWatch Logs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a flow log.</p>
  GetConsoleOutputRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: String
        description: <p>The ID of the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for GetConsoleOutput.</p>
  GetConsoleOutputResult:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      timestamp?:
        type: DateTime
        description: <p>The time the output was last updated.</p>
      output?:
        type: String
        description: <p>The console output, Base64-encoded. If using a command line tool, the tool decodes the output for you.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of GetConsoleOutput.</p>
  GetConsoleScreenshotRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: String
        description: <p>The ID of the instance.</p>
      WakeUp?:
        type: Boolean
        description: <p>When set to <code>true</code>, acts as keystroke input and wakes up an instance that's in standby or "sleep" mode.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for the request.</p>
  GetConsoleScreenshotResult:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      imageData?:
        type: String
        description: <p>The data that comprises the image.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of the request.</p>
  GetHostReservationPurchasePreviewRequest:
    type: object
    properties:
      OfferingId:
        type: String
        description: <p>The offering ID of the reservation.</p>
      HostIdSet:
        type: RequestHostIdSet
        description: <p>The ID/s of the Dedicated Host/s that the reservation will be associated with.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  GetHostReservationPurchasePreviewResult:
    type: object
    properties:
      purchase?:
        type: PurchaseSet
        description: <p>The purchase information of the Dedicated Host Reservation and the Dedicated Hosts associated with it.</p>
      totalUpfrontPrice?:
        type: String
        description: <p>The potential total upfront price. This is billed immediately.</p>
      totalHourlyPrice?:
        type: String
        description: <p>The potential total hourly price of the reservation per hour.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  GetPasswordDataRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: String
        description: <p>The ID of the Windows instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for GetPasswordData.</p>
  GetPasswordDataResult:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the Windows instance.</p>
      timestamp?:
        type: DateTime
        description: <p>The time the data was last updated.</p>
      passwordData?:
        type: String
        description: <p>The password of the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of GetPasswordData.</p>
  GroupIdentifier:
    type: object
    properties:
      groupName?:
        type: String
        description: <p>The name of the security group.</p>
      groupId?:
        type: String
        description: <p>The ID of the security group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a security group.</p>
  HistoryRecord:
    type: object
    properties:
      timestamp:
        type: DateTime
        description: <p>The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      eventType:
        type: EventType
        description: <p>The event type.</p> <ul> <li> <p> <code>error</code> - Indicates an error with the Spot fleet request.</p> </li> <li> <p> <code>fleetRequestChange</code> - Indicates a change in the status or configuration of the Spot fleet request.</p> </li> <li> <p> <code>instanceChange</code> - Indicates that an instance was launched or terminated.</p> </li> </ul>
      eventInformation:
        type: EventInformation
        description: <p>Information about the event.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an event in the history of the Spot fleet request.</p>
  Host:
    type: object
    properties:
      hostId?:
        type: String
        description: <p>The ID of the Dedicated Host.</p>
      autoPlacement?:
        type: AutoPlacement
        description: <p>Whether auto-placement is on or off.</p>
      hostReservationId?:
        type: String
        description: <p>The reservation ID of the Dedicated Host. This returns a <code>null</code> response if the Dedicated Host doesn't have an associated reservation.</p>
      clientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p>
      hostProperties?:
        type: HostProperties
        description: <p>The hardware specifications of the Dedicated Host.</p>
      state?:
        type: AllocationState
        description: <p>The Dedicated Host's state.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone of the Dedicated Host.</p>
      instances?:
        type: HostInstanceList
        description: <p>The IDs and instance type that are currently running on the Dedicated Host.</p>
      availableCapacity?:
        type: AvailableCapacity
        description: <p>The number of new instances that can be launched onto the Dedicated Host.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the properties of the Dedicated Host.</p>
  HostInstance:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>the IDs of instances that are running on the Dedicated Host.</p>
      instanceType?:
        type: String
        description: <p>The instance type size (for example, <code>m3.medium</code>) of the running instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an instance running on a Dedicated Host.</p>
  HostOffering:
    type: object
    properties:
      offeringId?:
        type: String
        description: <p>The ID of the offering.</p>
      instanceFamily?:
        type: String
        description: <p>The instance family of the offering.</p>
      paymentOption?:
        type: PaymentOption
        description: <p>The available payment option.</p>
      upfrontPrice?:
        type: String
        description: <p>The upfront price of the offering. Does not apply to No Upfront offerings.</p>
      hourlyPrice?:
        type: String
        description: <p>The hourly price of the offering.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency of the offering.</p>
      duration?:
        type: Integer
        description: <p>The duration of the offering (in seconds).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Details about the Dedicated Host Reservation offering.</p>
  HostProperties:
    type: object
    properties:
      sockets?:
        type: Integer
        description: <p>The number of sockets on the Dedicated Host.</p>
      cores?:
        type: Integer
        description: <p>The number of cores on the Dedicated Host.</p>
      totalVCpus?:
        type: Integer
        description: <p>The number of vCPUs on the Dedicated Host.</p>
      instanceType?:
        type: String
        description: <p>The instance type size that the Dedicated Host supports (for example, <code>m3.medium</code>).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes properties of a Dedicated Host.</p>
  HostReservation:
    type: object
    properties:
      hostReservationId?:
        type: String
        description: <p>The ID of the reservation that specifies the associated Dedicated Hosts.</p>
      hostIdSet?:
        type: ResponseHostIdSet
        description: <p>The IDs of the Dedicated Hosts associated with the reservation.</p>
      offeringId?:
        type: String
        description: <p>The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it.</p>
      instanceFamily?:
        type: String
        description: <p>The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation.</p>
      paymentOption?:
        type: PaymentOption
        description: <p>The payment option selected for this reservation.</p>
      hourlyPrice?:
        type: String
        description: <p>The hourly price of the reservation.</p>
      upfrontPrice?:
        type: String
        description: <p>The upfront price of the reservation.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.</p>
      count?:
        type: Integer
        description: <p>The number of Dedicated Hosts the reservation is associated with.</p>
      duration?:
        type: Integer
        description: <p>The length of the reservation's term, specified in seconds. Can be <code>31536000 (1 year)</code> | <code>94608000 (3 years)</code>.</p>
      end?:
        type: DateTime
        description: <p>The date and time that the reservation ends.</p>
      start?:
        type: DateTime
        description: <p>The date and time that the reservation started.</p>
      state?:
        type: ReservationState
        description: <p>The state of the reservation.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Details about the Dedicated Host Reservation and associated Dedicated Hosts.</p>
  IamInstanceProfile:
    type: object
    properties:
      arn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the instance profile.</p>
      id?:
        type: String
        description: <p>The ID of the instance profile.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an IAM instance profile.</p>
  IamInstanceProfileSpecification:
    type: object
    properties:
      arn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the instance profile.</p>
      name?:
        type: String
        description: <p>The name of the instance profile.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an IAM instance profile.</p>
  IcmpTypeCode:
    type: object
    properties:
      type?:
        type: Integer
        description: <p>The ICMP code. A value of -1 means all codes for the specified ICMP type.</p>
      code?:
        type: Integer
        description: <p>The ICMP type. A value of -1 means all types.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the ICMP type and code.</p>
  IdFormat:
    type: object
    properties:
      resource?:
        type: String
        description: <p>The type of resource.</p>
      useLongIds?:
        type: Boolean
        description: <p>Indicates whether longer IDs (17-character IDs) are enabled for the resource.</p>
      deadline?:
        type: DateTime
        description: <p>The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the ID format for a resource.</p>
  Image:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the AMI.</p>
      imageLocation?:
        type: String
        description: <p>The location of the AMI.</p>
      imageState?:
        type: ImageState
        description: <p>The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance.</p>
      imageOwnerId?:
        type: String
        description: <p>The AWS account ID of the image owner.</p>
      creationDate?:
        type: String
        description: <p>The date and time the image was created.</p>
      isPublic?:
        type: Boolean
        description: <p>Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.</p>
      productCodes?:
        type: ProductCodeList
        description: <p>Any product codes associated with the AMI.</p>
      architecture?:
        type: ArchitectureValues
        description: <p>The architecture of the image.</p>
      imageType?:
        type: ImageTypeValues
        description: <p>The type of image.</p>
      kernelId?:
        type: String
        description: <p>The kernel associated with the image, if any. Only applicable for machine images.</p>
      ramdiskId?:
        type: String
        description: <p>The RAM disk associated with the image, if any. Only applicable for machine images.</p>
      platform?:
        type: PlatformValues
        description: <p>The value is <code>Windows</code> for Windows AMIs; otherwise blank.</p>
      sriovNetSupport?:
        type: String
        description: <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
      enaSupport?:
        type: Boolean
        description: <p>Specifies whether enhanced networking with ENA is enabled.</p>
      stateReason?:
        type: StateReason
        description: <p>The reason for the state change.</p>
      imageOwnerAlias?:
        type: String
        description: <p>The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or the AWS account ID of the AMI owner.</p>
      name?:
        type: String
        description: <p>The name of the AMI that was provided during image creation.</p>
      description?:
        type: String
        description: <p>The description of the AMI that was provided during image creation.</p>
      rootDeviceType?:
        type: DeviceType
        description: <p>The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.</p>
      rootDeviceName?:
        type: String
        description: <p>The device name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p>
      blockDeviceMapping?:
        type: BlockDeviceMappingList
        description: <p>Any block device mapping entries.</p>
      virtualizationType?:
        type: VirtualizationType
        description: <p>The type of virtualization of the AMI.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the image.</p>
      hypervisor?:
        type: HypervisorType
        description: <p>The hypervisor type of the image.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an image.</p>
  ImageAttribute:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the AMI.</p>
      launchPermission?:
        type: LaunchPermissionList
        description: <p>One or more launch permissions.</p>
      productCodes?:
        type: ProductCodeList
        description: <p>One or more product codes.</p>
      kernel?:
        type: AttributeValue
        description: <p>The kernel ID.</p>
      ramdisk?:
        type: AttributeValue
        description: <p>The RAM disk ID.</p>
      description?:
        type: AttributeValue
        description: <p>A description for the AMI.</p>
      sriovNetSupport?:
        type: AttributeValue
        description: <p>Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
      blockDeviceMapping?:
        type: BlockDeviceMappingList
        description: <p>One or more block device mapping entries.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an image attribute.</p>
  ImageDiskContainer:
    type: object
    properties:
      Description?:
        type: String
        description: <p>The description of the disk image.</p>
      Format?:
        type: String
        description: '<p>The format of the disk image being imported.</p> <p>Valid
          values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code>
          </p>'
      Url?:
        type: String
        description: <p>The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an Amazon S3 URL (s3://..)</p>
      UserBucket?:
        type: UserBucket
        description: <p>The S3 bucket for the disk image.</p>
      DeviceName?:
        type: String
        description: <p>The block device mapping for the disk.</p>
      SnapshotId?:
        type: String
        description: <p>The ID of the EBS snapshot to be used for importing the snapshot.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the disk container object for an import image task.</p>
  ImportImageRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Description?:
        type: String
        description: <p>A description string for the import image task.</p>
      DiskContainer?:
        type: ImageDiskContainerList
        description: <p>Information about the disk containers.</p>
      LicenseType?:
        type: String
        description: '<p>The license type to be used for the Amazon Machine Image
          (AMI) after importing.</p> <p> <b>Note:</b> You may only use BYOL if you
          have existing licenses with rights to use these licenses in a third party
          cloud like AWS. For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image">Prerequisites</a>
          in the VM Import/Export User Guide.</p> <p>Valid values: <code>AWS</code>
          | <code>BYOL</code> </p>'
      Hypervisor?:
        type: String
        description: '<p>The target hypervisor platform.</p> <p>Valid values: <code>xen</code>
          </p>'
      Architecture?:
        type: String
        description: '<p>The architecture of the virtual machine.</p> <p>Valid values:
          <code>i386</code> | <code>x86_64</code> </p>'
      Platform?:
        type: String
        description: '<p>The operating system of the virtual machine.</p> <p>Valid
          values: <code>Windows</code> | <code>Linux</code> </p>'
      ClientData?:
        type: ClientData
        description: <p>The client-specific data.</p>
      ClientToken?:
        type: String
        description: <p>The token to enable idempotency for VM import requests.</p>
      RoleName?:
        type: String
        description: <p>The name of the role to use when not using the default role, 'vmimport'.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ImportImage.</p>
  ImportImageResult:
    type: object
    properties:
      importTaskId?:
        type: String
        description: <p>The task ID of the import image task.</p>
      architecture?:
        type: String
        description: <p>The architecture of the virtual machine.</p>
      licenseType?:
        type: String
        description: <p>The license type of the virtual machine.</p>
      platform?:
        type: String
        description: <p>The operating system of the virtual machine.</p>
      hypervisor?:
        type: String
        description: <p>The target hypervisor of the import task.</p>
      description?:
        type: String
        description: <p>A description of the import task.</p>
      snapshotDetailSet?:
        type: SnapshotDetailList
        description: <p>Information about the snapshots.</p>
      imageId?:
        type: String
        description: <p>The ID of the Amazon Machine Image (AMI) created by the import task.</p>
      progress?:
        type: String
        description: <p>The progress of the task.</p>
      statusMessage?:
        type: String
        description: <p>A detailed status message of the import task.</p>
      status?:
        type: String
        description: <p>A brief status of the task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for ImportImage.</p>
  ImportImageTask:
    type: object
    properties:
      importTaskId?:
        type: String
        description: <p>The ID of the import image task.</p>
      architecture?:
        type: String
        description: '<p>The architecture of the virtual machine.</p> <p>Valid values:
          <code>i386</code> | <code>x86_64</code> </p>'
      licenseType?:
        type: String
        description: <p>The license type of the virtual machine.</p>
      platform?:
        type: String
        description: <p>The description string for the import image task.</p>
      hypervisor?:
        type: String
        description: '<p>The target hypervisor for the import task.</p> <p>Valid values:
          <code>xen</code> </p>'
      description?:
        type: String
        description: <p>A description of the import task.</p>
      snapshotDetailSet?:
        type: SnapshotDetailList
        description: <p>Information about the snapshots.</p>
      imageId?:
        type: String
        description: <p>The ID of the Amazon Machine Image (AMI) of the imported virtual machine.</p>
      progress?:
        type: String
        description: <p>The percentage of progress of the import image task.</p>
      statusMessage?:
        type: String
        description: <p>A descriptive status message for the import image task.</p>
      status?:
        type: String
        description: <p>A brief status for the import image task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an import image task.</p>
  ImportInstanceLaunchSpecification:
    type: object
    properties:
      architecture?:
        type: ArchitectureValues
        description: <p>The architecture of the instance.</p>
      GroupName?:
        type: SecurityGroupStringList
        description: <p>One or more security group names.</p>
      GroupId?:
        type: SecurityGroupIdStringList
        description: <p>One or more security group IDs.</p>
      additionalInfo?:
        type: String
        description: <p>Reserved.</p>
      userData?:
        type: UserData
        description: <p>The user data to make available to the instance. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type. For more information about the instance types that you can import, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#vmimport-instance-types">Instance Types</a> in the VM Import/Export User Guide.</p>
      placement?:
        type: Placement
        description: <p>The placement information for the instance.</p>
      monitoring?:
        type: Boolean
        description: <p>Indicates whether monitoring is enabled.</p>
      subnetId?:
        type: String
        description: <p>[EC2-VPC] The ID of the subnet in which to launch the instance.</p>
      instanceInitiatedShutdownBehavior?:
        type: ShutdownBehavior
        description: <p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p>
      privateIpAddress?:
        type: String
        description: <p>[EC2-VPC] An available IP address from the IP address range of the subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the launch specification for VM import.</p>
  ImportInstanceRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      description?:
        type: String
        description: <p>A description for the instance being imported.</p>
      launchSpecification?:
        type: ImportInstanceLaunchSpecification
        description: <p>The launch specification.</p>
      diskImage?:
        type: DiskImageList
        description: <p>The disk image.</p>
      platform:
        type: PlatformValues
        description: <p>The instance operating system.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ImportInstance.</p>
  ImportInstanceResult:
    type: object
    properties:
      conversionTask?:
        type: ConversionTask
        description: <p>Information about the conversion task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for ImportInstance.</p>
  ImportInstanceTaskDetails:
    type: object
    properties:
      volumes:
        type: ImportInstanceVolumeDetailSet
        description: <p>One or more volumes.</p>
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      platform?:
        type: PlatformValues
        description: <p>The instance operating system.</p>
      description?:
        type: String
        description: <p>A description of the task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an import instance task.</p>
  ImportInstanceVolumeDetailItem:
    type: object
    properties:
      bytesConverted:
        type: Long
        description: <p>The number of bytes converted so far.</p>
      availabilityZone:
        type: String
        description: <p>The Availability Zone where the resulting instance will reside.</p>
      image:
        type: DiskImageDescription
        description: <p>The image.</p>
      volume:
        type: DiskImageVolumeDescription
        description: <p>The volume.</p>
      status:
        type: String
        description: <p>The status of the import of this particular disk image.</p>
      statusMessage?:
        type: String
        description: <p>The status information or errors related to the disk image.</p>
      description?:
        type: String
        description: <p>A description of the task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an import volume task.</p>
  ImportKeyPairRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      keyName:
        type: String
        description: <p>A unique name for the key pair.</p>
      publicKeyMaterial:
        type: Blob
        description: <p>The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ImportKeyPair.</p>
  ImportKeyPairResult:
    type: object
    properties:
      keyName?:
        type: String
        description: <p>The key pair name you provided.</p>
      keyFingerprint?:
        type: String
        description: <p>The MD5 public key fingerprint as specified in section 4 of RFC 4716.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ImportKeyPair.</p>
  ImportSnapshotRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      Description?:
        type: String
        description: <p>The description string for the import snapshot task.</p>
      DiskContainer?:
        type: SnapshotDiskContainer
        description: <p>Information about the disk container.</p>
      ClientData?:
        type: ClientData
        description: <p>The client-specific data.</p>
      ClientToken?:
        type: String
        description: <p>Token to enable idempotency for VM import requests.</p>
      RoleName?:
        type: String
        description: <p>The name of the role to use when not using the default role, 'vmimport'.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ImportSnapshot.</p>
  ImportSnapshotResult:
    type: object
    properties:
      importTaskId?:
        type: String
        description: <p>The ID of the import snapshot task.</p>
      snapshotTaskDetail?:
        type: SnapshotTaskDetail
        description: <p>Information about the import snapshot task.</p>
      description?:
        type: String
        description: <p>A description of the import snapshot task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for ImportSnapshot.</p>
  ImportSnapshotTask:
    type: object
    properties:
      importTaskId?:
        type: String
        description: <p>The ID of the import snapshot task.</p>
      snapshotTaskDetail?:
        type: SnapshotTaskDetail
        description: <p>Describes an import snapshot task.</p>
      description?:
        type: String
        description: <p>A description of the import snapshot task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an import snapshot task.</p>
  ImportVolumeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      availabilityZone:
        type: String
        description: <p>The Availability Zone for the resulting EBS volume.</p>
      image:
        type: DiskImageDetail
        description: <p>The disk image.</p>
      description?:
        type: String
        description: <p>A description of the volume.</p>
      volume:
        type: VolumeDetail
        description: <p>The volume size.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ImportVolume.</p>
  ImportVolumeResult:
    type: object
    properties:
      conversionTask?:
        type: ConversionTask
        description: <p>Information about the conversion task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output for ImportVolume.</p>
  ImportVolumeTaskDetails:
    type: object
    properties:
      bytesConverted:
        type: Long
        description: <p>The number of bytes converted so far.</p>
      availabilityZone:
        type: String
        description: <p>The Availability Zone where the resulting volume will reside.</p>
      description?:
        type: String
        description: <p>The description you provided when starting the import volume task.</p>
      image:
        type: DiskImageDescription
        description: <p>The image.</p>
      volume:
        type: DiskImageVolumeDescription
        description: <p>The volume.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an import volume task.</p>
  Instance:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      imageId?:
        type: String
        description: <p>The ID of the AMI used to launch the instance.</p>
      instanceState?:
        type: InstanceState
        description: <p>The current state of the instance.</p>
      privateDnsName?:
        type: String
        description: <p>The private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.</p>
      dnsName?:
        type: String
        description: <p>The public DNS name assigned to the instance. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.</p>
      reason?:
        type: String
        description: <p>The reason for the most recent state transition. This might be an empty string.</p>
      keyName?:
        type: String
        description: <p>The name of the key pair, if this instance was launched with an associated key pair.</p>
      amiLaunchIndex?:
        type: Integer
        description: <p>The AMI launch index, which can be used to find this instance in the launch group.</p>
      productCodes?:
        type: ProductCodeList
        description: <p>The product codes attached to this instance, if applicable.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type.</p>
      launchTime?:
        type: DateTime
        description: <p>The time the instance was launched.</p>
      placement?:
        type: Placement
        description: <p>The location where the instance launched, if applicable.</p>
      kernelId?:
        type: String
        description: <p>The kernel associated with this instance, if applicable.</p>
      ramdiskId?:
        type: String
        description: <p>The RAM disk associated with this instance, if applicable.</p>
      platform?:
        type: PlatformValues
        description: <p>The value is <code>Windows</code> for Windows instances; otherwise blank.</p>
      monitoring?:
        type: Monitoring
        description: <p>The monitoring information for the instance.</p>
      subnetId?:
        type: String
        description: <p>[EC2-VPC] The ID of the subnet in which the instance is running.</p>
      vpcId?:
        type: String
        description: <p>[EC2-VPC] The ID of the VPC in which the instance is running.</p>
      privateIpAddress?:
        type: String
        description: <p>The private IP address assigned to the instance.</p>
      ipAddress?:
        type: String
        description: <p>The public IP address assigned to the instance, if applicable.</p>
      stateReason?:
        type: StateReason
        description: <p>The reason for the most recent state transition.</p>
      architecture?:
        type: ArchitectureValues
        description: <p>The architecture of the image.</p>
      rootDeviceType?:
        type: DeviceType
        description: <p>The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.</p>
      rootDeviceName?:
        type: String
        description: <p>The root device name (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p>
      blockDeviceMapping?:
        type: InstanceBlockDeviceMappingList
        description: <p>Any block device mapping entries for the instance.</p>
      virtualizationType?:
        type: VirtualizationType
        description: <p>The virtualization type of the instance.</p>
      instanceLifecycle?:
        type: InstanceLifecycleType
        description: <p>Indicates whether this is a Spot instance or a Scheduled Instance.</p>
      spotInstanceRequestId?:
        type: String
        description: <p>If the request is a Spot instance request, the ID of the request.</p>
      clientToken?:
        type: String
        description: <p>The idempotency token you provided when you launched the instance, if applicable.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the instance.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>One or more security groups for the instance.</p>
      sourceDestCheck?:
        type: Boolean
        description: <p>Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the instance to perform NAT. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
      hypervisor?:
        type: HypervisorType
        description: <p>The hypervisor type of the instance.</p>
      networkInterfaceSet?:
        type: InstanceNetworkInterfaceList
        description: <p>[EC2-VPC] One or more network interfaces for the instance.</p>
      iamInstanceProfile?:
        type: IamInstanceProfile
        description: <p>The IAM instance profile associated with the instance, if applicable.</p>
      ebsOptimized?:
        type: Boolean
        description: <p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
      sriovNetSupport?:
        type: String
        description: <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
      enaSupport?:
        type: Boolean
        description: <p>Specifies whether enhanced networking with ENA is enabled.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an instance.</p>
  InstanceAttribute:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      instanceType?:
        type: AttributeValue
        description: <p>The instance type.</p>
      kernel?:
        type: AttributeValue
        description: <p>The kernel ID.</p>
      ramdisk?:
        type: AttributeValue
        description: <p>The RAM disk ID.</p>
      userData?:
        type: AttributeValue
        description: <p>The user data.</p>
      disableApiTermination?:
        type: AttributeBooleanValue
        description: <p>If the value is <code>true</code>, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.</p>
      instanceInitiatedShutdownBehavior?:
        type: AttributeValue
        description: <p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p>
      rootDeviceName?:
        type: AttributeValue
        description: <p>The name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p>
      blockDeviceMapping?:
        type: InstanceBlockDeviceMappingList
        description: <p>The block device mapping of the instance.</p>
      productCodes?:
        type: ProductCodeList
        description: <p>A list of product codes.</p>
      ebsOptimized?:
        type: AttributeBooleanValue
        description: <p>Indicates whether the instance is optimized for EBS I/O.</p>
      sriovNetSupport?:
        type: AttributeValue
        description: <p>Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
      enaSupport?:
        type: AttributeBooleanValue
        description: <p>Indicates whether enhanced networking with ENA is enabled.</p>
      sourceDestCheck?:
        type: AttributeBooleanValue
        description: <p>Indicates whether source/destination checking is enabled. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>The security groups associated with the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an instance attribute.</p>
  InstanceBlockDeviceMapping:
    type: object
    properties:
      deviceName?:
        type: String
        description: <p>The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
      ebs?:
        type: EbsInstanceBlockDevice
        description: <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a block device mapping.</p>
  InstanceBlockDeviceMappingSpecification:
    type: object
    properties:
      deviceName?:
        type: String
        description: <p>The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
      ebs?:
        type: EbsInstanceBlockDeviceSpecification
        description: <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
      virtualName?:
        type: String
        description: <p>The virtual device name.</p>
      noDevice?:
        type: String
        description: <p>suppress the specified device included in the block device mapping.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a block device mapping entry.</p>
  InstanceCapacity:
    type: object
    properties:
      instanceType?:
        type: String
        description: <p>The instance type size supported by the Dedicated Host.</p>
      availableCapacity?:
        type: Integer
        description: <p>The number of instances that can still be launched onto the Dedicated Host.</p>
      totalCapacity?:
        type: Integer
        description: <p>The total number of instances that can be launched onto the Dedicated Host.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Information about the instance type that the Dedicated Host supports.</p>
  InstanceCount:
    type: object
    properties:
      state?:
        type: ListingState
        description: <p>The states of the listed Reserved Instances.</p>
      instanceCount?:
        type: Integer
        description: <p>The number of listed Reserved Instances in the state specified by the <code>state</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Reserved Instance listing state.</p>
  InstanceExportDetails:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the resource being exported.</p>
      targetEnvironment?:
        type: ExportEnvironment
        description: <p>The target virtualization environment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an instance to export.</p>
  InstanceMonitoring:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      monitoring?:
        type: Monitoring
        description: <p>The monitoring information.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the monitoring information of the instance.</p>
  InstanceNetworkInterface:
    type: object
    properties:
      networkInterfaceId?:
        type: String
        description: <p>The ID of the network interface.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      description?:
        type: String
        description: <p>The description.</p>
      ownerId?:
        type: String
        description: <p>The ID of the AWS account that created the network interface.</p>
      status?:
        type: NetworkInterfaceStatus
        description: <p>The status of the network interface.</p>
      macAddress?:
        type: String
        description: <p>The MAC address.</p>
      privateIpAddress?:
        type: String
        description: <p>The IP address of the network interface within the subnet.</p>
      privateDnsName?:
        type: String
        description: <p>The private DNS name.</p>
      sourceDestCheck?:
        type: Boolean
        description: <p>Indicates whether to validate network traffic to or from this network interface.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>One or more security groups.</p>
      attachment?:
        type: InstanceNetworkInterfaceAttachment
        description: <p>The network interface attachment.</p>
      association?:
        type: InstanceNetworkInterfaceAssociation
        description: <p>The association information for an Elastic IP associated with the network interface.</p>
      privateIpAddressesSet?:
        type: InstancePrivateIpAddressList
        description: <p>The private IP addresses associated with the network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a network interface.</p>
  InstanceNetworkInterfaceAssociation:
    type: object
    properties:
      publicIp?:
        type: String
        description: <p>The public IP address or Elastic IP address bound to the network interface.</p>
      publicDnsName?:
        type: String
        description: <p>The public DNS name.</p>
      ipOwnerId?:
        type: String
        description: <p>The ID of the owner of the Elastic IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes association information for an Elastic IP address.</p>
  InstanceNetworkInterfaceAttachment:
    type: object
    properties:
      attachmentId?:
        type: String
        description: <p>The ID of the network interface attachment.</p>
      deviceIndex?:
        type: Integer
        description: <p>The index of the device on the instance for the network interface attachment.</p>
      status?:
        type: AttachmentStatus
        description: <p>The attachment state.</p>
      attachTime?:
        type: DateTime
        description: <p>The time stamp when the attachment initiated.</p>
      deleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a network interface attachment.</p>
  InstanceNetworkInterfaceSpecification:
    type: object
    properties:
      networkInterfaceId?:
        type: String
        description: <p>The ID of the network interface.</p>
      deviceIndex?:
        type: Integer
        description: <p>The index of the device on the instance for the network interface attachment. If you are specifying a network interface in a <a>RunInstances</a> request, you must provide the device index.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet associated with the network string. Applies only if creating a network interface when launching an instance.</p>
      description?:
        type: String
        description: <p>The description of the network interface. Applies only if creating a network interface when launching an instance.</p>
      privateIpAddress?:
        type: String
        description: <p>The private IP address of the network interface. Applies only if creating a network interface when launching an instance.</p>
      SecurityGroupId?:
        type: SecurityGroupIdStringList
        description: <p>The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.</p>
      deleteOnTermination?:
        type: Boolean
        description: <p>If set to <code>true</code>, the interface is deleted when the instance is terminated. You can specify <code>true</code> only if creating a new network interface when launching an instance.</p>
      privateIpAddressesSet?:
        type: PrivateIpAddressSpecificationList
        description: <p>One or more private IP addresses to assign to the network interface. Only one private IP address can be designated as primary.</p>
      secondaryPrivateIpAddressCount?:
        type: Integer
        description: <p>The number of secondary private IP addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option.</p>
      associatePublicIpAddress?:
        type: Boolean
        description: <p>Indicates whether to assign a public IP address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a network interface.</p>
  InstancePrivateIpAddress:
    type: object
    properties:
      privateIpAddress?:
        type: String
        description: <p>The private IP address of the network interface.</p>
      privateDnsName?:
        type: String
        description: <p>The private DNS name.</p>
      primary?:
        type: Boolean
        description: <p>Indicates whether this IP address is the primary private IP address of the network interface.</p>
      association?:
        type: InstanceNetworkInterfaceAssociation
        description: <p>The association information for an Elastic IP address for the network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a private IP address.</p>
  InstanceState:
    type: object
    properties:
      code?:
        type: Integer
        description: '<p>The low byte represents the state. The high byte is an opaque
          internal value and should be ignored.</p> <ul> <li> <p> <code>0</code> :
          <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code>
          </p> </li> <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li>
          <li> <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p> <code>64</code>
          : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code>
          </p> </li> </ul>'
      name?:
        type: InstanceStateName
        description: <p>The current state of the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the current state of the instance.</p>
  InstanceStateChange:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      currentState?:
        type: InstanceState
        description: <p>The current state of the instance.</p>
      previousState?:
        type: InstanceState
        description: <p>The previous state of the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an instance state change.</p>
  InstanceStatus:
    type: object
    properties:
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone of the instance.</p>
      eventsSet?:
        type: InstanceStatusEventList
        description: <p>Any scheduled events associated with the instance.</p>
      instanceState?:
        type: InstanceState
        description: <p>The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state.</p>
      systemStatus?:
        type: InstanceStatusSummary
        description: <p>Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.</p>
      instanceStatus?:
        type: InstanceStatusSummary
        description: <p>Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the status of an instance.</p>
  InstanceStatusDetails:
    type: object
    properties:
      name?:
        type: StatusName
        description: <p>The type of instance status.</p>
      status?:
        type: StatusType
        description: <p>The status.</p>
      impairedSince?:
        type: DateTime
        description: <p>The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the instance status.</p>
  InstanceStatusEvent:
    type: object
    properties:
      code?:
        type: EventCode
        description: <p>The event code.</p>
      description?:
        type: String
        description: '<p>A description of the event.</p> <p>After a scheduled event
          is completed, it can still be described for up to a week. If the event has
          been completed, this description starts with the following text: [Completed].</p>'
      notBefore?:
        type: DateTime
        description: <p>The earliest scheduled start time for the event.</p>
      notAfter?:
        type: DateTime
        description: <p>The latest scheduled end time for the event.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a scheduled event for an instance.</p>
  InstanceStatusSummary:
    type: object
    properties:
      status?:
        type: SummaryStatus
        description: <p>The status.</p>
      details?:
        type: InstanceStatusDetailsList
        description: <p>The system instance health or application instance health.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the status of an instance.</p>
  InternetGateway:
    type: object
    properties:
      internetGatewayId?:
        type: String
        description: <p>The ID of the Internet gateway.</p>
      attachmentSet?:
        type: InternetGatewayAttachmentList
        description: <p>Any VPCs attached to the Internet gateway.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the Internet gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an Internet gateway.</p>
  InternetGatewayAttachment:
    type: object
    properties:
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      state?:
        type: AttachmentStatus
        description: <p>The current state of the attachment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the attachment of a VPC to an Internet gateway.</p>
  IpPermission:
    type: object
    properties:
      ipProtocol?:
        type: String
        description: <p>The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). </p> <p>[EC2-VPC only] When you authorize or revoke security group rules, you can use <code>-1</code> to specify all.</p>
      fromPort?:
        type: Integer
        description: <p>The start of port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types.</p>
      toPort?:
        type: Integer
        description: <p>The end of port range for the TCP and UDP protocols, or an ICMP code. A value of <code>-1</code> indicates all ICMP codes for the specified ICMP type.</p>
      groups?:
        type: UserIdGroupPairList
        description: <p>One or more security group and AWS account ID pairs.</p>
      ipRanges?:
        type: IpRangeList
        description: <p>One or more IP ranges.</p>
      prefixListIds?:
        type: PrefixListIdList
        description: <p>(Valid for <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupEgress</a> and <a>DescribeSecurityGroups</a> only) One or more prefix list IDs for an AWS service. In an <a>AuthorizeSecurityGroupEgress</a> request, this is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a security group rule.</p>
  IpRange:
    type: object
    properties:
      cidrIp?:
        type: String
        description: <p>The CIDR range. You can either specify a CIDR range or a source security group, not both.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an IP range.</p>
  KeyPair:
    type: object
    properties:
      keyName?:
        type: String
        description: <p>The name of the key pair.</p>
      keyFingerprint?:
        type: String
        description: <p>The SHA-1 digest of the DER encoded private key.</p>
      keyMaterial?:
        type: String
        description: <p>An unencrypted PEM encoded RSA private key.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a key pair.</p>
  KeyPairInfo:
    type: object
    properties:
      keyName?:
        type: String
        description: <p>The name of the key pair.</p>
      keyFingerprint?:
        type: String
        description: <p>If you used <a>CreateKeyPair</a> to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used <a>ImportKeyPair</a> to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a key pair.</p>
  LaunchPermission:
    type: object
    properties:
      userId?:
        type: String
        description: <p>The AWS account ID.</p>
      group?:
        type: PermissionGroup
        description: <p>The name of the group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a launch permission.</p>
  LaunchPermissionModifications:
    type: object
    properties:
      Add?:
        type: LaunchPermissionList
        description: <p>The AWS account ID to add to the list of launch permissions for the AMI.</p>
      Remove?:
        type: LaunchPermissionList
        description: <p>The AWS account ID to remove from the list of launch permissions for the AMI.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a launch permission modification.</p>
  LaunchSpecification:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the AMI.</p>
      keyName?:
        type: String
        description: <p>The name of the key pair.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.</p>
      userData?:
        type: String
        description: <p>The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
      addressingType?:
        type: String
        description: <p>Deprecated.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type.</p>
      placement?:
        type: SpotPlacement
        description: <p>The placement information for the instance.</p>
      kernelId?:
        type: String
        description: <p>The ID of the kernel.</p>
      ramdiskId?:
        type: String
        description: <p>The ID of the RAM disk.</p>
      blockDeviceMapping?:
        type: BlockDeviceMappingList
        description: <p>One or more block device mapping entries.</p> <p>Although you can specify encrypted EBS volumes in this block device mapping for your Spot Instances, these volumes are not encrypted.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet in which to launch the instance.</p>
      networkInterfaceSet?:
        type: InstanceNetworkInterfaceSpecificationList
        description: <p>One or more network interfaces.</p>
      iamInstanceProfile?:
        type: IamInstanceProfileSpecification
        description: <p>The IAM instance profile.</p>
      ebsOptimized?:
        type: Boolean
        description: '<p>Indicates whether the instance is optimized for EBS I/O.
          This optimization provides dedicated throughput to Amazon EBS and an optimized
          configuration stack to provide optimal EBS I/O performance. This optimization
          isn''t available with all instance types. Additional usage charges apply
          when using an EBS Optimized instance.</p> <p>Default: <code>false</code>
          </p>'
      monitoring?:
        type: RunInstancesMonitoringEnabled
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the launch specification for an instance.</p>
  ModifyHostsRequest:
    type: object
    properties:
      hostId:
        type: RequestHostIdList
        description: <p>The host IDs of the Dedicated Hosts you want to modify.</p>
      autoPlacement:
        type: AutoPlacement
        description: <p>Specify whether to enable or disable auto-placement.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyHosts.</p>
  ModifyHostsResult:
    type: object
    properties:
      successful?:
        type: ResponseHostIdList
        description: <p>The IDs of the Dedicated Hosts that were successfully modified.</p>
      unsuccessful?:
        type: UnsuccessfulItemList
        description: <p>The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ModifyHosts.</p>
  ModifyIdFormatRequest:
    type: object
    properties:
      Resource:
        type: String
        description: '<p>The type of resource: <code>instance</code> | <code>reservation</code>
          | <code>snapshot</code> | <code>volume</code> </p>'
      UseLongIds:
        type: Boolean
        description: <p>Indicate whether the resource should use longer IDs (17-character IDs).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters of ModifyIdFormat.</p>
  ModifyIdentityIdFormatRequest:
    type: object
    properties:
      resource:
        type: String
        description: '<p>The type of resource: <code>instance</code> | <code>reservation</code>
          | <code>snapshot</code> | <code>volume</code> </p>'
      useLongIds:
        type: Boolean
        description: <p>Indicates whether the resource should use longer IDs (17-character IDs)</p>
      principalArn:
        type: String
        description: <p>The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of the account.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters of ModifyIdentityIdFormat.</p>
  ModifyImageAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImageId:
        type: String
        description: <p>The ID of the AMI.</p>
      Attribute?:
        type: String
        description: <p>The name of the attribute to modify.</p>
      OperationType?:
        type: OperationType
        description: <p>The operation type.</p>
      UserId?:
        type: UserIdStringList
        description: <p>One or more AWS account IDs. This is only valid when modifying the <code>launchPermission</code> attribute.</p>
      UserGroup?:
        type: UserGroupStringList
        description: <p>One or more user groups. This is only valid when modifying the <code>launchPermission</code> attribute.</p>
      ProductCode?:
        type: ProductCodeStringList
        description: <p>One or more product codes. After you add a product code to an AMI, it can't be removed. This is only valid when modifying the <code>productCodes</code> attribute.</p>
      Value?:
        type: String
        description: <p>The value of the attribute being modified. This is only valid when modifying the <code>description</code> attribute.</p>
      LaunchPermission?:
        type: LaunchPermissionModifications
        description: <p>A launch permission modification.</p>
      Description?:
        type: AttributeValue
        description: <p>A description for the AMI.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyImageAttribute.</p>
  ModifyInstanceAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      instanceId:
        type: String
        description: <p>The ID of the instance.</p>
      attribute?:
        type: InstanceAttributeName
        description: <p>The name of the attribute.</p>
      value?:
        type: String
        description: <p>A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code> attribute.</p>
      blockDeviceMapping?:
        type: InstanceBlockDeviceMappingSpecificationList
        description: <p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is deleted when the instance is terminated.</p> <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Updating the Block Device Mapping when Launching an Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      SourceDestCheck?:
        type: AttributeBooleanValue
        description: <p>Specifies whether source/destination checking is enabled. A value of <code>true</code> means that checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT.</p>
      disableApiTermination?:
        type: AttributeBooleanValue
        description: <p>If the value is <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this paramater for Spot Instances.</p>
      instanceType?:
        type: AttributeValue
        description: <p>Changes the instance type to the specified value. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.</p>
      kernel?:
        type: AttributeValue
        description: <p>Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.</p>
      ramdisk?:
        type: AttributeValue
        description: <p>Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.</p>
      userData?:
        type: BlobAttributeValue
        description: <p>Changes the instance's user data to the specified value. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
      instanceInitiatedShutdownBehavior?:
        type: AttributeValue
        description: <p>Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p>
      GroupId?:
        type: GroupIdStringList
        description: <p>[EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name.</p>
      ebsOptimized?:
        type: AttributeBooleanValue
        description: <p>Specifies whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
      sriovNetSupport?:
        type: AttributeValue
        description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.</p> <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
      enaSupport?:
        type: AttributeBooleanValue
        description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyInstanceAttribute.</p>
  ModifyInstancePlacementRequest:
    type: object
    properties:
      instanceId:
        type: String
        description: <p>The ID of the instance that you are modifying.</p>
      tenancy?:
        type: HostTenancy
        description: <p>The tenancy of the instance that you are modifying.</p>
      affinity?:
        type: Affinity
        description: <p>The new affinity setting for the instance.</p>
      hostId?:
        type: String
        description: <p>The ID of the Dedicated Host that the instance will have affinity with.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyInstancePlacement.</p>
  ModifyInstancePlacementResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ModifyInstancePlacement.</p>
  ModifyNetworkInterfaceAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkInterfaceId:
        type: String
        description: <p>The ID of the network interface.</p>
      description?:
        type: AttributeValue
        description: <p>A description for the network interface.</p>
      sourceDestCheck?:
        type: AttributeBooleanValue
        description: <p>Indicates whether source/destination checking is enabled. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
      SecurityGroupId?:
        type: SecurityGroupIdStringList
        description: <p>Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.</p>
      attachment?:
        type: NetworkInterfaceAttachmentChanges
        description: <p>Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyNetworkInterfaceAttribute.</p>
  ModifyReservedInstancesRequest:
    type: object
    properties:
      clientToken?:
        type: String
        description: <p>A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
      ReservedInstancesId:
        type: ReservedInstancesIdStringList
        description: <p>The IDs of the Reserved Instances to modify.</p>
      ReservedInstancesConfigurationSetItemType:
        type: ReservedInstancesConfigurationList
        description: <p>The configuration settings for the Reserved Instances to modify.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyReservedInstances.</p>
  ModifyReservedInstancesResult:
    type: object
    properties:
      reservedInstancesModificationId?:
        type: String
        description: <p>The ID for the modification.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ModifyReservedInstances.</p>
  ModifySnapshotAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SnapshotId:
        type: String
        description: <p>The ID of the snapshot.</p>
      Attribute?:
        type: SnapshotAttributeName
        description: <p>The snapshot attribute to modify.</p> <note> <p>Only volume creation permissions may be modified at the customer level.</p> </note>
      OperationType?:
        type: OperationType
        description: <p>The type of operation to perform to the attribute.</p>
      UserId?:
        type: UserIdStringList
        description: <p>The account ID to modify for the snapshot.</p>
      UserGroup?:
        type: GroupNameStringList
        description: <p>The group to modify for the snapshot.</p>
      CreateVolumePermission?:
        type: CreateVolumePermissionModifications
        description: <p>A JSON representation of the snapshot attribute modification.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifySnapshotAttribute.</p>
  ModifySpotFleetRequestRequest:
    type: object
    properties:
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      targetCapacity?:
        type: Integer
        description: <p>The size of the fleet.</p>
      excessCapacityTerminationPolicy?:
        type: ExcessCapacityTerminationPolicy
        description: <p>Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifySpotFleetRequest.</p>
  ModifySpotFleetRequestResponse:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ModifySpotFleetRequest.</p>
  ModifySubnetAttributeRequest:
    type: object
    properties:
      subnetId:
        type: String
        description: <p>The ID of the subnet.</p>
      MapPublicIpOnLaunch?:
        type: AttributeBooleanValue
        description: <p>Specify <code>true</code> to indicate that instances launched into the specified subnet should be assigned public IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifySubnetAttribute.</p>
  ModifyVolumeAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VolumeId:
        type: String
        description: <p>The ID of the volume.</p>
      AutoEnableIO?:
        type: AttributeBooleanValue
        description: <p>Indicates whether the volume should be auto-enabled for I/O operations.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyVolumeAttribute.</p>
  ModifyVpcAttributeRequest:
    type: object
    properties:
      vpcId:
        type: String
        description: <p>The ID of the VPC.</p>
      EnableDnsSupport?:
        type: AttributeBooleanValue
        description: <p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" will succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>
      EnableDnsHostnames?:
        type: AttributeBooleanValue
        description: <p>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyVpcAttribute.</p>
  ModifyVpcEndpointRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcEndpointId:
        type: String
        description: <p>The ID of the endpoint.</p>
      ResetPolicy?:
        type: Boolean
        description: <p>Specify <code>true</code> to reset the policy document to the default policy. The default policy allows access to the service.</p>
      PolicyDocument?:
        type: String
        description: <p>A policy document to attach to the endpoint. The policy must be in valid JSON format.</p>
      AddRouteTableId?:
        type: ValueStringList
        description: <p>One or more route tables IDs to associate with the endpoint.</p>
      RemoveRouteTableId?:
        type: ValueStringList
        description: <p>One or more route table IDs to disassociate from the endpoint.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ModifyVpcEndpoint.</p>
  ModifyVpcEndpointResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ModifyVpcEndpoint.</p>
  ModifyVpcPeeringConnectionOptionsRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      VpcPeeringConnectionId:
        type: String
        description: <p>The ID of the VPC peering connection.</p>
      RequesterPeeringConnectionOptions?:
        type: PeeringConnectionOptionsRequest
        description: <p>The VPC peering connection options for the requester VPC.</p>
      AccepterPeeringConnectionOptions?:
        type: PeeringConnectionOptionsRequest
        description: <p>The VPC peering connection options for the accepter VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  ModifyVpcPeeringConnectionOptionsResult:
    type: object
    properties:
      requesterPeeringConnectionOptions?:
        type: PeeringConnectionOptions
        description: <p>Information about the VPC peering connection options for the requester VPC.</p>
      accepterPeeringConnectionOptions?:
        type: PeeringConnectionOptions
        description: <p>Information about the VPC peering connection options for the accepter VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  MonitorInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: InstanceIdStringList
        description: <p>One or more instance IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for MonitorInstances.</p>
  MonitorInstancesResult:
    type: object
    properties:
      instancesSet?:
        type: InstanceMonitoringList
        description: <p>Monitoring information for one or more instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of MonitorInstances.</p>
  Monitoring:
    type: object
    properties:
      state?:
        type: MonitoringState
        description: <p>Indicates whether monitoring is enabled for the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the monitoring for the instance.</p>
  MoveAddressToVpcRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      publicIp:
        type: String
        description: <p>The Elastic IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for MoveAddressToVpc.</p>
  MoveAddressToVpcResult:
    type: object
    properties:
      allocationId?:
        type: String
        description: <p>The allocation ID for the Elastic IP address.</p>
      status?:
        type: Status
        description: <p>The status of the move of the IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of MoveAddressToVpc.</p>
  MovingAddressStatus:
    type: object
    properties:
      publicIp?:
        type: String
        description: <p>The Elastic IP address.</p>
      moveStatus?:
        type: MoveStatus
        description: <p>The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the status of a moving Elastic IP address.</p>
  NatGateway:
    type: object
    properties:
      vpcId?:
        type: String
        description: <p>The ID of the VPC in which the NAT gateway is located.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet in which the NAT gateway is located.</p>
      natGatewayId?:
        type: String
        description: <p>The ID of the NAT gateway.</p>
      createTime?:
        type: DateTime
        description: <p>The date and time the NAT gateway was created.</p>
      deleteTime?:
        type: DateTime
        description: <p>The date and time the NAT gateway was deleted, if applicable.</p>
      natGatewayAddressSet?:
        type: NatGatewayAddressList
        description: <p>Information about the IP addresses and network interface associated with the NAT gateway.</p>
      state?:
        type: NatGatewayState
        description: '<p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>:
          The NAT gateway is being created and is not ready to process traffic.</p>
          </li> <li> <p> <code>failed</code>: The NAT gateway could not be created.
          Check the <code>failureCode</code> and <code>failureMessage</code> fields
          for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway
          is able to process traffic. This status remains until you delete the NAT
          gateway, and does not indicate the health of the NAT gateway.</p> </li>
          <li> <p> <code>deleting</code>: The NAT gateway is in the process of being
          terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>:
          The NAT gateway has been terminated and is no longer processing traffic.</p>
          </li> </ul>'
      failureCode?:
        type: String
        description: <p>If the NAT gateway could not be created, specifies the error code for the failure. (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code> | <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code> | <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)</p>
      failureMessage?:
        type: String
        description: '<p>If the NAT gateway could not be created, specifies the error
          message for the failure, that corresponds to the error code.</p> <ul> <li>
          <p>For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free
          addresses to create this NAT gateway"</p> </li> <li> <p>For Gateway.NotAttached:
          "Network vpc-xxxxxxxx has no Internet gateway attached"</p> </li> <li> <p>For
          InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could
          not be associated with this NAT gateway"</p> </li> <li> <p>For Resource.AlreadyAssociated:
          "Elastic IP address eipalloc-xxxxxxxx is already associated"</p> </li> <li>
          <p>For InternalError: "Network interface eni-xxxxxxxx, created and used
          internally by this NAT gateway is in an invalid state. Please try again."</p>
          </li> <li> <p>For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx
          does not exist or could not be found."</p> </li> </ul>'
      provisionedBandwidth?:
        type: ProvisionedBandwidth
        description: <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a NAT gateway.</p>
  NatGatewayAddress:
    type: object
    properties:
      publicIp?:
        type: String
        description: <p>The Elastic IP address associated with the NAT gateway.</p>
      allocationId?:
        type: String
        description: <p>The allocation ID of the Elastic IP address that's associated with the NAT gateway.</p>
      privateIp?:
        type: String
        description: <p>The private IP address associated with the Elastic IP address.</p>
      networkInterfaceId?:
        type: String
        description: <p>The ID of the network interface associated with the NAT gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the IP addresses and network interface associated with a NAT gateway.</p>
  NetworkAcl:
    type: object
    properties:
      networkAclId?:
        type: String
        description: <p>The ID of the network ACL.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC for the network ACL.</p>
      default?:
        type: Boolean
        description: <p>Indicates whether this is the default network ACL for the VPC.</p>
      entrySet?:
        type: NetworkAclEntryList
        description: <p>One or more entries (rules) in the network ACL.</p>
      associationSet?:
        type: NetworkAclAssociationList
        description: <p>Any associations between the network ACL and one or more subnets</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the network ACL.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a network ACL.</p>
  NetworkAclAssociation:
    type: object
    properties:
      networkAclAssociationId?:
        type: String
        description: <p>The ID of the association between a network ACL and a subnet.</p>
      networkAclId?:
        type: String
        description: <p>The ID of the network ACL.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an association between a network ACL and a subnet.</p>
  NetworkAclEntry:
    type: object
    properties:
      ruleNumber?:
        type: Integer
        description: <p>The rule number for the entry. ACL entries are processed in ascending order by rule number.</p>
      protocol?:
        type: String
        description: <p>The protocol. A value of <code>-1</code> means all protocols.</p>
      ruleAction?:
        type: RuleAction
        description: <p>Indicates whether to allow or deny the traffic that matches the rule.</p>
      egress?:
        type: Boolean
        description: <p>Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).</p>
      cidrBlock?:
        type: String
        description: <p>The network range to allow or deny, in CIDR notation.</p>
      icmpTypeCode?:
        type: IcmpTypeCode
        description: '<p>ICMP protocol: The ICMP type and code.</p>'
      portRange?:
        type: PortRange
        description: '<p>TCP or UDP protocols: The range of ports the rule applies
          to.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an entry in a network ACL.</p>
  NetworkInterface:
    type: object
    properties:
      networkInterfaceId?:
        type: String
        description: <p>The ID of the network interface.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone.</p>
      description?:
        type: String
        description: <p>A description.</p>
      ownerId?:
        type: String
        description: <p>The AWS account ID of the owner of the network interface.</p>
      requesterId?:
        type: String
        description: <p>The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).</p>
      requesterManaged?:
        type: Boolean
        description: <p>Indicates whether the network interface is being managed by AWS.</p>
      status?:
        type: NetworkInterfaceStatus
        description: <p>The status of the network interface.</p>
      macAddress?:
        type: String
        description: <p>The MAC address.</p>
      privateIpAddress?:
        type: String
        description: <p>The IP address of the network interface within the subnet.</p>
      privateDnsName?:
        type: String
        description: <p>The private DNS name.</p>
      sourceDestCheck?:
        type: Boolean
        description: <p>Indicates whether traffic to or from the instance is validated.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>Any security groups for the network interface.</p>
      attachment?:
        type: NetworkInterfaceAttachment
        description: <p>The network interface attachment.</p>
      association?:
        type: NetworkInterfaceAssociation
        description: <p>The association information for an Elastic IP associated with the network interface.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the network interface.</p>
      privateIpAddressesSet?:
        type: NetworkInterfacePrivateIpAddressList
        description: <p>The private IP addresses associated with the network interface.</p>
      interfaceType?:
        type: NetworkInterfaceType
        description: <p>The type of interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a network interface.</p>
  NetworkInterfaceAssociation:
    type: object
    properties:
      publicIp?:
        type: String
        description: <p>The address of the Elastic IP address bound to the network interface.</p>
      publicDnsName?:
        type: String
        description: <p>The public DNS name.</p>
      ipOwnerId?:
        type: String
        description: <p>The ID of the Elastic IP address owner.</p>
      allocationId?:
        type: String
        description: <p>The allocation ID.</p>
      associationId?:
        type: String
        description: <p>The association ID.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes association information for an Elastic IP address.</p>
  NetworkInterfaceAttachment:
    type: object
    properties:
      attachmentId?:
        type: String
        description: <p>The ID of the network interface attachment.</p>
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      instanceOwnerId?:
        type: String
        description: <p>The AWS account ID of the owner of the instance.</p>
      deviceIndex?:
        type: Integer
        description: <p>The device index of the network interface attachment on the instance.</p>
      status?:
        type: AttachmentStatus
        description: <p>The attachment state.</p>
      attachTime?:
        type: DateTime
        description: <p>The timestamp indicating when the attachment initiated.</p>
      deleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a network interface attachment.</p>
  NetworkInterfaceAttachmentChanges:
    type: object
    properties:
      attachmentId?:
        type: String
        description: <p>The ID of the network interface attachment.</p>
      deleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an attachment change.</p>
  NetworkInterfacePrivateIpAddress:
    type: object
    properties:
      privateIpAddress?:
        type: String
        description: <p>The private IP address.</p>
      privateDnsName?:
        type: String
        description: <p>The private DNS name.</p>
      primary?:
        type: Boolean
        description: <p>Indicates whether this IP address is the primary private IP address of the network interface.</p>
      association?:
        type: NetworkInterfaceAssociation
        description: <p>The association information for an Elastic IP address associated with the network interface.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the private IP address of a network interface.</p>
  NewDhcpConfiguration:
    type: object
    properties:
      key?:
        type: String
      Value?:
        type: ValueStringList
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PeeringConnectionOptions:
    type: object
    properties:
      allowEgressFromLocalClassicLinkToRemoteVpc?:
        type: Boolean
        description: <p>If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC via ClassicLink to instances in a peer VPC.</p>
      allowEgressFromLocalVpcToRemoteClassicLink?:
        type: Boolean
        description: <p>If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC via ClassicLink.</p>
      allowDnsResolutionFromRemoteVpc?:
        type: Boolean
        description: <p>If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the VPC peering connection options.</p>
  PeeringConnectionOptionsRequest:
    type: object
    properties:
      AllowEgressFromLocalClassicLinkToRemoteVpc?:
        type: Boolean
        description: <p>If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC via ClassicLink to instances in a peer VPC.</p>
      AllowEgressFromLocalVpcToRemoteClassicLink?:
        type: Boolean
        description: <p>If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC via ClassicLink.</p>
      AllowDnsResolutionFromRemoteVpc?:
        type: Boolean
        description: <p>If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>The VPC peering connection options.</p>
  Placement:
    type: object
    properties:
      availabilityZone?:
        type: String
        description: <p>The Availability Zone of the instance.</p>
      groupName?:
        type: String
        description: <p>The name of the placement group the instance is in (for cluster compute instances).</p>
      tenancy?:
        type: Tenancy
        description: <p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for the <a>ImportInstance</a> command.</p>
      hostId?:
        type: String
        description: <p>The ID of the Dedicted host on which the instance resides. This parameter is not support for the <a>ImportInstance</a> command.</p>
      affinity?:
        type: String
        description: <p>The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the <a>ImportInstance</a> command.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the placement for the instance.</p>
  PlacementGroup:
    type: object
    properties:
      groupName?:
        type: String
        description: <p>The name of the placement group.</p>
      strategy?:
        type: PlacementStrategy
        description: <p>The placement strategy.</p>
      state?:
        type: PlacementGroupState
        description: <p>The state of the placement group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a placement group.</p>
  PortRange:
    type: object
    properties:
      from?:
        type: Integer
        description: <p>The first port in the range.</p>
      to?:
        type: Integer
        description: <p>The last port in the range.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a range of ports.</p>
  PrefixList:
    type: object
    properties:
      prefixListId?:
        type: String
        description: <p>The ID of the prefix.</p>
      prefixListName?:
        type: String
        description: <p>The name of the prefix.</p>
      cidrSet?:
        type: ValueStringList
        description: <p>The IP address range of the AWS service.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes prefixes for AWS services.</p>
  PrefixListId:
    type: object
    properties:
      prefixListId?:
        type: String
        description: <p>The ID of the prefix.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>The ID of the prefix.</p>
  PriceSchedule:
    type: object
    properties:
      term?:
        type: Long
        description: <p>The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.</p>
      price?:
        type: Double
        description: <p>The fixed price for the term.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.</p>
      active?:
        type: Boolean
        description: <p>The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.</p> <p>A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the price for a Reserved Instance.</p>
  PriceScheduleSpecification:
    type: object
    properties:
      term?:
        type: Long
        description: <p>The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.</p>
      price?:
        type: Double
        description: <p>The fixed price for the term.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the price for a Reserved Instance.</p>
  PricingDetail:
    type: object
    properties:
      price?:
        type: Double
        description: <p>The price per instance.</p>
      count?:
        type: Integer
        description: <p>The number of reservations available for the price.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Reserved Instance offering.</p>
  PrivateIpAddressSpecification:
    type: object
    properties:
      privateIpAddress:
        type: String
        description: <p>The private IP addresses.</p>
      primary?:
        type: Boolean
        description: <p>Indicates whether the private IP address is the primary private IP address. Only one IP address can be designated as primary.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a secondary private IP address for a network interface.</p>
  ProductCode:
    type: object
    properties:
      productCode?:
        type: String
        description: <p>The product code.</p>
      type?:
        type: ProductCodeValues
        description: <p>The type of product code.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a product code.</p>
  PropagatingVgw:
    type: object
    properties:
      gatewayId?:
        type: String
        description: <p>The ID of the virtual private gateway (VGW).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a virtual private gateway propagating route.</p>
  ProvisionedBandwidth:
    type: object
    properties:
      provisioned?:
        type: String
        description: <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
      requested?:
        type: String
        description: <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
      requestTime?:
        type: DateTime
        description: <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
      provisionTime?:
        type: DateTime
        description: <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
      status?:
        type: String
        description: <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
  Purchase:
    type: object
    properties:
      hostReservationId?:
        type: String
        description: <p>The ID of the reservation.</p>
      hostIdSet?:
        type: ResponseHostIdSet
        description: <p>The IDs of the Dedicated Hosts associated with the reservation.</p>
      instanceFamily?:
        type: String
        description: <p>The instance family on the Dedicated Host that the reservation can be associated with.</p>
      paymentOption?:
        type: PaymentOption
        description: <p>The payment option for the reservation.</p>
      upfrontPrice?:
        type: String
        description: <p>The upfront price of the reservation.</p>
      hourlyPrice?:
        type: String
        description: <p>The hourly price of the reservation per hour.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.</p>
      duration?:
        type: Integer
        description: <p>The duration of the reservation's term in seconds.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the result of the purchase.</p>
  PurchaseHostReservationRequest:
    type: object
    properties:
      OfferingId:
        type: String
        description: <p>The ID of the offering.</p>
      HostIdSet:
        type: RequestHostIdSet
        description: <p>The ID/s of the Dedicated Host/s that the reservation will be associated with.</p>
      LimitPrice?:
        type: String
        description: <p>The specified limit is checked against the total upfront cost of the reservation (calculated as the offering's upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request will fail. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is <code>USD</code>. For example, to indicate a limit price of USD 100, specify 100.00.</p>
      CurrencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>, and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.</p>
      ClientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PurchaseHostReservationResult:
    type: object
    properties:
      purchase?:
        type: PurchaseSet
        description: <p>Describes the details of the purchase.</p>
      totalUpfrontPrice?:
        type: String
        description: <p>The total amount that will be charged to your account when you purchase the reservation.</p>
      totalHourlyPrice?:
        type: String
        description: <p>The total hourly price of the reservation calculated per hour.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.</p>
      clientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> </p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
  PurchaseRequest:
    type: object
    properties:
      PurchaseToken:
        type: String
        description: <p>The purchase token.</p>
      InstanceCount:
        type: Integer
        description: <p>The number of instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a request to purchase Scheduled Instances.</p>
  PurchaseReservedInstancesOfferingRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ReservedInstancesOfferingId:
        type: String
        description: <p>The ID of the Reserved Instance offering to purchase.</p>
      InstanceCount:
        type: Integer
        description: <p>The number of Reserved Instances to purchase.</p>
      limitPrice?:
        type: ReservedInstanceLimitPrice
        description: <p>Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for PurchaseReservedInstancesOffering.</p>
  PurchaseReservedInstancesOfferingResult:
    type: object
    properties:
      reservedInstancesId?:
        type: String
        description: <p>The IDs of the purchased Reserved Instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of PurchaseReservedInstancesOffering.</p>
  PurchaseScheduledInstancesRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ClientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
      PurchaseRequest:
        type: PurchaseRequestSet
        description: <p>One or more purchase requests.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for PurchaseScheduledInstances.</p>
  PurchaseScheduledInstancesResult:
    type: object
    properties:
      scheduledInstanceSet?:
        type: PurchasedScheduledInstanceSet
        description: <p>Information about the Scheduled Instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of PurchaseScheduledInstances.</p>
  RebootInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: InstanceIdStringList
        description: <p>One or more instance IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RebootInstances.</p>
  RecurringCharge:
    type: object
    properties:
      frequency?:
        type: RecurringChargeFrequency
        description: <p>The frequency of the recurring charge.</p>
      amount?:
        type: Double
        description: <p>The amount of the recurring charge.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a recurring charge.</p>
  Region:
    type: object
    properties:
      regionName?:
        type: String
        description: <p>The name of the region.</p>
      regionEndpoint?:
        type: String
        description: <p>The region service endpoint.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a region.</p>
  RegisterImageRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImageLocation?:
        type: String
        description: <p>The full path to your AMI manifest in Amazon S3 storage.</p>
      name:
        type: String
        description: '<p>A name for your AMI.</p> <p>Constraints: 3-128 alphanumeric
          characters, parentheses (()), square brackets ([]), spaces ( ), periods
          (.), slashes (/), dashes (-), single quotes (''), at-signs (@), or underscores(_)</p>'
      description?:
        type: String
        description: <p>A description for your AMI.</p>
      architecture?:
        type: ArchitectureValues
        description: '<p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed
          AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture
          specified in the manifest file.</p>'
      kernelId?:
        type: String
        description: <p>The ID of the kernel.</p>
      ramdiskId?:
        type: String
        description: <p>The ID of the RAM disk.</p>
      rootDeviceName?:
        type: String
        description: <p>The name of the root device (for example, <code>/dev/sda1</code>, or <code>/dev/xvda</code>).</p>
      BlockDeviceMapping?:
        type: BlockDeviceMappingRequestList
        description: <p>One or more block device mapping entries.</p>
      virtualizationType?:
        type: String
        description: '<p>The type of virtualization.</p> <p>Default: <code>paravirtual</code>
          </p>'
      sriovNetSupport?:
        type: String
        description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.</p> <p>There is no way to disable <code>sriovNetSupport</code> at this time.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
      enaSupport?:
        type: Boolean
        description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RegisterImage.</p>
  RegisterImageResult:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the newly registered AMI.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of RegisterImage.</p>
  RejectVpcPeeringConnectionRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      vpcPeeringConnectionId:
        type: String
        description: <p>The ID of the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RejectVpcPeeringConnection.</p>
  RejectVpcPeeringConnectionResult:
    type: object
    properties:
      return?:
        type: Boolean
        description: <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of RejectVpcPeeringConnection.</p>
  ReleaseAddressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      PublicIp?:
        type: String
        description: <p>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</p>
      AllocationId?:
        type: String
        description: <p>[EC2-VPC] The allocation ID. Required for EC2-VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ReleaseAddress.</p>
  ReleaseHostsRequest:
    type: object
    properties:
      hostId:
        type: RequestHostIdList
        description: <p>The IDs of the Dedicated Hosts you want to release.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ReleaseHosts.</p>
  ReleaseHostsResult:
    type: object
    properties:
      successful?:
        type: ResponseHostIdList
        description: <p>The IDs of the Dedicated Hosts that were successfully released.</p>
      unsuccessful?:
        type: UnsuccessfulItemList
        description: <p>The IDs of the Dedicated Hosts that could not be released, including an error message.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ReleaseHosts.</p>
  ReplaceNetworkAclAssociationRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      associationId:
        type: String
        description: <p>The ID of the current association between the original network ACL and the subnet.</p>
      networkAclId:
        type: String
        description: <p>The ID of the new network ACL to associate with the subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ReplaceNetworkAclAssociation.</p>
  ReplaceNetworkAclAssociationResult:
    type: object
    properties:
      newAssociationId?:
        type: String
        description: <p>The ID of the new association.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ReplaceNetworkAclAssociation.</p>
  ReplaceNetworkAclEntryRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkAclId:
        type: String
        description: <p>The ID of the ACL.</p>
      ruleNumber:
        type: Integer
        description: <p>The rule number of the entry to replace.</p>
      protocol:
        type: String
        description: <p>The IP protocol. You can specify <code>all</code> or <code>-1</code> to mean all protocols.</p>
      ruleAction:
        type: RuleAction
        description: <p>Indicates whether to allow or deny the traffic that matches the rule.</p>
      egress:
        type: Boolean
        description: '<p>Indicates whether to replace the egress rule.</p> <p>Default:
          If no value is specified, we replace the ingress rule.</p>'
      cidrBlock:
        type: String
        description: <p>The network range to allow or deny, in CIDR notation.</p>
      Icmp?:
        type: IcmpTypeCode
        description: '<p>ICMP protocol: The ICMP type and code. Required if specifying
          1 (ICMP) for the protocol.</p>'
      portRange?:
        type: PortRange
        description: '<p>TCP or UDP protocols: The range of ports the rule applies
          to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ReplaceNetworkAclEntry.</p>
  ReplaceRouteRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      routeTableId:
        type: String
        description: <p>The ID of the route table.</p>
      destinationCidrBlock:
        type: String
        description: <p>The CIDR address block used for the destination match. The value you provide must match the CIDR of an existing route in the table.</p>
      gatewayId?:
        type: String
        description: <p>The ID of an Internet gateway or virtual private gateway.</p>
      instanceId?:
        type: String
        description: <p>The ID of a NAT instance in your VPC.</p>
      networkInterfaceId?:
        type: String
        description: <p>The ID of a network interface.</p>
      vpcPeeringConnectionId?:
        type: String
        description: <p>The ID of a VPC peering connection.</p>
      natGatewayId?:
        type: String
        description: <p>The ID of a NAT gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ReplaceRoute.</p>
  ReplaceRouteTableAssociationRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      associationId:
        type: String
        description: <p>The association ID.</p>
      routeTableId:
        type: String
        description: <p>The ID of the new route table to associate with the subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ReplaceRouteTableAssociation.</p>
  ReplaceRouteTableAssociationResult:
    type: object
    properties:
      newAssociationId?:
        type: String
        description: <p>The ID of the new association.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of ReplaceRouteTableAssociation.</p>
  ReportInstanceStatusRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      instanceId:
        type: InstanceIdStringList
        description: <p>One or more instances.</p>
      status:
        type: ReportStatusType
        description: <p>The status of all instances listed.</p>
      startTime?:
        type: DateTime
        description: <p>The time at which the reported instance health state began.</p>
      endTime?:
        type: DateTime
        description: <p>The time at which the reported instance health state ended.</p>
      reasonCode:
        type: ReasonCodesList
        description: '<p>One or more reason codes that describes the health state
          of your instance.</p> <ul> <li> <p> <code>instance-stuck-in-state</code>:
          My instance is stuck in a state.</p> </li> <li> <p> <code>unresponsive</code>:
          My instance is unresponsive.</p> </li> <li> <p> <code>not-accepting-credentials</code>:
          My instance is not accepting my credentials.</p> </li> <li> <p> <code>password-not-available</code>:
          A password is not available for my instance.</p> </li> <li> <p> <code>performance-network</code>:
          My instance is experiencing performance problems which I believe are network
          related.</p> </li> <li> <p> <code>performance-instance-store</code>: My
          instance is experiencing performance problems which I believe are related
          to the instance stores.</p> </li> <li> <p> <code>performance-ebs-volume</code>:
          My instance is experiencing performance problems which I believe are related
          to an EBS volume.</p> </li> <li> <p> <code>performance-other</code>: My
          instance is experiencing performance problems.</p> </li> <li> <p> <code>other</code>:
          [explain using the description parameter]</p> </li> </ul>'
      description?:
        type: String
        description: <p>Descriptive text about the health state of your instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ReportInstanceStatus.</p>
  RequestSpotFleetRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      spotFleetRequestConfig:
        type: SpotFleetRequestConfigData
        description: <p>The configuration for the Spot fleet request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RequestSpotFleet.</p>
  RequestSpotFleetResponse:
    type: object
    properties:
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of RequestSpotFleet.</p>
  RequestSpotInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      spotPrice:
        type: String
        description: <p>The maximum hourly price (bid) for any Spot instance launched to fulfill the request.</p>
      clientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      instanceCount?:
        type: Integer
        description: '<p>The maximum number of Spot instances to launch.</p> <p>Default:
          1</p>'
      type?:
        type: SpotInstanceType
        description: '<p>The Spot instance request type.</p> <p>Default: <code>one-time</code>
          </p>'
      validFrom?:
        type: DateTime
        description: '<p>The start date of the request. If this is a one-time request,
          the request becomes active at this date and time and remains active until
          all instances launch, the request expires, or the request is canceled. If
          the request is persistent, the request becomes active at this date and time
          and remains active until it expires or is canceled.</p> <p>Default: The
          request is effective indefinitely.</p>'
      validUntil?:
        type: DateTime
        description: '<p>The end date of the request. If this is a one-time request,
          the request remains active until all instances launch, the request is canceled,
          or this date is reached. If the request is persistent, it remains active
          until it is canceled or this date and time is reached.</p> <p>Default: The
          request is effective indefinitely.</p>'
      launchGroup?:
        type: String
        description: '<p>The instance launch group. Launch groups are Spot instances
          that launch together and terminate together.</p> <p>Default: Instances are
          launched and terminated individually</p>'
      availabilityZoneGroup?:
        type: String
        description: '<p>The user-specified name for a logical grouping of bids.</p>
          <p>When you specify an Availability Zone group in a Spot Instance request,
          all Spot instances in the request are launched in the same Availability
          Zone. Instance proximity is maintained with this parameter, but the choice
          of Availability Zone is not. The group applies only to bids for Spot Instances
          of the same instance type. Any additional Spot instance requests that are
          specified with the same Availability Zone group name are launched in that
          same Availability Zone, as long as at least one instance from the group
          is still active.</p> <p>If there is no active instance running in the Availability
          Zone group that you specify for a new Spot instance request (all instances
          are terminated, the bid is expired, or the bid falls below current market),
          then Amazon EC2 launches the instance in any Availability Zone where the
          constraint can be met. Consequently, the subsequent set of Spot instances
          could be placed in a different zone from the original request, even if you
          specified the same Availability Zone group.</p> <p>Default: Instances are
          launched in any available Availability Zone.</p>'
      blockDurationMinutes?:
        type: Integer
        description: <p>The required duration for the Spot instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p> <p>The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.</p> <p>Note that you can't specify an Availability Zone group or a launch group if you specify a duration.</p>
      LaunchSpecification?:
        type: RequestSpotLaunchSpecification
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RequestSpotInstances.</p>
  RequestSpotInstancesResult:
    type: object
    properties:
      spotInstanceRequestSet?:
        type: SpotInstanceRequestList
        description: <p>One or more Spot instance requests.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of RequestSpotInstances.</p>
  RequestSpotLaunchSpecification:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the AMI.</p>
      keyName?:
        type: String
        description: <p>The name of the key pair.</p>
      SecurityGroup?:
        type: ValueStringList
      userData?:
        type: String
        description: <p>The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
      addressingType?:
        type: String
        description: <p>Deprecated.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type.</p>
      placement?:
        type: SpotPlacement
        description: <p>The placement information for the instance.</p>
      kernelId?:
        type: String
        description: <p>The ID of the kernel.</p>
      ramdiskId?:
        type: String
        description: <p>The ID of the RAM disk.</p>
      blockDeviceMapping?:
        type: BlockDeviceMappingList
        description: <p>One or more block device mapping entries.</p> <p>Although you can specify encrypted EBS volumes in this block device mapping for your Spot Instances, these volumes are not encrypted.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet in which to launch the instance.</p>
      NetworkInterface?:
        type: InstanceNetworkInterfaceSpecificationList
        description: <p>One or more network interfaces.</p>
      iamInstanceProfile?:
        type: IamInstanceProfileSpecification
        description: <p>The IAM instance profile.</p>
      ebsOptimized?:
        type: Boolean
        description: '<p>Indicates whether the instance is optimized for EBS I/O.
          This optimization provides dedicated throughput to Amazon EBS and an optimized
          configuration stack to provide optimal EBS I/O performance. This optimization
          isn''t available with all instance types. Additional usage charges apply
          when using an EBS Optimized instance.</p> <p>Default: <code>false</code>
          </p>'
      monitoring?:
        type: RunInstancesMonitoringEnabled
      SecurityGroupId?:
        type: ValueStringList
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the launch specification for an instance.</p>
  Reservation:
    type: object
    properties:
      reservationId?:
        type: String
        description: <p>The ID of the reservation.</p>
      ownerId?:
        type: String
        description: <p>The ID of the AWS account that owns the reservation.</p>
      requesterId?:
        type: String
        description: <p>The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>[EC2-Classic only] One or more security groups.</p>
      instancesSet?:
        type: InstanceList
        description: <p>One or more instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a reservation.</p>
  ReservedInstanceLimitPrice:
    type: object
    properties:
      amount?:
        type: Double
        description: <p>Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the limit price of a Reserved Instance offering.</p>
  ReservedInstances:
    type: object
    properties:
      reservedInstancesId?:
        type: String
        description: <p>The ID of the Reserved Instance.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type on which the Reserved Instance can be used.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone in which the Reserved Instance can be used.</p>
      start?:
        type: DateTime
        description: <p>The date and time the Reserved Instance started.</p>
      end?:
        type: DateTime
        description: <p>The time when the Reserved Instance expires.</p>
      duration?:
        type: Long
        description: <p>The duration of the Reserved Instance, in seconds.</p>
      usagePrice?:
        type: Float
        description: <p>The usage price of the Reserved Instance, per hour.</p>
      fixedPrice?:
        type: Float
        description: <p>The purchase price of the Reserved Instance.</p>
      instanceCount?:
        type: Integer
        description: <p>The number of reservations purchased.</p>
      productDescription?:
        type: RIProductDescription
        description: <p>The Reserved Instance product platform description.</p>
      state?:
        type: ReservedInstanceState
        description: <p>The state of the Reserved Instance purchase.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the resource.</p>
      instanceTenancy?:
        type: Tenancy
        description: <p>The tenancy of the instance.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.</p>
      offeringType?:
        type: OfferingTypeValues
        description: <p>The Reserved Instance offering type.</p>
      recurringCharges?:
        type: RecurringChargesList
        description: <p>The recurring charge tag assigned to the resource.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Reserved Instance.</p>
  ReservedInstancesConfiguration:
    type: object
    properties:
      availabilityZone?:
        type: String
        description: <p>The Availability Zone for the modified Reserved Instances.</p>
      platform?:
        type: String
        description: <p>The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.</p>
      instanceCount?:
        type: Integer
        description: <p>The number of modified Reserved Instances.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type for the modified Reserved Instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the configuration settings for the modified Reserved Instances.</p>
  ReservedInstancesId:
    type: object
    properties:
      reservedInstancesId?:
        type: String
        description: <p>The ID of the Reserved Instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the ID of a Reserved Instance.</p>
  ReservedInstancesListing:
    type: object
    properties:
      reservedInstancesListingId?:
        type: String
        description: <p>The ID of the Reserved Instance listing.</p>
      reservedInstancesId?:
        type: String
        description: <p>The ID of the Reserved Instance.</p>
      createDate?:
        type: DateTime
        description: <p>The time the listing was created.</p>
      updateDate?:
        type: DateTime
        description: <p>The last modified timestamp of the listing.</p>
      status?:
        type: ListingStatus
        description: <p>The status of the Reserved Instance listing.</p>
      statusMessage?:
        type: String
        description: <p>The reason for the current status of the Reserved Instance listing. The response can be blank.</p>
      instanceCounts?:
        type: InstanceCountList
        description: <p>The number of instances in this state.</p>
      priceSchedules?:
        type: PriceScheduleList
        description: <p>The price of the Reserved Instance listing.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the resource.</p>
      clientToken?:
        type: String
        description: <p>A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Reserved Instance listing.</p>
  ReservedInstancesModification:
    type: object
    properties:
      reservedInstancesModificationId?:
        type: String
        description: <p>A unique ID for the Reserved Instance modification.</p>
      reservedInstancesSet?:
        type: ReservedIntancesIds
        description: <p>The IDs of one or more Reserved Instances.</p>
      modificationResultSet?:
        type: ReservedInstancesModificationResultList
        description: <p>Contains target configurations along with their corresponding new Reserved Instance IDs.</p>
      createDate?:
        type: DateTime
        description: <p>The time when the modification request was created.</p>
      updateDate?:
        type: DateTime
        description: <p>The time when the modification request was last updated.</p>
      effectiveDate?:
        type: DateTime
        description: <p>The time for the modification to become effective.</p>
      status?:
        type: String
        description: <p>The status of the Reserved Instances modification request.</p>
      statusMessage?:
        type: String
        description: <p>The reason for the status.</p>
      clientToken?:
        type: String
        description: <p>A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Reserved Instance modification.</p>
  ReservedInstancesModificationResult:
    type: object
    properties:
      reservedInstancesId?:
        type: String
        description: <p>The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.</p>
      targetConfiguration?:
        type: ReservedInstancesConfiguration
        description: <p>The target Reserved Instances configurations supplied as part of the modification request.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the modification request/s.</p>
  ReservedInstancesOffering:
    type: object
    properties:
      reservedInstancesOfferingId?:
        type: String
        description: <p>The ID of the Reserved Instance offering.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type on which the Reserved Instance can be used.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone in which the Reserved Instance can be used.</p>
      duration?:
        type: Long
        description: <p>The duration of the Reserved Instance, in seconds.</p>
      usagePrice?:
        type: Float
        description: <p>The usage price of the Reserved Instance, per hour.</p>
      fixedPrice?:
        type: Float
        description: <p>The purchase price of the Reserved Instance.</p>
      productDescription?:
        type: RIProductDescription
        description: <p>The Reserved Instance product platform description.</p>
      instanceTenancy?:
        type: Tenancy
        description: <p>The tenancy of the instance.</p>
      currencyCode?:
        type: CurrencyCodeValues
        description: <p>The currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.</p>
      offeringType?:
        type: OfferingTypeValues
        description: <p>The Reserved Instance offering type.</p>
      recurringCharges?:
        type: RecurringChargesList
        description: <p>The recurring charge tag assigned to the resource.</p>
      marketplace?:
        type: Boolean
        description: <p>Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is <code>true</code>.</p>
      pricingDetailsSet?:
        type: PricingDetailsList
        description: <p>The pricing details of the Reserved Instance offering.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Reserved Instance offering.</p>
  ResetImageAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImageId:
        type: String
        description: <p>The ID of the AMI.</p>
      Attribute:
        type: ResetImageAttributeName
        description: <p>The attribute to reset (currently you can only reset the launch permission attribute).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ResetImageAttribute.</p>
  ResetInstanceAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      instanceId:
        type: String
        description: <p>The ID of the instance.</p>
      attribute:
        type: InstanceAttributeName
        description: '<p>The attribute to reset.</p> <important> <p>You can only reset
          the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>.
          To change an instance attribute, use <a>ModifyInstanceAttribute</a>.</p>
          </important>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ResetInstanceAttribute.</p>
  ResetNetworkInterfaceAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      networkInterfaceId:
        type: String
        description: <p>The ID of the network interface.</p>
      sourceDestCheck?:
        type: String
        description: <p>The source/destination checking attribute. Resets the value to <code>true</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ResetNetworkInterfaceAttribute.</p>
  ResetSnapshotAttributeRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      SnapshotId:
        type: String
        description: <p>The ID of the snapshot.</p>
      Attribute:
        type: SnapshotAttributeName
        description: <p>The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for ResetSnapshotAttribute.</p>
  RestoreAddressToClassicRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      publicIp:
        type: String
        description: <p>The Elastic IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RestoreAddressToClassic.</p>
  RestoreAddressToClassicResult:
    type: object
    properties:
      status?:
        type: Status
        description: <p>The move status for the IP address.</p>
      publicIp?:
        type: String
        description: <p>The Elastic IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of RestoreAddressToClassic.</p>
  RevokeSecurityGroupEgressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      groupId:
        type: String
        description: <p>The ID of the security group.</p>
      sourceSecurityGroupName?:
        type: String
        description: <p>The name of a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead.</p>
      sourceSecurityGroupOwnerId?:
        type: String
        description: <p>The AWS account number for a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead.</p>
      ipProtocol?:
        type: String
        description: <p>The IP protocol name or number. We recommend that you specify the protocol in a set of IP permissions instead.</p>
      fromPort?:
        type: Integer
        description: <p>The start of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.</p>
      toPort?:
        type: Integer
        description: <p>The end of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.</p>
      cidrIp?:
        type: String
        description: <p>The CIDR IP address range. We recommend that you specify the CIDR range in a set of IP permissions instead.</p>
      ipPermissions?:
        type: IpPermissionList
        description: <p>A set of IP permissions. You can't specify a destination security group and a CIDR IP address range.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RevokeSecurityGroupEgress.</p>
  RevokeSecurityGroupIngressRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      GroupName?:
        type: String
        description: <p>[EC2-Classic, default VPC] The name of the security group.</p>
      GroupId?:
        type: String
        description: <p>The ID of the security group. Required for a security group in a nondefault VPC.</p>
      SourceSecurityGroupName?:
        type: String
        description: '<p>[EC2-Classic, default VPC] The name of the source security
          group. You can''t specify this parameter in combination with the following
          parameters: the CIDR IP address range, the start of the port range, the
          IP protocol, and the end of the port range. For EC2-VPC, the source security
          group must be in the same VPC. To revoke a specific rule for an IP protocol
          and port range, use a set of IP permissions instead.</p>'
      SourceSecurityGroupOwnerId?:
        type: String
        description: '<p>[EC2-Classic] The AWS account ID of the source security group,
          if the source security group is in a different account. You can''t specify
          this parameter in combination with the following parameters: the CIDR IP
          address range, the IP protocol, the start of the port range, and the end
          of the port range. To revoke a specific rule for an IP protocol and port
          range, use a set of IP permissions instead.</p>'
      IpProtocol?:
        type: String
        description: <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). Use <code>-1</code> to specify all.</p>
      FromPort?:
        type: Integer
        description: <p>The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types.</p>
      ToPort?:
        type: Integer
        description: <p>The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type.</p>
      CidrIp?:
        type: String
        description: <p>The CIDR IP address range. You can't specify this parameter when specifying a source security group.</p>
      IpPermissions?:
        type: IpPermissionList
        description: <p>A set of IP permissions. You can't specify a source security group and a CIDR IP address range.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RevokeSecurityGroupIngress.</p>
  Route:
    type: object
    properties:
      destinationCidrBlock?:
        type: String
        description: <p>The CIDR block used for the destination match.</p>
      destinationPrefixListId?:
        type: String
        description: <p>The prefix of the AWS service.</p>
      gatewayId?:
        type: String
        description: <p>The ID of a gateway attached to your VPC.</p>
      instanceId?:
        type: String
        description: <p>The ID of a NAT instance in your VPC.</p>
      instanceOwnerId?:
        type: String
        description: <p>The AWS account ID of the owner of the instance.</p>
      networkInterfaceId?:
        type: String
        description: <p>The ID of the network interface.</p>
      vpcPeeringConnectionId?:
        type: String
        description: <p>The ID of the VPC peering connection.</p>
      natGatewayId?:
        type: String
        description: <p>The ID of a NAT gateway.</p>
      state?:
        type: RouteState
        description: <p>The state of the route. The <code>blackhole</code> state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).</p>
      origin?:
        type: RouteOrigin
        description: <p>Describes how the route was created.</p> <ul> <li> <p> <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p> </li> <li> <p> <code>CreateRoute</code> - The route was manually added to the route table.</p> </li> <li> <p> <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p> </li> </ul>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a route in a route table.</p>
  RouteTable:
    type: object
    properties:
      routeTableId?:
        type: String
        description: <p>The ID of the route table.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      routeSet?:
        type: RouteList
        description: <p>The routes in the route table.</p>
      associationSet?:
        type: RouteTableAssociationList
        description: <p>The associations between the route table and one or more subnets.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the route table.</p>
      propagatingVgwSet?:
        type: PropagatingVgwList
        description: <p>Any virtual private gateway (VGW) propagating routes.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a route table.</p>
  RouteTableAssociation:
    type: object
    properties:
      routeTableAssociationId?:
        type: String
        description: <p>The ID of the association between a route table and a subnet.</p>
      routeTableId?:
        type: String
        description: <p>The ID of the route table.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet. A subnet ID is not returned for an implicit association.</p>
      main?:
        type: Boolean
        description: <p>Indicates whether this is the main route table.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an association between a route table and a subnet.</p>
  RunInstancesMonitoringEnabled:
    type: object
    properties:
      enabled:
        type: Boolean
        description: <p>Indicates whether monitoring is enabled for the instance.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the monitoring for the instance.</p>
  RunInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ImageId:
        type: String
        description: <p>The ID of the AMI, which you can get by calling <a>DescribeImages</a>.</p>
      MinCount:
        type: Integer
        description: '<p>The minimum number of instances to launch. If you specify
          a minimum that is more instances than Amazon EC2 can launch in the target
          Availability Zone, Amazon EC2 launches no instances.</p> <p>Constraints:
          Between 1 and the maximum number you''re allowed for the specified instance
          type. For more information about the default limits, and how to request
          an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
          many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</p>'
      MaxCount:
        type: Integer
        description: '<p>The maximum number of instances to launch. If you specify
          more instances than Amazon EC2 can launch in the target Availability Zone,
          Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>.</p>
          <p>Constraints: Between 1 and the maximum number you''re allowed for the
          specified instance type. For more information about the default limits,
          and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
          many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</p>'
      KeyName?:
        type: String
        description: <p>The name of the key pair. You can create a key pair using <a>CreateKeyPair</a> or <a>ImportKeyPair</a>.</p> <important> <p>If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.</p> </important>
      SecurityGroup?:
        type: SecurityGroupStringList
        description: '<p>[EC2-Classic, default VPC] One or more security group names.
          For a nondefault VPC, you must use security group IDs instead.</p> <p>Default:
          Amazon EC2 uses the default security group.</p>'
      SecurityGroupId?:
        type: SecurityGroupIdStringList
        description: '<p>One or more security group IDs. You can create a security
          group using <a>CreateSecurityGroup</a>.</p> <p>Default: Amazon EC2 uses
          the default security group.</p>'
      UserData?:
        type: String
        description: <p>The user data to make available to the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands on Your Linux Instance at Launch</a> (Linux) and <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows). If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
      InstanceType?:
        type: InstanceType
        description: '<p>The instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
          Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default:
          <code>m1.small</code> </p>'
      Placement?:
        type: Placement
        description: <p>The placement for the instance.</p>
      KernelId?:
        type: String
        description: <p>The ID of the kernel.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>
      RamdiskId?:
        type: String
        description: <p>The ID of the RAM disk.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>
      BlockDeviceMapping?:
        type: BlockDeviceMappingRequestList
        description: <p>The block device mapping.</p> <important> <p>Supplying both a snapshot ID and an encryption value as arguments for block-device mapping results in an error. This is because only blank volumes can be encrypted on start, and these are not created from a snapshot. If a snapshot is the basis for the volume, it contains data by definition and its encryption status cannot be changed using this action.</p> </important>
      Monitoring?:
        type: RunInstancesMonitoringEnabled
        description: <p>The monitoring for the instance.</p>
      SubnetId?:
        type: String
        description: <p>[EC2-VPC] The ID of the subnet to launch the instance into.</p>
      disableApiTermination?:
        type: Boolean
        description: '<p>If you set this parameter to <code>true</code>, you can''t
          terminate the instance using the Amazon EC2 console, CLI, or API; otherwise,
          you can. If you set this parameter to <code>true</code> and then later want
          to be able to terminate the instance, you must first change the value of
          the <code>disableApiTermination</code> attribute to <code>false</code> using
          <a>ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code>
          to <code>terminate</code>, you can terminate the instance by running the
          shutdown command from the instance.</p> <p>Default: <code>false</code> </p>'
      instanceInitiatedShutdownBehavior?:
        type: ShutdownBehavior
        description: '<p>Indicates whether an instance stops or terminates when you
          initiate shutdown from the instance (using the operating system command
          for system shutdown).</p> <p>Default: <code>stop</code> </p>'
      privateIpAddress?:
        type: String
        description: '<p>[EC2-VPC] The primary IP address. You must specify a value
          from the IP address range of the subnet.</p> <p>Only one private IP address
          can be designated as primary. Therefore, you can''t specify this parameter
          if <code>PrivateIpAddresses.n.Primary</code> is set to <code>true</code>
          and <code>PrivateIpAddresses.n.PrivateIpAddress</code> is set to an IP address.
          </p> <p>Default: We select an IP address from the IP address range of the
          subnet.</p>'
      clientToken?:
        type: String
        description: '<p>Unique, case-sensitive identifier you provide to ensure the
          idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
          Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>'
      additionalInfo?:
        type: String
        description: <p>Reserved.</p>
      networkInterface?:
        type: InstanceNetworkInterfaceSpecificationList
        description: <p>One or more network interfaces.</p>
      iamInstanceProfile?:
        type: IamInstanceProfileSpecification
        description: <p>The IAM instance profile.</p>
      ebsOptimized?:
        type: Boolean
        description: '<p>Indicates whether the instance is optimized for EBS I/O.
          This optimization provides dedicated throughput to Amazon EBS and an optimized
          configuration stack to provide optimal EBS I/O performance. This optimization
          isn''t available with all instance types. Additional usage charges apply
          when using an EBS-optimized instance.</p> <p>Default: <code>false</code>
          </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RunInstances.</p>
  RunScheduledInstancesRequest:
    type: object
    properties:
      DryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      ClientToken?:
        type: String
        description: <p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
      InstanceCount?:
        type: Integer
        description: '<p>The number of instances.</p> <p>Default: 1</p>'
      ScheduledInstanceId:
        type: String
        description: <p>The Scheduled Instance ID.</p>
      LaunchSpecification:
        type: ScheduledInstancesLaunchSpecification
        description: <p>The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for RunScheduledInstances.</p>
  RunScheduledInstancesResult:
    type: object
    properties:
      instanceIdSet?:
        type: InstanceIdSet
        description: <p>The IDs of the newly launched instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of RunScheduledInstances.</p>
  S3Storage:
    type: object
    properties:
      bucket?:
        type: String
        description: <p>The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</p>
      prefix?:
        type: String
        description: <p>The beginning of the file name of the AMI.</p>
      AWSAccessKeyId?:
        type: String
        description: <p>The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in <a href="http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best Practices for Managing AWS Access Keys</a>.</p>
      uploadPolicy?:
        type: Blob
        description: <p>An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.</p>
      uploadPolicySignature?:
        type: String
        description: <p>The signature of the JSON document.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the storage parameters for S3 and S3 buckets for an instance store-backed AMI.</p>
  ScheduledInstance:
    type: object
    properties:
      scheduledInstanceId?:
        type: String
        description: <p>The Scheduled Instance ID.</p>
      instanceType?:
        type: String
        description: <p>The instance type.</p>
      platform?:
        type: String
        description: <p>The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
      networkPlatform?:
        type: String
        description: <p>The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone.</p>
      slotDurationInHours?:
        type: Integer
        description: <p>The number of hours in the schedule.</p>
      recurrence?:
        type: ScheduledInstanceRecurrence
        description: <p>The schedule recurrence.</p>
      previousSlotEndTime?:
        type: DateTime
        description: <p>The time that the previous schedule ended or will end.</p>
      nextSlotStartTime?:
        type: DateTime
        description: <p>The time for the next schedule to start.</p>
      hourlyPrice?:
        type: String
        description: <p>The hourly price for a single instance.</p>
      totalScheduledInstanceHours?:
        type: Integer
        description: <p>The total number of hours for a single instance for the entire term.</p>
      instanceCount?:
        type: Integer
        description: <p>The number of instances.</p>
      termStartDate?:
        type: DateTime
        description: <p>The start date for the Scheduled Instance.</p>
      termEndDate?:
        type: DateTime
        description: <p>The end date for the Scheduled Instance.</p>
      createDate?:
        type: DateTime
        description: <p>The date when the Scheduled Instance was purchased.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Scheduled Instance.</p>
  ScheduledInstanceAvailability:
    type: object
    properties:
      instanceType?:
        type: String
        description: <p>The instance type. You can specify one of the C3, C4, M4, or R3 instance types.</p>
      platform?:
        type: String
        description: <p>The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
      networkPlatform?:
        type: String
        description: <p>The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone.</p>
      purchaseToken?:
        type: String
        description: <p>The purchase token. This token expires in two hours.</p>
      slotDurationInHours?:
        type: Integer
        description: <p>The number of hours in the schedule.</p>
      recurrence?:
        type: ScheduledInstanceRecurrence
        description: <p>The schedule recurrence.</p>
      firstSlotStartTime?:
        type: DateTime
        description: <p>The time period for the first schedule to start.</p>
      hourlyPrice?:
        type: String
        description: <p>The hourly price for a single instance.</p>
      totalScheduledInstanceHours?:
        type: Integer
        description: <p>The total number of hours for a single instance for the entire term.</p>
      availableInstanceCount?:
        type: Integer
        description: <p>The number of available instances.</p>
      minTermDurationInDays?:
        type: Integer
        description: <p>The minimum term. The only possible value is 365 days.</p>
      maxTermDurationInDays?:
        type: Integer
        description: <p>The maximum term. The only possible value is 365 days.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a schedule that is available for your Scheduled Instances.</p>
  ScheduledInstanceRecurrence:
    type: object
    properties:
      frequency?:
        type: String
        description: <p>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</p>
      interval?:
        type: Integer
        description: <p>The interval quantity. The interval unit depends on the value of <code>frequency</code>. For example, every 2 weeks or every 2 months.</p>
      occurrenceDaySet?:
        type: OccurrenceDaySet
        description: <p>The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).</p>
      occurrenceRelativeToEnd?:
        type: Boolean
        description: <p>Indicates whether the occurrence is relative to the end of the specified week or month.</p>
      occurrenceUnit?:
        type: String
        description: <p>The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the recurring schedule for a Scheduled Instance.</p>
  ScheduledInstanceRecurrenceRequest:
    type: object
    properties:
      Frequency?:
        type: String
        description: <p>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</p>
      Interval?:
        type: Integer
        description: <p>The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months.</p>
      OccurrenceDay?:
        type: OccurrenceDayRequestSet
        description: <p>The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.</p>
      OccurrenceRelativeToEnd?:
        type: Boolean
        description: <p>Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule.</p>
      OccurrenceUnit?:
        type: String
        description: <p>The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the recurring schedule for a Scheduled Instance.</p>
  ScheduledInstancesBlockDeviceMapping:
    type: object
    properties:
      DeviceName?:
        type: String
        description: <p>The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
      NoDevice?:
        type: String
        description: <p>Suppresses the specified device included in the block device mapping of the AMI.</p>
      VirtualName?:
        type: String
        description: '<p>The virtual device name (<code>ephemeral</code>N). Instance
          store volumes are numbered starting from 0. An instance type with two available
          instance store volumes can specify mappings for <code>ephemeral0</code>
          and <code>ephemeral1</code>.The number of available instance store volumes
          depends on the instance type. After you connect to the instance, you must
          mount the volume.</p> <p>Constraints: For M3 instances, you must specify
          instance store volumes in the block device mapping for the instance. When
          you launch an M3 instance, we ignore any instance store volumes specified
          in the block device mapping for the AMI.</p>'
      Ebs?:
        type: ScheduledInstancesEbs
        description: <p>Parameters used to set up EBS volumes automatically when the instance is launched.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a block device mapping for a Scheduled Instance.</p>
  ScheduledInstancesEbs:
    type: object
    properties:
      SnapshotId?:
        type: String
        description: <p>The ID of the snapshot.</p>
      VolumeSize?:
        type: Integer
        description: '<p>The size of the volume, in GiB.</p> <p>Default: If you''re
          creating the volume from a snapshot and don''t specify a volume size, the
          default is the snapshot size.</p>'
      DeleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the volume is deleted on instance termination.</p>
      VolumeType?:
        type: String
        description: '<p>The volume type. <code>gp2</code> for General Purpose SSD,
          <code>io1</code> for Provisioned IOPS SSD, Throughput Optimized HDD for
          <code>st1</code>, Cold HDD for <code>sc1</code>, or <code>standard</code>
          for Magnetic.</p> <p>Default: <code>standard</code> </p>'
      Iops?:
        type: Integer
        description: '<p>The number of I/O operations per second (IOPS) that the volume
          supports. For io1 volumes, this represents the number of IOPS that are provisioned
          for the volume. For <code>gp2</code> volumes, this represents the baseline
          performance of the volume and the rate at which the volume accumulates I/O
          credits for bursting. For more information about <code>gp2</code> baseline
          performance, I/O credits, and bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
          EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
          <p>Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and
          100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter
          is required for requests to create <code>io1</code>volumes; it is not used
          in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>,
          or <code>standard</code> volumes.</p>'
      Encrypted?:
        type: Boolean
        description: <p>Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an EBS volume for a Scheduled Instance.</p>
  ScheduledInstancesIamInstanceProfile:
    type: object
    properties:
      Arn?:
        type: String
        description: <p>The Amazon Resource Name (ARN).</p>
      Name?:
        type: String
        description: <p>The name.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an IAM instance profile for a Scheduled Instance.</p>
  ScheduledInstancesLaunchSpecification:
    type: object
    properties:
      ImageId:
        type: String
        description: <p>The ID of the Amazon Machine Image (AMI).</p>
      KeyName?:
        type: String
        description: <p>The name of the key pair.</p>
      SecurityGroupId?:
        type: ScheduledInstancesSecurityGroupIdSet
        description: <p>The IDs of one or more security groups.</p>
      UserData?:
        type: String
        description: <p>The base64-encoded MIME user data.</p>
      Placement?:
        type: ScheduledInstancesPlacement
        description: <p>The placement information.</p>
      KernelId?:
        type: String
        description: <p>The ID of the kernel.</p>
      InstanceType?:
        type: String
        description: <p>The instance type.</p>
      RamdiskId?:
        type: String
        description: <p>The ID of the RAM disk.</p>
      BlockDeviceMapping?:
        type: ScheduledInstancesBlockDeviceMappingSet
        description: <p>One or more block device mapping entries.</p>
      Monitoring?:
        type: ScheduledInstancesMonitoring
        description: <p>Enable or disable monitoring for the instances.</p>
      SubnetId?:
        type: String
        description: <p>The ID of the subnet in which to launch the instances.</p>
      NetworkInterface?:
        type: ScheduledInstancesNetworkInterfaceSet
        description: <p>One or more network interfaces.</p>
      IamInstanceProfile?:
        type: ScheduledInstancesIamInstanceProfile
        description: <p>The IAM instance profile.</p>
      EbsOptimized?:
        type: Boolean
        description: '<p>Indicates whether the instances are optimized for EBS I/O.
          This optimization provides dedicated throughput to Amazon EBS and an optimized
          configuration stack to provide optimal EBS I/O performance. This optimization
          isn''t available with all instance types. Additional usage charges apply
          when using an EBS-optimized instance.</p> <p>Default: <code>false</code>
          </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>
  ScheduledInstancesMonitoring:
    type: object
    properties:
      Enabled?:
        type: Boolean
        description: <p>Indicates whether monitoring is enabled.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes whether monitoring is enabled for a Scheduled Instance.</p>
  ScheduledInstancesNetworkInterface:
    type: object
    properties:
      NetworkInterfaceId?:
        type: String
        description: <p>The ID of the network interface.</p>
      DeviceIndex?:
        type: Integer
        description: <p>The index of the device for the network interface attachment.</p>
      SubnetId?:
        type: String
        description: <p>The ID of the subnet.</p>
      Description?:
        type: String
        description: <p>The description.</p>
      PrivateIpAddress?:
        type: String
        description: <p>The IP address of the network interface within the subnet.</p>
      PrivateIpAddressConfig?:
        type: PrivateIpAddressConfigSet
        description: <p>The private IP addresses.</p>
      SecondaryPrivateIpAddressCount?:
        type: Integer
        description: <p>The number of secondary private IP addresses.</p>
      AssociatePublicIpAddress?:
        type: Boolean
        description: <p>Indicates whether to assign a public IP address to instances launched in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.</p>
      Group?:
        type: ScheduledInstancesSecurityGroupIdSet
        description: <p>The IDs of one or more security groups.</p>
      DeleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether to delete the interface when the instance is terminated.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a network interface for a Scheduled Instance.</p>
  ScheduledInstancesPlacement:
    type: object
    properties:
      AvailabilityZone?:
        type: String
        description: <p>The Availability Zone.</p>
      GroupName?:
        type: String
        description: <p>The name of the placement group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the placement for a Scheduled Instance.</p>
  ScheduledInstancesPrivateIpAddressConfig:
    type: object
    properties:
      PrivateIpAddress?:
        type: String
        description: <p>The IP address.</p>
      Primary?:
        type: Boolean
        description: <p>Indicates whether this is a primary IP address. Otherwise, this is a secondary IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a private IP address for a Scheduled Instance.</p>
  SecurityGroup:
    type: object
    properties:
      ownerId?:
        type: String
        description: <p>The AWS account ID of the owner of the security group.</p>
      groupName?:
        type: String
        description: <p>The name of the security group.</p>
      groupId?:
        type: String
        description: <p>The ID of the security group.</p>
      groupDescription?:
        type: String
        description: <p>A description of the security group.</p>
      ipPermissions?:
        type: IpPermissionList
        description: <p>One or more inbound rules associated with the security group.</p>
      ipPermissionsEgress?:
        type: IpPermissionList
        description: <p>[EC2-VPC] One or more outbound rules associated with the security group.</p>
      vpcId?:
        type: String
        description: <p>[EC2-VPC] The ID of the VPC for the security group.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the security group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a security group</p>
  SecurityGroupReference:
    type: object
    properties:
      groupId:
        type: String
        description: <p>The ID of your security group.</p>
      referencingVpcId:
        type: String
        description: <p>The ID of the VPC with the referencing security group.</p>
      vpcPeeringConnectionId?:
        type: String
        description: <p>The ID of the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a VPC with a security group that references your security group.</p>
  SlotDateTimeRangeRequest:
    type: object
    properties:
      EarliestTime:
        type: DateTime
        description: <p>The earliest date and time, in UTC, for the Scheduled Instance to start.</p>
      LatestTime:
        type: DateTime
        description: <p>The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day.</p>
  SlotStartTimeRangeRequest:
    type: object
    properties:
      EarliestTime?:
        type: DateTime
        description: <p>The earliest date and time, in UTC, for the Scheduled Instance to start.</p>
      LatestTime?:
        type: DateTime
        description: <p>The latest date and time, in UTC, for the Scheduled Instance to start.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the time period for a Scheduled Instance to start its first schedule.</p>
  Snapshot:
    type: object
    properties:
      snapshotId?:
        type: String
        description: <p>The ID of the snapshot. Each snapshot receives a unique identifier when it is created.</p>
      volumeId?:
        type: String
        description: <p>The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for any purpose.</p>
      status?:
        type: SnapshotState
        description: <p>The snapshot state.</p>
      statusMessage?:
        type: String
        description: <p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by the <a>DescribeSnapshots</a> API operation.</p>
      startTime?:
        type: DateTime
        description: <p>The time stamp when the snapshot was initiated.</p>
      progress?:
        type: String
        description: <p>The progress of the snapshot, as a percentage.</p>
      ownerId?:
        type: String
        description: <p>The AWS account ID of the EBS snapshot owner.</p>
      description?:
        type: String
        description: <p>The description for the snapshot.</p>
      volumeSize?:
        type: Integer
        description: <p>The size of the volume, in GiB.</p>
      ownerAlias?:
        type: String
        description: <p> Value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console. </p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the snapshot.</p>
      encrypted?:
        type: Boolean
        description: <p>Indicates whether the snapshot is encrypted.</p>
      kmsKeyId?:
        type: String
        description: <p>The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.</p>
      dataEncryptionKeyId?:
        type: String
        description: <p>The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by the <a>DescribeSnapshots</a> API operation.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a snapshot.</p>
  SnapshotDetail:
    type: object
    properties:
      diskImageSize?:
        type: Double
        description: <p>The size of the disk in the snapshot, in GiB.</p>
      description?:
        type: String
        description: <p>A description for the snapshot.</p>
      format?:
        type: String
        description: <p>The format of the disk image from which the snapshot is created.</p>
      url?:
        type: String
        description: <p>The URL used to access the disk image.</p>
      userBucket?:
        type: UserBucketDetails
        description: <p>The S3 bucket for the disk image.</p>
      deviceName?:
        type: String
        description: <p>The block device mapping for the snapshot.</p>
      snapshotId?:
        type: String
        description: <p>The snapshot ID of the disk being imported.</p>
      progress?:
        type: String
        description: <p>The percentage of progress for the task.</p>
      statusMessage?:
        type: String
        description: <p>A detailed status message for the snapshot creation.</p>
      status?:
        type: String
        description: <p>A brief status of the snapshot creation.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the snapshot created from the imported disk.</p>
  SnapshotDiskContainer:
    type: object
    properties:
      Description?:
        type: String
        description: <p>The description of the disk image being imported.</p>
      Format?:
        type: String
        description: '<p>The format of the disk image being imported.</p> <p>Valid
          values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code>
          </p>'
      Url?:
        type: String
        description: <p>The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..).</p>
      UserBucket?:
        type: UserBucket
        description: <p>The S3 bucket for the disk image.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>The disk container object for the import snapshot request.</p>
  SnapshotTaskDetail:
    type: object
    properties:
      diskImageSize?:
        type: Double
        description: <p>The size of the disk in the snapshot, in GiB.</p>
      description?:
        type: String
        description: <p>The description of the snapshot.</p>
      format?:
        type: String
        description: <p>The format of the disk image from which the snapshot is created.</p>
      url?:
        type: String
        description: <p>The URL of the disk image from which the snapshot is created.</p>
      userBucket?:
        type: UserBucketDetails
        description: <p>The S3 bucket for the disk image.</p>
      snapshotId?:
        type: String
        description: <p>The snapshot ID of the disk being imported.</p>
      progress?:
        type: String
        description: <p>The percentage of completion for the import snapshot task.</p>
      statusMessage?:
        type: String
        description: <p>A detailed status message for the import snapshot task.</p>
      status?:
        type: String
        description: <p>A brief status for the import snapshot task.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Details about the import snapshot task.</p>
  SpotDatafeedSubscription:
    type: object
    properties:
      ownerId?:
        type: String
        description: <p>The AWS account ID of the account.</p>
      bucket?:
        type: String
        description: <p>The Amazon S3 bucket where the Spot instance data feed is located.</p>
      prefix?:
        type: String
        description: <p>The prefix that is prepended to data feed files.</p>
      state?:
        type: DatafeedSubscriptionState
        description: <p>The state of the Spot instance data feed subscription.</p>
      fault?:
        type: SpotInstanceStateFault
        description: <p>The fault codes for the Spot instance request, if any.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the data feed for a Spot instance.</p>
  SpotFleetLaunchSpecification:
    type: object
    properties:
      imageId?:
        type: String
        description: <p>The ID of the AMI.</p>
      keyName?:
        type: String
        description: <p>The name of the key pair.</p>
      groupSet?:
        type: GroupIdentifierList
        description: <p>One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.</p>
      userData?:
        type: String
        description: <p>The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
      addressingType?:
        type: String
        description: <p>Deprecated.</p>
      instanceType?:
        type: InstanceType
        description: <p>The instance type.</p>
      placement?:
        type: SpotPlacement
        description: <p>The placement information.</p>
      kernelId?:
        type: String
        description: <p>The ID of the kernel.</p>
      ramdiskId?:
        type: String
        description: <p>The ID of the RAM disk.</p>
      blockDeviceMapping?:
        type: BlockDeviceMappingList
        description: <p>One or more block device mapping entries.</p>
      monitoring?:
        type: SpotFleetMonitoring
        description: <p>Enable or disable monitoring for the instances.</p>
      subnetId?:
        type: String
        description: <p>The ID of the subnet in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-a61dafcf, subnet-65ea5f08".</p>
      networkInterfaceSet?:
        type: InstanceNetworkInterfaceSpecificationList
        description: <p>One or more network interfaces.</p>
      iamInstanceProfile?:
        type: IamInstanceProfileSpecification
        description: <p>The IAM instance profile.</p>
      ebsOptimized?:
        type: Boolean
        description: '<p>Indicates whether the instances are optimized for EBS I/O.
          This optimization provides dedicated throughput to Amazon EBS and an optimized
          configuration stack to provide optimal EBS I/O performance. This optimization
          isn''t available with all instance types. Additional usage charges apply
          when using an EBS Optimized instance.</p> <p>Default: <code>false</code>
          </p>'
      weightedCapacity?:
        type: Double
        description: <p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms (instances or a performance characteristic such as vCPUs, memory, or I/O).</p> <p>If the target capacity divided by this value is not a whole number, we round the number of instances to the next whole number. If this value is not specified, the default is 1.</p>
      spotPrice?:
        type: String
        description: <p>The bid price per unit hour for the specified instance type. If this value is not specified, the default is the Spot bid price specified for the fleet. To determine the bid price per unit hour, divide the Spot bid price by the value of <code>WeightedCapacity</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the launch specification for one or more Spot instances.</p>
  SpotFleetMonitoring:
    type: object
    properties:
      enabled?:
        type: Boolean
        description: '<p>Enables monitoring for the instance.</p> <p>Default: <code>false</code>
          </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes whether monitoring is enabled.</p>
  SpotFleetRequestConfig:
    type: object
    properties:
      spotFleetRequestId:
        type: String
        description: <p>The ID of the Spot fleet request.</p>
      spotFleetRequestState:
        type: BatchState
        description: <p>The state of the Spot fleet request.</p>
      spotFleetRequestConfig:
        type: SpotFleetRequestConfigData
        description: <p>Information about the configuration of the Spot fleet request.</p>
      createTime:
        type: DateTime
        description: <p>The creation date and time of the request.</p>
      activityStatus?:
        type: ActivityStatus
        description: <p>The progress of the Spot fleet request. If there is an error, the status is <code>error</code>. After all bids are placed, the status is <code>pending_fulfillment</code>. If the size of the fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>. If the size of the fleet is decreased, the status is <code>pending_termination</code> while Spot instances are terminating.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Spot fleet request.</p>
  SpotFleetRequestConfigData:
    type: object
    properties:
      clientToken?:
        type: String
        description: <p>A unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
      spotPrice:
        type: String
        description: <p>The bid price per unit hour.</p>
      targetCapacity:
        type: Integer
        description: <p>The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O.</p>
      validFrom?:
        type: DateTime
        description: <p>The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately.</p>
      validUntil?:
        type: DateTime
        description: <p>The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new Spot instance requests are placed or enabled to fulfill the request.</p>
      terminateInstancesWithExpiration?:
        type: Boolean
        description: <p>Indicates whether running Spot instances should be terminated when the Spot fleet request expires.</p>
      iamFleetRole:
        type: String
        description: <p>Grants the Spot fleet permission to terminate Spot instances on your behalf when you cancel its Spot fleet request using <a>CancelSpotFleetRequests</a> or when the Spot fleet request expires, if you set <code>terminateInstancesWithExpiration</code>.</p>
      launchSpecifications:
        type: LaunchSpecsList
        description: <p>Information about the launch specifications for the Spot fleet request.</p>
      excessCapacityTerminationPolicy?:
        type: ExcessCapacityTerminationPolicy
        description: <p>Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.</p>
      allocationStrategy?:
        type: AllocationStrategy
        description: <p>Indicates how to allocate the target capacity across the Spot pools specified by the Spot fleet request. The default is <code>lowestPrice</code>.</p>
      fulfilledCapacity?:
        type: Double
        description: <p>The number of units fulfilled by this request compared to the set target capacity.</p>
      type?:
        type: FleetType
        description: '<p>The type of request. Indicates whether the fleet will only
          <code>request</code> the target capacity or also attempt to <code>maintain</code>
          it. When you <code>request</code> a certain target capacity, the fleet will
          only place the required bids. It will not attempt to replenish Spot instances
          if capacity is diminished, nor will it submit bids in alternative Spot pools
          if capacity is not available. When you want to <code>maintain</code> a certain
          target capacity, fleet will place the required bids to meet this target
          capacity. It will also automatically replenish any interrupted instances.
          Default: <code>maintain</code>.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the configuration of a Spot fleet request.</p>
  SpotInstanceRequest:
    type: object
    properties:
      spotInstanceRequestId?:
        type: String
        description: <p>The ID of the Spot instance request.</p>
      spotPrice?:
        type: String
        description: <p>The maximum hourly price (bid) for the Spot instance launched to fulfill the request.</p>
      type?:
        type: SpotInstanceType
        description: <p>The Spot instance request type.</p>
      state?:
        type: SpotInstanceState
        description: <p>The state of the Spot instance request. Spot bid status information can help you track your Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot Bid Status</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      fault?:
        type: SpotInstanceStateFault
        description: <p>The fault codes for the Spot instance request, if any.</p>
      status?:
        type: SpotInstanceStatus
        description: <p>The status code and status message describing the Spot instance request.</p>
      validFrom?:
        type: DateTime
        description: <p>The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The request becomes active at this date and time.</p>
      validUntil?:
        type: DateTime
        description: <p>The end date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached.</p>
      launchGroup?:
        type: String
        description: <p>The instance launch group. Launch groups are Spot instances that launch together and terminate together.</p>
      availabilityZoneGroup?:
        type: String
        description: <p>The Availability Zone group. If you specify the same Availability Zone group for all Spot instance requests, all Spot instances are launched in the same Availability Zone.</p>
      launchSpecification?:
        type: LaunchSpecification
        description: <p>Additional information for launching instances.</p>
      instanceId?:
        type: String
        description: <p>The instance ID, if an instance has been launched to fulfill the Spot instance request.</p>
      createTime?:
        type: DateTime
        description: <p>The date and time when the Spot instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      productDescription?:
        type: RIProductDescription
        description: <p>The product description associated with the Spot instance.</p>
      blockDurationMinutes?:
        type: Integer
        description: <p>The duration for the Spot instance, in minutes.</p>
      actualBlockHourlyPrice?:
        type: String
        description: <p>If you specified a duration and your Spot instance request was fulfilled, this is the fixed hourly price in effect for the Spot instance while it runs.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the resource.</p>
      launchedAvailabilityZone?:
        type: String
        description: <p>The Availability Zone in which the bid is launched.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Spot instance request.</p>
  SpotInstanceStateFault:
    type: object
    properties:
      code?:
        type: String
        description: <p>The reason code for the Spot instance state change.</p>
      message?:
        type: String
        description: <p>The message for the Spot instance state change.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a Spot instance state change.</p>
  SpotInstanceStatus:
    type: object
    properties:
      code?:
        type: String
        description: <p>The status code. For a list of status codes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand">Spot Bid Status Codes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
      updateTime?:
        type: DateTime
        description: <p>The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      message?:
        type: String
        description: <p>The description for the status code.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the status of a Spot instance request.</p>
  SpotPlacement:
    type: object
    properties:
      availabilityZone?:
        type: String
        description: <p>The Availability Zone.</p> <p>[Spot fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".</p>
      groupName?:
        type: String
        description: <p>The name of the placement group (for cluster instances).</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes Spot instance placement.</p>
  SpotPrice:
    type: object
    properties:
      instanceType?:
        type: InstanceType
        description: <p>The instance type.</p>
      productDescription?:
        type: RIProductDescription
        description: <p>A general description of the AMI.</p>
      spotPrice?:
        type: String
        description: <p>The maximum price (bid) that you are willing to pay for a Spot instance.</p>
      timestamp?:
        type: DateTime
        description: <p>The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the maximum hourly price (bid) for any Spot instance launched to fulfill the request.</p>
  StaleIpPermission:
    type: object
    properties:
      fromPort?:
        type: Integer
        description: <p>The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. </p>
      ipProtocol?:
        type: String
        description: <p>The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers)</a>.</p>
      ipRanges?:
        type: IpRanges
        description: <p>One or more IP ranges. Not applicable for stale security group rules.</p>
      prefixListIds?:
        type: PrefixListIdSet
        description: <p>One or more prefix list IDs for an AWS service. Not applicable for stale security group rules.</p>
      toPort?:
        type: Integer
        description: <p>The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. </p>
      groups?:
        type: UserIdGroupPairSet
        description: <p>One or more security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a stale rule in a security group.</p>
  StaleSecurityGroup:
    type: object
    properties:
      groupId:
        type: String
        description: <p>The ID of the security group.</p>
      groupName?:
        type: String
        description: <p>The name of the security group.</p>
      description?:
        type: String
        description: <p>The description of the security group.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC for the security group.</p>
      staleIpPermissions?:
        type: StaleIpPermissionSet
        description: <p>Information about the stale inbound rules in the security group.</p>
      staleIpPermissionsEgress?:
        type: StaleIpPermissionSet
        description: <p>Information about the stale outbound rules in the security group.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a stale security group (a security group that contains stale rules).</p>
  StartInstancesRequest:
    type: object
    properties:
      InstanceId:
        type: InstanceIdStringList
        description: <p>One or more instance IDs.</p>
      additionalInfo?:
        type: String
        description: <p>Reserved.</p>
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for StartInstances.</p>
  StartInstancesResult:
    type: object
    properties:
      instancesSet?:
        type: InstanceStateChangeList
        description: <p>Information about one or more started instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of StartInstances.</p>
  StateReason:
    type: object
    properties:
      code?:
        type: String
        description: <p>The reason code for the state change.</p>
      message?:
        type: String
        description: '<p>The message for the state change.</p> <ul> <li> <p> <code>Server.SpotInstanceTermination</code>:
          A Spot instance was terminated due to an increase in the market price.</p>
          </li> <li> <p> <code>Server.InternalError</code>: An internal error occurred
          during instance launch, resulting in termination.</p> </li> <li> <p> <code>Server.InsufficientInstanceCapacity</code>:
          There was insufficient instance capacity to satisfy the launch request.</p>
          </li> <li> <p> <code>Client.InternalError</code>: A client error caused
          the instance to terminate on launch.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>:
          The instance was shut down using the <code>shutdown -h</code> command from
          the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>:
          The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p>
          <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS
          volumes or total storage was exceeded. Decrease usage or request an increase
          in your limits.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>:
          The specified snapshot was not found.</p> </li> </ul>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a state change.</p>
  StopInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: InstanceIdStringList
        description: <p>One or more instance IDs.</p>
      force?:
        type: Boolean
        description: '<p>Forces the instances to stop. The instances do not have an
          opportunity to flush file system caches or file system metadata. If you
          use this option, you must perform file system check and repair procedures.
          This option is not recommended for Windows instances.</p> <p>Default: <code>false</code>
          </p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for StopInstances.</p>
  StopInstancesResult:
    type: object
    properties:
      instancesSet?:
        type: InstanceStateChangeList
        description: <p>Information about one or more stopped instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of StopInstances.</p>
  Storage:
    type: object
    properties:
      S3?:
        type: S3Storage
        description: <p>An Amazon S3 storage location.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the storage location for an instance store-backed AMI.</p>
  Subnet:
    type: object
    properties:
      subnetId?:
        type: String
        description: <p>The ID of the subnet.</p>
      state?:
        type: SubnetState
        description: <p>The current state of the subnet.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC the subnet is in.</p>
      cidrBlock?:
        type: String
        description: <p>The CIDR block assigned to the subnet.</p>
      availableIpAddressCount?:
        type: Integer
        description: <p>The number of unused IP addresses in the subnet. Note that the IP addresses for any stopped instances are considered unavailable.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone of the subnet.</p>
      defaultForAz?:
        type: Boolean
        description: <p>Indicates whether this is the default subnet for the Availability Zone.</p>
      mapPublicIpOnLaunch?:
        type: Boolean
        description: <p>Indicates whether instances launched in this subnet receive a public IP address.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the subnet.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a subnet.</p>
  Tag:
    type: object
    properties:
      key?:
        type: String
        description: '<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive
          and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>
          </p>'
      value?:
        type: String
        description: '<p>The value of the tag.</p> <p>Constraints: Tag values are
          case-sensitive and accept a maximum of 255 Unicode characters.</p>'
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a tag.</p>
  TagDescription:
    type: object
    properties:
      resourceId?:
        type: String
        description: <p>The ID of the resource. For example, <code>ami-1a2b3c4d</code>.</p>
      resourceType?:
        type: ResourceType
        description: <p>The resource type.</p>
      key?:
        type: String
        description: <p>The tag key.</p>
      value?:
        type: String
        description: <p>The tag value.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a tag.</p>
  TerminateInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: InstanceIdStringList
        description: <p>One or more instance IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for TerminateInstances.</p>
  TerminateInstancesResult:
    type: object
    properties:
      instancesSet?:
        type: InstanceStateChangeList
        description: <p>Information about one or more terminated instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of TerminateInstances.</p>
  UnassignPrivateIpAddressesRequest:
    type: object
    properties:
      networkInterfaceId:
        type: String
        description: <p>The ID of the network interface.</p>
      privateIpAddress:
        type: PrivateIpAddressStringList
        description: <p>The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for UnassignPrivateIpAddresses.</p>
  UnmonitorInstancesRequest:
    type: object
    properties:
      dryRun?:
        type: Boolean
        description: <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
      InstanceId:
        type: InstanceIdStringList
        description: <p>One or more instance IDs.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the parameters for UnmonitorInstances.</p>
  UnmonitorInstancesResult:
    type: object
    properties:
      instancesSet?:
        type: InstanceMonitoringList
        description: <p>Monitoring information for one or more instances.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Contains the output of UnmonitorInstances.</p>
  UnsuccessfulItem:
    type: object
    properties:
      resourceId?:
        type: String
        description: <p>The ID of the resource.</p>
      error:
        type: UnsuccessfulItemError
        description: <p>Information about the error.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Information about items that were not successfully processed in a batch call.</p>
  UnsuccessfulItemError:
    type: object
    properties:
      code:
        type: String
        description: <p>The error code.</p>
      message:
        type: String
        description: <p>The error message accompanying the error code.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Information about the error that occurred. For more information about errors, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
  UserBucket:
    type: object
    properties:
      S3Bucket?:
        type: String
        description: <p>The name of the S3 bucket where the disk image is located.</p>
      S3Key?:
        type: String
        description: <p>The file name of the disk image.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the S3 bucket for the disk image.</p>
  UserBucketDetails:
    type: object
    properties:
      s3Bucket?:
        type: String
        description: <p>The S3 bucket from which the disk image was created.</p>
      s3Key?:
        type: String
        description: <p>The file name of the disk image.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the S3 bucket for the disk image.</p>
  UserData:
    type: object
    properties:
      data?:
        type: String
        description: <p>The user data. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the user data for an instance.</p>
  UserIdGroupPair:
    type: object
    properties:
      userId?:
        type: String
        description: <p>The ID of an AWS account. For a referenced security group in another VPC, the account ID of the referenced security group is returned.</p> <p>[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.</p>
      groupName?:
        type: String
        description: <p>The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.</p>
      groupId?:
        type: String
        description: <p>The ID of the security group.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC for the referenced security group, if applicable.</p>
      vpcPeeringConnectionId?:
        type: String
        description: <p>The ID of the VPC peering connection, if applicable.</p>
      peeringStatus?:
        type: String
        description: <p>The status of a VPC peering connection, if applicable.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a security group and AWS account ID pair.</p>
  VgwTelemetry:
    type: object
    properties:
      outsideIpAddress?:
        type: String
        description: <p>The Internet-routable IP address of the virtual private gateway's outside interface.</p>
      status?:
        type: TelemetryStatus
        description: <p>The status of the VPN tunnel.</p>
      lastStatusChange?:
        type: DateTime
        description: <p>The date and time of the last change in status.</p>
      statusMessage?:
        type: String
        description: <p>If an error occurs, a description of the error.</p>
      acceptedRouteCount?:
        type: Integer
        description: <p>The number of accepted routes.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes telemetry for a VPN tunnel.</p>
  Volume:
    type: object
    properties:
      volumeId?:
        type: String
        description: <p>The ID of the volume.</p>
      size?:
        type: Integer
        description: <p>The size of the volume, in GiBs.</p>
      snapshotId?:
        type: String
        description: <p>The snapshot from which the volume was created, if applicable.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone for the volume.</p>
      status?:
        type: VolumeState
        description: <p>The volume state.</p>
      createTime?:
        type: DateTime
        description: <p>The time stamp when volume creation was initiated.</p>
      attachmentSet?:
        type: VolumeAttachmentList
        description: <p>Information about the volume attachments.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the volume.</p>
      volumeType?:
        type: VolumeType
        description: <p>The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.</p>
      iops?:
        type: Integer
        description: '<p>The number of I/O operations per second (IOPS) that the volume
          supports. For Provisioned IOPS SSD volumes, this represents the number of
          IOPS that are provisioned for the volume. For General Purpose SSD volumes,
          this represents the baseline performance of the volume and the rate at which
          the volume accumulates I/O credits for bursting. For more information on
          General Purpose SSD baseline performance, I/O credits, and bursting, see
          <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
          EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
          <p>Constraint: Range is 100-20000 IOPS for io1 volumes and 100-10000 IOPS
          for <code>gp2</code> volumes.</p> <p>Condition: This parameter is required
          for requests to create <code>io1</code> volumes; it is not used in requests
          to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code>
          volumes.</p>'
      encrypted?:
        type: Boolean
        description: <p>Indicates whether the volume will be encrypted.</p>
      kmsKeyId?:
        type: String
        description: <p>The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a volume.</p>
  VolumeAttachment:
    type: object
    properties:
      volumeId?:
        type: String
        description: <p>The ID of the volume.</p>
      instanceId?:
        type: String
        description: <p>The ID of the instance.</p>
      device?:
        type: String
        description: <p>The device name.</p>
      status?:
        type: VolumeAttachmentState
        description: <p>The attachment state of the volume.</p>
      attachTime?:
        type: DateTime
        description: <p>The time stamp when the attachment initiated.</p>
      deleteOnTermination?:
        type: Boolean
        description: <p>Indicates whether the EBS volume is deleted on instance termination.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes volume attachment details.</p>
  VolumeDetail:
    type: object
    properties:
      size:
        type: Long
        description: <p>The size of the volume, in GiB.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an EBS volume.</p>
  VolumeStatusAction:
    type: object
    properties:
      code?:
        type: String
        description: <p>The code identifying the operation, for example, <code>enable-volume-io</code>.</p>
      description?:
        type: String
        description: <p>A description of the operation.</p>
      eventType?:
        type: String
        description: <p>The event type associated with this operation.</p>
      eventId?:
        type: String
        description: <p>The ID of the event associated with this operation.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a volume status operation code.</p>
  VolumeStatusDetails:
    type: object
    properties:
      name?:
        type: VolumeStatusName
        description: <p>The name of the volume status.</p>
      status?:
        type: String
        description: <p>The intended status of the volume status.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a volume status.</p>
  VolumeStatusEvent:
    type: object
    properties:
      eventType?:
        type: String
        description: <p>The type of this event.</p>
      description?:
        type: String
        description: <p>A description of the event.</p>
      notBefore?:
        type: DateTime
        description: <p>The earliest start time of the event.</p>
      notAfter?:
        type: DateTime
        description: <p>The latest end time of the event.</p>
      eventId?:
        type: String
        description: <p>The ID of this event.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a volume status event.</p>
  VolumeStatusInfo:
    type: object
    properties:
      status?:
        type: VolumeStatusInfoStatus
        description: <p>The status of the volume.</p>
      details?:
        type: VolumeStatusDetailsList
        description: <p>The details of the volume status.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the status of a volume.</p>
  VolumeStatusItem:
    type: object
    properties:
      volumeId?:
        type: String
        description: <p>The volume ID.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone of the volume.</p>
      volumeStatus?:
        type: VolumeStatusInfo
        description: <p>The volume status.</p>
      eventsSet?:
        type: VolumeStatusEventsList
        description: <p>A list of events associated with the volume.</p>
      actionsSet?:
        type: VolumeStatusActionsList
        description: <p>The details of the operation.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the volume status.</p>
  Vpc:
    type: object
    properties:
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      state?:
        type: VpcState
        description: <p>The current state of the VPC.</p>
      cidrBlock?:
        type: String
        description: <p>The CIDR block for the VPC.</p>
      dhcpOptionsId?:
        type: String
        description: <p>The ID of the set of DHCP options you've associated with the VPC (or <code>default</code> if the default options are associated with the VPC).</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the VPC.</p>
      instanceTenancy?:
        type: Tenancy
        description: <p>The allowed tenancy of instances launched into the VPC.</p>
      isDefault?:
        type: Boolean
        description: <p>Indicates whether the VPC is the default VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a VPC.</p>
  VpcAttachment:
    type: object
    properties:
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      state?:
        type: AttachmentStatus
        description: <p>The current state of the attachment.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes an attachment between a virtual private gateway and a VPC.</p>
  VpcClassicLink:
    type: object
    properties:
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      classicLinkEnabled?:
        type: Boolean
        description: <p>Indicates whether the VPC is enabled for ClassicLink.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes whether a VPC is enabled for ClassicLink.</p>
  VpcEndpoint:
    type: object
    properties:
      vpcEndpointId?:
        type: String
        description: <p>The ID of the VPC endpoint.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC to which the endpoint is associated.</p>
      serviceName?:
        type: String
        description: <p>The name of the AWS service to which the endpoint is associated.</p>
      state?:
        type: State
        description: <p>The state of the VPC endpoint.</p>
      policyDocument?:
        type: String
        description: <p>The policy document associated with the endpoint.</p>
      routeTableIdSet?:
        type: ValueStringList
        description: <p>One or more route tables associated with the endpoint.</p>
      creationTimestamp?:
        type: DateTime
        description: <p>The date and time the VPC endpoint was created.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a VPC endpoint.</p>
  VpcPeeringConnection:
    type: object
    properties:
      accepterVpcInfo?:
        type: VpcPeeringConnectionVpcInfo
        description: <p>Information about the accepter VPC. CIDR block information is not returned when creating a VPC peering connection, or when describing a VPC peering connection that's in the <code>initiating-request</code> or <code>pending-acceptance</code> state.</p>
      expirationTime?:
        type: DateTime
        description: <p>The time that an unaccepted VPC peering connection will expire.</p>
      requesterVpcInfo?:
        type: VpcPeeringConnectionVpcInfo
        description: <p>Information about the requester VPC.</p>
      status?:
        type: VpcPeeringConnectionStateReason
        description: <p>The status of the VPC peering connection.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the resource.</p>
      vpcPeeringConnectionId?:
        type: String
        description: <p>The ID of the VPC peering connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a VPC peering connection.</p>
  VpcPeeringConnectionOptionsDescription:
    type: object
    properties:
      allowEgressFromLocalClassicLinkToRemoteVpc?:
        type: Boolean
        description: <p>Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.</p>
      allowEgressFromLocalVpcToRemoteClassicLink?:
        type: Boolean
        description: <p>Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.</p>
      allowDnsResolutionFromRemoteVpc?:
        type: Boolean
        description: <p>Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the VPC peering connection options.</p>
  VpcPeeringConnectionStateReason:
    type: object
    properties:
      code?:
        type: VpcPeeringConnectionStateReasonCode
        description: <p>The status of the VPC peering connection.</p>
      message?:
        type: String
        description: <p>A message that provides more information about the status, if applicable.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes the status of a VPC peering connection.</p>
  VpcPeeringConnectionVpcInfo:
    type: object
    properties:
      cidrBlock?:
        type: String
        description: <p>The CIDR block for the VPC.</p>
      ownerId?:
        type: String
        description: <p>The AWS account ID of the VPC owner.</p>
      vpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      peeringOptions?:
        type: VpcPeeringConnectionOptionsDescription
        description: <p>Information about the VPC peering connection options for the accepter or requester VPC.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a VPC in a VPC peering connection.</p>
  VpnConnection:
    type: object
    properties:
      vpnConnectionId?:
        type: String
        description: <p>The ID of the VPN connection.</p>
      state?:
        type: VpnState
        description: <p>The current state of the VPN connection.</p>
      customerGatewayConfiguration?:
        type: String
        description: <p>The configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the <a>CreateVpnConnection</a> response; however, it's present in the <a>DescribeVpnConnections</a> response only if the VPN connection is in the <code>pending</code> or <code>available</code> state.</p>
      type?:
        type: GatewayType
        description: <p>The type of VPN connection.</p>
      customerGatewayId?:
        type: String
        description: <p>The ID of the customer gateway at your end of the VPN connection.</p>
      vpnGatewayId?:
        type: String
        description: <p>The ID of the virtual private gateway at the AWS side of the VPN connection.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the VPN connection.</p>
      vgwTelemetry?:
        type: VgwTelemetryList
        description: <p>Information about the VPN tunnel.</p>
      options?:
        type: VpnConnectionOptions
        description: <p>The VPN connection options.</p>
      routes?:
        type: VpnStaticRouteList
        description: <p>The static routes associated with the VPN connection.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a VPN connection.</p>
  VpnConnectionOptions:
    type: object
    properties:
      staticRoutesOnly?:
        type: Boolean
        description: <p>Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes VPN connection options.</p>
  VpnConnectionOptionsSpecification:
    type: object
    properties:
      staticRoutesOnly?:
        type: Boolean
        description: <p>Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes VPN connection options.</p>
  VpnGateway:
    type: object
    properties:
      vpnGatewayId?:
        type: String
        description: <p>The ID of the virtual private gateway.</p>
      state?:
        type: VpnState
        description: <p>The current state of the virtual private gateway.</p>
      type?:
        type: GatewayType
        description: <p>The type of VPN connection the virtual private gateway supports.</p>
      availabilityZone?:
        type: String
        description: <p>The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.</p>
      attachments?:
        type: VpcAttachmentList
        description: <p>Any VPCs attached to the virtual private gateway.</p>
      tagSet?:
        type: TagList
        description: <p>Any tags assigned to the virtual private gateway.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a virtual private gateway.</p>
  VpnStaticRoute:
    type: object
    properties:
      destinationCidrBlock?:
        type: String
        description: <p>The CIDR block associated with the local subnet of the customer data center.</p>
      source?:
        type: VpnStaticRouteSource
        description: <p>Indicates how the routes were provided.</p>
      state?:
        type: VpnState
        description: <p>The current state of the static route.</p>
    xml:
      namespace: http://ec2.amazonaws.com/doc/2016-04-01
    description: <p>Describes a static route for a VPN connection.</p>
/{AcceptVpcPeeringConnection}:
  uriParameters:
    AcceptVpcPeeringConnection?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Accept a VPC peering connection request. To accept a request, the VPC peering connection must be in the <code>pending-acceptance</code> state, and you must be the owner of the peer VPC. Use the <code>DescribeVpcPeeringConnections</code> request to view your outstanding VPC peering connection requests.
    displayName: Accept Vpc Peering Connection
    body:
      application/json: AcceptVpcPeeringConnectionRequest
    responses:
      200:
        body:
          application/json: AcceptVpcPeeringConnectionResult
/{AllocateAddress}:
  uriParameters:
    AllocateAddress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Acquires an Elastic IP address. An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Allocate Address
    body:
      application/json: AllocateAddressRequest
    responses:
      200:
        body:
          application/json: AllocateAddressResult
/{AllocateHosts}:
  uriParameters:
    AllocateHosts?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Allocates a Dedicated Host to your account. At minimum you need to specify the instance size type, Availability Zone, and quantity of hosts you want to allocate.
    displayName: Allocate Hosts
    body:
      application/json: AllocateHostsRequest
    responses:
      200:
        body:
          application/json: AllocateHostsResult
/{AssignPrivateIpAddresses}:
  uriParameters:
    AssignPrivateIpAddresses?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Assigns one or more secondary private IP addresses to the specified network interface. You can specify one or more specific secondary IP addresses, or you can specify the number of secondary IP addresses to be automatically assigned within the subnet's CIDR block range. The number of secondary IP addresses that you can assign to an instance varies by instance type. For information about instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about Elastic IP addresses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. AssignPrivateIpAddresses is available only in EC2-VPC.
    displayName: Assign Private Ip Addresses
    body:
      application/json: AssignPrivateIpAddressesRequest
    responses:
      200:
        body:
          application/json: null
/{AssociateAddress}:
  uriParameters:
    AssociateAddress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Associates an Elastic IP address with an instance or a network interface. An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. [VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. <important> This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error, and you may be charged for each time the Elastic IP address is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i> section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>. </important>
    displayName: Associate Address
    body:
      application/json: AssociateAddressRequest
    responses:
      200:
        body:
          application/json: AssociateAddressResult
/{AssociateDhcpOptions}:
  uriParameters:
    AssociateDhcpOptions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Associates a set of DHCP options (that you've previously created) with the specified VPC, or associates no DHCP options with the VPC. After you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don't need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Associate Dhcp Options
    body:
      application/json: AssociateDhcpOptionsRequest
    responses:
      200:
        body:
          application/json: null
/{AssociateRouteTable}:
  uriParameters:
    AssociateRouteTable?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Associates a subnet with a route table. The subnet and route table must be in the same VPC. This association causes traffic originating from the subnet to be routed according to the routes in the route table. The action returns an association ID, which you need in order to disassociate the route table from the subnet later. A route table can be associated with multiple subnets. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Associate Route Table
    body:
      application/json: AssociateRouteTableRequest
    responses:
      200:
        body:
          application/json: AssociateRouteTableResult
/{AttachClassicLinkVpc}:
  uriParameters:
    AttachClassicLinkVpc?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups. You cannot link an EC2-Classic instance to more than one VPC at a time. You can only link an instance that's in the <code>running</code> state. An instance is automatically unlinked from a VPC when it's stopped - you can link it to the VPC again when you restart it. After you've linked an instance, you cannot change the VPC security groups that are associated with it. To change the security groups, you must first unlink the instance, and then link it again. Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.
    displayName: Attach Classic Link Vpc
    body:
      application/json: AttachClassicLinkVpcRequest
    responses:
      200:
        body:
          application/json: AttachClassicLinkVpcResult
/{AttachInternetGateway}:
  uriParameters:
    AttachInternetGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Attaches an Internet gateway to a VPC, enabling connectivity between the Internet and the VPC. For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private Cloud User Guide</a>.
    displayName: Attach Internet Gateway
    body:
      application/json: AttachInternetGatewayRequest
    responses:
      200:
        body:
          application/json: null
/{AttachNetworkInterface}:
  uriParameters:
    AttachNetworkInterface?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Attaches a network interface to an instance.
    displayName: Attach Network Interface
    body:
      application/json: AttachNetworkInterfaceRequest
    responses:
      200:
        body:
          application/json: AttachNetworkInterfaceResult
/{AttachVolume}:
  uriParameters:
    AttachVolume?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Attaches an EBS volume to a running or stopped instance and exposes
      it to the instance with the specified device name. Encrypted EBS volumes may
      only be attached to instances that support Amazon EBS encryption. For more information,
      see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
      EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For
      a list of supported device names, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
      an EBS Volume to an Instance</a>. Any device names that aren''t reserved for
      instance store volumes can be used for EBS volumes. For more information, see
      <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon
      EC2 Instance Store</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
      If a volume has an AWS Marketplace product code: <ul> <li> The volume can be
      attached only to a stopped instance. </li> <li> AWS Marketplace product codes
      are copied from the volume to the instance. </li> <li> You must be subscribed
      to the product. </li> <li> The instance type and operating system of the instance
      must support the product. For example, you can''t detach a volume from a Windows
      instance and attach it to a Linux instance. </li> </ul> For an overview of the
      AWS Marketplace, see <a href="https://aws.amazon.com/marketplace/help/200900000">Introducing
      AWS Marketplace</a>. For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
      Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
    displayName: Attach Volume
    body:
      application/json: AttachVolumeRequest
    responses:
      200:
        body:
          application/json: VolumeAttachment
/{AttachVpnGateway}:
  uriParameters:
    AttachVpnGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Attaches a virtual private gateway to a VPC. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Attach Vpn Gateway
    body:
      application/json: AttachVpnGatewayRequest
    responses:
      200:
        body:
          application/json: AttachVpnGatewayResult
/{AuthorizeSecurityGroupEgress}:
  uriParameters:
    AuthorizeSecurityGroupEgress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: '[EC2-VPC only] Adds one or more egress rules to a security group
      for use with a VPC. Specifically, this action permits instances to send traffic
      to one or more destination CIDR IP address ranges, or to one or more destination
      security groups for the same VPC. This action doesn''t apply to security groups
      for use in EC2-Classic. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
      Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
      <important> You can have up to 50 rules per security group (covering both ingress
      and egress rules). </important> Each rule consists of the protocol (for example,
      TCP), plus either a CIDR range or a source group. For the TCP and UDP protocols,
      you must also specify the destination port or port range. For the ICMP protocol,
      you must also specify the ICMP type and code. You can use -1 for the type or
      code to mean all types or all codes. Rule changes are propagated to affected
      instances as quickly as possible. However, a small delay might occur.'
    displayName: Authorize Security Group Egress
    body:
      application/json: AuthorizeSecurityGroupEgressRequest
    responses:
      200:
        body:
          application/json: null
/{AuthorizeSecurityGroupIngress}:
  uriParameters:
    AuthorizeSecurityGroupIngress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Adds one or more ingress rules to a security group. <important>
      EC2-Classic: You can have up to 100 rules per group. EC2-VPC: You can have up
      to 50 rules per group (covering both ingress and egress rules). </important>
      Rule changes are propagated to instances within the security group as quickly
      as possible. However, a small delay might occur. [EC2-Classic] This action gives
      one or more CIDR IP address ranges permission to access a security group in
      your account, or gives one or more security groups (called the <i>source groups</i>)
      permission to access a security group for your account. A source group can be
      for your own AWS account, or another. [EC2-VPC] This action gives one or more
      CIDR IP address ranges permission to access a security group in your VPC, or
      gives one or more other security groups (called the <i>source groups</i>) permission
      to access a security group for your VPC. The security groups must all be for
      the same VPC.'
    displayName: Authorize Security Group Ingress
    body:
      application/json: AuthorizeSecurityGroupIngressRequest
    responses:
      200:
        body:
          application/json: null
/{BundleInstance}:
  uriParameters:
    BundleInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Bundles an Amazon instance store-backed Windows instance. During bundling, only the root device volume (C:\) is bundled. Data on other instance store volumes is not preserved. <note> This action is not applicable for Linux/Unix instances or Windows instances that are backed by Amazon EBS. </note> For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html">Creating an Instance Store-Backed Windows AMI</a>.
    displayName: Bundle Instance
    body:
      application/json: BundleInstanceRequest
    responses:
      200:
        body:
          application/json: BundleInstanceResult
/{CancelBundleTask}:
  uriParameters:
    CancelBundleTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels a bundling operation for an instance store-backed Windows instance.
    displayName: Cancel Bundle Task
    body:
      application/json: CancelBundleTaskRequest
    responses:
      200:
        body:
          application/json: CancelBundleTaskResult
/{CancelConversionTask}:
  uriParameters:
    CancelConversionTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels an active conversion task. The task can be the import of an instance or volume. The action removes all artifacts of the conversion, including a partially uploaded volume or instance. If the conversion is complete or is in the process of transferring the final disk image, the command fails and returns an exception. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>.
    displayName: Cancel Conversion Task
    body:
      application/json: CancelConversionRequest
    responses:
      200:
        body:
          application/json: null
/{CancelExportTask}:
  uriParameters:
    CancelExportTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels an active export task. The request removes all artifacts of the export, including any partially-created Amazon S3 objects. If the export task is complete or is in the process of transferring the final disk image, the command fails and returns an error.
    displayName: Cancel Export Task
    body:
      application/json: CancelExportTaskRequest
    responses:
      200:
        body:
          application/json: null
/{CancelImportTask}:
  uriParameters:
    CancelImportTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels an in-process import virtual machine or import snapshot task.
    displayName: Cancel Import Task
    body:
      application/json: CancelImportTaskRequest
    responses:
      200:
        body:
          application/json: CancelImportTaskResult
/{CancelReservedInstancesListing}:
  uriParameters:
    CancelReservedInstancesListing?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Cancel Reserved Instances Listing
    body:
      application/json: CancelReservedInstancesListingRequest
    responses:
      200:
        body:
          application/json: CancelReservedInstancesListingResult
/{CancelSpotFleetRequests}:
  uriParameters:
    CancelSpotFleetRequests?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels the specified Spot fleet requests. After you cancel a Spot fleet request, the Spot fleet launches no new Spot instances. You must specify whether the Spot fleet should also terminate its Spot instances. If you terminate the instances, the Spot fleet request enters the <code>cancelled_terminating</code> state. Otherwise, the Spot fleet request enters the <code>cancelled_running</code> state and the instances continue to run until they are interrupted or you terminate them manually.
    displayName: Cancel Spot Fleet Requests
    body:
      application/json: CancelSpotFleetRequestsRequest
    responses:
      200:
        body:
          application/json: CancelSpotFleetRequestsResponse
/{CancelSpotInstanceRequests}:
  uriParameters:
    CancelSpotInstanceRequests?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels one or more Spot instance requests. Spot instances are instances that Amazon EC2 starts on your behalf when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically sets the Spot price based on available Spot instance capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. <important> Canceling a Spot instance request does not terminate running Spot instances associated with the request. </important>
    displayName: Cancel Spot Instance Requests
    body:
      application/json: CancelSpotInstanceRequestsRequest
    responses:
      200:
        body:
          application/json: CancelSpotInstanceRequestsResult
/{ConfirmProductInstance}:
  uriParameters:
    ConfirmProductInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Determines whether a product code is associated with an instance. This action can only be used by the owner of the product code. It is useful when a product code owner needs to verify whether another user's instance is eligible for support.
    displayName: Confirm Product Instance
    body:
      application/json: ConfirmProductInstanceRequest
    responses:
      200:
        body:
          application/json: ConfirmProductInstanceResult
/{CopyImage}:
  uriParameters:
    CopyImage?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Initiates the copy of an AMI from the specified source region to the current region. You specify the destination region by using its endpoint when making the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Copy Image
    body:
      application/json: CopyImageRequest
    responses:
      200:
        body:
          application/json: CopyImageResult
/{CopySnapshot}:
  uriParameters:
    CopySnapshot?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy the snapshot within the same region or from one region to another. You can use the snapshot to create EBS volumes or Amazon Machine Images (AMIs). The snapshot is copied to the regional endpoint that you send the HTTP request to. Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots remain unencrypted, unless the <code>Encrypted</code> flag is specified during the snapshot copy operation. By default, encrypted snapshot copies use the default AWS Key Management Service (AWS KMS) customer master key (CMK); however, you can specify a non-default CMK with the <code>KmsKeyId</code> parameter.  <note> To copy an encrypted snapshot that has been shared from another account, you must have permissions for the CMK used to encrypt the snapshot. </note> <note> Snapshots created by the CopySnapshot action have an arbitrary volume ID that should not be used for any purpose. </note> For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Copy Snapshot
    body:
      application/json: CopySnapshotRequest
    responses:
      200:
        body:
          application/json: CopySnapshotResult
/{CreateCustomerGateway}:
  uriParameters:
    CreateCustomerGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Provides information to AWS about your VPN customer gateway device. The customer gateway is the appliance at your end of the VPN connection. (The device on the AWS side of the VPN connection is the virtual private gateway.) You must provide the Internet-routable IP address of the customer gateway's external interface. The IP address must be static and may be behind a device performing network address translation (NAT). For devices that use Border Gateway Protocol (BGP), you can also provide the device's BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network. If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534 range). <note> Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with the exception of 7224, which is reserved in the <code>us-east-1</code> region, and 9059, which is reserved in the <code>eu-west-1</code> region. </note> For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. <important> You cannot create more than one customer gateway with the same VPN type, IP address, and BGP ASN parameter values. If you run an identical request more than one time, the first request creates the customer gateway, and subsequent requests return information about the existing customer gateway. The subsequent requests do not create new customer gateway resources. </important>
    displayName: Create Customer Gateway
    body:
      application/json: CreateCustomerGatewayRequest
    responses:
      200:
        body:
          application/json: CreateCustomerGatewayResult
/{CreateDhcpOptions}:
  uriParameters:
    CreateDhcpOptions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Creates a set of DHCP options for your VPC. After creating the set,
      you must associate it with the VPC, causing all existing and new instances that
      you launch in the VPC to use this set of DHCP options. The following are the
      individual DHCP options you can specify. For more information about the options,
      see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>. <ul> <li>  <code>domain-name-servers</code>
      - The IP addresses of up to four domain name servers, or AmazonProvidedDNS.
      The default DHCP option set specifies AmazonProvidedDNS. If specifying more
      than one domain name server, specify the IP addresses in a single parameter,
      separated by commas. If you want your instance to receive a custom DNS hostname
      as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code>
      to a custom DNS server. </li> <li>  <code>domain-name</code> - If you''re using
      AmazonProvidedDNS in "us-east-1", specify "ec2.internal". If you''re using AmazonProvidedDNS
      in another region, specify "region.compute.internal" (for example, "ap-northeast-1.compute.internal").
      Otherwise, specify a domain name (for example, "MyCompany.com"). This value
      is used to complete unqualified DNS hostnames. <b>Important</b>: Some Linux
      operating systems accept multiple domain names separated by spaces. However,
      Windows and other Linux operating systems treat the value as a single domain,
      which results in unexpected behavior. If your DHCP options set is associated
      with a VPC that has instances with multiple operating systems, specify only
      one domain name. </li> <li>  <code>ntp-servers</code> - The IP addresses of
      up to four Network Time Protocol (NTP) servers. </li> <li>  <code>netbios-name-servers</code>
      - The IP addresses of up to four NetBIOS name servers. </li> <li>  <code>netbios-node-type</code>
      - The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast
      and multicast are not currently supported). For more information about these
      node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.
      </li> </ul> Your VPC automatically starts out with a set of DHCP options that
      includes only a DNS server that we provide (AmazonProvidedDNS). If you create
      a set of options, and if your VPC has an Internet gateway, make sure to set
      the <code>domain-name-servers</code> option either to <code>AmazonProvidedDNS</code>
      or to a domain name server of your choice. For more information about DHCP options,
      see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
      Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
    displayName: Create Dhcp Options
    body:
      application/json: CreateDhcpOptionsRequest
    responses:
      200:
        body:
          application/json: CreateDhcpOptionsResult
/{CreateFlowLogs}:
  uriParameters:
    CreateFlowLogs?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates one or more flow logs to capture IP traffic for a specific network interface, subnet, or VPC. Flow logs are delivered to a specified log group in Amazon CloudWatch Logs. If you specify a VPC or subnet in the request, a log stream is created in CloudWatch Logs for each network interface in the subnet or VPC. Log streams can include information about accepted and rejected traffic to a network interface. You can view the data in your log streams using Amazon CloudWatch Logs. In your request, you must also specify an IAM role that has permission to publish logs to CloudWatch Logs.
    displayName: Create Flow Logs
    body:
      application/json: CreateFlowLogsRequest
    responses:
      200:
        body:
          application/json: CreateFlowLogsResult
/{CreateImage}:
  uriParameters:
    CreateImage?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped. If you customized your instance with instance store volumes or EBS volumes in addition to the root device volume, the new AMI contains block device mapping information for those volumes. When you launch an instance from this new AMI, the instance automatically launches with those additional volumes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Image
    body:
      application/json: CreateImageRequest
    responses:
      200:
        body:
          application/json: CreateImageResult
/{CreateInstanceExportTask}:
  uriParameters:
    CreateInstanceExportTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Exports a running or stopped instance to an S3 bucket. For information about the supported operating systems, image formats, and known limitations for the types of instances you can export, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting an Instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
    displayName: Create Instance Export Task
    body:
      application/json: CreateInstanceExportTaskRequest
    responses:
      200:
        body:
          application/json: CreateInstanceExportTaskResult
/{CreateInternetGateway}:
  uriParameters:
    CreateInternetGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an Internet gateway for use with a VPC. After creating the Internet gateway, you attach it to a VPC using <a>AttachInternetGateway</a>. For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private Cloud User Guide</a>.
    displayName: Create Internet Gateway
    body:
      application/json: CreateInternetGatewayRequest
    responses:
      200:
        body:
          application/json: CreateInternetGatewayResult
/{CreateKeyPair}:
  uriParameters:
    CreateKeyPair?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public key and displays the private key for you to save to a file. The private key is returned as an unencrypted PEM encoded PKCS#8 private key. If a key with the specified name already exists, Amazon EC2 returns an error. You can have up to five thousand key pairs per region. The key pair returned to you is available only in the region in which you create it. To create a key pair that is available in all regions, use <a>ImportKeyPair</a>. For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Key Pair
    body:
      application/json: CreateKeyPairRequest
    responses:
      200:
        body:
          application/json: KeyPair
/{CreateNatGateway}:
  uriParameters:
    CreateNatGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a NAT gateway in the specified subnet. A NAT gateway can be used to enable instances in a private subnet to connect to the Internet. This action creates a network interface in the specified subnet with a private IP address from the IP address range of the subnet. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">NAT Gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Nat Gateway
    body:
      application/json: CreateNatGatewayRequest
    responses:
      200:
        body:
          application/json: CreateNatGatewayResult
/{CreateNetworkAcl}:
  uriParameters:
    CreateNetworkAcl?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Network Acl
    body:
      application/json: CreateNetworkAclRequest
    responses:
      200:
        body:
          application/json: CreateNetworkAclResult
/{CreateNetworkAclEntry}:
  uriParameters:
    CreateNetworkAclEntry?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an entry (a rule) in a network ACL with the specified rule number. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the ACL, we process the entries in the ACL according to the rule numbers, in ascending order. Each network ACL has a set of ingress rules and a separate set of egress rules. We recommend that you leave room between the rule numbers (for example, 100, 110, 120, ...), and not number them one right after the other (for example, 101, 102, 103, ...). This makes it easier to add a rule between existing ones without having to renumber the rules. After you add an entry, you can't modify it; you must either replace it, or create an entry and delete the old one. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Network Acl Entry
    body:
      application/json: CreateNetworkAclEntryRequest
    responses:
      200:
        body:
          application/json: null
/{CreateNetworkInterface}:
  uriParameters:
    CreateNetworkInterface?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a network interface in the specified subnet. For more information about network interfaces, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network Interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Network Interface
    body:
      application/json: CreateNetworkInterfaceRequest
    responses:
      200:
        body:
          application/json: CreateNetworkInterfaceResult
/{CreatePlacementGroup}:
  uriParameters:
    CreatePlacementGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a placement group that you launch cluster instances into. You must give the group a name that's unique within the scope of your account. For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Placement Group
    body:
      application/json: CreatePlacementGroupRequest
    responses:
      200:
        body:
          application/json: null
/{CreateReservedInstancesListing}:
  uriParameters:
    CreateReservedInstancesListing?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a listing for Amazon EC2 Reserved Instances to be sold in the Reserved Instance Marketplace. You can submit one Reserved Instance listing at a time. To get a list of your Reserved Instances, you can use the <a>DescribeReservedInstances</a> operation. The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances. To sell your Reserved Instances, you must first register as a seller in the Reserved Instance Marketplace. After completing the registration process, you can create a Reserved Instance Marketplace listing of some or all of your Reserved Instances, and specify the upfront price to receive for them. Your Reserved Instance listings then become available for purchase. To view the details of your Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a> operation. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Reserved Instances Listing
    body:
      application/json: CreateReservedInstancesListingRequest
    responses:
      200:
        body:
          application/json: CreateReservedInstancesListingResult
/{CreateRoute}:
  uriParameters:
    CreateRoute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Creates a route in a route table within a VPC. You must specify
      one of the following targets: Internet gateway or virtual private gateway, NAT
      instance, NAT gateway, VPC peering connection, or network interface. When determining
      how to route traffic, we use the route with the most specific match. For example,
      let''s say the traffic is destined for <code>192.0.2.3</code>, and the route
      table includes the following two routes: <ul> <li>  <code>192.0.2.0/24</code>
      (goes to some target A) </li> <li>  <code>192.0.2.0/28</code> (goes to some
      target B) </li> </ul> Both routes apply to the traffic destined for <code>192.0.2.3</code>.
      However, the second route in the list covers a smaller number of IP addresses
      and is therefore more specific, so we use that route to determine where to target
      the traffic. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
      Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
    displayName: Create Route
    body:
      application/json: CreateRouteRequest
    responses:
      200:
        body:
          application/json: CreateRouteResult
/{CreateRouteTable}:
  uriParameters:
    CreateRouteTable?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Route Table
    body:
      application/json: CreateRouteTableRequest
    responses:
      200:
        body:
          application/json: CreateRouteTableResult
/{CreateSecurityGroup}:
  uriParameters:
    CreateSecurityGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Creates a security group. A security group is for use with instances
      either in the EC2-Classic platform or in a specific VPC. For more information,
      see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
      EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>
      and <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
      Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
      <important> EC2-Classic: You can have up to 500 security groups. EC2-VPC: You
      can create up to 500 security groups per VPC. </important> When you create a
      security group, you specify a friendly name of your choice. You can have a security
      group for use in EC2-Classic with the same name as a security group for use
      in a VPC. However, you can''t have two security groups for use in EC2-Classic
      with the same name or two security groups for use in a VPC with the same name.
      You have a default security group for use in EC2-Classic and a default security
      group for use in your VPC. If you don''t specify a security group when you launch
      an instance, the instance is launched into the appropriate default security
      group. A default security group includes a default rule that grants instances
      unrestricted network access to each other. You can add or remove rules from
      your security groups using <a>AuthorizeSecurityGroupIngress</a>, <a>AuthorizeSecurityGroupEgress</a>,
      <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.'
    displayName: Create Security Group
    body:
      application/json: CreateSecurityGroupRequest
    responses:
      200:
        body:
          application/json: CreateSecurityGroupResult
/{CreateSnapshot}:
  uriParameters:
    CreateSnapshot?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance. When a snapshot is created, any AWS Marketplace product codes that are associated with the source volume are propagated to the snapshot. You can take a snapshot of an attached volume that is in use. However, snapshots only capture data that has been written to your EBS volume at the time the snapshot command is issued; this may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the volume long enough to take a snapshot, your snapshot should be complete. However, if you cannot pause all file writes to the volume, you should unmount the volume from within the instance, issue the snapshot command, and then remount the volume to ensure a consistent and complete snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>. To create a snapshot for EBS volumes that serve as root devices, you should stop the instance before taking the snapshot. Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes that are created from encrypted snapshots are also automatically encrypted. Your encrypted volumes and any associated snapshots always remain protected. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon Elastic Block Store</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Snapshot
    body:
      application/json: CreateSnapshotRequest
    responses:
      200:
        body:
          application/json: Snapshot
/{CreateSpotDatafeedSubscription}:
  uriParameters:
    CreateSpotDatafeedSubscription?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a data feed for Spot instances, enabling you to view Spot instance usage logs. You can create one data feed per AWS account. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Spot Datafeed Subscription
    body:
      application/json: CreateSpotDatafeedSubscriptionRequest
    responses:
      200:
        body:
          application/json: CreateSpotDatafeedSubscriptionResult
/{CreateSubnet}:
  uriParameters:
    CreateSubnet?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a subnet in an existing VPC. When you create each subnet, you provide the VPC ID and the CIDR block you want for the subnet. After you create a subnet, you can't change its CIDR block. The subnet's CIDR block can be the same as the VPC's CIDR block (assuming you want only a single subnet in the VPC), or a subset of the VPC's CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest subnet (and VPC) you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16 netmask (65,536 IP addresses). <important> AWS reserves both the first four and the last IP address in each subnet's CIDR block. They're not available for use. </important> If you add more than one subnet to a VPC, they're set up in a star topology with a logical router in the middle. If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address doesn't change if you stop and restart the instance (unlike a similar instance launched outside a VPC, which gets a new IP address when restarted). It's therefore possible to have a subnet with no running instances (they're all stopped), but no remaining IP addresses available. For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Subnet
    body:
      application/json: CreateSubnetRequest
    responses:
      200:
        body:
          application/json: CreateSubnetResult
/{CreateTags}:
  uriParameters:
    CreateTags?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique per resource. For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about creating IAM policies that control users' access to resources based on tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Tags
    body:
      application/json: CreateTagsRequest
    responses:
      200:
        body:
          application/json: null
/{CreateVolume}:
  uriParameters:
    CreateVolume?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an EBS volume that can be attached to an instance in the same Availability Zone. The volume is created in the regional endpoint that you send the HTTP request to. For more information see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions and Endpoints</a>. You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS Marketplace product codes from the snapshot are propagated to the volume. You can create encrypted volumes with the <code>Encrypted</code> parameter. Encrypted volumes may only be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are also automatically encrypted. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating or Restoring an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Create Volume
    body:
      application/json: CreateVolumeRequest
    responses:
      200:
        body:
          application/json: Volume
/{CreateVpc}:
  uriParameters:
    CreateVpc?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a VPC with the specified CIDR block. The smallest VPC you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16 netmask (65,536 IP addresses). To help you decide how big to make your VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. By default, each instance you launch in the VPC has the default DHCP options, which includes only a default DNS server that we provide (AmazonProvidedDNS). For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. You can specify the instance tenancy value for the VPC when you create it. You can't change this value for the VPC after you create it. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/dedicated-instance.html.html">Dedicated Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Vpc
    body:
      application/json: CreateVpcRequest
    responses:
      200:
        body:
          application/json: CreateVpcResult
/{CreateVpcEndpoint}:
  uriParameters:
    CreateVpcEndpoint?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a VPC endpoint for a specified AWS service. An endpoint enables you to create a private connection between your VPC and another AWS service in your account. You can specify an endpoint policy to attach to the endpoint that will control access to the service from your VPC. You can also specify the VPC route tables that use the endpoint. Currently, only endpoints to Amazon S3 are supported.
    displayName: Create Vpc Endpoint
    body:
      application/json: CreateVpcEndpointRequest
    responses:
      200:
        body:
          application/json: CreateVpcEndpointResult
/{CreateVpcPeeringConnection}:
  uriParameters:
    CreateVpcPeeringConnection?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Requests a VPC peering connection between two VPCs: a requester
      VPC that you own and a peer VPC with which to create the connection. The peer
      VPC can belong to another AWS account. The requester VPC and peer VPC cannot
      have overlapping CIDR blocks. The owner of the peer VPC must accept the peering
      request to activate the peering connection. The VPC peering connection request
      expires after 7 days, after which it cannot be accepted or rejected. A <code>CreateVpcPeeringConnection</code>
      request between VPCs with overlapping CIDR blocks results in the VPC peering
      connection having a status of <code>failed</code>.'
    displayName: Create Vpc Peering Connection
    body:
      application/json: CreateVpcPeeringConnectionRequest
    responses:
      200:
        body:
          application/json: CreateVpcPeeringConnectionResult
/{CreateVpnConnection}:
  uriParameters:
    CreateVpnConnection?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a VPN connection between an existing virtual private gateway and a VPN customer gateway. The only supported connection type is <code>ipsec.1</code>. The response includes information that you need to give to your network administrator to configure your customer gateway. <important> We strongly recommend that you use HTTPS when calling this operation because the response contains sensitive cryptographic information for configuring your customer gateway. </important> If you decide to shut down your VPN connection for any reason and later create a new VPN connection, you must reconfigure your customer gateway with the new information returned from this call. This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error. For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Vpn Connection
    body:
      application/json: CreateVpnConnectionRequest
    responses:
      200:
        body:
          application/json: CreateVpnConnectionResult
/{CreateVpnConnectionRoute}:
  uriParameters:
    CreateVpnConnectionRoute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway. For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Vpn Connection Route
    body:
      application/json: CreateVpnConnectionRouteRequest
    responses:
      200:
        body:
          application/json: null
/{CreateVpnGateway}:
  uriParameters:
    CreateVpnGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself. For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Create Vpn Gateway
    body:
      application/json: CreateVpnGatewayRequest
    responses:
      200:
        body:
          application/json: CreateVpnGatewayResult
/{DeleteCustomerGateway}:
  uriParameters:
    DeleteCustomerGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified customer gateway. You must delete the VPN connection before you can delete the customer gateway.
    displayName: Delete Customer Gateway
    body:
      application/json: DeleteCustomerGatewayRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteDhcpOptions}:
  uriParameters:
    DeleteDhcpOptions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified set of DHCP options. You must disassociate the set of DHCP options before you can delete it. You can disassociate the set of DHCP options by associating either a new set of options or the default set of options with the VPC.
    displayName: Delete Dhcp Options
    body:
      application/json: DeleteDhcpOptionsRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteFlowLogs}:
  uriParameters:
    DeleteFlowLogs?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes one or more flow logs.
    displayName: Delete Flow Logs
    body:
      application/json: DeleteFlowLogsRequest
    responses:
      200:
        body:
          application/json: DeleteFlowLogsResult
/{DeleteInternetGateway}:
  uriParameters:
    DeleteInternetGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified Internet gateway. You must detach the Internet gateway from the VPC before you can delete it.
    displayName: Delete Internet Gateway
    body:
      application/json: DeleteInternetGatewayRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteKeyPair}:
  uriParameters:
    DeleteKeyPair?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified key pair, by removing the public key from Amazon EC2.
    displayName: Delete Key Pair
    body:
      application/json: DeleteKeyPairRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteNatGateway}:
  uriParameters:
    DeleteNatGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic IP address, but does not release the address from your account. Deleting a NAT gateway does not delete any NAT gateway routes in your route tables.
    displayName: Delete Nat Gateway
    body:
      application/json: DeleteNatGatewayRequest
    responses:
      200:
        body:
          application/json: DeleteNatGatewayResult
/{DeleteNetworkAcl}:
  uriParameters:
    DeleteNetworkAcl?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified network ACL. You can't delete the ACL if it's associated with any subnets. You can't delete the default network ACL.
    displayName: Delete Network Acl
    body:
      application/json: DeleteNetworkAclRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteNetworkAclEntry}:
  uriParameters:
    DeleteNetworkAclEntry?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified ingress or egress entry (rule) from the specified network ACL.
    displayName: Delete Network Acl Entry
    body:
      application/json: DeleteNetworkAclEntryRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteNetworkInterface}:
  uriParameters:
    DeleteNetworkInterface?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified network interface. You must detach the network interface before you can delete it.
    displayName: Delete Network Interface
    body:
      application/json: DeleteNetworkInterfaceRequest
    responses:
      200:
        body:
          application/json: null
/{DeletePlacementGroup}:
  uriParameters:
    DeletePlacementGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified placement group. You must terminate all instances in the placement group before you can delete the placement group. For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Delete Placement Group
    body:
      application/json: DeletePlacementGroupRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteRoute}:
  uriParameters:
    DeleteRoute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified route from the specified route table.
    displayName: Delete Route
    body:
      application/json: DeleteRouteRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteRouteTable}:
  uriParameters:
    DeleteRouteTable?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified route table. You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.
    displayName: Delete Route Table
    body:
      application/json: DeleteRouteTableRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteSecurityGroup}:
  uriParameters:
    DeleteSecurityGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes a security group. If you attempt to delete a security group that is associated with an instance, or is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code> in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.
    displayName: Delete Security Group
    body:
      application/json: DeleteSecurityGroupRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteSnapshot}:
  uriParameters:
    DeleteSnapshot?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified snapshot. When you make periodic snapshots of a volume, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the volume. You cannot delete a snapshot of the root device of an EBS volume used by a registered AMI. You must first de-register the AMI before you can delete the snapshot. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Delete Snapshot
    body:
      application/json: DeleteSnapshotRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteSpotDatafeedSubscription}:
  uriParameters:
    DeleteSpotDatafeedSubscription?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the data feed for Spot instances.
    displayName: Delete Spot Datafeed Subscription
    body:
      application/json: DeleteSpotDatafeedSubscriptionRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteSubnet}:
  uriParameters:
    DeleteSubnet?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.
    displayName: Delete Subnet
    body:
      application/json: DeleteSubnetRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteTags}:
  uriParameters:
    DeleteTags?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified set of tags from the specified set of resources. This call is designed to follow a <code>DescribeTags</code> request. For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Delete Tags
    body:
      application/json: DeleteTagsRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteVolume}:
  uriParameters:
    DeleteVolume?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified EBS volume. The volume must be in the <code>available</code> state (not attached to an instance). <note> The volume may remain in the <code>deleting</code> state for several minutes. </note> For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Delete Volume
    body:
      application/json: DeleteVolumeRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteVpc}:
  uriParameters:
    DeleteVpc?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.
    displayName: Delete Vpc
    body:
      application/json: DeleteVpcRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteVpcEndpoints}:
  uriParameters:
    DeleteVpcEndpoints?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes one or more specified VPC endpoints. Deleting the endpoint also deletes the endpoint routes in the route tables that were associated with the endpoint.
    displayName: Delete Vpc Endpoints
    body:
      application/json: DeleteVpcEndpointsRequest
    responses:
      200:
        body:
          application/json: DeleteVpcEndpointsResult
/{DeleteVpcPeeringConnection}:
  uriParameters:
    DeleteVpcPeeringConnection?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Deletes a VPC peering connection. Either the owner of the requester
      VPC or the owner of the peer VPC can delete the VPC peering connection if it''s
      in the <code>active</code> state. The owner of the requester VPC can delete
      a VPC peering connection in the <code>pending-acceptance</code> state. '
    displayName: Delete Vpc Peering Connection
    body:
      application/json: DeleteVpcPeeringConnectionRequest
    responses:
      200:
        body:
          application/json: DeleteVpcPeeringConnectionResult
/{DeleteVpnConnection}:
  uriParameters:
    DeleteVpnConnection?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified VPN connection. If you're deleting the VPC and its associated components, we recommend that you detach the virtual private gateway from the VPC and delete the VPC before deleting the VPN connection. If you believe that the tunnel credentials for your VPN connection have been compromised, you can delete the VPN connection and create a new one that has new keys, without needing to delete the VPC or virtual private gateway. If you create a new VPN connection, you must reconfigure the customer gateway using the new configuration information returned with the new VPN connection ID.
    displayName: Delete Vpn Connection
    body:
      application/json: DeleteVpnConnectionRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteVpnConnectionRoute}:
  uriParameters:
    DeleteVpnConnectionRoute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.
    displayName: Delete Vpn Connection Route
    body:
      application/json: DeleteVpnConnectionRouteRequest
    responses:
      200:
        body:
          application/json: null
/{DeleteVpnGateway}:
  uriParameters:
    DeleteVpnGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified virtual private gateway. We recommend that before you delete a virtual private gateway, you detach it from the VPC and delete the VPN connection. Note that you don't need to delete the virtual private gateway if you plan to delete and recreate the VPN connection between your VPC and your network.
    displayName: Delete Vpn Gateway
    body:
      application/json: DeleteVpnGatewayRequest
    responses:
      200:
        body:
          application/json: null
/{DeregisterImage}:
  uriParameters:
    DeregisterImage?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch new instances. This command does not delete the AMI.
    displayName: Deregister Image
    body:
      application/json: DeregisterImageRequest
    responses:
      200:
        body:
          application/json: null
/{DescribeAccountAttributes}:
  uriParameters:
    DescribeAccountAttributes?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes attributes of your AWS account. The following are the
      supported account attributes: <ul> <li>  <code>supported-platforms</code>: Indicates
      whether your account can launch instances into EC2-Classic and EC2-VPC, or only
      into EC2-VPC. </li> <li>  <code>default-vpc</code>: The ID of the default VPC
      for your account, or <code>none</code>. </li> <li>  <code>max-instances</code>:
      The maximum number of On-Demand instances that you can run. </li> <li>  <code>vpc-max-security-groups-per-interface</code>:
      The maximum number of security groups that you can assign to a network interface.
      </li> <li>  <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses
      that you can allocate for use with EC2-Classic.  </li> <li>  <code>vpc-max-elastic-ips</code>:
      The maximum number of Elastic IP addresses that you can allocate for use with
      EC2-VPC. </li> </ul>'
    displayName: Describe Account Attributes
    body:
      application/json: DescribeAccountAttributesRequest
    responses:
      200:
        body:
          application/json: DescribeAccountAttributesResult
/{DescribeAddresses}:
  uriParameters:
    DescribeAddresses?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your Elastic IP addresses. An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Addresses
    body:
      application/json: DescribeAddressesRequest
    responses:
      200:
        body:
          application/json: DescribeAddressesResult
/{DescribeAvailabilityZones}:
  uriParameters:
    DescribeAvailabilityZones?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of the Availability Zones that are available to you. The results include zones only for the region you're currently using. If there is an event impacting an Availability Zone, you can use this request to view the state and any provided message for that Availability Zone. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Availability Zones
    body:
      application/json: DescribeAvailabilityZonesRequest
    responses:
      200:
        body:
          application/json: DescribeAvailabilityZonesResult
/{DescribeBundleTasks}:
  uriParameters:
    DescribeBundleTasks?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your bundling tasks. <note> Completed bundle tasks are listed for only a limited time. If your bundle task is no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code> with the Amazon S3 bucket name and image manifest name you provided to the bundle task. </note>
    displayName: Describe Bundle Tasks
    body:
      application/json: DescribeBundleTasksRequest
    responses:
      200:
        body:
          application/json: DescribeBundleTasksResult
/{DescribeClassicLinkInstances}:
  uriParameters:
    DescribeClassicLinkInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your linked EC2-Classic instances. This request only returns information about EC2-Classic instances linked to a VPC through ClassicLink; you cannot use this request to return information about other instances.
    displayName: Describe Classic Link Instances
    body:
      application/json: DescribeClassicLinkInstancesRequest
    responses:
      200:
        body:
          application/json: DescribeClassicLinkInstancesResult
/{DescribeConversionTasks}:
  uriParameters:
    DescribeConversionTasks?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM Import/Export User Guide</a>. For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.
    displayName: Describe Conversion Tasks
    body:
      application/json: DescribeConversionTasksRequest
    responses:
      200:
        body:
          application/json: DescribeConversionTasksResult
/{DescribeCustomerGateways}:
  uriParameters:
    DescribeCustomerGateways?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your VPN customer gateways. For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Customer Gateways
    body:
      application/json: DescribeCustomerGatewaysRequest
    responses:
      200:
        body:
          application/json: DescribeCustomerGatewaysResult
/{DescribeDhcpOptions}:
  uriParameters:
    DescribeDhcpOptions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your DHCP options sets. For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Dhcp Options
    body:
      application/json: DescribeDhcpOptionsRequest
    responses:
      200:
        body:
          application/json: DescribeDhcpOptionsResult
/{DescribeExportTasks}:
  uriParameters:
    DescribeExportTasks?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your export tasks.
    displayName: Describe Export Tasks
    body:
      application/json: DescribeExportTasksRequest
    responses:
      200:
        body:
          application/json: DescribeExportTasksResult
/{DescribeFlowLogs}:
  uriParameters:
    DescribeFlowLogs?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more flow logs. To view the information in your flow logs (the log streams for the network interfaces), you must use the CloudWatch Logs console or the CloudWatch Logs API.
    displayName: Describe Flow Logs
    body:
      application/json: DescribeFlowLogsRequest
    responses:
      200:
        body:
          application/json: DescribeFlowLogsResult
/{DescribeHostReservationOfferings}:
  uriParameters:
    DescribeHostReservationOfferings?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes the Dedicated Host Reservations that are available to
      purchase. The results describe all the Dedicated Host Reservation offerings,
      including offerings that may not match the instance family and region of your
      Dedicated Hosts. When purchasing an offering, ensure that the the instance family
      and region of the offering matches that of the Dedicated Host/s it will be associated
      with. For an overview of supported instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated
      Hosts Overview</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. '
    displayName: Describe Host Reservation Offerings
    body:
      application/json: DescribeHostReservationOfferingsRequest
    responses:
      200:
        body:
          application/json: DescribeHostReservationOfferingsResult
/{DescribeHostReservations}:
  uriParameters:
    DescribeHostReservations?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes Dedicated Host Reservations which are associated with Dedicated Hosts in your account.
    displayName: Describe Host Reservations
    body:
      application/json: DescribeHostReservationsRequest
    responses:
      200:
        body:
          application/json: DescribeHostReservationsResult
/{DescribeHosts}:
  uriParameters:
    DescribeHosts?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your Dedicated Hosts. The results describe only the Dedicated Hosts in the region you're currently using. All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that have recently been released will be listed with the state <code>released</code>.
    displayName: Describe Hosts
    body:
      application/json: DescribeHostsRequest
    responses:
      200:
        body:
          application/json: DescribeHostsResult
/{DescribeIdFormat}:
  uriParameters:
    DescribeIdFormat?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes the ID format settings for your resources on a per-region
      basis, for example, to view which resource types are enabled for longer IDs.
      This request only returns information about resource types whose ID formats
      can be modified; it does not return information about other resource types.
      The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
      | <code>snapshot</code> | <code>volume</code>.  These settings apply to the
      IAM user who makes the request; they do not apply to the entire AWS account.
      By default, an IAM user defaults to the same settings as the root user, unless
      they explicitly override the settings by running the <a>ModifyIdFormat</a> command.
      Resources created with longer IDs are visible to all IAM users, regardless of
      these settings and provided that they have permission to use the relevant <code>Describe</code>
      command for the resource type.'
    displayName: Describe Id Format
    body:
      application/json: DescribeIdFormatRequest
    responses:
      200:
        body:
          application/json: DescribeIdFormatResult
/{DescribeIdentityIdFormat}:
  uriParameters:
    DescribeIdentityIdFormat?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes the ID format settings for resources for the specified
      IAM user, IAM role, or root user. For example, you can view the resource types
      that are enabled for longer IDs. This request only returns information about
      resource types whose ID formats can be modified; it does not return information
      about other resource types. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
      IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.  The following
      resource types support longer IDs: <code>instance</code> | <code>reservation</code>
      | <code>snapshot</code> | <code>volume</code>.  These settings apply to the
      principal specified in the request. They do not apply to the principal that
      makes the request.'
    displayName: Describe Identity Id Format
    body:
      application/json: DescribeIdentityIdFormatRequest
    responses:
      200:
        body:
          application/json: DescribeIdentityIdFormatResult
/{DescribeImageAttribute}:
  uriParameters:
    DescribeImageAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified attribute of the specified AMI. You can specify only one attribute at a time.
    displayName: Describe Image Attribute
    body:
      application/json: DescribeImageAttributeRequest
    responses:
      200:
        body:
          application/json: ImageAttribute
/{DescribeImages}:
  uriParameters:
    DescribeImages?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images available to you include public images, private images that you own, and private images owned by other AWS accounts but for which you have explicit launch permissions. <note> Deregistered images are included in the returned results for an unspecified interval after deregistration. </note>
    displayName: Describe Images
    body:
      application/json: DescribeImagesRequest
    responses:
      200:
        body:
          application/json: DescribeImagesResult
/{DescribeImportImageTasks}:
  uriParameters:
    DescribeImportImageTasks?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Displays details about an import virtual machine or import snapshot tasks that are already created.
    displayName: Describe Import Image Tasks
    body:
      application/json: DescribeImportImageTasksRequest
    responses:
      200:
        body:
          application/json: DescribeImportImageTasksResult
/{DescribeImportSnapshotTasks}:
  uriParameters:
    DescribeImportSnapshotTasks?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes your import snapshot tasks.
    displayName: Describe Import Snapshot Tasks
    body:
      application/json: DescribeImportSnapshotTasksRequest
    responses:
      200:
        body:
          application/json: DescribeImportSnapshotTasksResult
/{DescribeInstanceAttribute}:
  uriParameters:
    DescribeInstanceAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes the specified attribute of the specified instance. You
      can specify only one attribute at a time. Valid attribute values are: <code>instanceType</code>
      | <code>kernel</code> | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code>
      | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code>
      | <code>blockDeviceMapping</code> | <code>productCodes</code> | <code>sourceDestCheck</code>
      | <code>groupSet</code> | <code>ebsOptimized</code> | <code>sriovNetSupport</code> '
    displayName: Describe Instance Attribute
    body:
      application/json: DescribeInstanceAttributeRequest
    responses:
      200:
        body:
          application/json: InstanceAttribute
/{DescribeInstanceStatus}:
  uriParameters:
    DescribeInstanceStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes the status of one or more instances. By default, only
      running instances are described, unless specified otherwise. Instance status
      includes the following components: <ul> <li>  <b>Status checks</b> - Amazon
      EC2 performs status checks on running EC2 instances to identify hardware and
      software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
      Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
      Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud
      User Guide</i>. </li> <li>  <b>Scheduled events</b> - Amazon EC2 can schedule
      events (such as reboot, stop, or terminate) for your instances related to hardware
      issues, software updates, or system maintenance. For more information, see <a
      href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
      Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
      </li> <li>  <b>Instance state</b> - You can manage your instances from the moment
      you launch them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
      Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </li> </ul>'
    displayName: Describe Instance Status
    body:
      application/json: DescribeInstanceStatusRequest
    responses:
      200:
        body:
          application/json: DescribeInstanceStatusResult
/{DescribeInstances}:
  uriParameters:
    DescribeInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your instances. If you specify one or more instance IDs, Amazon EC2 returns information for those instances. If you do not specify instance IDs, Amazon EC2 returns information for all relevant instances. If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the returned results. Recently terminated instances might appear in the returned results. This interval is usually less than one hour. If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.
    displayName: Describe Instances
    body:
      application/json: DescribeInstancesRequest
    responses:
      200:
        body:
          application/json: DescribeInstancesResult
/{DescribeInternetGateways}:
  uriParameters:
    DescribeInternetGateways?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your Internet gateways.
    displayName: Describe Internet Gateways
    body:
      application/json: DescribeInternetGatewaysRequest
    responses:
      200:
        body:
          application/json: DescribeInternetGatewaysResult
/{DescribeKeyPairs}:
  uriParameters:
    DescribeKeyPairs?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your key pairs. For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Key Pairs
    body:
      application/json: DescribeKeyPairsRequest
    responses:
      200:
        body:
          application/json: DescribeKeyPairsResult
/{DescribeMovingAddresses}:
  uriParameters:
    DescribeMovingAddresses?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes your Elastic IP addresses that are being moved to the EC2-VPC platform, or that are being restored to the EC2-Classic platform. This request does not return information about any other Elastic IP addresses in your account.
    displayName: Describe Moving Addresses
    body:
      application/json: DescribeMovingAddressesRequest
    responses:
      200:
        body:
          application/json: DescribeMovingAddressesResult
/{DescribeNatGateways}:
  uriParameters:
    DescribeNatGateways?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of the your NAT gateways.
    displayName: Describe Nat Gateways
    body:
      application/json: DescribeNatGatewaysRequest
    responses:
      200:
        body:
          application/json: DescribeNatGatewaysResult
/{DescribeNetworkAcls}:
  uriParameters:
    DescribeNetworkAcls?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your network ACLs. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Network Acls
    body:
      application/json: DescribeNetworkAclsRequest
    responses:
      200:
        body:
          application/json: DescribeNetworkAclsResult
/{DescribeNetworkInterfaceAttribute}:
  uriParameters:
    DescribeNetworkInterfaceAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes a network interface attribute. You can specify only one attribute at a time.
    displayName: Describe Network Interface Attribute
    body:
      application/json: DescribeNetworkInterfaceAttributeRequest
    responses:
      200:
        body:
          application/json: DescribeNetworkInterfaceAttributeResult
/{DescribeNetworkInterfaces}:
  uriParameters:
    DescribeNetworkInterfaces?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your network interfaces.
    displayName: Describe Network Interfaces
    body:
      application/json: DescribeNetworkInterfacesRequest
    responses:
      200:
        body:
          application/json: DescribeNetworkInterfacesResult
/{DescribePlacementGroups}:
  uriParameters:
    DescribePlacementGroups?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your placement groups. For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Placement Groups
    body:
      application/json: DescribePlacementGroupsRequest
    responses:
      200:
        body:
          application/json: DescribePlacementGroupsResult
/{DescribePrefixLists}:
  uriParameters:
    DescribePrefixLists?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes available AWS services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service. A prefix list ID is required for creating an outbound security group rule that allows traffic from a VPC to access an AWS service through a VPC endpoint.
    displayName: Describe Prefix Lists
    body:
      application/json: DescribePrefixListsRequest
    responses:
      200:
        body:
          application/json: DescribePrefixListsResult
/{DescribeRegions}:
  uriParameters:
    DescribeRegions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more regions that are currently available to you. For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions and Endpoints</a>.
    displayName: Describe Regions
    body:
      application/json: DescribeRegionsRequest
    responses:
      200:
        body:
          application/json: DescribeRegionsResult
/{DescribeReservedInstances}:
  uriParameters:
    DescribeReservedInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of the Reserved Instances that you purchased. For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Reserved Instances
    body:
      application/json: DescribeReservedInstancesRequest
    responses:
      200:
        body:
          application/json: DescribeReservedInstancesResult
/{DescribeReservedInstancesListings}:
  uriParameters:
    DescribeReservedInstancesListings?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes your account's Reserved Instance listings in the Reserved Instance Marketplace. The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances. As a seller, you choose to list some or all of your Reserved Instances, and you specify the upfront price to receive for them. Your Reserved Instances are then listed in the Reserved Instance Marketplace and are available for purchase. As a buyer, you specify the configuration of the Reserved Instance to purchase, and the Marketplace matches what you're searching for with what's available. The Marketplace first sells the lowest priced Reserved Instances to you, and continues to sell available Reserved Instance listings to you until your demand is met. You are charged based on the total price of all of the listings that you purchase. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Reserved Instances Listings
    body:
      application/json: DescribeReservedInstancesListingsRequest
    responses:
      200:
        body:
          application/json: DescribeReservedInstancesListingsResult
/{DescribeReservedInstancesModifications}:
  uriParameters:
    DescribeReservedInstancesModifications?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the modifications made to your Reserved Instances. If no parameter is specified, information about all your Reserved Instances modification requests is returned. If a modification ID is specified, only information about the specific modification is returned. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
    displayName: Describe Reserved Instances Modifications
    body:
      application/json: DescribeReservedInstancesModificationsRequest
    responses:
      200:
        body:
          application/json: DescribeReservedInstancesModificationsResult
/{DescribeReservedInstancesOfferings}:
  uriParameters:
    DescribeReservedInstancesOfferings?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes Reserved Instance offerings that are available for purchase. With Reserved Instances, you purchase the right to launch instances for a period of time. During that time period, you do not receive insufficient capacity errors, and you pay a lower usage rate than the rate charged for On-Demand instances for the actual time used. If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace, they will be excluded from these results. This is to ensure that you do not purchase your own Reserved Instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Reserved Instances Offerings
    body:
      application/json: DescribeReservedInstancesOfferingsRequest
    responses:
      200:
        body:
          application/json: DescribeReservedInstancesOfferingsResult
/{DescribeRouteTables}:
  uriParameters:
    DescribeRouteTables?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your route tables. Each subnet in your VPC must be associated with a route table. If a subnet is not explicitly associated with any route table, it is implicitly associated with the main route table. This command does not return the subnet ID for implicit associations. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Route Tables
    body:
      application/json: DescribeRouteTablesRequest
    responses:
      200:
        body:
          application/json: DescribeRouteTablesResult
/{DescribeScheduledInstanceAvailability}:
  uriParameters:
    DescribeScheduledInstanceAvailability?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Finds available schedules that meet the specified criteria. You can search for an available schedule no more than 3 months in advance. You must meet the minimum required duration of 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours. After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a> to purchase Scheduled Instances with that schedule.
    displayName: Describe Scheduled Instance Availability
    body:
      application/json: DescribeScheduledInstanceAvailabilityRequest
    responses:
      200:
        body:
          application/json: DescribeScheduledInstanceAvailabilityResult
/{DescribeScheduledInstances}:
  uriParameters:
    DescribeScheduledInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your Scheduled Instances.
    displayName: Describe Scheduled Instances
    body:
      application/json: DescribeScheduledInstancesRequest
    responses:
      200:
        body:
          application/json: DescribeScheduledInstancesResult
/{DescribeSecurityGroupReferences}:
  uriParameters:
    DescribeSecurityGroupReferences?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: '[EC2-VPC only] Describes the VPCs on the other side of a VPC peering
      connection that are referencing the security groups you''ve specified in this
      request.'
    displayName: Describe Security Group References
    body:
      application/json: DescribeSecurityGroupReferencesRequest
    responses:
      200:
        body:
          application/json: DescribeSecurityGroupReferencesResult
/{DescribeSecurityGroups}:
  uriParameters:
    DescribeSecurityGroups?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your security groups. A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Security Groups
    body:
      application/json: DescribeSecurityGroupsRequest
    responses:
      200:
        body:
          application/json: DescribeSecurityGroupsResult
/{DescribeSnapshotAttribute}:
  uriParameters:
    DescribeSnapshotAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified attribute of the specified snapshot. You can specify only one attribute at a time. For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Snapshot Attribute
    body:
      application/json: DescribeSnapshotAttributeRequest
    responses:
      200:
        body:
          application/json: DescribeSnapshotAttributeResult
/{DescribeSnapshots}:
  uriParameters:
    DescribeSnapshots?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes one or more of the EBS snapshots available to you. Available
      snapshots include public snapshots available for any AWS account to launch,
      private snapshots that you own, and private snapshots owned by another AWS account
      but for which you''ve been given explicit create volume permissions. The create
      volume permissions fall into the following categories: <ul> <li>  <i>public</i>:
      The owner of the snapshot granted create volume permissions for the snapshot
      to the <code>all</code> group. All AWS accounts have create volume permissions
      for these snapshots. </li> <li>  <i>explicit</i>: The owner of the snapshot
      granted create volume permissions to a specific AWS account. </li> <li>  <i>implicit</i>:
      An AWS account has implicit create volume permissions for all snapshots it owns.
      </li> </ul> The list of snapshots returned can be modified by specifying snapshot
      IDs, snapshot owners, or AWS accounts with create volume permissions. If no
      options are specified, Amazon EC2 returns all snapshots for which you have create
      volume permissions. If you specify one or more snapshot IDs, only snapshots
      that have the specified IDs are returned. If you specify an invalid snapshot
      ID, an error is returned. If you specify a snapshot ID for which you do not
      have access, it is not included in the returned results. If you specify one
      or more snapshot owners using the <code>OwnerIds</code> option, only snapshots
      from the specified owners and for which you have access are returned. The results
      can include the AWS account IDs of the specified owners, <code>amazon</code>
      for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
      If you specify a list of restorable users, only snapshots with create snapshot
      permissions for those users are returned. You can specify AWS account IDs (if
      you own the snapshots), <code>self</code> for snapshots for which you own or
      have explicit permissions, or <code>all</code> for public snapshots. If you
      are describing a long list of snapshots, you can paginate the output to make
      the list more manageable. The <code>MaxResults</code> parameter sets the maximum
      number of results returned in a single page. If the list of results exceeds
      your <code>MaxResults</code> value, then that number of results is returned
      along with a <code>NextToken</code> value that can be passed to a subsequent
      <code>DescribeSnapshots</code> request to retrieve the remaining results. For
      more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
      EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
    displayName: Describe Snapshots
    body:
      application/json: DescribeSnapshotsRequest
    responses:
      200:
        body:
          application/json: DescribeSnapshotsResult
/{DescribeSpotDatafeedSubscription}:
  uriParameters:
    DescribeSpotDatafeedSubscription?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Spot Datafeed Subscription
    body:
      application/json: DescribeSpotDatafeedSubscriptionRequest
    responses:
      200:
        body:
          application/json: DescribeSpotDatafeedSubscriptionResult
/{DescribeSpotFleetInstances}:
  uriParameters:
    DescribeSpotFleetInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the running instances for the specified Spot fleet.
    displayName: Describe Spot Fleet Instances
    body:
      application/json: DescribeSpotFleetInstancesRequest
    responses:
      200:
        body:
          application/json: DescribeSpotFleetInstancesResponse
/{DescribeSpotFleetRequestHistory}:
  uriParameters:
    DescribeSpotFleetRequestHistory?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the events for the specified Spot fleet request during the specified time. Spot fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event.
    displayName: Describe Spot Fleet Request History
    body:
      application/json: DescribeSpotFleetRequestHistoryRequest
    responses:
      200:
        body:
          application/json: DescribeSpotFleetRequestHistoryResponse
/{DescribeSpotFleetRequests}:
  uriParameters:
    DescribeSpotFleetRequests?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes your Spot fleet requests.
    displayName: Describe Spot Fleet Requests
    body:
      application/json: DescribeSpotFleetRequestsRequest
    responses:
      200:
        body:
          application/json: DescribeSpotFleetRequestsResponse
/{DescribeSpotInstanceRequests}:
  uriParameters:
    DescribeSpotInstanceRequests?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the Spot instance requests that belong to your account. Spot instances are instances that Amazon EC2 launches when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically sets the Spot price based on available Spot instance capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance by examining the response. If the status of the Spot instance is <code>fulfilled</code>, the instance ID appears in the response and contains the identifier of the instance. Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances where the instance lifecycle is <code>spot</code>.
    displayName: Describe Spot Instance Requests
    body:
      application/json: DescribeSpotInstanceRequestsRequest
    responses:
      200:
        body:
          application/json: DescribeSpotInstanceRequestsResult
/{DescribeSpotPriceHistory}:
  uriParameters:
    DescribeSpotPriceHistory?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the Spot price history. The prices returned are listed in chronological order, from the oldest to the most recent, for up to the past 90 days. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. When you specify a start and end time, this operation returns the prices of the instance types within the time range that you specified and the time when the price changed. The price is valid within the time period that you specified; the response merely indicates the last time that the price changed.
    displayName: Describe Spot Price History
    body:
      application/json: DescribeSpotPriceHistoryRequest
    responses:
      200:
        body:
          application/json: DescribeSpotPriceHistoryResult
/{DescribeStaleSecurityGroups}:
  uriParameters:
    DescribeStaleSecurityGroups?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: '[EC2-VPC only] Describes the stale security group rules for security
      groups in a specified VPC. Rules are stale when they reference a deleted security
      group in a peer VPC, or a security group in a peer VPC for which the VPC peering
      connection has been deleted.'
    displayName: Describe Stale Security Groups
    body:
      application/json: DescribeStaleSecurityGroupsRequest
    responses:
      200:
        body:
          application/json: DescribeStaleSecurityGroupsResult
/{DescribeSubnets}:
  uriParameters:
    DescribeSubnets?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your subnets. For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Subnets
    body:
      application/json: DescribeSubnetsRequest
    responses:
      200:
        body:
          application/json: DescribeSubnetsResult
/{DescribeTags}:
  uriParameters:
    DescribeTags?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of the tags for your EC2 resources. For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Tags
    body:
      application/json: DescribeTagsRequest
    responses:
      200:
        body:
          application/json: DescribeTagsResult
/{DescribeVolumeAttribute}:
  uriParameters:
    DescribeVolumeAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified attribute of the specified volume. You can specify only one attribute at a time. For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Volume Attribute
    body:
      application/json: DescribeVolumeAttributeRequest
    responses:
      200:
        body:
          application/json: DescribeVolumeAttributeResult
/{DescribeVolumeStatus}:
  uriParameters:
    DescribeVolumeStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Describes the status of the specified volumes. Volume status provides
      the result of the checks performed on your volumes to determine events that
      can impair the performance of your volumes. The performance of a volume can
      be affected if an issue occurs on the volume''s underlying host. If the volume''s
      underlying host experiences a power outage or system issue, after the system
      is restored, there could be data inconsistencies on the volume. Volume events
      notify you if this occurs. Volume actions notify you if any action needs to
      be taken in response to the event. The <code>DescribeVolumeStatus</code> operation
      provides the following information about the specified volumes:  <i>Status</i>:
      Reflects the current status of the volume. The possible values are <code>ok</code>,
      <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
      If all checks pass, the overall status of the volume is <code>ok</code>. If
      the check fails, the overall status is <code>impaired</code>. If the status
      is <code>insufficient-data</code>, then the checks may still be taking place
      on your volume at the time. We recommend that you retry the request. For more
      information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
      the Status of Your Volumes</a>.  <i>Events</i>: Reflect the cause of a volume
      status and may require you to take action. For example, if your volume returns
      an <code>impaired</code> status, then the volume event might be <code>potential-data-inconsistency</code>.
      This means that your volume has been affected by an issue with the underlying
      host, has all I/O operations disabled, and may have inconsistent data.  <i>Actions</i>:
      Reflect the actions you may have to take in response to an event. For example,
      if the status of the volume is <code>impaired</code> and the volume event shows
      <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
      This means that you may want to enable the I/O operations for the volume by
      calling the <a>EnableVolumeIO</a> action and then check the volume for data
      consistency. <note> Volume status is based on the volume status checks, and
      does not reflect the volume state. Therefore, volume status does not indicate
      volumes in the <code>error</code> state (for example, when a volume is incapable
      of accepting I/O.) </note>'
    displayName: Describe Volume Status
    body:
      application/json: DescribeVolumeStatusRequest
    responses:
      200:
        body:
          application/json: DescribeVolumeStatusResult
/{DescribeVolumes}:
  uriParameters:
    DescribeVolumes?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified EBS volumes. If you are describing a long list of volumes, you can paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve the remaining results. For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Describe Volumes
    body:
      application/json: DescribeVolumesRequest
    responses:
      200:
        body:
          application/json: DescribeVolumesResult
/{DescribeVpcAttribute}:
  uriParameters:
    DescribeVpcAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified attribute of the specified VPC. You can specify only one attribute at a time.
    displayName: Describe Vpc Attribute
    body:
      application/json: DescribeVpcAttributeRequest
    responses:
      200:
        body:
          application/json: DescribeVpcAttributeResult
/{DescribeVpcClassicLink}:
  uriParameters:
    DescribeVpcClassicLink?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the ClassicLink status of one or more VPCs.
    displayName: Describe Vpc Classic Link
    body:
      application/json: DescribeVpcClassicLinkRequest
    responses:
      200:
        body:
          application/json: DescribeVpcClassicLinkResult
/{DescribeVpcClassicLinkDnsSupport}:
  uriParameters:
    DescribeVpcClassicLinkDnsSupport?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the Amazon Elastic Compute Cloud User Guide.
    displayName: Describe Vpc Classic Link Dns Support
    body:
      application/json: DescribeVpcClassicLinkDnsSupportRequest
    responses:
      200:
        body:
          application/json: DescribeVpcClassicLinkDnsSupportResult
/{DescribeVpcEndpointServices}:
  uriParameters:
    DescribeVpcEndpointServices?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes all supported AWS services that can be specified when creating a VPC endpoint.
    displayName: Describe Vpc Endpoint Services
    body:
      application/json: DescribeVpcEndpointServicesRequest
    responses:
      200:
        body:
          application/json: DescribeVpcEndpointServicesResult
/{DescribeVpcEndpoints}:
  uriParameters:
    DescribeVpcEndpoints?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your VPC endpoints.
    displayName: Describe Vpc Endpoints
    body:
      application/json: DescribeVpcEndpointsRequest
    responses:
      200:
        body:
          application/json: DescribeVpcEndpointsResult
/{DescribeVpcPeeringConnections}:
  uriParameters:
    DescribeVpcPeeringConnections?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your VPC peering connections.
    displayName: Describe Vpc Peering Connections
    body:
      application/json: DescribeVpcPeeringConnectionsRequest
    responses:
      200:
        body:
          application/json: DescribeVpcPeeringConnectionsResult
/{DescribeVpcs}:
  uriParameters:
    DescribeVpcs?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your VPCs.
    displayName: Describe Vpcs
    body:
      application/json: DescribeVpcsRequest
    responses:
      200:
        body:
          application/json: DescribeVpcsResult
/{DescribeVpnConnections}:
  uriParameters:
    DescribeVpnConnections?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your VPN connections. For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Vpn Connections
    body:
      application/json: DescribeVpnConnectionsRequest
    responses:
      200:
        body:
          application/json: DescribeVpnConnectionsResult
/{DescribeVpnGateways}:
  uriParameters:
    DescribeVpnGateways?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes one or more of your virtual private gateways. For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Describe Vpn Gateways
    body:
      application/json: DescribeVpnGatewaysRequest
    responses:
      200:
        body:
          application/json: DescribeVpnGatewaysResult
/{DetachClassicLinkVpc}:
  uriParameters:
    DetachClassicLinkVpc?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has been unlinked, the VPC security groups are no longer associated with it. An instance is automatically unlinked from a VPC when it's stopped.
    displayName: Detach Classic Link Vpc
    body:
      application/json: DetachClassicLinkVpcRequest
    responses:
      200:
        body:
          application/json: DetachClassicLinkVpcResult
/{DetachInternetGateway}:
  uriParameters:
    DetachInternetGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Detaches an Internet gateway from a VPC, disabling connectivity between the Internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses.
    displayName: Detach Internet Gateway
    body:
      application/json: DetachInternetGatewayRequest
    responses:
      200:
        body:
          application/json: null
/{DetachNetworkInterface}:
  uriParameters:
    DetachNetworkInterface?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Detaches a network interface from an instance.
    displayName: Detach Network Interface
    body:
      application/json: DetachNetworkInterfaceRequest
    responses:
      200:
        body:
          application/json: null
/{DetachVolume}:
  uriParameters:
    DetachVolume?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Detaches an EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so can result in the volume becoming stuck in the <code>busy</code> state while detaching. If this happens, detachment can be delayed indefinitely until you unmount the volume, force detachment, reboot the instance, or all three. If an EBS volume is the root device of an instance, it can't be detached while the instance is running. To detach the root volume, stop the instance first. When a volume with an AWS Marketplace product code is detached from an instance, the product code is no longer associated with the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Detach Volume
    body:
      application/json: DetachVolumeRequest
    responses:
      200:
        body:
          application/json: VolumeAttachment
/{DetachVpnGateway}:
  uriParameters:
    DetachVpnGateway?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Detaches a virtual private gateway from a VPC. You do this if you're planning to turn off the VPC and not use it anymore. You can confirm a virtual private gateway has been completely detached from a VPC by describing the virtual private gateway (any attachments to the virtual private gateway are also described). You must wait for the attachment's state to switch to <code>detached</code> before you can delete the VPC or attach a different VPC to the virtual private gateway.
    displayName: Detach Vpn Gateway
    body:
      application/json: DetachVpnGatewayRequest
    responses:
      200:
        body:
          application/json: null
/{DisableVgwRoutePropagation}:
  uriParameters:
    DisableVgwRoutePropagation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC.
    displayName: Disable Vgw Route Propagation
    body:
      application/json: DisableVgwRoutePropagationRequest
    responses:
      200:
        body:
          application/json: null
/{DisableVpcClassicLink}:
  uriParameters:
    DisableVpcClassicLink?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has EC2-Classic instances linked to it.
    displayName: Disable Vpc Classic Link
    body:
      application/json: DisableVpcClassicLinkRequest
    responses:
      200:
        body:
          application/json: DisableVpcClassicLinkResult
/{DisableVpcClassicLinkDnsSupport}:
  uriParameters:
    DisableVpcClassicLinkDnsSupport?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to public IP addresses when addressed between a linked EC2-Classic instance and instances in the VPC to which it's linked. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the Amazon Elastic Compute Cloud User Guide.
    displayName: Disable Vpc Classic Link Dns Support
    body:
      application/json: DisableVpcClassicLinkDnsSupportRequest
    responses:
      200:
        body:
          application/json: DisableVpcClassicLinkDnsSupportResult
/{DisassociateAddress}:
  uriParameters:
    DisassociateAddress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disassociates an Elastic IP address from the instance or network interface it's associated with. An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error.
    displayName: Disassociate Address
    body:
      application/json: DisassociateAddressRequest
    responses:
      200:
        body:
          application/json: null
/{DisassociateRouteTable}:
  uriParameters:
    DisassociateRouteTable?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disassociates a subnet from a route table. After you perform this action, the subnet no longer uses the routes in the route table. Instead, it uses the routes in the VPC's main route table. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Disassociate Route Table
    body:
      application/json: DisassociateRouteTableRequest
    responses:
      200:
        body:
          application/json: null
/{EnableVgwRoutePropagation}:
  uriParameters:
    EnableVgwRoutePropagation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.
    displayName: Enable Vgw Route Propagation
    body:
      application/json: EnableVgwRoutePropagationRequest
    responses:
      200:
        body:
          application/json: null
/{EnableVolumeIO}:
  uriParameters:
    EnableVolumeIO?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent.
    displayName: Enable Volume I O
    body:
      application/json: EnableVolumeIORequest
    responses:
      200:
        body:
          application/json: null
/{EnableVpcClassicLink}:
  uriParameters:
    EnableVpcClassicLink?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled VPC to allow communication over private IP addresses. You cannot enable your VPC for ClassicLink if any of your VPC's route tables have existing routes for address ranges within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the Amazon Elastic Compute Cloud User Guide.
    displayName: Enable Vpc Classic Link
    body:
      application/json: EnableVpcClassicLinkRequest
    responses:
      200:
        body:
          application/json: EnableVpcClassicLinkResult
/{EnableVpcClassicLinkDnsSupport}:
  uriParameters:
    EnableVpcClassicLinkDnsSupport?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the Amazon Elastic Compute Cloud User Guide.
    displayName: Enable Vpc Classic Link Dns Support
    body:
      application/json: EnableVpcClassicLinkDnsSupportRequest
    responses:
      200:
        body:
          application/json: EnableVpcClassicLinkDnsSupportResult
/{GetConsoleOutput}:
  uriParameters:
    GetConsoleOutput?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Gets the console output for the specified instance. Instances do not have a physical monitor through which you can view their console output. They also lack physical controls that allow you to power up, reboot, or shut them down. To allow these actions, we provide them through the Amazon EC2 API and command line interface. Instance console output is buffered and posted shortly after instance boot, reboot, and termination. Amazon EC2 preserves the most recent 64 KB output which is available for at least one hour after the most recent post. For Linux instances, the instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a computer. This output is buffered because the instance produces it and then posts it to a store where the instance's owner can retrieve it. For Windows instances, the instance console output includes output from the EC2Config service.
    displayName: Get Console Output
    body:
      application/json: GetConsoleOutputRequest
    responses:
      200:
        body:
          application/json: GetConsoleOutputResult
/{GetConsoleScreenshot}:
  uriParameters:
    GetConsoleScreenshot?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Retrieve a JPG-format screenshot of a running instance to help with troubleshooting. The returned content is Base64-encoded.
    displayName: Get Console Screenshot
    body:
      application/json: GetConsoleScreenshotRequest
    responses:
      200:
        body:
          application/json: GetConsoleScreenshotResult
/{GetHostReservationPurchasePreview}:
  uriParameters:
    GetHostReservationPurchasePreview?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Preview a reservation purchase with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation. This is a preview of the <a>PurchaseHostReservation</a> action and does not result in the offering being purchased.
    displayName: Get Host Reservation Purchase Preview
    body:
      application/json: GetHostReservationPurchasePreviewRequest
    responses:
      200:
        body:
          application/json: GetHostReservationPurchasePreviewResult
/{GetPasswordData}:
  uriParameters:
    GetPasswordData?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Retrieves the encrypted administrator password for an instance running Windows. The Windows password is generated at boot if the <code>EC2Config</code> service plugin, <code>Ec2SetPassword</code>, is enabled. This usually only happens the first time an AMI is launched, and then <code>Ec2SetPassword</code> is automatically disabled. The password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code> is enabled before bundling. The password is encrypted using the key pair that you specified when you launched the instance. You must provide the corresponding key pair file. Password generation and encryption takes a few moments. We recommend that you wait up to 15 minutes after launching an instance before trying to retrieve the generated password.
    displayName: Get Password Data
    body:
      application/json: GetPasswordDataRequest
    responses:
      200:
        body:
          application/json: GetPasswordDataResult
/{ImportImage}:
  uriParameters:
    ImportImage?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI). For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing a VM as an Image Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
    displayName: Import Image
    body:
      application/json: ImportImageRequest
    responses:
      200:
        body:
          application/json: ImportImageResult
/{ImportInstance}:
  uriParameters:
    ImportInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an import instance task using metadata from the specified disk image. <code>ImportInstance</code> only supports single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>. For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.
    displayName: Import Instance
    body:
      application/json: ImportInstanceRequest
    responses:
      200:
        body:
          application/json: ImportInstanceResult
/{ImportKeyPair}:
  uriParameters:
    ImportKeyPair?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Imports the public key from an RSA key pair that you created with a third-party tool. Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create the key pair and give AWS just the public key. The private key is never transferred between you and AWS. For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Import Key Pair
    body:
      application/json: ImportKeyPairRequest
    responses:
      200:
        body:
          application/json: ImportKeyPairResult
/{ImportSnapshot}:
  uriParameters:
    ImportSnapshot?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Imports a disk into an EBS snapshot.
    displayName: Import Snapshot
    body:
      application/json: ImportSnapshotRequest
    responses:
      200:
        body:
          application/json: ImportSnapshotResult
/{ImportVolume}:
  uriParameters:
    ImportVolume?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an import volume task using metadata from the specified disk image.For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/importing-your-volumes-into-amazon-ebs.html">Importing Disks to Amazon EBS</a>. For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.
    displayName: Import Volume
    body:
      application/json: ImportVolumeRequest
    responses:
      200:
        body:
          application/json: ImportVolumeResult
/{ModifyHosts}:
  uriParameters:
    ModifyHosts?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled, AWS will place instances that you launch with a tenancy of <code>host</code>, but without targeting a specific host ID, onto any available Dedicated Host in your account which has auto-placement enabled. When auto-placement is disabled, you need to provide a host ID if you want the instance to launch onto a specific host. If no host ID is provided, the instance will be launched onto a suitable host which has auto-placement enabled.
    displayName: Modify Hosts
    body:
      application/json: ModifyHostsRequest
    responses:
      200:
        body:
          application/json: ModifyHostsResult
/{ModifyIdFormat}:
  uriParameters:
    ModifyIdFormat?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Modifies the ID format for the specified resource on a per-region
      basis. You can specify that resources should receive longer IDs (17-character
      IDs) when they are created. The following resource types support longer IDs:
      <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>.
      This setting applies to the IAM user who makes the request; it does not apply
      to the entire AWS account. By default, an IAM user defaults to the same settings
      as the root user. If you''re using this action as the root user, then these
      settings apply to the entire account, unless an IAM user explicitly overrides
      these settings for themselves. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
      IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.  Resources created
      with longer IDs are visible to all IAM roles and users, regardless of these
      settings and provided that they have permission to use the relevant <code>Describe</code>
      command for the resource type.'
    displayName: Modify Id Format
    body:
      application/json: ModifyIdFormatRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyIdentityIdFormat}:
  uriParameters:
    ModifyIdentityIdFormat?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Modifies the ID format of a resource for a specified IAM user, IAM
      role, or the root user for an account; or all IAM users, IAM roles, and the
      root user for an account. You can specify that resources should receive longer
      IDs (17-character IDs) when they are created.  The following resource types
      support longer IDs: <code>instance</code> | <code>reservation</code> | <code>snapshot</code>
      | <code>volume</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
      IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.  This setting
      applies to the principal specified in the request; it does not apply to the
      principal that makes the request.  Resources created with longer IDs are visible
      to all IAM roles and users, regardless of these settings and provided that they
      have permission to use the relevant <code>Describe</code> command for the resource
      type.'
    displayName: Modify Identity Id Format
    body:
      application/json: ModifyIdentityIdFormatRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyImageAttribute}:
  uriParameters:
    ModifyImageAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the specified attribute of the specified AMI. You can specify only one attribute at a time. <note> AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product code cannot be made public. </note> <note> The SriovNetSupport enhanced networking attribute cannot be changed using this command. Instead, enable SriovNetSupport on an instance and create an AMI from the instance. This will result in an image with SriovNetSupport enabled. </note>
    displayName: Modify Image Attribute
    body:
      application/json: ModifyImageAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyInstanceAttribute}:
  uriParameters:
    ModifyInstanceAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the specified attribute of the specified instance. You can specify only one attribute at a time. To modify some attributes, the instance must be stopped. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Modify Instance Attribute
    body:
      application/json: ModifyInstanceAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyInstancePlacement}:
  uriParameters:
    ModifyInstancePlacement?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Set the instance affinity value for a specific stopped instance and modify the instance tenancy setting. Instance affinity is disabled by default. When instance affinity is <code>host</code> and it is not associated with a specific Dedicated Host, the next time it is launched it will automatically be associated with the host it lands on. This relationship will persist if the instance is stopped/started, or rebooted. You can modify the host ID associated with a stopped instance. If a stopped instance has a new host ID association, the instance will target that host when restarted. You can modify the tenancy of a stopped instance with a tenancy of <code>host</code> or <code>dedicated</code>. Affinity, hostID, and tenancy are not required parameters, but at least one of them must be specified in the request. Affinity and tenancy can be modified in the same request, but tenancy can only be modified on instances that are stopped.
    displayName: Modify Instance Placement
    body:
      application/json: ModifyInstancePlacementRequest
    responses:
      200:
        body:
          application/json: ModifyInstancePlacementResult
/{ModifyNetworkInterfaceAttribute}:
  uriParameters:
    ModifyNetworkInterfaceAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the specified network interface attribute. You can specify only one attribute at a time.
    displayName: Modify Network Interface Attribute
    body:
      application/json: ModifyNetworkInterfaceAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyReservedInstances}:
  uriParameters:
    ModifyReservedInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be modified must be identical, except for Availability Zone, network platform, and instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
    displayName: Modify Reserved Instances
    body:
      application/json: ModifyReservedInstancesRequest
    responses:
      200:
        body:
          application/json: ModifyReservedInstancesResult
/{ModifySnapshotAttribute}:
  uriParameters:
    ModifySnapshotAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds or removes permission settings for the specified snapshot. You may add or remove specified AWS account IDs from a snapshot's list of create volume permissions, but you cannot do both in a single API call. If you need to both add and remove account IDs for a snapshot, you must use multiple API calls. <note> Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made public. Snapshots encrypted with your default CMK cannot be shared with other accounts. </note> For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Modify Snapshot Attribute
    body:
      application/json: ModifySnapshotAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ModifySpotFleetRequest}:
  uriParameters:
    ModifySpotFleetRequest?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the specified Spot fleet request. While the Spot fleet request is being modified, it is in the <code>modifying</code> state. To scale up your Spot fleet, increase its target capacity. The Spot fleet launches the additional Spot instances according to the allocation strategy for the Spot fleet request. If the allocation strategy is <code>lowestPrice</code>, the Spot fleet launches instances using the Spot pool with the lowest price. If the allocation strategy is <code>diversified</code>, the Spot fleet distributes the instances across the Spot pools. To scale down your Spot fleet, decrease its target capacity. First, the Spot fleet cancels any open bids that exceed the new target capacity. You can request that the Spot fleet terminate Spot instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the Spot fleet terminates the instances with the highest price per unit. If the allocation strategy is <code>diversified</code>, the Spot fleet terminates instances across the Spot pools. Alternatively, you can request that the Spot fleet keep the fleet at its current size, but not replace any Spot instances that are interrupted or that you terminate manually.
    displayName: Modify Spot Fleet Request
    body:
      application/json: ModifySpotFleetRequestRequest
    responses:
      200:
        body:
          application/json: ModifySpotFleetRequestResponse
/{ModifySubnetAttribute}:
  uriParameters:
    ModifySubnetAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies a subnet attribute.
    displayName: Modify Subnet Attribute
    body:
      application/json: ModifySubnetAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyVolumeAttribute}:
  uriParameters:
    ModifyVolumeAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies a volume attribute. By default, all I/O operations for the volume are suspended when the data on the volume is determined to be potentially inconsistent, to prevent undetectable, latent data corruption. The I/O access to the volume can be resumed by first enabling I/O access and then checking the data consistency on your volume. You can change the default behavior to resume I/O operations. We recommend that you change this only for boot volumes or for volumes that are stateless or disposable.
    displayName: Modify Volume Attribute
    body:
      application/json: ModifyVolumeAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyVpcAttribute}:
  uriParameters:
    ModifyVpcAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the specified attribute of the specified VPC.
    displayName: Modify Vpc Attribute
    body:
      application/json: ModifyVpcAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ModifyVpcEndpoint}:
  uriParameters:
    ModifyVpcEndpoint?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies attributes of a specified VPC endpoint. You can modify the policy associated with the endpoint, and you can add and remove route tables associated with the endpoint.
    displayName: Modify Vpc Endpoint
    body:
      application/json: ModifyVpcEndpointRequest
    responses:
      200:
        body:
          application/json: ModifyVpcEndpointResult
/{ModifyVpcPeeringConnectionOptions}:
  uriParameters:
    ModifyVpcPeeringConnectionOptions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Modifies the VPC peering connection options on one side of a VPC
      peering connection. You can do the following: <ul> <li> Enable/disable communication
      over the peering connection between an EC2-Classic instance that''s linked to
      your VPC (using ClassicLink) and instances in the peer VPC. </li> <li> Enable/disable
      communication over the peering connection between instances in your VPC and
      an EC2-Classic instance that''s linked to the peer VPC. </li> <li> Enable/disable
      a local VPC to resolve public DNS hostnames to private IP addresses when queried
      from instances in the peer VPC. </li> </ul> If the peered VPCs are in different
      accounts, each owner must initiate a separate request to modify the peering
      connection options, depending on whether their VPC was the requester or accepter
      for the VPC peering connection. If the peered VPCs are in the same account,
      you can modify the requester and accepter options in the same request. To confirm
      which VPC is the accepter and requester for a VPC peering connection, use the
      <a>DescribeVpcPeeringConnections</a> command.'
    displayName: Modify Vpc Peering Connection Options
    body:
      application/json: ModifyVpcPeeringConnectionOptionsRequest
    responses:
      200:
        body:
          application/json: ModifyVpcPeeringConnectionOptionsResult
/{MonitorInstances}:
  uriParameters:
    MonitorInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Enables monitoring for a running instance. For more information about monitoring instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Monitor Instances
    body:
      application/json: MonitorInstancesRequest
    responses:
      200:
        body:
          application/json: MonitorInstancesResult
/{MoveAddressToVpc}:
  uriParameters:
    MoveAddressToVpc?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Moves an Elastic IP address from the EC2-Classic platform to the
      EC2-VPC platform. The Elastic IP address must be allocated to your account for
      more than 24 hours, and it must not be associated with an instance. After the
      Elastic IP address is moved, it is no longer available for use in the EC2-Classic
      platform, unless you move it back using the <a>RestoreAddressToClassic</a> request.
      You cannot move an Elastic IP address that was originally allocated for use
      in the EC2-VPC platform to the EC2-Classic platform. '
    displayName: Move Address To Vpc
    body:
      application/json: MoveAddressToVpcRequest
    responses:
      200:
        body:
          application/json: MoveAddressToVpcResult
/{PurchaseHostReservation}:
  uriParameters:
    PurchaseHostReservation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Purchase a reservation with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation. This action results in the specified reservation being purchased and charged to your account.
    displayName: Purchase Host Reservation
    body:
      application/json: PurchaseHostReservationRequest
    responses:
      200:
        body:
          application/json: PurchaseHostReservationResult
/{PurchaseReservedInstancesOffering}:
  uriParameters:
    PurchaseReservedInstancesOffering?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Purchases a Reserved Instance for use with your account. With Reserved Instances, you obtain a capacity reservation for a certain instance configuration over a specified period of time and pay a lower hourly rate compared to On-Demand instance pricing. Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings that match your specifications. After you've purchased a Reserved Instance, you can check for your new Reserved Instance with <a>DescribeReservedInstances</a>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Purchase Reserved Instances Offering
    body:
      application/json: PurchaseReservedInstancesOfferingRequest
    responses:
      200:
        body:
          application/json: PurchaseReservedInstancesOfferingResult
/{PurchaseScheduledInstances}:
  uriParameters:
    PurchaseScheduledInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Purchases one or more Scheduled Instances with the specified schedule. Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a> to check for available schedules and obtain a purchase token. After you purchase a Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled time period. After you purchase a Scheduled Instance, you can't cancel, modify, or resell your purchase.
    displayName: Purchase Scheduled Instances
    body:
      application/json: PurchaseScheduledInstancesRequest
    responses:
      200:
        body:
          application/json: PurchaseScheduledInstancesResult
/{RebootInstances}:
  uriParameters:
    RebootInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Requests a reboot of one or more instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored. If an instance does not cleanly shut down within four minutes, Amazon EC2 performs a hard reboot. For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Reboot Instances
    body:
      application/json: RebootInstancesRequest
    responses:
      200:
        body:
          application/json: null
/{RegisterImage}:
  uriParameters:
    RegisterImage?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Registers an AMI. When you're creating an AMI, this is the final step you must complete before you can launch an instance from the AMI. For more information about creating AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. <note> For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI in a single request, so you don't have to register the AMI yourself. </note> You can also use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI from a snapshot of a root device volume. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_LaunchingInstanceFromSnapshot.html">Launching an Instance from a Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. <important> Some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise Server (SLES), use the EC2 <code>billingProduct</code> code associated with an AMI to verify subscription status for package updates. Creating an AMI from an EBS snapshot does not maintain this billing code, and subsequent instances launched from such an AMI will not be able to connect to package update infrastructure. Similarly, although you can create a Windows AMI from a snapshot, you can't successfully launch an instance from the AMI. To create Windows AMIs or to create AMIs for Linux operating systems that must retain AMI billing codes to work properly, see <a>CreateImage</a>. </important> If needed, you can deregister an AMI at any time. Any modifications you make to an AMI backed by an instance store volume invalidates its registration. If you make changes to an image, deregister the previous image and register the new image. <note> You can't register an image where a secondary (non-root) snapshot has AWS Marketplace product codes. </note>
    displayName: Register Image
    body:
      application/json: RegisterImageRequest
    responses:
      200:
        body:
          application/json: RegisterImageResult
/{RejectVpcPeeringConnection}:
  uriParameters:
    RejectVpcPeeringConnection?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Rejects a VPC peering connection request. The VPC peering connection must be in the <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a> request to view your outstanding VPC peering connection requests. To delete an active VPC peering connection, or to delete a VPC peering connection request that you initiated, use <a>DeleteVpcPeeringConnection</a>.
    displayName: Reject Vpc Peering Connection
    body:
      application/json: RejectVpcPeeringConnectionRequest
    responses:
      200:
        body:
          application/json: RejectVpcPeeringConnectionResult
/{ReleaseAddress}:
  uriParameters:
    ReleaseAddress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Releases the specified Elastic IP address. After releasing an Elastic IP address, it is released to the IP address pool and might be unavailable to you. Be sure to update your DNS records and any servers or devices that communicate with the address. If you attempt to release an Elastic IP address that you already released, you'll get an <code>AuthFailure</code> error if the address is already allocated to another AWS account. [EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates it from any instance that it's associated with. To disassociate an Elastic IP address without releasing it, use <a>DisassociateAddress</a>. [Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic IP address before you try to release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).
    displayName: Release Address
    body:
      application/json: ReleaseAddressRequest
    responses:
      200:
        body:
          application/json: null
/{ReleaseHosts}:
  uriParameters:
    ReleaseHosts?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand billing is stopped and the host goes into <code>released</code> state. The host ID of Dedicated Hosts that have been released can no longer be specified in another request, e.g., ModifyHosts. You must stop or terminate all instances on a host before it can be released. When Dedicated Hosts are released, it make take some time for them to stop counting toward your limit and you may receive capacity errors when trying to allocate new Dedicated hosts. Try waiting a few minutes, and then try again. Released hosts will still appear in a <a>DescribeHosts</a> response.
    displayName: Release Hosts
    body:
      application/json: ReleaseHostsRequest
    responses:
      200:
        body:
          application/json: ReleaseHostsResult
/{ReplaceNetworkAclAssociation}:
  uriParameters:
    ReplaceNetworkAclAssociation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Changes which network ACL a subnet is associated with. By default when you create a subnet, it's automatically associated with the default network ACL. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Replace Network Acl Association
    body:
      application/json: ReplaceNetworkAclAssociationRequest
    responses:
      200:
        body:
          application/json: ReplaceNetworkAclAssociationResult
/{ReplaceNetworkAclEntry}:
  uriParameters:
    ReplaceNetworkAclEntry?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Replaces an entry (rule) in a network ACL. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Replace Network Acl Entry
    body:
      application/json: ReplaceNetworkAclEntryRequest
    responses:
      200:
        body:
          application/json: null
/{ReplaceRoute}:
  uriParameters:
    ReplaceRoute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Replaces an existing route within a route table in a VPC. You must
      provide only one of the following: Internet gateway or virtual private gateway,
      NAT instance, NAT gateway, VPC peering connection, or network interface. For
      more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
      Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
    displayName: Replace Route
    body:
      application/json: ReplaceRouteRequest
    responses:
      200:
        body:
          application/json: null
/{ReplaceRouteTableAssociation}:
  uriParameters:
    ReplaceRouteTableAssociation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Changes the route table associated with a given subnet in a VPC. After the operation completes, the subnet uses the routes in the new route table it's associated with. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. You can also use ReplaceRouteTableAssociation to change which table is the main route table in the VPC. You just specify the main route table's association ID and the route table to be the new main route table.
    displayName: Replace Route Table Association
    body:
      application/json: ReplaceRouteTableAssociationRequest
    responses:
      200:
        body:
          application/json: ReplaceRouteTableAssociationResult
/{ReportInstanceStatus}:
  uriParameters:
    ReportInstanceStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Submits feedback about the status of an instance. The instance must be in the <code>running</code> state. If your experience with the instance differs from the instance status returned by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience with the instance. Amazon EC2 collects this information to improve the accuracy of status checks. Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.
    displayName: Report Instance Status
    body:
      application/json: ReportInstanceStatusRequest
    responses:
      200:
        body:
          application/json: null
/{RequestSpotFleet}:
  uriParameters:
    RequestSpotFleet?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a Spot fleet request. You can submit a single request that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet. By default, the Spot fleet requests Spot instances in the Spot pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload. Alternatively, you can specify that the Spot fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot instances in your Spot fleet are in different Spot pools, you can improve the availability of your fleet. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot Fleet Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Request Spot Fleet
    body:
      application/json: RequestSpotFleetRequest
    responses:
      200:
        body:
          application/json: RequestSpotFleetResponse
/{RequestSpotInstances}:
  uriParameters:
    RequestSpotInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a Spot instance request. Spot instances are instances that Amazon EC2 launches when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically sets the Spot price based on available Spot Instance capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Request Spot Instances
    body:
      application/json: RequestSpotInstancesRequest
    responses:
      200:
        body:
          application/json: RequestSpotInstancesResult
/{ResetImageAttribute}:
  uriParameters:
    ResetImageAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Resets an attribute of an AMI to its default value. <note> The productCodes attribute can't be reset. </note>
    displayName: Reset Image Attribute
    body:
      application/json: ResetImageAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ResetInstanceAttribute}:
  uriParameters:
    ResetInstanceAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Resets an attribute of an instance to its default value. To reset the <code>kernel</code> or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>, the instance can be either running or stopped. The <code>sourceDestCheck</code> attribute controls whether source/destination checking is enabled. The default value is <code>true</code>, which means checking is enabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    displayName: Reset Instance Attribute
    body:
      application/json: ResetInstanceAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ResetNetworkInterfaceAttribute}:
  uriParameters:
    ResetNetworkInterfaceAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Resets a network interface attribute. You can specify only one attribute at a time.
    displayName: Reset Network Interface Attribute
    body:
      application/json: ResetNetworkInterfaceAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{ResetSnapshotAttribute}:
  uriParameters:
    ResetSnapshotAttribute?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Resets permission settings for the specified snapshot. For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Reset Snapshot Attribute
    body:
      application/json: ResetSnapshotAttributeRequest
    responses:
      200:
        body:
          application/json: null
/{RestoreAddressToClassic}:
  uriParameters:
    RestoreAddressToClassic?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Restores an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform. You cannot move an Elastic IP address that was originally allocated for use in EC2-VPC. The Elastic IP address must not be associated with an instance or network interface.
    displayName: Restore Address To Classic
    body:
      application/json: RestoreAddressToClassicRequest
    responses:
      200:
        body:
          application/json: RestoreAddressToClassicResult
/{RevokeSecurityGroupEgress}:
  uriParameters:
    RevokeSecurityGroupEgress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: '[EC2-VPC only] Removes one or more egress rules from a security
      group for EC2-VPC. This action doesn''t apply to security groups for use in
      EC2-Classic. The values that you specify in the revoke request (for example,
      ports) must match the existing rule''s values for the rule to be revoked. Each
      rule consists of the protocol and the CIDR range or source security group. For
      the TCP and UDP protocols, you must also specify the destination port or range
      of ports. For the ICMP protocol, you must also specify the ICMP type and code.
      Rule changes are propagated to instances within the security group as quickly
      as possible. However, a small delay might occur.'
    displayName: Revoke Security Group Egress
    body:
      application/json: RevokeSecurityGroupEgressRequest
    responses:
      200:
        body:
          application/json: null
/{RevokeSecurityGroupIngress}:
  uriParameters:
    RevokeSecurityGroupIngress?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Removes one or more ingress rules from a security group. The values that you specify in the revoke request (for example, ports) must match the existing rule's values for the rule to be removed. Each rule consists of the protocol and the CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.
    displayName: Revoke Security Group Ingress
    body:
      application/json: RevokeSecurityGroupIngressRequest
    responses:
      200:
        body:
          application/json: null
/{RunInstances}:
  uriParameters:
    RunInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Launches the specified number of instances using an AMI for which you have permissions. When you launch an instance, it enters the <code>pending</code> state. After the instance is ready for you, it enters the <code>running</code> state. To check the state of your instance, call <a>DescribeInstances</a>. To ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances. To tag your instance, ensure that it is <code>running</code> as <a>CreateTags</a> requires a resource ID. For more information about tagging, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a>. If you don't specify a security group when launching an instance, Amazon EC2 uses the default security group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. [EC2-VPC only accounts] If you don't specify a subnet in the request, we choose a default subnet from your default VPC for you. [EC2-Classic accounts] If you're launching into EC2-Classic and you don't specify an Availability Zone, we choose one for you. Linux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. You can provide optional user data when launching an instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">Instance Metadata</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. If any of the AMIs have a product code attached for which the user has not subscribed, <code>RunInstances</code> fails. Some instance types can only be launched into a VPC. If you do not have a default VPC, or if you do not specify a subnet ID in the request, <code>RunInstances</code> fails. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance Types Available Only in a VPC</a>. For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What To Do If An Instance Immediately Terminates</a>, and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Run Instances
    body:
      application/json: RunInstancesRequest
    responses:
      200:
        body:
          application/json: Reservation
/{RunScheduledInstances}:
  uriParameters:
    RunScheduledInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Launches the specified Scheduled Instances. Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier using <a>PurchaseScheduledInstances</a>. You must launch a Scheduled Instance during its scheduled time period. You can't stop or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate a Scheduled Instance before the current scheduled time period ends, you can launch it again after a few minutes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Run Scheduled Instances
    body:
      application/json: RunScheduledInstancesRequest
    responses:
      200:
        body:
          application/json: RunScheduledInstancesResult
/{StartInstances}:
  uriParameters:
    StartInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Starts an Amazon EBS-backed AMI that you've previously stopped. Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for hourly instance usage. However, your root partition Amazon EBS volume remains, continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Each time you transition an instance from stopped to started, Amazon EC2 charges a full instance hour, even if transitions happen multiple times within a single hour. Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM. Performing this operation on an instance that uses an instance store as its root device returns an error. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Start Instances
    body:
      application/json: StartInstancesRequest
    responses:
      200:
        body:
          application/json: StartInstancesResult
/{StopInstances}:
  uriParameters:
    StopInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Stops an Amazon EBS-backed instance. We don't charge hourly usage for a stopped instance, or data transfer fees; however, your root partition Amazon EBS volume remains, continues to persist your data, and you are charged for Amazon EBS volume usage. Each time you transition an instance from stopped to started, Amazon EC2 charges a full instance hour, even if transitions happen multiple times within a single hour. You can't start or stop Spot instances, and you can't stop instance store-backed instances. When you stop an instance, we shut it down. You can restart your instance at any time. Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM. Stopping an instance is different to rebooting or terminating it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between rebooting, stopping, and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. When you stop an instance, we attempt to shut it down forcibly after a short while. If your instance appears stuck in the stopping state after a period of time, there may be an issue with the underlying host computer. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Stop Instances
    body:
      application/json: StopInstancesRequest
    responses:
      200:
        body:
          application/json: StopInstancesResult
/{TerminateInstances}:
  uriParameters:
    TerminateInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Shuts down one or more instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds. Terminated instances remain visible after termination (for approximately one hour). By default, Amazon EC2 deletes all EBS volumes that were attached when the instance launched. Volumes attached after instance launch continue running. You can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, any attached EBS volumes with the <code>DeleteOnTermination</code> block device mapping parameter set to <code>true</code> are automatically deleted. For more information about the differences between stopping and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Terminate Instances
    body:
      application/json: TerminateInstancesRequest
    responses:
      200:
        body:
          application/json: TerminateInstancesResult
/{UnassignPrivateIpAddresses}:
  uriParameters:
    UnassignPrivateIpAddresses?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Unassigns one or more secondary private IP addresses from a network interface.
    displayName: Unassign Private Ip Addresses
    body:
      application/json: UnassignPrivateIpAddressesRequest
    responses:
      200:
        body:
          application/json: null
/{UnmonitorInstances}:
  uriParameters:
    UnmonitorInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disables monitoring for a running instance. For more information about monitoring instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    displayName: Unmonitor Instances
    body:
      application/json: UnmonitorInstancesRequest
    responses:
      200:
        body:
          application/json: UnmonitorInstancesResult
