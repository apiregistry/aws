#%RAML 1.0
title: AWS Key Management Service
version: '2014-11-01'
description: '  AWS Key Management Service (AWS KMS) is an encryption and key management
  web service. This guide describes the AWS KMS operations that you can call programmatically.
  For general information about AWS KMS, see the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/">AWS
  Key Management Service Developer Guide</a>. <note>  AWS provides SDKs that consist
  of libraries and sample code for various programming languages and platforms (Java,
  Ruby, .Net, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic
  access to AWS KMS and other AWS services. For example, the SDKs take care of tasks
  such as signing requests (see below), managing errors, and retrying requests automatically.
  For more information about the AWS SDKs, including how to download and install them,
  see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>. </note>  We
  recommend that you use the AWS SDKs to make programmatic API calls to AWS KMS.  Clients
  must support TLS (Transport Layer Security) 1.0. We recommend TLS 1.2. Clients must
  also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral
  Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern
  systems such as Java 7 and later support these modes.   <b>Signing Requests</b>   Requests
  must be signed by using an access key ID and a secret access key. We strongly recommend
  that you <i>do not</i> use your AWS account (root) access key ID and secret key
  for everyday work with AWS KMS. Instead, use the access key ID and secret access
  key for an IAM user, or you can use the AWS Security Token Service to generate temporary
  security credentials that you can use to sign requests.  All AWS KMS operations
  require <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
  Version 4</a>.   <b>Logging API Requests</b>   AWS KMS supports AWS CloudTrail,
  a service that logs AWS API calls and related events for your AWS account and delivers
  them to an Amazon S3 bucket that you specify. By using the information collected
  by CloudTrail, you can determine what requests were made to AWS KMS, who made the
  request, when it was made, and so on. To learn more about CloudTrail, including
  how to turn it on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/">AWS
  CloudTrail User Guide</a>.   <b>Additional Resources</b>   For more information
  about credentials and request signing, see the following: <ul> <li>   <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS
  Security Credentials</a> - This topic provides general information about the types
  of credentials used for accessing AWS. </li> <li>   <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">Temporary
  Security Credentials</a> - This section of the <i>IAM User Guide</i> describes how
  to create and use temporary security credentials. </li> <li>   <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
  Version 4 Signing Process</a> - This set of topics walks you through the process
  of signing a request using an access key ID and a secret access key. </li> </ul>   <b>Commonly
  Used APIs</b>   Of the APIs discussed in this guide, the following will prove the
  most useful for most applications. You will likely perform actions other than these,
  such as creating keys and assigning policies, by using the console. <ul> <li>   <a>Encrypt</a>  </li>
  <li>   <a>Decrypt</a>  </li> <li>   <a>GenerateDataKey</a>  </li> <li>   <a>GenerateDataKeyWithoutPlaintext</a>  </li>
  </ul>'
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AWSAccountIdType:
    type: string
  AlgorithmSpec:
    type: string
    enum:
    - RSAES_PKCS1_V1_5
    - RSAES_OAEP_SHA_1
    - RSAES_OAEP_SHA_256
  AliasList:
    type: array
    items:
      type: AliasListEntry
  AliasNameType:
    type: string
    pattern: ^[a-zA-Z0-9:/_-]+$
    minLength: 1
    maxLength: 256
  ArnType:
    type: string
    minLength: 20
    maxLength: 2048
  BooleanType:
    type: boolean
  CiphertextType:
    type: file
    minLength: 1
    maxLength: 6144
  DataKeySpec:
    type: string
    enum:
    - AES_256
    - AES_128
  DateType:
    type: datetime
  DescriptionType:
    type: string
    minLength: 0
    maxLength: 8192
  EncryptionContextKey:
    type: string
  EncryptionContextValue:
    type: string
  ExpirationModelType:
    type: string
    enum:
    - KEY_MATERIAL_EXPIRES
    - KEY_MATERIAL_DOES_NOT_EXPIRE
  GrantIdType:
    type: string
    minLength: 1
    maxLength: 128
  GrantList:
    type: array
    items:
      type: GrantListEntry
  GrantNameType:
    type: string
    pattern: ^[a-zA-Z0-9:/_-]+$
    minLength: 1
    maxLength: 256
  GrantOperation:
    type: string
    enum:
    - Decrypt
    - Encrypt
    - GenerateDataKey
    - GenerateDataKeyWithoutPlaintext
    - ReEncryptFrom
    - ReEncryptTo
    - CreateGrant
    - RetireGrant
    - DescribeKey
  GrantOperationList:
    type: array
    items:
      type: GrantOperation
  GrantTokenList:
    type: array
    minItems: 0
    maxItems: 10
    items:
      type: GrantTokenType
  GrantTokenType:
    type: string
    minLength: 1
    maxLength: 8192
  KeyIdType:
    type: string
    minLength: 1
    maxLength: 256
  KeyList:
    type: array
    items:
      type: KeyListEntry
  KeyState:
    type: string
    enum:
    - Enabled
    - Disabled
    - PendingDeletion
    - PendingImport
  KeyUsageType:
    type: string
    enum:
    - ENCRYPT_DECRYPT
  LimitType:
    type: integer
    format: int
    minimum: 1
    maximum: 1000
  MarkerType:
    type: string
    pattern: '[\u0020-\u00FF]*'
    minLength: 1
    maxLength: 320
  NumberOfBytesType:
    type: integer
    format: int
    minimum: 1
    maximum: 1024
  OriginType:
    type: string
    enum:
    - AWS_KMS
    - EXTERNAL
  PendingWindowInDaysType:
    type: integer
    format: int
    minimum: 1
    maximum: 365
  PlaintextType:
    type: file
    minLength: 1
    maxLength: 4096
  PolicyNameList:
    type: array
    items:
      type: PolicyNameType
  PolicyNameType:
    type: string
    pattern: '[\w]+'
    minLength: 1
    maxLength: 128
  PolicyType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 131072
  PrincipalIdType:
    type: string
    minLength: 1
    maxLength: 256
  WrappingKeySpec:
    type: string
    enum:
    - RSA_2048
  AliasListEntry:
    type: object
    properties:
      AliasName?:
        type: AliasNameType
        description: <p>String that contains the alias.</p>
      AliasArn?:
        type: ArnType
        description: <p>String that contains the key ARN.</p>
      TargetKeyId?:
        type: KeyIdType
        description: <p>String that contains the key identifier pointed to by the alias.</p>
    description: <p>Contains information about an alias.</p>
  CancelKeyDeletionRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The unique identifier for the customer master key (CMK) for
          which to cancel deletion.</p> <p>To specify this value, use the unique key
          ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li>
          <p>Unique key ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>Key
          ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p>
          </li> </ul> <p>To obtain the unique key ID and key ARN for a given CMK,
          use <a>ListKeys</a> or <a>DescribeKey</a>.</p>'
  CancelKeyDeletionResponse:
    type: object
    properties:
      KeyId?:
        type: KeyIdType
        description: <p>The unique identifier of the master key for which deletion is canceled.</p>
  CreateAliasRequest:
    type: object
    properties:
      AliasName:
        type: AliasNameType
        description: <p>String that contains the display name. The name must start with the word "alias" followed by a forward slash (alias/). Aliases that begin with "alias/AWS" are reserved.</p>
      TargetKeyId:
        type: KeyIdType
        description: <p>An identifier of the key for which you are creating the alias. This value cannot be another alias but can be a globally unique identifier or a fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
  CreateGrantRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The unique identifier for the customer master key (CMK) that
          the grant applies to.</p> <p>To specify this value, use the globally unique
          key ID or the Amazon Resource Name (ARN) of the key. Examples:</p> <ul>
          <li> <p>Globally unique key ID: 12345678-1234-1234-1234-123456789012</p>
          </li> <li> <p>Key ARN: arn:aws:kms:us-west-2:123456789012:key/12345678-1234-1234-1234-123456789012</p>
          </li> </ul>'
      GranteePrincipal:
        type: PrincipalIdType
        description: <p>The principal that is given permission to perform the operations that the grant permits.</p> <p>To specify the principal, use the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts (root), IAM users, federated users, and assumed role users. For examples of the ARN syntax to use for specifying a principal, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>AWS General Reference</i>.</p>
      RetiringPrincipal?:
        type: PrincipalIdType
        description: <p>The principal that is given permission to retire the grant by using <a>RetireGrant</a> operation.</p> <p>To specify the principal, use the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts (root), IAM users, federated users, and assumed role users. For examples of the ARN syntax to use for specifying a principal, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>AWS General Reference</i>.</p>
      Operations?:
        type: GrantOperationList
        description: <p>A list of operations that the grant permits. The list can contain any combination of one or more of the following values:</p> <ul> <li> <p> <a>Decrypt</a> </p> </li> <li> <p> <a>Encrypt</a> </p> </li> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p> <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_ReEncrypt.html">ReEncryptFrom</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_ReEncrypt.html">ReEncryptTo</a> </p> </li> <li> <p> <a>CreateGrant</a> </p> </li> <li> <p> <a>RetireGrant</a> </p> </li> <li> <p> <a>DescribeKey</a> </p> </li> </ul>
      Constraints?:
        type: GrantConstraints
        description: <p>The conditions under which the operations permitted by the grant are allowed.</p> <p>You can use this value to allow the operations permitted by the grant only when a specified encryption context is present. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
      GrantTokens?:
        type: GrantTokenList
        description: <p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
      Name?:
        type: GrantNameType
        description: <p>A friendly name for identifying the grant. Use this value to prevent unintended creation of duplicate grants when retrying this request.</p> <p>When this value is absent, all <code>CreateGrant</code> requests result in a new grant with a unique <code>GrantId</code> even if all the supplied parameters are identical. This can result in unintended duplicates when you retry the <code>CreateGrant</code> request.</p> <p>When this value is present, you can retry a <code>CreateGrant</code> request with identical parameters; if the grant already exists, the original <code>GrantId</code> is returned without creating a new grant. Note that the returned grant token is unique with every <code>CreateGrant</code> request, even when a duplicate <code>GrantId</code> is returned. All grant tokens obtained in this way can be used interchangeably.</p>
  CreateGrantResponse:
    type: object
    properties:
      GrantToken?:
        type: GrantTokenType
        description: <p>The grant token.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
      GrantId?:
        type: GrantIdType
        description: <p>The unique identifier for the grant.</p> <p>You can use the <code>GrantId</code> in a subsequent <a>RetireGrant</a> or <a>RevokeGrant</a> operation.</p>
  CreateKeyRequest:
    type: object
    properties:
      Policy?:
        type: PolicyType
        description: <p>The key policy to attach to the CMK.</p> <p>If you specify a policy and do not set <code>BypassPolicyLockoutSafetyCheck</code> to true, the policy must meet the following criteria:</p> <ul> <li> <p>It must allow the principal making the <code>CreateKey</code> request to make a subsequent <a>PutKeyPolicy</a> request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </li> <li> <p>The principal(s) specified in the key policy must exist and be visible to AWS KMS. When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before specifying the new principal in a key policy because the new principal might not immediately be visible to AWS KMS. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes that I make are not always immediately visible</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <p>If you do not specify a policy, AWS KMS attaches a default key policy to the CMK. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default Key Policy</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>The policy size limit is 32 KiB (32768 bytes).</p>
      Description?:
        type: DescriptionType
        description: <p>A description of the CMK.</p> <p>Use a description that helps you decide whether the CMK is appropriate for a task.</p>
      KeyUsage?:
        type: KeyUsageType
        description: <p>The intended use of the CMK.</p> <p>You can use CMKs only for symmetric encryption and decryption.</p>
      Origin?:
        type: OriginType
        description: <p>The source of the CMK's key material.</p> <p>The default is <code>AWS_KMS</code>, which means AWS KMS creates the key material. When this parameter is set to <code>EXTERNAL</code>, the request creates a CMK without key material so that you can import key material from your existing key management infrastructure. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>The CMK's <code>Origin</code> is immutable and is set when the CMK is created.</p>
      BypassPolicyLockoutSafetyCheck?:
        type: BooleanType
        description: <p>A flag to indicate whether to bypass the key policy lockout safety check.</p> <important> <p>Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately.</p> <p>For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </important> <p>Use this parameter only when you include a policy in the request and you intend to prevent the principal making the request from making a subsequent <a>PutKeyPolicy</a> request on the CMK.</p> <p>The default value is false.</p>
  CreateKeyResponse:
    type: object
    properties:
      KeyMetadata?:
        type: KeyMetadata
        description: <p>Metadata associated with the CMK.</p>
  DecryptRequest:
    type: object
    properties:
      CiphertextBlob:
        type: CiphertextType
        description: <p>Ciphertext to be decrypted. The blob includes metadata.</p>
      EncryptionContext?:
        type: EncryptionContextType
        description: <p>The encryption context. If this was specified in the <a>Encrypt</a> function, it must be specified here or the decryption operation will fail. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a>.</p>
      GrantTokens?:
        type: GrantTokenList
        description: <p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
  DecryptResponse:
    type: object
    properties:
      KeyId?:
        type: KeyIdType
        description: <p>ARN of the key used to perform the decryption. This value is returned if no errors are encountered during the operation.</p>
      Plaintext?:
        type: PlaintextType
        description: <p>Decrypted plaintext data. This value may not be returned if the customer master key is not available or if you didn't have permission to use it.</p>
  DeleteAliasRequest:
    type: object
    properties:
      AliasName:
        type: AliasNameType
        description: <p>The alias to be deleted. The name must start with the word "alias" followed by a forward slash (alias/). Aliases that begin with "alias/AWS" are reserved.</p>
  DeleteImportedKeyMaterialRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The identifier of the CMK whose key material to delete. The
          CMK''s <code>Origin</code> must be <code>EXTERNAL</code>.</p> <p>A valid
          identifier is the unique key ID or the Amazon Resource Name (ARN) of the
          CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> </ul>'
  DescribeKeyRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias ARN Example - arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias Name Example - alias/MyAliasName</p> </li> </ul>
      GrantTokens?:
        type: GrantTokenList
        description: <p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
  DescribeKeyResponse:
    type: object
    properties:
      KeyMetadata?:
        type: KeyMetadata
        description: <p>Metadata associated with the key.</p>
  DisableKeyRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>A unique identifier for the CMK.</p> <p>Use the CMK''s unique
          identifier or its Amazon Resource Name (ARN). For example:</p> <ul> <li>
          <p>Unique ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>ARN:
          arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p>
          </li> </ul>'
  DisableKeyRotationRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
  EnableKeyRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
  EnableKeyRotationRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
  EncryptRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias ARN Example - arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias Name Example - alias/MyAliasName</p> </li> </ul>
      Plaintext:
        type: PlaintextType
        description: <p>Data to be encrypted.</p>
      EncryptionContext?:
        type: EncryptionContextType
        description: <p>Name-value pair that specifies the encryption context to be used for authenticated encryption. If used here, the same value must be supplied to the <code>Decrypt</code> API or decryption will fail. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a>.</p>
      GrantTokens?:
        type: GrantTokenList
        description: <p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
  EncryptResponse:
    type: object
    properties:
      CiphertextBlob?:
        type: CiphertextType
        description: <p>The encrypted plaintext. If you are using the CLI, the value is Base64 encoded. Otherwise, it is not encoded.</p>
      KeyId?:
        type: KeyIdType
        description: <p>The ID of the key used during encryption.</p>
  EncryptionContextType:
    type: object
    properties:
      //:
        type: EncryptionContextValue
  GenerateDataKeyRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The identifier of the CMK under which to generate and encrypt
          the data encryption key.</p> <p>A valid identifier is the unique key ID
          or the Amazon Resource Name (ARN) of the CMK, or the alias name or ARN of
          an alias that points to the CMK. Examples:</p> <ul> <li> <p>Unique key ID:
          <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>CMK
          ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li>
          <li> <p>Alias ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code>
          </p> </li> </ul>'
      EncryptionContext?:
        type: EncryptionContextType
        description: <p>A set of key-value pairs that represents additional authenticated data.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
      NumberOfBytes?:
        type: NumberOfBytesType
        description: <p>The length of the data encryption key in bytes. For example, use the value 64 to generate a 512-bit data key (64 bytes is 512 bits). For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use the <code>KeySpec</code> field instead of this one.</p>
      KeySpec?:
        type: DataKeySpec
        description: <p>The length of the data encryption key. Use <code>AES_128</code> to generate a 128-bit symmetric key, or <code>AES_256</code> to generate a 256-bit symmetric key.</p>
      GrantTokens?:
        type: GrantTokenList
        description: <p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
  GenerateDataKeyResponse:
    type: object
    properties:
      CiphertextBlob?:
        type: CiphertextType
        description: <p>The encrypted data encryption key.</p>
      Plaintext?:
        type: PlaintextType
        description: <p>The data encryption key. Use this data key for local encryption and decryption, then remove it from memory as soon as possible.</p>
      KeyId?:
        type: KeyIdType
        description: <p>The identifier of the CMK under which the data encryption key was generated and encrypted.</p>
  GenerateDataKeyWithoutPlaintextRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The identifier of the CMK under which to generate and encrypt
          the data encryption key.</p> <p>A valid identifier is the unique key ID
          or the Amazon Resource Name (ARN) of the CMK, or the alias name or ARN of
          an alias that points to the CMK. Examples:</p> <ul> <li> <p>Unique key ID:
          <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>CMK
          ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li>
          <li> <p>Alias ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code>
          </p> </li> </ul>'
      EncryptionContext?:
        type: EncryptionContextType
        description: <p>A set of key-value pairs that represents additional authenticated data.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
      KeySpec?:
        type: DataKeySpec
        description: <p>The length of the data encryption key. Use <code>AES_128</code> to generate a 128-bit symmetric key, or <code>AES_256</code> to generate a 256-bit symmetric key.</p>
      NumberOfBytes?:
        type: NumberOfBytesType
        description: <p>The length of the data encryption key in bytes. For example, use the value 64 to generate a 512-bit data key (64 bytes is 512 bits). For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use the <code>KeySpec</code> field instead of this one.</p>
      GrantTokens?:
        type: GrantTokenList
        description: <p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
  GenerateDataKeyWithoutPlaintextResponse:
    type: object
    properties:
      CiphertextBlob?:
        type: CiphertextType
        description: <p>The encrypted data encryption key.</p>
      KeyId?:
        type: KeyIdType
        description: <p>The identifier of the CMK under which the data encryption key was generated and encrypted.</p>
  GenerateRandomRequest:
    type: object
    properties:
      NumberOfBytes?:
        type: NumberOfBytesType
        description: <p>The length of the byte string.</p>
  GenerateRandomResponse:
    type: object
    properties:
      Plaintext?:
        type: PlaintextType
        description: <p>The unpredictable byte string.</p>
  GetKeyPolicyRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
      PolicyName:
        type: PolicyNameType
        description: <p>String that contains the name of the policy. Currently, this must be "default". Policy names can be discovered by calling <a>ListKeyPolicies</a>.</p>
  GetKeyPolicyResponse:
    type: object
    properties:
      Policy?:
        type: PolicyType
        description: <p>A policy document in JSON format.</p>
  GetKeyRotationStatusRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
  GetKeyRotationStatusResponse:
    type: object
    properties:
      KeyRotationEnabled?:
        type: BooleanType
        description: <p>A Boolean value that specifies whether key rotation is enabled.</p>
  GetParametersForImportRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The identifier of the CMK into which you will import key
          material. The CMK''s <code>Origin</code> must be <code>EXTERNAL</code>.</p>
          <p>A valid identifier is the unique key ID or the Amazon Resource Name (ARN)
          of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> </ul>'
      WrappingAlgorithm:
        type: AlgorithmSpec
        description: <p>The algorithm you will use to encrypt the key material before importing it with <a>ImportKeyMaterial</a>. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html">Encrypt the Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
      WrappingKeySpec:
        type: WrappingKeySpec
        description: <p>The type of wrapping key (public key) to return in the response. Only 2048-bit RSA public keys are supported.</p>
  GetParametersForImportResponse:
    type: object
    properties:
      KeyId?:
        type: KeyIdType
        description: <p>The identifier of the CMK to use in a subsequent <a>ImportKeyMaterial</a> request. This is the same CMK specified in the <code>GetParametersForImport</code> request.</p>
      ImportToken?:
        type: CiphertextType
        description: <p>The import token to send in a subsequent <a>ImportKeyMaterial</a> request.</p>
      PublicKey?:
        type: PlaintextType
        description: <p>The public key to use to encrypt the key material before importing it with <a>ImportKeyMaterial</a>.</p>
      ParametersValidTo?:
        type: DateType
        description: <p>The time at which the import token and public key are no longer valid. After this time, you cannot use them to make an <a>ImportKeyMaterial</a> request and you must send another <code>GetParametersForImport</code> request to retrieve new ones.</p>
  GrantConstraints:
    type: object
    properties:
      EncryptionContextSubset?:
        type: EncryptionContextType
        description: <p>Contains a list of key-value pairs, a subset of which must be present in the encryption context of a subsequent operation permitted by the grant. When a subsequent operation permitted by the grant includes an encryption context that matches this list or is a subset of this list, the grant allows the operation. Otherwise, the operation is not allowed.</p>
      EncryptionContextEquals?:
        type: EncryptionContextType
        description: <p>Contains a list of key-value pairs that must be present in the encryption context of a subsequent operation permitted by the grant. When a subsequent operation permitted by the grant includes an encryption context that matches this list, the grant allows the operation. Otherwise, the operation is not allowed.</p>
    description: <p>A structure for specifying the conditions under which the operations permitted by the grant are allowed.</p> <p>You can use this structure to allow the operations permitted by the grant only when a specified encryption context is present. For more information about encryption context, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
  GrantListEntry:
    type: object
    properties:
      KeyId?:
        type: KeyIdType
        description: <p>The unique identifier for the customer master key (CMK) to which the grant applies.</p>
      GrantId?:
        type: GrantIdType
        description: <p>The unique identifier for the grant.</p>
      Name?:
        type: GrantNameType
        description: <p>The friendly name that identifies the grant. If a name was provided in the <a>CreateGrant</a> request, that name is returned. Otherwise this value is null.</p>
      CreationDate?:
        type: DateType
        description: <p>The date and time when the grant was created.</p>
      GranteePrincipal?:
        type: PrincipalIdType
        description: <p>The principal that receives the grant's permissions.</p>
      RetiringPrincipal?:
        type: PrincipalIdType
        description: <p>The principal that can retire the grant.</p>
      IssuingAccount?:
        type: PrincipalIdType
        description: <p>The AWS account under which the grant was issued.</p>
      Operations?:
        type: GrantOperationList
        description: <p>The list of operations permitted by the grant.</p>
      Constraints?:
        type: GrantConstraints
        description: <p>The conditions under which the grant's operations are allowed.</p>
    description: <p>Contains information about an entry in a list of grants.</p>
  ImportKeyMaterialRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The identifier of the CMK to import the key material into.
          The CMK''s <code>Origin</code> must be <code>EXTERNAL</code>.</p> <p>A valid
          identifier is the unique key ID or the Amazon Resource Name (ARN) of the
          CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
          </p> </li> </ul>'
      ImportToken:
        type: CiphertextType
        description: <p>The import token that you received in the response to a previous <a>GetParametersForImport</a> request. It must be from the same response that contained the public key that you used to encrypt the key material.</p>
      EncryptedKeyMaterial:
        type: CiphertextType
        description: <p>The encrypted key material to import. It must be encrypted with the public key that you received in the response to a previous <a>GetParametersForImport</a> request, using the wrapping algorithm that you specified in that request.</p>
      ValidTo?:
        type: DateType
        description: <p>The time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. You must omit this parameter when the <code>ExpirationModel</code> parameter is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>. Otherwise it is required.</p>
      ExpirationModel?:
        type: ExpirationModelType
        description: <p>Specifies whether the key material expires. The default is <code>KEY_MATERIAL_EXPIRES</code>, in which case you must include the <code>ValidTo</code> parameter. When this parameter is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>, you must omit the <code>ValidTo</code> parameter.</p>
  ImportKeyMaterialResponse:
    type: object
  KeyListEntry:
    type: object
    properties:
      KeyId?:
        type: KeyIdType
        description: <p>Unique identifier of the key.</p>
      KeyArn?:
        type: ArnType
        description: <p>ARN of the key.</p>
    description: <p>Contains information about each entry in the key list.</p>
  KeyMetadata:
    type: object
    properties:
      AWSAccountId?:
        type: AWSAccountIdType
        description: <p>The twelve-digit account ID of the AWS account that owns the CMK.</p>
      KeyId:
        type: KeyIdType
        description: <p>The globally unique identifier for the CMK.</p>
      Arn?:
        type: ArnType
        description: <p>The Amazon Resource Name (ARN) of the CMK. For examples, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">AWS Key Management Service (AWS KMS)</a> in the Example ARNs section of the <i>AWS General Reference</i>.</p>
      CreationDate?:
        type: DateType
        description: <p>The date and time when the CMK was created.</p>
      Enabled?:
        type: BooleanType
        description: <p>Specifies whether the CMK is enabled. When <code>KeyState</code> is <code>Enabled</code> this value is true, otherwise it is false.</p>
      Description?:
        type: DescriptionType
        description: <p>The description of the CMK.</p>
      KeyUsage?:
        type: KeyUsageType
        description: <p>The cryptographic operations for which you can use the CMK. Currently the only allowed value is <code>ENCRYPT_DECRYPT</code>, which means you can use the CMK for the <a>Encrypt</a> and <a>Decrypt</a> operations.</p>
      KeyState?:
        type: KeyState
        description: <p>The state of the CMK.</p> <p>For more information about how key state affects the use of a CMK, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How Key State Affects the Use of a Customer Master Key</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
      DeletionDate?:
        type: DateType
        description: <p>The date and time after which AWS KMS deletes the CMK. This value is present only when <code>KeyState</code> is <code>PendingDeletion</code>, otherwise this value is omitted.</p>
      ValidTo?:
        type: DateType
        description: <p>The time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. This value is present only for CMKs whose <code>Origin</code> is <code>EXTERNAL</code> and whose <code>ExpirationModel</code> is <code>KEY_MATERIAL_EXPIRES</code>, otherwise this value is omitted.</p>
      Origin?:
        type: OriginType
        description: <p>The source of the CMK's key material. When this value is <code>AWS_KMS</code>, AWS KMS created the key material. When this value is <code>EXTERNAL</code>, the key material was imported from your existing key management infrastructure or the CMK lacks key material.</p>
      ExpirationModel?:
        type: ExpirationModelType
        description: <p>Specifies whether the CMK's key material expires. This value is present only when <code>Origin</code> is <code>EXTERNAL</code>, otherwise this value is omitted.</p>
    description: <p>Contains metadata about a customer master key (CMK).</p> <p>This data type is used as a response element for the <a>CreateKey</a> and <a>DescribeKey</a> operations.</p>
  ListAliasesRequest:
    type: object
    properties:
      Limit?:
        type: LimitType
        description: <p>When paginating results, specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>Truncated</code> element in the response is set to true.</p> <p>This value is optional. If you include a value, it must be between 1 and 100, inclusive. If you do not include a value, it defaults to 50.</p>
      Marker?:
        type: MarkerType
        description: <p>Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the response you just received.</p>
  ListAliasesResponse:
    type: object
    properties:
      Aliases?:
        type: AliasList
        description: <p>A list of key aliases in the user's account.</p>
      NextMarker?:
        type: MarkerType
        description: <p>When <code>Truncated</code> is true, this value is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
      Truncated?:
        type: BooleanType
        description: <p>A flag that indicates whether there are more items in the list. If your results were truncated, you can use the <code>Marker</code> parameter to make a subsequent pagination request to retrieve more items in the list.</p>
  ListGrantsRequest:
    type: object
    properties:
      Limit?:
        type: LimitType
        description: <p>When paginating results, specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>Truncated</code> element in the response is set to true.</p> <p>This value is optional. If you include a value, it must be between 1 and 100, inclusive. If you do not include a value, it defaults to 50.</p>
      Marker?:
        type: MarkerType
        description: <p>Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the response you just received.</p>
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
  ListGrantsResponse:
    type: object
    properties:
      Grants?:
        type: GrantList
        description: <p>A list of grants.</p>
      NextMarker?:
        type: MarkerType
        description: <p>When <code>Truncated</code> is true, this value is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
      Truncated?:
        type: BooleanType
        description: <p>A flag that indicates whether there are more items in the list. If your results were truncated, you can use the <code>Marker</code> parameter to make a subsequent pagination request to retrieve more items in the list.</p>
  ListKeyPoliciesRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias ARN Example - arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias Name Example - alias/MyAliasName</p> </li> </ul>
      Limit?:
        type: LimitType
        description: <p>When paginating results, specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>Truncated</code> element in the response is set to true.</p> <p>This value is optional. If you include a value, it must be between 1 and 1000, inclusive. If you do not include a value, it defaults to 100.</p> <p>Currently only 1 policy can be attached to a key.</p>
      Marker?:
        type: MarkerType
        description: <p>Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the response you just received.</p>
  ListKeyPoliciesResponse:
    type: object
    properties:
      PolicyNames?:
        type: PolicyNameList
        description: <p>A list of policy names. Currently, there is only one policy and it is named "Default".</p>
      NextMarker?:
        type: MarkerType
        description: <p>When <code>Truncated</code> is true, this value is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
      Truncated?:
        type: BooleanType
        description: <p>A flag that indicates whether there are more items in the list. If your results were truncated, you can use the <code>Marker</code> parameter to make a subsequent pagination request to retrieve more items in the list.</p>
  ListKeysRequest:
    type: object
    properties:
      Limit?:
        type: LimitType
        description: <p>When paginating results, specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>Truncated</code> element in the response is set to true.</p> <p>This value is optional. If you include a value, it must be between 1 and 1000, inclusive. If you do not include a value, it defaults to 100.</p>
      Marker?:
        type: MarkerType
        description: <p>Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the response you just received.</p>
  ListKeysResponse:
    type: object
    properties:
      Keys?:
        type: KeyList
        description: <p>A list of keys.</p>
      NextMarker?:
        type: MarkerType
        description: <p>When <code>Truncated</code> is true, this value is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
      Truncated?:
        type: BooleanType
        description: <p>A flag that indicates whether there are more items in the list. If your results were truncated, you can use the <code>Marker</code> parameter to make a subsequent pagination request to retrieve more items in the list.</p>
  ListRetirableGrantsRequest:
    type: object
    properties:
      Limit?:
        type: LimitType
        description: <p>When paginating results, specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>Truncated</code> element in the response is set to true.</p> <p>This value is optional. If you include a value, it must be between 1 and 100, inclusive. If you do not include a value, it defaults to 50.</p>
      Marker?:
        type: MarkerType
        description: <p>Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the response you just received.</p>
      RetiringPrincipal:
        type: PrincipalIdType
        description: <p>The retiring principal for which to list grants.</p> <p>To specify the retiring principal, use the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts (root), IAM users, federated users, and assumed role users. For examples of the ARN syntax for specifying a principal, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>Amazon Web Services General Reference</i>.</p>
  PutKeyPolicyRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>A unique identifier for the CMK.</p> <p>Use the CMK''s unique
          identifier or its Amazon Resource Name (ARN). For example:</p> <ul> <li>
          <p>Unique ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>ARN:
          arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p>
          </li> </ul>'
      PolicyName:
        type: PolicyNameType
        description: <p>The name of the key policy.</p> <p>This value must be <code>default</code>.</p>
      Policy:
        type: PolicyType
        description: <p>The key policy to attach to the CMK.</p> <p>If you do not set <code>BypassPolicyLockoutSafetyCheck</code> to true, the policy must meet the following criteria:</p> <ul> <li> <p>It must allow the principal making the <code>PutKeyPolicy</code> request to make a subsequent <code>PutKeyPolicy</code> request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </li> <li> <p>The principal(s) specified in the key policy must exist and be visible to AWS KMS. When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before specifying the new principal in a key policy because the new principal might not immediately be visible to AWS KMS. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes that I make are not always immediately visible</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <p>The policy size limit is 32 KiB (32768 bytes).</p>
      BypassPolicyLockoutSafetyCheck?:
        type: BooleanType
        description: <p>A flag to indicate whether to bypass the key policy lockout safety check.</p> <important> <p>Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately.</p> <p>For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </important> <p>Use this parameter only when you intend to prevent the principal making the request from making a subsequent <code>PutKeyPolicy</code> request on the CMK.</p> <p>The default value is false.</p>
  ReEncryptRequest:
    type: object
    properties:
      CiphertextBlob:
        type: CiphertextType
        description: <p>Ciphertext of the data to re-encrypt.</p>
      SourceEncryptionContext?:
        type: EncryptionContextType
        description: <p>Encryption context used to encrypt and decrypt the data specified in the <code>CiphertextBlob</code> parameter.</p>
      DestinationKeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key used to re-encrypt the data. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias ARN Example - arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias Name Example - alias/MyAliasName</p> </li> </ul>
      DestinationEncryptionContext?:
        type: EncryptionContextType
        description: <p>Encryption context to be used when the data is re-encrypted.</p>
      GrantTokens?:
        type: GrantTokenList
        description: <p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
  ReEncryptResponse:
    type: object
    properties:
      CiphertextBlob?:
        type: CiphertextType
        description: <p>The re-encrypted data. If you are using the CLI, the value is Base64 encoded. Otherwise, it is not encoded.</p>
      SourceKeyId?:
        type: KeyIdType
        description: <p>Unique identifier of the key used to originally encrypt the data.</p>
      KeyId?:
        type: KeyIdType
        description: <p>Unique identifier of the key used to re-encrypt the data.</p>
  RetireGrantRequest:
    type: object
    properties:
      GrantToken?:
        type: GrantTokenType
        description: <p>Token that identifies the grant to be retired.</p>
      KeyId?:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key associated with the grant. This value can be a globally unique identifier or a fully specified ARN of the key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
      GrantId?:
        type: GrantIdType
        description: <p>Unique identifier of the grant to be retired. The grant ID is returned by the <code>CreateGrant</code> function.</p> <ul> <li> <p>Grant ID Example - 0123456789012345678901234567890123456789012345678901234567890123</p> </li> </ul>
  RevokeGrantRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key associated with the grant. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
      GrantId:
        type: GrantIdType
        description: <p>Identifier of the grant to be revoked.</p>
  ScheduleKeyDeletionRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: '<p>The unique identifier for the customer master key (CMK) to
          delete.</p> <p>To specify this value, use the unique key ID or the Amazon
          Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID:
          1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p>
          </li> </ul> <p>To obtain the unique key ID and key ARN for a given CMK,
          use <a>ListKeys</a> or <a>DescribeKey</a>.</p>'
      PendingWindowInDays?:
        type: PendingWindowInDaysType
        description: <p>The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the customer master key (CMK).</p> <p>This value is optional. If you include a value, it must be between 7 and 30, inclusive. If you do not include a value, it defaults to 30.</p>
  ScheduleKeyDeletionResponse:
    type: object
    properties:
      KeyId?:
        type: KeyIdType
        description: <p>The unique identifier of the customer master key (CMK) for which deletion is scheduled.</p>
      DeletionDate?:
        type: DateType
        description: <p>The date and time after which AWS KMS deletes the customer master key (CMK).</p>
  UpdateAliasRequest:
    type: object
    properties:
      AliasName:
        type: AliasNameType
        description: <p>String that contains the name of the alias to be modified. The name must start with the word "alias" followed by a forward slash (alias/). Aliases that begin with "alias/aws" are reserved.</p>
      TargetKeyId:
        type: KeyIdType
        description: <p>Unique identifier of the customer master key to be mapped to the alias. This value can be a globally unique identifier or the fully specified ARN of a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul> <p>You can call <a>ListAliases</a> to verify that the alias is mapped to the correct <code>TargetKeyId</code>.</p>
  UpdateKeyDescriptionRequest:
    type: object
    properties:
      KeyId:
        type: KeyIdType
        description: <p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>
      Description:
        type: DescriptionType
        description: <p>New description for the key.</p>
/{CancelKeyDeletion}:
  uriParameters:
    CancelKeyDeletion?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Cancels the deletion of a customer master key (CMK). When this operation is successful, the CMK is set to the <code>Disabled</code> state. To enable a CMK, use <a>EnableKey</a>. For more information about scheduling and canceling deletion of a CMK, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting Customer Master Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.
    displayName: Cancel Key Deletion
    body:
      application/json: CancelKeyDeletionRequest
    responses:
      200:
        body:
          application/json: CancelKeyDeletionResponse
      400:
        description: NotFoundException
/{CreateAlias}:
  uriParameters:
    CreateAlias?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a display name for a customer master key. An alias can be used to identify a key and should be unique. The console enforces a one-to-one mapping between the alias and a key. An alias name can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-). An alias must start with the word "alias" followed by a forward slash (alias/). An alias that begins with "aws" after the forward slash (alias/aws...) is reserved by Amazon Web Services (AWS). The alias and the key it is mapped to must be in the same AWS account and the same region. To map an alias to a different key, call <a>UpdateAlias</a>.
    displayName: Create Alias
    body:
      application/json: CreateAliasRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: DependencyTimeoutException
/{CreateGrant}:
  uriParameters:
    CreateGrant?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds a grant to a key to specify who can use the key and under what conditions. Grants are alternate permission mechanisms to key policies. For more information about grants, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants</a> in the <i>AWS Key Management Service Developer Guide</i>.
    displayName: Create Grant
    body:
      application/json: CreateGrantRequest
    responses:
      200:
        body:
          application/json: CreateGrantResponse
      400:
        description: NotFoundException
/{CreateKey}:
  uriParameters:
    CreateKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Creates a customer master key (CMK). You can use a CMK to encrypt
      small amounts of data (4 KiB or less) directly, but CMKs are more commonly used
      to encrypt data encryption keys (DEKs), which are used to encrypt raw data.
      For more information about DEKs and the difference between CMKs and DEKs, see
      the following: <ul> <li> The <a>GenerateDataKey</a> operation </li> <li>  <a
      href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html">AWS
      Key Management Service Concepts</a> in the <i>AWS Key Management Service Developer
      Guide</i>  </li> </ul>'
    displayName: Create Key
    body:
      application/json: CreateKeyRequest
    responses:
      200:
        body:
          application/json: CreateKeyResponse
      400:
        description: MalformedPolicyDocumentException
/{Decrypt}:
  uriParameters:
    Decrypt?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Decrypts ciphertext. Ciphertext is plaintext that has been previously
      encrypted by using any of the following functions: <ul> <li>  <a>GenerateDataKey</a>  </li>
      <li>  <a>GenerateDataKeyWithoutPlaintext</a>  </li> <li>  <a>Encrypt</a>  </li>
      </ul> Note that if a caller has been granted access permissions to all keys
      (through, for example, IAM user policies that grant <code>Decrypt</code> permission
      on all resources), then ciphertext encrypted by using keys in other accounts
      where the key grants access to the caller can be decrypted. To remedy this,
      we recommend that you do not grant <code>Decrypt</code> access in an IAM user
      policy. Instead grant <code>Decrypt</code> access only in key policies. If you
      must grant <code>Decrypt</code> access in an IAM user policy, you should scope
      the resource to specific keys or to specific trusted accounts.'
    displayName: Decrypt
    body:
      application/json: DecryptRequest
    responses:
      200:
        body:
          application/json: DecryptResponse
      400:
        description: NotFoundException
/{DeleteAlias}:
  uriParameters:
    DeleteAlias?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified alias. To map an alias to a different key, call <a>UpdateAlias</a>.
    displayName: Delete Alias
    body:
      application/json: DeleteAliasRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: DependencyTimeoutException
/{DeleteImportedKeyMaterial}:
  uriParameters:
    DeleteImportedKeyMaterial?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes key material that you previously imported and makes the specified customer master key (CMK) unusable. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>. When the specified CMK is in the <code>PendingDeletion</code> state, this operation does not change the CMK's state. Otherwise, it changes the CMK's state to <code>PendingImport</code>. After you delete key material, you can use <a>ImportKeyMaterial</a> to reimport the same key material into the CMK.
    displayName: Delete Imported Key Material
    body:
      application/json: DeleteImportedKeyMaterialRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: InvalidArnException
/{DescribeKey}:
  uriParameters:
    DescribeKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Provides detailed information about the specified customer master key.
    displayName: Describe Key
    body:
      application/json: DescribeKeyRequest
    responses:
      200:
        body:
          application/json: DescribeKeyResponse
      400:
        description: NotFoundException
/{DisableKey}:
  uriParameters:
    DisableKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Sets the state of a customer master key (CMK) to disabled, thereby preventing its use for cryptographic operations. For more information about how key state affects the use of a CMK, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How Key State Affects the Use of a Customer Master Key</a> in the <i>AWS Key Management Service Developer Guide</i>.
    displayName: Disable Key
    body:
      application/json: DisableKeyRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
/{DisableKeyRotation}:
  uriParameters:
    DisableKeyRotation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Disables rotation of the specified key.
    displayName: Disable Key Rotation
    body:
      application/json: DisableKeyRotationRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
/{EnableKey}:
  uriParameters:
    EnableKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Marks a key as enabled, thereby permitting its use.
    displayName: Enable Key
    body:
      application/json: EnableKeyRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
/{EnableKeyRotation}:
  uriParameters:
    EnableKeyRotation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Enables rotation of the specified customer master key.
    displayName: Enable Key Rotation
    body:
      application/json: EnableKeyRotationRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
/{Encrypt}:
  uriParameters:
    Encrypt?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Encrypts plaintext into ciphertext by using a customer master key.
      The <code>Encrypt</code> function has two primary use cases: <ul> <li> You can
      encrypt up to 4 KB of arbitrary data such as an RSA key, a database password,
      or other sensitive customer information. </li> <li> If you are moving encrypted
      data from one region to another, you can use this API to encrypt in the new
      region the plaintext data key that was used to encrypt the data in the original
      region. This provides you with an encrypted copy of the data key that can be
      decrypted in the new region and used there to decrypt the encrypted data. </li>
      </ul> Unless you are moving encrypted data from one region to another, you don''t
      use this function to encrypt a generated data key within a region. You retrieve
      data keys already encrypted by calling the <a>GenerateDataKey</a> or <a>GenerateDataKeyWithoutPlaintext</a>
      function. Data keys don''t need to be encrypted again by calling <code>Encrypt</code>.
      If you want to encrypt data locally in your application, you can use the <code>GenerateDataKey</code>
      function to return a plaintext data encryption key and a copy of the key encrypted
      under the customer master key (CMK) of your choosing.'
    displayName: Encrypt
    body:
      application/json: EncryptRequest
    responses:
      200:
        body:
          application/json: EncryptResponse
      400:
        description: NotFoundException
/{GenerateDataKey}:
  uriParameters:
    GenerateDataKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Returns a data encryption key that you can use in your application
      to encrypt data locally. You must specify the customer master key (CMK) under
      which to generate the data key. You must also specify the length of the data
      key using either the <code>KeySpec</code> or <code>NumberOfBytes</code> field.
      You must specify one field or the other, but not both. For common key lengths
      (128-bit and 256-bit symmetric keys), we recommend that you use <code>KeySpec</code>.
      This operation returns a plaintext copy of the data key in the <code>Plaintext</code>
      field of the response, and an encrypted copy of the data key in the <code>CiphertextBlob</code>
      field. The data key is encrypted under the CMK specified in the <code>KeyId</code>
      field of the request. We recommend that you use the following pattern to encrypt
      data locally in your application: <ol> <li> Use this operation (<code>GenerateDataKey</code>)
      to retrieve a data encryption key. </li> <li> Use the plaintext data encryption
      key (returned in the <code>Plaintext</code> field of the response) to encrypt
      data locally, then erase the plaintext data key from memory. </li> <li> Store
      the encrypted data key (returned in the <code>CiphertextBlob</code> field of
      the response) alongside the locally encrypted data. </li> </ol> To decrypt data
      locally: <ol> <li> Use the <a>Decrypt</a> operation to decrypt the encrypted
      data key into a plaintext copy of the data key. </li> <li> Use the plaintext
      data key to decrypt data locally, then erase the plaintext data key from memory.
      </li> </ol> To return only an encrypted copy of the data key, use <a>GenerateDataKeyWithoutPlaintext</a>.
      To return an arbitrary unpredictable byte string, use <a>GenerateRandom</a>.
      If you use the optional <code>EncryptionContext</code> field, you must store
      at least enough information to be able to reconstruct the full encryption context
      when you later send the ciphertext to the <a>Decrypt</a> operation. It is a
      good practice to choose an encryption context that you can reconstruct on the
      fly to better secure the ciphertext. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption
      Context</a> in the <i>AWS Key Management Service Developer Guide</i>.'
    displayName: Generate Data Key
    body:
      application/json: GenerateDataKeyRequest
    responses:
      200:
        body:
          application/json: GenerateDataKeyResponse
      400:
        description: NotFoundException
/{GenerateDataKeyWithoutPlaintext}:
  uriParameters:
    GenerateDataKeyWithoutPlaintext?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns a data encryption key encrypted under a customer master key (CMK). This operation is identical to <a>GenerateDataKey</a> but returns only the encrypted copy of the data key. This operation is useful in a system that has multiple components with different degrees of trust. For example, consider a system that stores encrypted data in containers. Each container stores the encrypted data and an encrypted copy of the data key. One component of the system, called the <i>control plane</i>, creates new containers. When it creates a new container, it uses this operation (<code>GenerateDataKeyWithoutPlaintext</code>) to get an encrypted data key and then stores it in the container. Later, a different component of the system, called the <i>data plane</i>, puts encrypted data into the containers. To do this, it passes the encrypted data key to the <a>Decrypt</a> operation, then uses the returned plaintext data key to encrypt data, and finally stores the encrypted data in the container. In this system, the control plane never sees the plaintext data key.
    displayName: Generate Data Key Without Plaintext
    body:
      application/json: GenerateDataKeyWithoutPlaintextRequest
    responses:
      200:
        body:
          application/json: GenerateDataKeyWithoutPlaintextResponse
      400:
        description: NotFoundException
/{GenerateRandom}:
  uriParameters:
    GenerateRandom?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Generates an unpredictable byte string.
    displayName: Generate Random
    body:
      application/json: GenerateRandomRequest
    responses:
      200:
        body:
          application/json: GenerateRandomResponse
      400:
        description: DependencyTimeoutException
/{GetKeyPolicy}:
  uriParameters:
    GetKeyPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Retrieves a policy attached to the specified key.
    displayName: Get Key Policy
    body:
      application/json: GetKeyPolicyRequest
    responses:
      200:
        body:
          application/json: GetKeyPolicyResponse
      400:
        description: NotFoundException
/{GetKeyRotationStatus}:
  uriParameters:
    GetKeyRotationStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Retrieves a Boolean value that indicates whether key rotation is enabled for the specified key.
    displayName: Get Key Rotation Status
    body:
      application/json: GetKeyRotationStatusRequest
    responses:
      200:
        body:
          application/json: GetKeyRotationStatusResponse
      400:
        description: NotFoundException
/{GetParametersForImport}:
  uriParameters:
    GetParametersForImport?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns the items you need in order to import key material into AWS KMS from your existing key management infrastructure. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>. You must specify the key ID of the customer master key (CMK) into which you will import key material. This CMK's <code>Origin</code> must be <code>EXTERNAL</code>. You must also specify the wrapping algorithm and type of wrapping key (public key) that you will use to encrypt the key material. This operation returns a public key and an import token. Use the public key to encrypt the key material. Store the import token to send with a subsequent <a>ImportKeyMaterial</a> request. The public key and import token from the same response must be used together. These items are valid for 24 hours, after which they cannot be used for a subsequent <a>ImportKeyMaterial</a> request. To retrieve new ones, send another <code>GetParametersForImport</code> request.
    displayName: Get Parameters For Import
    body:
      application/json: GetParametersForImportRequest
    responses:
      200:
        body:
          application/json: GetParametersForImportResponse
      400:
        description: InvalidArnException
/{ImportKeyMaterial}:
  uriParameters:
    ImportKeyMaterial?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Imports key material into an AWS KMS customer master key (CMK) from your existing key management infrastructure. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>. You must specify the key ID of the CMK to import the key material into. This CMK's <code>Origin</code> must be <code>EXTERNAL</code>. You must also send an import token and the encrypted key material. Send the import token that you received in the same <a>GetParametersForImport</a> response that contained the public key that you used to encrypt the key material. You must also specify whether the key material expires and if so, when. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. To use the CMK again, you can reimport the same key material. If you set an expiration date, you can change it only by reimporting the same key material and specifying a new expiration date. When this operation is successful, the specified CMK's key state changes to <code>Enabled</code>, and you can use the CMK. After you successfully import key material into a CMK, you can reimport the same key material into that CMK, but you cannot import different key material.
    displayName: Import Key Material
    body:
      application/json: ImportKeyMaterialRequest
    responses:
      200:
        body:
          application/json: ImportKeyMaterialResponse
      400:
        description: InvalidArnException
/{ListAliases}:
  uriParameters:
    ListAliases?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Lists all of the key aliases in the account.
    displayName: List Aliases
    body:
      application/json: ListAliasesRequest
    responses:
      200:
        body:
          application/json: ListAliasesResponse
      400:
        description: DependencyTimeoutException
/{ListGrants}:
  uriParameters:
    ListGrants?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: List the grants for a specified key.
    displayName: List Grants
    body:
      application/json: ListGrantsRequest
    responses:
      200:
        body:
          application/json: ListGrantsResponse
      400:
        description: NotFoundException
/{ListKeyPolicies}:
  uriParameters:
    ListKeyPolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Retrieves a list of policies attached to a key.
    displayName: List Key Policies
    body:
      application/json: ListKeyPoliciesRequest
    responses:
      200:
        body:
          application/json: ListKeyPoliciesResponse
      400:
        description: NotFoundException
/{ListKeys}:
  uriParameters:
    ListKeys?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Lists the customer master keys.
    displayName: List Keys
    body:
      application/json: ListKeysRequest
    responses:
      200:
        body:
          application/json: ListKeysResponse
      400:
        description: DependencyTimeoutException
/{ListRetirableGrants}:
  uriParameters:
    ListRetirableGrants?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns a list of all grants for which the grant's <code>RetiringPrincipal</code> matches the one specified. A typical use is to list all grants that you are able to retire. To retire a grant, use <a>RetireGrant</a>.
    displayName: List Retirable Grants
    body:
      application/json: ListRetirableGrantsRequest
    responses:
      200:
        body:
          application/json: ListGrantsResponse
      400:
        description: DependencyTimeoutException
/{PutKeyPolicy}:
  uriParameters:
    PutKeyPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Attaches a key policy to the specified customer master key (CMK). For more information about key policies, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key Policies</a> in the <i>AWS Key Management Service Developer Guide</i>.
    displayName: Put Key Policy
    body:
      application/json: PutKeyPolicyRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
/{ReEncrypt}:
  uriParameters:
    ReEncrypt?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Encrypts data on the server side with a new customer master key without exposing the plaintext of the data on the client side. The data is first decrypted and then encrypted. This operation can also be used to change the encryption context of a ciphertext. Unlike other actions, <code>ReEncrypt</code> is authorized twice - once as <code>ReEncryptFrom</code> on the source key and once as <code>ReEncryptTo</code> on the destination key. We therefore recommend that you include the <code>"action":"kms:ReEncrypt*"</code> statement in your key policies to permit re-encryption from or to the key. The statement is included automatically when you authorize use of the key through the console but must be included manually when you set a policy by using the <a>PutKeyPolicy</a> function.
    displayName: Re Encrypt
    body:
      application/json: ReEncryptRequest
    responses:
      200:
        body:
          application/json: ReEncryptResponse
      400:
        description: NotFoundException
/{RetireGrant}:
  uriParameters:
    RetireGrant?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Retires a grant. You can retire a grant when you''re done using
      it to clean up. You should revoke a grant when you intend to actively deny operations
      that depend on it. The following are permitted to call this API: <ul> <li> The
      account that created the grant </li> <li> The <code>RetiringPrincipal</code>,
      if present </li> <li> The <code>GranteePrincipal</code>, if <code>RetireGrant</code>
      is a grantee operation </li> </ul> The grant to retire must be identified by
      its grant token or by a combination of the key ARN and the grant ID. A grant
      token is a unique variable-length base64-encoded string. A grant ID is a 64
      character unique identifier of a grant. Both are returned by the <code>CreateGrant</code>
      function.'
    displayName: Retire Grant
    body:
      application/json: RetireGrantRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: InvalidGrantTokenException
/{RevokeGrant}:
  uriParameters:
    RevokeGrant?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Revokes a grant. You can revoke a grant to actively deny operations that depend on it.
    displayName: Revoke Grant
    body:
      application/json: RevokeGrantRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
/{ScheduleKeyDeletion}:
  uriParameters:
    ScheduleKeyDeletion?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Schedules the deletion of a customer master key (CMK). You may provide a waiting period, specified in days, before deletion occurs. If you do not provide a waiting period, the default period of 30 days is used. When this operation is successful, the state of the CMK changes to <code>PendingDeletion</code>. Before the waiting period ends, you can use <a>CancelKeyDeletion</a> to cancel the deletion of the CMK. After the waiting period ends, AWS KMS deletes the CMK and all AWS KMS data associated with it, including all aliases that point to it. <important> Deleting a CMK is a destructive and potentially dangerous operation. When a CMK is deleted, all data that was encrypted under the CMK is rendered unrecoverable. To restrict the use of a CMK without deleting it, use <a>DisableKey</a>. </important> For more information about scheduling a CMK for deletion, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting Customer Master Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.
    displayName: Schedule Key Deletion
    body:
      application/json: ScheduleKeyDeletionRequest
    responses:
      200:
        body:
          application/json: ScheduleKeyDeletionResponse
      400:
        description: NotFoundException
/{UpdateAlias}:
  uriParameters:
    UpdateAlias?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Updates an alias to map it to a different key. An alias is not a property of a key. Therefore, an alias can be mapped to and unmapped from an existing key without changing the properties of the key. An alias name can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-). An alias must start with the word "alias" followed by a forward slash (alias/). An alias that begins with "aws" after the forward slash (alias/aws...) is reserved by Amazon Web Services (AWS). The alias and the key it is mapped to must be in the same AWS account and the same region.
    displayName: Update Alias
    body:
      application/json: UpdateAliasRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: DependencyTimeoutException
/{UpdateKeyDescription}:
  uriParameters:
    UpdateKeyDescription?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Updates the description of a key.
    displayName: Update Key Description
    body:
      application/json: UpdateKeyDescriptionRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
