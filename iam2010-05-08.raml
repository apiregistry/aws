#%RAML 1.0
title: AWS Identity and Access Management
version: '2010-05-08'
description: '  AWS Identity and Access Management (IAM) is a web service that you
  can use to manage users and user permissions under your AWS account. This guide
  provides descriptions of IAM actions that you can call programmatically. For general
  information about IAM, see <a href="http://aws.amazon.com/iam/">AWS Identity and
  Access Management (IAM)</a>. For the user guide for IAM, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/">Using
  IAM</a>.  <note>  AWS provides SDKs that consist of libraries and sample code for
  various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.).
  The SDKs provide a convenient way to create programmatic access to IAM and AWS.
  For example, the SDKs take care of tasks such as cryptographically signing requests
  (see below), managing errors, and retrying requests automatically. For information
  about the AWS SDKs, including how to download and install them, see the <a href="http://aws.amazon.com/tools/">Tools
  for Amazon Web Services</a> page.  </note>  We recommend that you use the AWS SDKs
  to make programmatic API calls to IAM. However, you can also use the IAM Query API
  to make direct calls to the IAM web service. To learn more about the IAM Query API,
  see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
  Query Requests</a> in the <i>Using IAM</i> guide. IAM supports GET and POST requests
  for all actions. That is, the API does not require you to use GET for some actions
  and POST for others. However, GET requests are subject to the limitation size of
  a URL. Therefore, for operations that require larger sizes, use a POST request.    <b>Signing
  Requests</b>   Requests must be signed using an access key ID and a secret access
  key. We strongly recommend that you do not use your AWS account access key ID and
  secret access key for everyday work with IAM. You can use the access key ID and
  secret access key for an IAM user or you can use the AWS Security Token Service
  to generate temporary security credentials and use those to sign requests.  To sign
  requests, we recommend that you use <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
  Version 4</a>. If you have an existing application that uses Signature Version 2,
  you do not have to update it to use Signature Version 4. However, some operations
  now require Signature Version 4. The documentation for operations that require version
  4 indicate this requirement.    <b>Additional Resources</b>   For more information,
  see the following: <ul> <li>   <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS
  Security Credentials</a>. This topic provides general information about the types
  of credentials used for accessing AWS.  </li> <li>   <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html">IAM
  Best Practices</a>. This topic presents a list of suggestions for using the IAM
  service to help secure your AWS resources.  </li> <li>   <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing
  AWS API Requests</a>. This set of topics walk you through the process of signing
  a request using an access key ID and secret access key.  </li> </ul>'
mediaType:
- application/xml
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  ActionNameListType:
    type: array
    items:
      type: ActionNameType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ActionNameType:
    type: string
    minLength: 3
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  BootstrapDatum:
    type: file
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ColumnNumber:
    type: integer
    format: int
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ContextEntryListType:
    type: array
    items:
      type: ContextEntry
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ContextKeyNameType:
    type: string
    minLength: 5
    maxLength: 256
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ContextKeyNamesResultListType:
    type: array
    items:
      type: ContextKeyNameType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ContextKeyTypeEnum:
    type: string
    enum:
    - string
    - stringList
    - numeric
    - numericList
    - boolean
    - booleanList
    - ip
    - ipList
    - binary
    - binaryList
    - date
    - dateList
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ContextKeyValueListType:
    type: array
    items:
      type: ContextKeyValueType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ContextKeyValueType:
    type: string
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  EntityType:
    type: string
    enum:
    - User
    - Role
    - Group
    - LocalManagedPolicy
    - AWSManagedPolicy
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  EvalDecisionSourceType:
    type: string
    minLength: 3
    maxLength: 256
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  EvaluationResultsListType:
    type: array
    items:
      type: EvaluationResult
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  LineNumber:
    type: integer
    format: int
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ManagedPolicyDetailListType:
    type: array
    items:
      type: ManagedPolicyDetail
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  OpenIDConnectProviderListType:
    type: array
    items:
      type: OpenIDConnectProviderListEntry
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of IAM OpenID Connect providers.</p>
  OpenIDConnectProviderUrlType:
    type: string
    minLength: 1
    maxLength: 255
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a URL that specifies the endpoint for an OpenID Connect provider.</p>
  PolicyEvaluationDecisionType:
    type: string
    enum:
    - allowed
    - explicitDeny
    - implicitDeny
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  PolicyGroupListType:
    type: array
    items:
      type: PolicyGroup
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  PolicyIdentifierType:
    type: string
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  PolicyRoleListType:
    type: array
    items:
      type: PolicyRole
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  PolicySourceType:
    type: string
    enum:
    - user
    - group
    - role
    - aws-managed
    - user-managed
    - resource
    - none
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  PolicyUserListType:
    type: array
    items:
      type: PolicyUser
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ReportContentType:
    type: file
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ReportFormatType:
    type: string
    enum:
    - text/csv
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ReportStateDescriptionType:
    type: string
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ReportStateType:
    type: string
    enum:
    - STARTED
    - INPROGRESS
    - COMPLETE
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ResourceHandlingOptionType:
    type: string
    minLength: 1
    maxLength: 64
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ResourceNameListType:
    type: array
    items:
      type: ResourceNameType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ResourceNameType:
    type: string
    minLength: 1
    maxLength: 2048
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ResourceSpecificResultListType:
    type: array
    items:
      type: ResourceSpecificResult
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  SAMLMetadataDocumentType:
    type: string
    minLength: 1000
    maxLength: 10000000
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  SAMLProviderListType:
    type: array
    items:
      type: SAMLProviderListEntry
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  SAMLProviderNameType:
    type: string
    pattern: '[\w._-]+'
    minLength: 1
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  SSHPublicKeyListType:
    type: array
    items:
      type: SSHPublicKeyMetadata
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  SimulationPolicyListType:
    type: array
    items:
      type: policyDocumentType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  StatementListType:
    type: array
    items:
      type: Statement
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  accessKeyIdType:
    type: string
    pattern: '[\w]+'
    minLength: 16
    maxLength: 32
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  accessKeyMetadataListType:
    type: array
    items:
      type: AccessKeyMetadata
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of access key metadata.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> action.</p>
  accessKeySecretType:
    type: string
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  accountAliasListType:
    type: array
    items:
      type: accountAliasType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  accountAliasType:
    type: string
    pattern: ^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$
    minLength: 3
    maxLength: 63
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  arnType:
    type: string
    minLength: 20
    maxLength: 2048
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>
  assignmentStatusType:
    type: string
    enum:
    - Assigned
    - Unassigned
    - Any
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  attachedPoliciesListType:
    type: array
    items:
      type: AttachedPolicy
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  attachmentCountType:
    type: integer
    format: int
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  authenticationCodeType:
    type: string
    pattern: '[\d]+'
    minLength: 6
    maxLength: 6
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  booleanObjectType:
    type: boolean | nil
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  booleanType:
    type: boolean
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  certificateBodyType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 16384
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  certificateChainType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 2097152
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  certificateIdType:
    type: string
    pattern: '[\w]+'
    minLength: 24
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  certificateListType:
    type: array
    items:
      type: SigningCertificate
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of signing certificates.</p> <p>This data type is used as a response element in the <a>ListSigningCertificates</a> action.</p>
  clientIDListType:
    type: array
    items:
      type: clientIDType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  clientIDType:
    type: string
    minLength: 1
    maxLength: 255
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  dateType:
    type: datetime
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  encodingType:
    type: string
    enum:
    - SSH
    - PEM
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  entityListType:
    type: array
    items:
      type: EntityType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  existingUserNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  groupDetailListType:
    type: array
    items:
      type: GroupDetail
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  groupListType:
    type: array
    items:
      type: Group
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of IAM groups.</p> <p>This data type is used as a response element in the <a>ListGroups</a> action.</p>
  groupNameListType:
    type: array
    items:
      type: groupNameType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  groupNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  idType:
    type: string
    pattern: '[\w]+'
    minLength: 16
    maxLength: 32
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  instanceProfileListType:
    type: array
    items:
      type: InstanceProfile
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of instance profiles.</p>
  instanceProfileNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  markerType:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
    maxLength: 320
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  maxItemsType:
    type: integer
    format: int
    minimum: 1
    maximum: 1000
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  maxPasswordAgeType:
    type: integer
    format: int
    minimum: 1
    maximum: 1095
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  mfaDeviceListType:
    type: array
    items:
      type: MFADevice
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of MFA devices.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a> actions. </p>
  minimumPasswordLengthType:
    type: integer
    format: int
    minimum: 6
    maximum: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  passwordReusePreventionType:
    type: integer
    format: int
    minimum: 1
    maximum: 24
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  passwordType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  pathPrefixType:
    type: string
    pattern: \u002F[\u0021-\u007F]*
    minLength: 1
    maxLength: 512
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  pathType:
    type: string
    pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
    minLength: 1
    maxLength: 512
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyDescriptionType:
    type: string
    maxLength: 1000
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyDetailListType:
    type: array
    items:
      type: PolicyDetail
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyDocumentType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 131072
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyDocumentVersionListType:
    type: array
    items:
      type: PolicyVersion
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyListType:
    type: array
    items:
      type: Policy
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyNameListType:
    type: array
    items:
      type: policyNameType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of policy names.</p> <p>This data type is used as a response element in the <a>ListPolicies</a> action.</p>
  policyNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyPathType:
    type: string
    pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyScopeType:
    type: string
    enum:
    - All
    - AWS
    - Local
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  policyVersionIdType:
    type: string
    pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  privateKeyType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 16384
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  publicKeyFingerprintType:
    type: string
    pattern: '[:\w]+'
    minLength: 48
    maxLength: 48
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  publicKeyIdType:
    type: string
    pattern: '[\w]+'
    minLength: 20
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  publicKeyMaterialType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 16384
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  roleDetailListType:
    type: array
    items:
      type: RoleDetail
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  roleListType:
    type: array
    items:
      type: Role
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of IAM roles.</p> <p>This data type is used as a response element in the <a>ListRoles</a> action.</p>
  roleNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 64
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  serialNumberType:
    type: string
    pattern: '[\w+=/:,.@-]+'
    minLength: 9
    maxLength: 256
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  serverCertificateMetadataListType:
    type: array
    items:
      type: ServerCertificateMetadata
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  serverCertificateNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  statusType:
    type: string
    enum:
    - Active
    - Inactive
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  stringType:
    type: string
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  summaryKeyType:
    type: string
    enum:
    - Users
    - UsersQuota
    - Groups
    - GroupsQuota
    - ServerCertificates
    - ServerCertificatesQuota
    - UserPolicySizeQuota
    - GroupPolicySizeQuota
    - GroupsPerUserQuota
    - SigningCertificatesPerUserQuota
    - AccessKeysPerUserQuota
    - MFADevices
    - MFADevicesInUse
    - AccountMFAEnabled
    - AccountAccessKeysPresent
    - AccountSigningCertificatesPresent
    - AttachedPoliciesPerGroupQuota
    - AttachedPoliciesPerRoleQuota
    - AttachedPoliciesPerUserQuota
    - Policies
    - PoliciesQuota
    - PolicySizeQuota
    - PolicyVersionsInUse
    - PolicyVersionsInUseQuota
    - VersionsPerPolicyQuota
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  summaryValueType:
    type: integer
    format: int
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  thumbprintListType:
    type: array
    items:
      type: thumbprintType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of thumbprints of identity provider server certificates.</p>
  thumbprintType:
    type: string
    minLength: 40
    maxLength: 40
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a thumbprint for an identity provider's server certificate.</p> <p>The identity provider's server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string.</p>
  userDetailListType:
    type: array
    items:
      type: UserDetail
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  userListType:
    type: array
    items:
      type: User
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a list of users.</p> <p>This data type is used as a response element in the <a>GetGroup</a> and <a>ListUsers</a> actions. </p>
  userNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 64
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  virtualMFADeviceListType:
    type: array
    items:
      type: VirtualMFADevice
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  virtualMFADeviceName:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  AccessKey:
    type: object
    properties:
      UserName:
        type: userNameType
        description: <p>The name of the IAM user that the access key is associated with.</p>
      AccessKeyId:
        type: accessKeyIdType
        description: <p>The ID for this access key.</p>
      Status:
        type: statusType
        description: <p>The status of the access key. <code>Active</code> means the key is valid for API calls, while <code>Inactive</code> means it is not. </p>
      SecretAccessKey:
        type: accessKeySecretType
        description: <p>The secret key used to sign requests.</p>
      CreateDate?:
        type: dateType
        description: <p>The date when the access key was created.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an AWS access key.</p> <p> This data type is used as a response element in the <a>CreateAccessKey</a> and <a>ListAccessKeys</a> actions. </p> <note> <p>The <code>SecretAccessKey</code> value is returned only in response to <a>CreateAccessKey</a>. You can get a secret access key only when you first create an access key; you cannot recover the secret access key later. If you lose a secret access key, you must create a new access key.</p> </note>
  AccessKeyLastUsed:
    type: object
    properties:
      LastUsedDate:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the access key was most recently used. This field is null when:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul>
      ServiceName:
        type: stringType
        description: <p>The name of the AWS service with which this access key was most recently used. This field is null when:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul>
      Region:
        type: stringType
        description: <p>The AWS region where this access key was most recently used. This field is null when:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul> <p>For more information about AWS regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about the last time an AWS access key was used.</p> <p>This data type is used as a response element in the <a>GetAccessKeyLastUsed</a> action.</p>
  AccessKeyMetadata:
    type: object
    properties:
      UserName?:
        type: userNameType
        description: <p>The name of the IAM user that the key is associated with.</p>
      AccessKeyId?:
        type: accessKeyIdType
        description: <p>The ID for this access key.</p>
      Status?:
        type: statusType
        description: <p>The status of the access key. <code>Active</code> means the key is valid for API calls; <code>Inactive</code> means it is not.</p>
      CreateDate?:
        type: dateType
        description: <p>The date when the access key was created.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an AWS access key, without its secret key.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> action.</p>
  AddClientIDToOpenIDConnectProviderRequest:
    type: object
    properties:
      OpenIDConnectProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider resource to add the client ID to. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p>
      ClientID:
        type: clientIDType
        description: <p>The client ID (also known as audience) to add to the IAM OpenID Connect provider resource.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  AddRoleToInstanceProfileRequest:
    type: object
    properties:
      InstanceProfileName:
        type: instanceProfileNameType
        description: '<p>The name of the instance profile to update.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to add.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  AddUserToGroupRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name of the group to update.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user to add.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  AttachGroupPolicyRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name (friendly name, not ARN) of the group to attach
          the policy to.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  AttachRolePolicyRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name (friendly name, not ARN) of the role to attach the
          policy to.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  AttachUserPolicyRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name (friendly name, not ARN) of the IAM user to attach
          the policy to.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  AttachedPolicy:
    type: object
    properties:
      PolicyName?:
        type: policyNameType
        description: <p>The friendly name of the attached policy.</p>
      PolicyArn?:
        type: arnType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an attached policy.</p> <p>An attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the <a>ListAttachedGroupPolicies</a>, <a>ListAttachedRolePolicies</a>, <a>ListAttachedUserPolicies</a>, and <a>GetAccountAuthorizationDetails</a> actions. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>
  ChangePasswordRequest:
    type: object
    properties:
      OldPassword:
        type: passwordType
        description: <p>The IAM user's current password.</p>
      NewPassword:
        type: passwordType
        description: <p>The new password. The new password must conform to the AWS account's password policy, if one exists.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of almost any printable ASCII character from the space (\u0020) through the end of the ASCII character range (\u00FF). You can also include the tab (\u0009), line feed (\u000A), and carriage return (\u000D) characters. Although any of these characters are valid in a password, note that many tools, such as the AWS Management Console, might restrict the ability to enter certain characters because they have special meaning within that tool.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ContextEntry:
    type: object
    properties:
      ContextKeyName?:
        type: ContextKeyNameType
        description: <p>The full name of a condition context key, including the service prefix. For example, <code>aws:SourceIp</code> or <code>s3:VersionId</code>.</p>
      ContextKeyValues?:
        type: ContextKeyValueListType
        description: <p>The value (or values, if the condition context key supports multiple values) to provide to the simulation for use when the key is referenced by a <code>Condition</code> element in an input policy.</p>
      ContextKeyType?:
        type: ContextKeyTypeEnum
        description: <p>The data type of the value (or values) specified in the <code>ContextKeyValues</code> parameter.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a condition context key. It includes the name of the key and specifies the value (or values, if the context key supports multiple values) to use in the simulation. This information is used when evaluating the <code>Condition</code> elements of the input policies.</p> <p>This data type is used as an input parameter to <code> <a>SimulateCustomPolicy</a> </code> and <code> <a>SimulateCustomPolicy</a> </code>.</p>
  CreateAccessKeyRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the IAM user that the new key will belong to.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateAccessKeyResponse:
    type: object
    properties:
      AccessKey:
        type: AccessKey
        description: <p>A structure with details about the access key.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateAccessKey</a> request. </p>
  CreateAccountAliasRequest:
    type: object
    properties:
      AccountAlias:
        type: accountAliasType
        description: <p>The account alias to create.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateGroupRequest:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p> The path to the group. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      GroupName:
        type: groupNameType
        description: '<p>The name of the group to create. Do not include the path
          in this value.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-. The group name must be unique within
          the account. Group names are not distinguished by case. For example, you
          cannot create groups named both "ADMINS" and "admins".</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateGroupResponse:
    type: object
    properties:
      Group:
        type: Group
        description: <p>A structure containing details about the new group.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateGroup</a> request. </p>
  CreateInstanceProfileRequest:
    type: object
    properties:
      InstanceProfileName:
        type: instanceProfileNameType
        description: '<p>The name of the instance profile to create.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      Path?:
        type: pathType
        description: <p> The path to the instance profile. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateInstanceProfileResponse:
    type: object
    properties:
      InstanceProfile:
        type: InstanceProfile
        description: <p>A structure containing details about the new instance profile.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateInstanceProfile</a> request. </p>
  CreateLoginProfileRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the IAM user to create a password for. The user
          must already exist.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      Password:
        type: passwordType
        description: <p>The new password for the user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of almost any printable ASCII character from the space (\u0020) through the end of the ASCII character range (\u00FF). You can also include the tab (\u0009), line feed (\u000A), and carriage return (\u000D) characters. Although any of these characters are valid in a password, note that many tools, such as the AWS Management Console, might restrict the ability to enter certain characters because they have special meaning within that tool.</p>
      PasswordResetRequired?:
        type: booleanType
        description: <p>Specifies whether the user is required to set a new password on next sign-in.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateLoginProfileResponse:
    type: object
    properties:
      LoginProfile:
        type: LoginProfile
        description: <p>A structure containing the user name and password create date.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateLoginProfile</a> request. </p>
  CreateOpenIDConnectProviderRequest:
    type: object
    properties:
      Url:
        type: OpenIDConnectProviderUrlType
        description: <p>The URL of the identity provider. The URL must begin with "https://" and should correspond to the <code>iss</code> claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a host name, like "https://server.example.org" or "https://example.com".</p> <p>You cannot register the same provider multiple times in a single AWS account. If you try to submit a URL that has already been used for an OpenID Connect provider in the AWS account, you will get an error.</p>
      ClientIDList?:
        type: clientIDListType
        description: <p>A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the <code>client_id</code> parameter on OAuth requests.)</p> <p>You can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider.</p> <p>There is no defined format for a client ID. The <code>CreateOpenIDConnectProviderRequest</code> action accepts client IDs up to 255 characters long.</p>
      ThumbprintList:
        type: thumbprintListType
        description: <p>A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s). Typically this list includes only one entry. However, IAM lets you have up to five thumbprints for an OIDC provider. This lets you maintain multiple thumbprints if the identity provider is rotating certificates.</p> <p>The server certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string.</p> <p>You must provide at least one thumbprint when creating an IAM OIDC provider. For example, if the OIDC provider is <code>server.example.com</code> and the provider stores its keys at "https://keys.server.example.com/openid-connect", the thumbprint string would be the hex-encoded SHA-1 hash value of the certificate used by https://keys.server.example.com.</p> <p>For more information about obtaining the OIDC provider's thumbprint, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html">Obtaining the Thumbprint for an OpenID Connect Provider</a> in the <i>IAM User Guide</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateOpenIDConnectProviderResponse:
    type: object
    properties:
      OpenIDConnectProviderArn?:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the new IAM OpenID Connect provider that is created. For more information, see <a>OpenIDConnectProviderListEntry</a>. </p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateOpenIDConnectProvider</a> request. </p>
  CreatePolicyRequest:
    type: object
    properties:
      PolicyName:
        type: policyNameType
        description: '<p>The friendly name of the policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      Path?:
        type: policyPathType
        description: <p>The path for the policy.</p> <p>For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      PolicyDocument:
        type: policyDocumentType
        description: <p>The JSON policy document that you want to use as the content for the new policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      Description?:
        type: policyDescriptionType
        description: <p>A friendly description of the policy.</p> <p>Typically used to store information about the permissions defined in the policy. For example, "Grants access to production DynamoDB tables."</p> <p>The policy description is immutable. After a value is assigned, it cannot be changed.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreatePolicyResponse:
    type: object
    properties:
      Policy?:
        type: Policy
        description: <p>A structure containing details about the new policy.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreatePolicy</a> request. </p>
  CreatePolicyVersionRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      PolicyDocument:
        type: policyDocumentType
        description: <p>The JSON policy document that you want to use as the content for this new version of the policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      SetAsDefault?:
        type: booleanType
        description: <p>Specifies whether to set this version as the policy's default version.</p> <p>When this parameter is <code>true</code>, the new policy version becomes the operative version; that is, the version that is in effect for the IAM users, groups, and roles that the policy is attached to.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreatePolicyVersionResponse:
    type: object
    properties:
      PolicyVersion?:
        type: PolicyVersion
        description: <p>A structure containing details about the new policy version.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreatePolicyVersion</a> request. </p>
  CreateRoleRequest:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p> The path to the role. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to create.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-. Role names are not distinguished
          by case. For example, you cannot create roles named both "PRODROLE" and
          "prodrole".</p>'
      AssumeRolePolicyDocument:
        type: policyDocumentType
        description: <p>The trust relationship policy document that grants an entity permission to assume the role.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateRoleResponse:
    type: object
    properties:
      Role:
        type: Role
        description: <p>A structure containing details about the new role.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateRole</a> request. </p>
  CreateSAMLProviderRequest:
    type: object
    properties:
      SAMLMetadataDocument:
        type: SAMLMetadataDocumentType
        description: <p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i> </p>
      Name:
        type: SAMLProviderNameType
        description: '<p>The name of the provider to create.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateSAMLProviderResponse:
    type: object
    properties:
      SAMLProviderArn?:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the new SAML provider resource in IAM.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateSAMLProvider</a> request. </p>
  CreateUserRequest:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p> The path for the user name. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      UserName:
        type: userNameType
        description: '<p>The name of the user to create.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-. User names are not distinguished
          by case. For example, you cannot create users named both "TESTUSER" and
          "testuser".</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateUserResponse:
    type: object
    properties:
      User?:
        type: User
        description: <p>A structure with details about the new IAM user.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateUser</a> request. </p>
  CreateVirtualMFADeviceRequest:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p> The path for the virtual MFA device. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      VirtualMFADeviceName:
        type: virtualMFADeviceName
        description: '<p>The name of the virtual MFA device. Use with path to uniquely
          identify a virtual MFA device.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  CreateVirtualMFADeviceResponse:
    type: object
    properties:
      VirtualMFADevice:
        type: VirtualMFADevice
        description: <p>A structure containing details about the new virtual MFA device.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>CreateVirtualMFADevice</a> request. </p>
  DeactivateMFADeviceRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user whose MFA device you want to deactivate.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      SerialNumber:
        type: serialNumberType
        description: '<p>The serial number that uniquely identifies the MFA device.
          For virtual MFA devices, the serial number is the device ARN.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =/:,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteAccessKeyRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the user whose access key pair you want to delete.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      AccessKeyId:
        type: accessKeyIdType
        description: <p>The access key ID for the access key ID and secret access key you want to delete.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that can consist of any upper or lowercased letter or digit.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteAccountAliasRequest:
    type: object
    properties:
      AccountAlias:
        type: accountAliasType
        description: <p>The name of the account alias to delete.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteGroupPolicyRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name (friendly name, not ARN) identifying the group that
          the policy is embedded in.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name identifying the policy document to delete.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteGroupRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name of the IAM group to delete.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteInstanceProfileRequest:
    type: object
    properties:
      InstanceProfileName:
        type: instanceProfileNameType
        description: '<p>The name of the instance profile to delete.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteLoginProfileRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the user whose password you want to delete.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteOpenIDConnectProviderRequest:
    type: object
    properties:
      OpenIDConnectProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM OpenID Connect provider resource object to delete. You can get a list of OpenID Connect provider resource ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeletePolicyRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to delete.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeletePolicyVersionRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy from which you want to delete a version.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      VersionId:
        type: policyVersionIdType
        description: <p>The policy version to delete.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteRolePolicyRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name (friendly name, not ARN) identifying the role that
          the policy is embedded in.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name of the inline policy to delete from the specified
          IAM role.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteRoleRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to delete.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteSAMLProviderRequest:
    type: object
    properties:
      SAMLProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the SAML provider to delete.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteSSHPublicKeyRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the IAM user associated with the SSH public key.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      SSHPublicKeyId:
        type: publicKeyIdType
        description: <p>The unique identifier for the SSH public key.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that can consist of any upper or lowercased letter or digit.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteServerCertificateRequest:
    type: object
    properties:
      ServerCertificateName:
        type: serverCertificateNameType
        description: '<p>The name of the server certificate you want to delete.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteSigningCertificateRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the user the signing certificate belongs to.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      CertificateId:
        type: certificateIdType
        description: <p>The ID of the signing certificate to delete.</p> <p>The format of this parameter, as described by its <a href="http://wikipedia.org/wiki/regex">regex</a> pattern, is a string of characters that can be upper- or lower-cased letters or digits.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteUserPolicyRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name (friendly name, not ARN) identifying the user that
          the policy is embedded in.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name identifying the policy document to delete.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteUserRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user to delete.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DeleteVirtualMFADeviceRequest:
    type: object
    properties:
      SerialNumber:
        type: serialNumberType
        description: '<p>The serial number that uniquely identifies the MFA device.
          For virtual MFA devices, the serial number is the same as the ARN.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =/:,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DetachGroupPolicyRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name (friendly name, not ARN) of the IAM group to detach
          the policy from.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DetachRolePolicyRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name (friendly name, not ARN) of the IAM role to detach
          the policy from.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  DetachUserPolicyRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name (friendly name, not ARN) of the IAM user to detach
          the policy from.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  EnableMFADeviceRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the IAM user for whom you want to enable the
          MFA device.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
      SerialNumber:
        type: serialNumberType
        description: '<p>The serial number that uniquely identifies the MFA device.
          For virtual MFA devices, the serial number is the device ARN.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =/:,.@-</p>'
      AuthenticationCode1:
        type: authenticationCodeType
        description: <p>An authentication code emitted by the device.</p> <p>The format for this parameter is a string of 6 digits.</p>
      AuthenticationCode2:
        type: authenticationCodeType
        description: <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a string of 6 digits.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  EvalDecisionDetailsType:
    type: object
    properties:
      //:
        type: PolicyEvaluationDecisionType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  EvaluationResult:
    type: object
    properties:
      EvalActionName:
        type: ActionNameType
        description: <p>The name of the API action tested on the indicated resource.</p>
      EvalResourceName?:
        type: ResourceNameType
        description: <p>The ARN of the resource that the indicated API action was tested on.</p>
      EvalDecision:
        type: PolicyEvaluationDecisionType
        description: <p>The result of the simulation.</p>
      MatchedStatements?:
        type: StatementListType
        description: <p>A list of the statements in the input policies that determine the result for this scenario. Remember that even if multiple statements allow the action on the resource, if only one statement denies that action, then the explicit deny overrides any allow, and the deny statement is the only entry included in the result.</p>
      MissingContextValues?:
        type: ContextKeyNamesResultListType
        description: <p>A list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when the resource in a simulation is "*", either explicitly, or when the <code>ResourceArns</code> parameter blank. If you include a list of resources, then any missing context values are instead included under the <code>ResourceSpecificResults</code> section. To discover the context keys used by a set of policies, you can call <a>GetContextKeysForCustomPolicy</a> or <a>GetContextKeysForPrincipalPolicy</a>.</p>
      EvalDecisionDetails?:
        type: EvalDecisionDetailsType
        description: <p>Additional details about the results of the evaluation decision. When there are both IAM policies and resource policies, this parameter explains how each set of policies contributes to the final evaluation decision. When simulating cross-account access to a resource, both the resource-based policy and the caller's IAM policy must grant access. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html">How IAM Roles Differ from Resource-based Policies</a> </p>
      ResourceSpecificResults?:
        type: ResourceSpecificResultListType
        description: <p>The individual results of the simulation of the API action specified in EvalActionName on each resource.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the results of a simulation.</p> <p>This data type is used by the return parameter of <code> <a>SimulateCustomPolicy</a> </code> and <code> <a>SimulatePrincipalPolicy</a> </code>.</p>
  GenerateCredentialReportResponse:
    type: object
    properties:
      State?:
        type: ReportStateType
        description: <p>Information about the state of the credential report.</p>
      Description?:
        type: ReportStateDescriptionType
        description: <p>Information about the credential report.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GenerateCredentialReport</a> request. </p>
  GetAccessKeyLastUsedRequest:
    type: object
    properties:
      AccessKeyId:
        type: accessKeyIdType
        description: <p>The identifier of an access key.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that can consist of any upper or lowercased letter or digit.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetAccessKeyLastUsedResponse:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: <p>The name of the AWS IAM user that owns this access key.</p> <p/>
      AccessKeyLastUsed?:
        type: AccessKeyLastUsed
        description: <p>Contains information about the last time the access key was used.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetAccessKeyLastUsed</a> request. It is also returned as a member of the <a>AccessKeyMetaData</a> structure returned by the <a>ListAccessKeys</a> action.</p>
  GetAccountAuthorizationDetailsRequest:
    type: object
    properties:
      Filter?:
        type: entityListType
        description: <p>A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value <code>LocalManagedPolicy</code> to include customer managed policies.</p> <p>The format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetAccountAuthorizationDetailsResponse:
    type: object
    properties:
      UserDetailList?:
        type: userDetailListType
        description: <p>A list containing information about IAM users.</p>
      GroupDetailList?:
        type: groupDetailListType
        description: <p>A list containing information about IAM groups.</p>
      RoleDetailList?:
        type: roleDetailListType
        description: <p>A list containing information about IAM roles.</p>
      Policies?:
        type: ManagedPolicyDetailListType
        description: <p>A list containing information about managed policies.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetAccountAuthorizationDetails</a> request. </p>
  GetAccountPasswordPolicyResponse:
    type: object
    properties:
      PasswordPolicy:
        type: PasswordPolicy
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetAccountPasswordPolicy</a> request. </p>
  GetAccountSummaryResponse:
    type: object
    properties:
      SummaryMap?:
        type: summaryMapType
        description: <p>A set of key value pairs containing information about IAM entity usage and IAM quotas.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetAccountSummary</a> request. </p>
  GetContextKeysForCustomPolicyRequest:
    type: object
    properties:
      PolicyInputList:
        type: SimulationPolicyListType
        description: <p>A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetContextKeysForPolicyResponse:
    type: object
    properties:
      ContextKeyNames?:
        type: ContextKeyNamesResultListType
        description: <p>The list of context keys that are referenced in the input policies.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetContextKeysForPrincipalPolicy</a> or <a>GetContextKeysForCustomPolicy</a> request. </p>
  GetContextKeysForPrincipalPolicyRequest:
    type: object
    properties:
      PolicySourceArn:
        type: arnType
        description: <p>The ARN of a user, group, or role whose policies contain the context keys that you want listed. If you specify a user, the list includes context keys that are found in all policies attached to the user as well as to all groups that the user is a member of. If you pick a group or a role, then it includes only those context keys that are found in policies attached to that entity. Note that all parameters are shown in unencoded form here for clarity, but must be URL encoded to be included as a part of a real HTML request.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      PolicyInputList?:
        type: SimulationPolicyListType
        description: <p>An optional list of additional policies for which you want the list of context keys that are referenced.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetCredentialReportResponse:
    type: object
    properties:
      Content?:
        type: ReportContentType
        description: <p>Contains the credential report. The report is Base64-encoded.</p>
      ReportFormat?:
        type: ReportFormatType
        description: <p>The format (MIME type) of the credential report.</p>
      GeneratedTime?:
        type: dateType
        description: <p> The date and time when the credential report was created, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetCredentialReport</a> request. </p>
  GetGroupPolicyRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name of the group the policy is associated with.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name of the policy document to get.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetGroupPolicyResponse:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: <p>The group the policy is associated with.</p>
      PolicyName:
        type: policyNameType
        description: <p>The name of the policy.</p>
      PolicyDocument:
        type: policyDocumentType
        description: <p>The policy document.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetGroupPolicy</a> request. </p>
  GetGroupRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name of the group.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetGroupResponse:
    type: object
    properties:
      Group:
        type: Group
        description: <p>A structure that contains details about the group.</p>
      Users:
        type: userListType
        description: <p>A list of users in the group.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetGroup</a> request. </p>
  GetInstanceProfileRequest:
    type: object
    properties:
      InstanceProfileName:
        type: instanceProfileNameType
        description: '<p>The name of the instance profile to get information about.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetInstanceProfileResponse:
    type: object
    properties:
      InstanceProfile:
        type: InstanceProfile
        description: <p>A structure containing details about the instance profile.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetInstanceProfile</a> request. </p>
  GetLoginProfileRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the user whose login profile you want to retrieve.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetLoginProfileResponse:
    type: object
    properties:
      LoginProfile:
        type: LoginProfile
        description: <p>A structure containing the user name and password create date for the user.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetLoginProfile</a> request. </p>
  GetOpenIDConnectProviderRequest:
    type: object
    properties:
      OpenIDConnectProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the OIDC provider resource object in IAM to get information for. You can get a list of OIDC provider resource ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetOpenIDConnectProviderResponse:
    type: object
    properties:
      Url?:
        type: OpenIDConnectProviderUrlType
        description: <p>The URL that the IAM OIDC provider resource object is associated with. For more information, see <a>CreateOpenIDConnectProvider</a>.</p>
      ClientIDList?:
        type: clientIDListType
        description: <p>A list of client IDs (also known as audiences) that are associated with the specified IAM OIDC provider resource object. For more information, see <a>CreateOpenIDConnectProvider</a>.</p>
      ThumbprintList?:
        type: thumbprintListType
        description: <p>A list of certificate thumbprints that are associated with the specified IAM OIDC provider resource object. For more information, see <a>CreateOpenIDConnectProvider</a>. </p>
      CreateDate?:
        type: dateType
        description: <p>The date and time when the IAM OIDC provider resource object was created in the AWS account.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetOpenIDConnectProvider</a> request. </p>
  GetPolicyRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetPolicyResponse:
    type: object
    properties:
      Policy?:
        type: Policy
        description: <p>A structure containing details about the policy.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetPolicy</a> request. </p>
  GetPolicyVersionRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      VersionId:
        type: policyVersionIdType
        description: <p>Identifies the policy version to retrieve.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetPolicyVersionResponse:
    type: object
    properties:
      PolicyVersion?:
        type: PolicyVersion
        description: <p>A structure containing details about the policy version.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetPolicyVersion</a> request. </p>
  GetRolePolicyRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name of the role associated with the policy.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name of the policy document to get.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetRolePolicyResponse:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: <p>The role the policy is associated with.</p>
      PolicyName:
        type: policyNameType
        description: <p>The name of the policy.</p>
      PolicyDocument:
        type: policyDocumentType
        description: <p>The policy document.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetRolePolicy</a> request. </p>
  GetRoleRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name of the IAM role to get information about.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetRoleResponse:
    type: object
    properties:
      Role:
        type: Role
        description: <p>A structure containing details about the IAM role.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetRole</a> request. </p>
  GetSAMLProviderRequest:
    type: object
    properties:
      SAMLProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the SAML provider resource object in IAM to get information about.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetSAMLProviderResponse:
    type: object
    properties:
      SAMLMetadataDocument?:
        type: SAMLMetadataDocumentType
        description: <p>The XML metadata document that includes information about an identity provider.</p>
      CreateDate?:
        type: dateType
        description: <p>The date and time when the SAML provider was created.</p>
      ValidUntil?:
        type: dateType
        description: <p>The expiration date and time for the SAML provider.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetSAMLProvider</a> request. </p>
  GetSSHPublicKeyRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the IAM user associated with the SSH public key.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      SSHPublicKeyId:
        type: publicKeyIdType
        description: <p>The unique identifier for the SSH public key.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that can consist of any upper or lowercased letter or digit.</p>
      Encoding:
        type: encodingType
        description: <p>Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetSSHPublicKeyResponse:
    type: object
    properties:
      SSHPublicKey?:
        type: SSHPublicKey
        description: <p>A structure containing details about the SSH public key.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetSSHPublicKey</a> request.</p>
  GetServerCertificateRequest:
    type: object
    properties:
      ServerCertificateName:
        type: serverCertificateNameType
        description: '<p>The name of the server certificate you want to retrieve information
          about.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetServerCertificateResponse:
    type: object
    properties:
      ServerCertificate:
        type: ServerCertificate
        description: <p>A structure containing details about the server certificate.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetServerCertificate</a> request. </p>
  GetUserPolicyRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user who the policy is associated with.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name of the policy document to get.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetUserPolicyResponse:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: <p>The user the policy is associated with.</p>
      PolicyName:
        type: policyNameType
        description: <p>The name of the policy.</p>
      PolicyDocument:
        type: policyDocumentType
        description: <p>The policy document.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetUserPolicy</a> request. </p>
  GetUserRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the user to get information about.</p> <p>This
          parameter is optional. If it is not included, it defaults to the user making
          the request. The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  GetUserResponse:
    type: object
    properties:
      User:
        type: User
        description: <p>A structure containing details about the IAM user.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>GetUser</a> request. </p>
  Group:
    type: object
    properties:
      Path:
        type: pathType
        description: <p>The path to the group. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      GroupName:
        type: groupNameType
        description: <p>The friendly name that identifies the group.</p>
      GroupId:
        type: idType
        description: <p> The stable and unique string identifying the group. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      Arn:
        type: arnType
        description: <p> The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      CreateDate:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the group was created.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an IAM group entity.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateGroup</a> </p> </li> <li> <p> <a>GetGroup</a> </p> </li> <li> <p> <a>ListGroups</a> </p> </li> </ul>
  GroupDetail:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p>The path to the group. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      GroupName?:
        type: groupNameType
        description: <p>The friendly name that identifies the group.</p>
      GroupId?:
        type: idType
        description: <p>The stable and unique string identifying the group. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      Arn?:
        type: arnType
      CreateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the group was created.</p>
      GroupPolicyList?:
        type: policyDetailListType
        description: <p>A list of the inline policies embedded in the group.</p>
      AttachedManagedPolicies?:
        type: attachedPoliciesListType
        description: <p>A list of the managed policies attached to the group.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an IAM group, including all of the group's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>
  InstanceProfile:
    type: object
    properties:
      Path:
        type: pathType
        description: <p> The path to the instance profile. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      InstanceProfileName:
        type: instanceProfileNameType
        description: <p>The name identifying the instance profile.</p>
      InstanceProfileId:
        type: idType
        description: <p> The stable and unique string identifying the instance profile. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      Arn:
        type: arnType
        description: <p> The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      CreateDate:
        type: dateType
        description: <p>The date when the instance profile was created.</p>
      Roles:
        type: roleListType
        description: <p>The role associated with the instance profile.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an instance profile.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateInstanceProfile</a> </p> </li> <li> <p> <a>GetInstanceProfile</a> </p> </li> <li> <p> <a>ListInstanceProfiles</a> </p> </li> <li> <p> <a>ListInstanceProfilesForRole</a> </p> </li> </ul>
  ListAccessKeysRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListAccessKeysResponse:
    type: object
    properties:
      AccessKeyMetadata:
        type: accessKeyMetadataListType
        description: <p>A list of objects containing metadata about the access keys.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListAccessKeys</a> request. </p>
  ListAccountAliasesRequest:
    type: object
    properties:
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListAccountAliasesResponse:
    type: object
    properties:
      AccountAliases:
        type: accountAliasListType
        description: <p>A list of aliases associated with the account. AWS supports only one alias per account.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListAccountAliases</a> request. </p>
  ListAttachedGroupPoliciesRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name (friendly name, not ARN) of the group to list attached
          policies for.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PathPrefix?:
        type: policyPathType
        description: <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListAttachedGroupPoliciesResponse:
    type: object
    properties:
      AttachedPolicies?:
        type: attachedPoliciesListType
        description: <p>A list of the attached policies.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListAttachedGroupPolicies</a> request. </p>
  ListAttachedRolePoliciesRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name (friendly name, not ARN) of the role to list attached
          policies for.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PathPrefix?:
        type: policyPathType
        description: <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListAttachedRolePoliciesResponse:
    type: object
    properties:
      AttachedPolicies?:
        type: attachedPoliciesListType
        description: <p>A list of the attached policies.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListAttachedRolePolicies</a> request. </p>
  ListAttachedUserPoliciesRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name (friendly name, not ARN) of the user to list attached
          policies for.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PathPrefix?:
        type: policyPathType
        description: <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListAttachedUserPoliciesResponse:
    type: object
    properties:
      AttachedPolicies?:
        type: attachedPoliciesListType
        description: <p>A list of the attached policies.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListAttachedUserPolicies</a> request. </p>
  ListEntitiesForPolicyRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      EntityFilter?:
        type: EntityType
        description: <p>The entity type to use for filtering the results.</p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.</p>
      PathPrefix?:
        type: pathType
        description: <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListEntitiesForPolicyResponse:
    type: object
    properties:
      PolicyGroups?:
        type: PolicyGroupListType
        description: <p>A list of IAM groups that the policy is attached to.</p>
      PolicyUsers?:
        type: PolicyUserListType
        description: <p>A list of IAM users that the policy is attached to.</p>
      PolicyRoles?:
        type: PolicyRoleListType
        description: <p>A list of IAM roles that the policy is attached to.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListEntitiesForPolicy</a> request. </p>
  ListGroupPoliciesRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name of the group to list policies for.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListGroupPoliciesResponse:
    type: object
    properties:
      PolicyNames:
        type: policyNameListType
        description: <p>A list of policy names.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListGroupPolicies</a> request. </p>
  ListGroupsForUserRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user to list groups for.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListGroupsForUserResponse:
    type: object
    properties:
      Groups:
        type: groupListType
        description: <p>A list of groups.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListGroupsForUser</a> request. </p>
  ListGroupsRequest:
    type: object
    properties:
      PathPrefix?:
        type: pathPrefixType
        description: <p> The path prefix for filtering the results. For example, the prefix <code>/division_abc/subdivision_xyz/</code> gets all groups whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListGroupsResponse:
    type: object
    properties:
      Groups:
        type: groupListType
        description: <p>A list of groups.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListGroups</a> request. </p>
  ListInstanceProfilesForRoleRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to list instance profiles for.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListInstanceProfilesForRoleResponse:
    type: object
    properties:
      InstanceProfiles:
        type: instanceProfileListType
        description: <p>A list of instance profiles.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListInstanceProfilesForRole</a> request. </p>
  ListInstanceProfilesRequest:
    type: object
    properties:
      PathPrefix?:
        type: pathPrefixType
        description: <p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all instance profiles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListInstanceProfilesResponse:
    type: object
    properties:
      InstanceProfiles:
        type: instanceProfileListType
        description: <p>A list of instance profiles.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListInstanceProfiles</a> request. </p>
  ListMFADevicesRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the user whose MFA devices you want to list.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListMFADevicesResponse:
    type: object
    properties:
      MFADevices:
        type: mfaDeviceListType
        description: <p>A list of MFA devices.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListMFADevices</a> request. </p>
  ListOpenIDConnectProvidersRequest:
    type: object
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListOpenIDConnectProvidersResponse:
    type: object
    properties:
      OpenIDConnectProviderList?:
        type: OpenIDConnectProviderListType
        description: <p>The list of IAM OIDC provider resource objects defined in the AWS account.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListOpenIDConnectProviders</a> request. </p>
  ListPoliciesRequest:
    type: object
    properties:
      Scope?:
        type: policyScopeType
        description: <p>The scope to use for filtering the results.</p> <p>To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>
      OnlyAttached?:
        type: booleanType
        description: <p>A flag to filter the results to only the attached policies.</p> <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list contains only the policies that are attached to an IAM user, group, or role. When <code>OnlyAttached</code> is <code>false</code>, or when the parameter is not included, all policies are returned.</p>
      PathPrefix?:
        type: policyPathType
        description: <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListPoliciesResponse:
    type: object
    properties:
      Policies?:
        type: policyListType
        description: <p>A list of policies.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListPolicies</a> request. </p>
  ListPolicyVersionsRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListPolicyVersionsResponse:
    type: object
    properties:
      Versions?:
        type: policyDocumentVersionListType
        description: <p>A list of policy versions.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListPolicyVersions</a> request. </p>
  ListRolePoliciesRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to list policies for.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListRolePoliciesResponse:
    type: object
    properties:
      PolicyNames:
        type: policyNameListType
        description: <p>A list of policy names.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListRolePolicies</a> request. </p>
  ListRolesRequest:
    type: object
    properties:
      PathPrefix?:
        type: pathPrefixType
        description: <p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all roles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListRolesResponse:
    type: object
    properties:
      Roles:
        type: roleListType
        description: <p>A list of roles.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListRoles</a> request. </p>
  ListSAMLProvidersRequest:
    type: object
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListSAMLProvidersResponse:
    type: object
    properties:
      SAMLProviderList?:
        type: SAMLProviderListType
        description: <p>The list of SAML provider resource objects defined in IAM for this AWS account.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListSAMLProviders</a> request. </p>
  ListSSHPublicKeysRequest:
    type: object
    properties:
      UserName?:
        type: userNameType
        description: '<p>The name of the IAM user to list SSH public keys for. If
          none is specified, the UserName field is determined implicitly based on
          the AWS access key used to sign the request.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListSSHPublicKeysResponse:
    type: object
    properties:
      SSHPublicKeys?:
        type: SSHPublicKeyListType
        description: <p>A list of the SSH public keys assigned to IAM user.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListSSHPublicKeys</a> request.</p>
  ListServerCertificatesRequest:
    type: object
    properties:
      PathPrefix?:
        type: pathPrefixType
        description: '<p> The path prefix for filtering the results. For example:
          <code>/company/servercerts</code> would get all server certificates for
          which the path starts with <code>/company/servercerts</code>.</p> <p>This
          parameter is optional. If it is not included, it defaults to a slash (/),
          listing all server certificates. The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of either
          a forward slash (/) by itself or a string that must begin and end with forward
          slashes, containing any ASCII character from the ! (\u0021) thru the DEL
          character (\u007F), including most punctuation characters, digits, and upper
          and lowercased letters.</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListServerCertificatesResponse:
    type: object
    properties:
      ServerCertificateMetadataList:
        type: serverCertificateMetadataListType
        description: <p>A list of server certificates.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListServerCertificates</a> request. </p>
  ListSigningCertificatesRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the IAM user whose signing certificates you want
          to examine.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListSigningCertificatesResponse:
    type: object
    properties:
      Certificates:
        type: certificateListType
        description: <p>A list of the user's signing certificate information.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListSigningCertificates</a> request. </p>
  ListUserPoliciesRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user to list policies for.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListUserPoliciesResponse:
    type: object
    properties:
      PolicyNames:
        type: policyNameListType
        description: <p>A list of policy names.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListUserPolicies</a> request. </p>
  ListUsersRequest:
    type: object
    properties:
      PathPrefix?:
        type: pathPrefixType
        description: '<p> The path prefix for filtering the results. For example:
          <code>/division_abc/subdivision_xyz/</code>, which would get all user names
          whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p>
          <p>This parameter is optional. If it is not included, it defaults to a slash
          (/), listing all user names. The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of either
          a forward slash (/) by itself or a string that must begin and end with forward
          slashes, containing any ASCII character from the ! (\u0021) thru the DEL
          character (\u007F), including most punctuation characters, digits, and upper
          and lowercased letters.</p>'
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListUsersResponse:
    type: object
    properties:
      Users:
        type: userListType
        description: <p>A list of users.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListUsers</a> request. </p>
  ListVirtualMFADevicesRequest:
    type: object
    properties:
      AssignmentStatus?:
        type: assignmentStatusType
        description: <p> The status (<code>Unassigned</code> or <code>Assigned</code>) of the devices to list. If you do not specify an <code>AssignmentStatus</code>, the action defaults to <code>Any</code> which lists both assigned and unassigned virtual MFA devices.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ListVirtualMFADevicesResponse:
    type: object
    properties:
      VirtualMFADevices:
        type: virtualMFADeviceListType
        description: <p> The list of virtual MFA devices in the current account that match the <code>AssignmentStatus</code> value that was passed in the request.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>ListVirtualMFADevices</a> request. </p>
  LoginProfile:
    type: object
    properties:
      UserName:
        type: userNameType
        description: <p>The name of the user, which can be used for signing in to the AWS Management Console.</p>
      CreateDate:
        type: dateType
        description: <p>The date when the password for the user was created.</p>
      PasswordResetRequired?:
        type: booleanType
        description: <p>Specifies whether the user is required to set a new password on next sign-in.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the user name and password create date for a user.</p> <p> This data type is used as a response element in the <a>CreateLoginProfile</a> and <a>GetLoginProfile</a> actions. </p>
  MFADevice:
    type: object
    properties:
      UserName:
        type: userNameType
        description: <p>The user with whom the MFA device is associated.</p>
      SerialNumber:
        type: serialNumberType
        description: <p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p>
      EnableDate:
        type: dateType
        description: <p>The date when the MFA device was enabled for the user.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an MFA device.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> action.</p>
  ManagedPolicyDetail:
    type: object
    properties:
      PolicyName?:
        type: policyNameType
        description: <p>The friendly name (not ARN) identifying the policy.</p>
      PolicyId?:
        type: idType
        description: <p>The stable and unique string identifying the policy.</p> <p>For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      Arn?:
        type: arnType
      Path?:
        type: policyPathType
        description: <p>The path to the policy.</p> <p>For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      DefaultVersionId?:
        type: policyVersionIdType
        description: <p>The identifier for the version of the policy that is set as the default (operative) version.</p> <p>For more information about policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>
      AttachmentCount?:
        type: attachmentCountType
        description: <p>The number of principal entities (users, groups, and roles) that the policy is attached to.</p>
      IsAttachable?:
        type: booleanType
        description: <p>Specifies whether the policy can be attached to an IAM user, group, or role.</p>
      Description?:
        type: policyDescriptionType
        description: <p>A friendly description of the policy.</p>
      CreateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was created.</p>
      UpdateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was last updated.</p> <p>When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.</p>
      PolicyVersionList?:
        type: policyDocumentVersionListType
        description: <p>A list containing information about the versions of the policy.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a managed policy, including the policy's ARN, versions, and the number of principal entities (users, groups, and roles) that the policy is attached to.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p> <p>For more information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>
  OpenIDConnectProviderListEntry:
    type: object
    properties:
      Arn?:
        type: arnType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the Amazon Resource Name (ARN) for an IAM OpenID Connect provider.</p>
  PasswordPolicy:
    type: object
    properties:
      MinimumPasswordLength?:
        type: minimumPasswordLengthType
        description: <p>Minimum length to require for IAM user passwords.</p>
      RequireSymbols?:
        type: booleanType
        description: <p>Specifies whether to require symbols for IAM user passwords.</p>
      RequireNumbers?:
        type: booleanType
        description: <p>Specifies whether to require numbers for IAM user passwords.</p>
      RequireUppercaseCharacters?:
        type: booleanType
        description: <p>Specifies whether to require uppercase characters for IAM user passwords.</p>
      RequireLowercaseCharacters?:
        type: booleanType
        description: <p>Specifies whether to require lowercase characters for IAM user passwords.</p>
      AllowUsersToChangePassword?:
        type: booleanType
        description: <p>Specifies whether IAM users are allowed to change their own password.</p>
      ExpirePasswords?:
        type: booleanType
        description: <p>Indicates whether passwords in the account expire. Returns true if MaxPasswordAge is contains a value greater than 0. Returns false if MaxPasswordAge is 0 or not present.</p>
      MaxPasswordAge?:
        type: maxPasswordAgeType
        description: <p>The number of days that an IAM user password is valid.</p>
      PasswordReusePrevention?:
        type: passwordReusePreventionType
        description: <p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p>
      HardExpiry?:
        type: booleanObjectType | nil
        description: <p>Specifies whether IAM users are prevented from setting a new password after their password has expired.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about the account password policy.</p> <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a> action. </p>
  Policy:
    type: object
    properties:
      PolicyName?:
        type: policyNameType
        description: <p>The friendly name (not ARN) identifying the policy.</p>
      PolicyId?:
        type: idType
        description: <p>The stable and unique string identifying the policy.</p> <p>For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      Arn?:
        type: arnType
      Path?:
        type: policyPathType
        description: <p>The path to the policy.</p> <p>For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      DefaultVersionId?:
        type: policyVersionIdType
        description: <p>The identifier for the version of the policy that is set as the default version.</p>
      AttachmentCount?:
        type: attachmentCountType
        description: <p>The number of entities (users, groups, and roles) that the policy is attached to.</p>
      IsAttachable?:
        type: booleanType
        description: <p>Specifies whether the policy can be attached to an IAM user, group, or role.</p>
      Description?:
        type: policyDescriptionType
        description: <p>A friendly description of the policy.</p> <p>This element is included in the response to the <a>GetPolicy</a> operation. It is not included in the response to the <a>ListPolicies</a> operation. </p>
      CreateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was created.</p>
      UpdateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was last updated.</p> <p>When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>, and <a>ListPolicies</a> actions. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>
  PolicyDetail:
    type: object
    properties:
      PolicyName?:
        type: policyNameType
        description: <p>The name of the policy.</p>
      PolicyDocument?:
        type: policyDocumentType
        description: <p>The policy document.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an IAM policy, including the policy document.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>
  PolicyGroup:
    type: object
    properties:
      GroupName?:
        type: groupNameType
        description: <p>The name (friendly name, not ARN) identifying the group.</p>
      GroupId?:
        type: idType
        description: <p>The stable and unique string identifying the group. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a group that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> action. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>
  PolicyRole:
    type: object
    properties:
      RoleName?:
        type: roleNameType
        description: <p>The name (friendly name, not ARN) identifying the role.</p>
      RoleId?:
        type: idType
        description: <p>The stable and unique string identifying the role. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a role that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> action. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>
  PolicyUser:
    type: object
    properties:
      UserName?:
        type: userNameType
        description: <p>The name (friendly name, not ARN) identifying the user.</p>
      UserId?:
        type: idType
        description: <p>The stable and unique string identifying the user. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a user that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> action. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>
  PolicyVersion:
    type: object
    properties:
      Document?:
        type: policyDocumentType
        description: <p>The policy document.</p> <p>The policy document is returned in the response to the <a>GetPolicyVersion</a> and <a>GetAccountAuthorizationDetails</a> operations. It is not returned in the response to the <a>CreatePolicyVersion</a> or <a>ListPolicyVersions</a> operations. </p>
      VersionId?:
        type: policyVersionIdType
        description: <p>The identifier for the policy version.</p> <p>Policy version identifiers always begin with <code>v</code> (always lowercase). When a policy is created, the first policy version is <code>v1</code>. </p>
      IsDefaultVersion?:
        type: booleanType
        description: <p>Specifies whether the policy version is set as the policy's default version.</p>
      CreateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy version was created.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a version of a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a> actions. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>
  Position:
    type: object
    properties:
      Line?:
        type: LineNumber
        description: <p>The line containing the specified position in the document.</p>
      Column?:
        type: ColumnNumber
        description: <p>The column in the line containing the specified position in the document.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the row and column of a location of a <code>Statement</code> element in a policy document.</p> <p>This data type is used as a member of the <code> <a>Statement</a> </code> type.</p>
  PutGroupPolicyRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name of the group to associate the policy with.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name of the policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyDocument:
        type: policyDocumentType
        description: <p>The policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  PutRolePolicyRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to associate the policy with.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name of the policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyDocument:
        type: policyDocumentType
        description: <p>The policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  PutUserPolicyRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user to associate the policy with.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      PolicyName:
        type: policyNameType
        description: '<p>The name of the policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      PolicyDocument:
        type: policyDocumentType
        description: <p>The policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  RemoveClientIDFromOpenIDConnectProviderRequest:
    type: object
    properties:
      OpenIDConnectProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM OIDC provider resource to remove the client ID from. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      ClientID:
        type: clientIDType
        description: <p>The client ID (also known as audience) to remove from the IAM OIDC provider resource. For more information about client IDs, see <a>CreateOpenIDConnectProvider</a>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  RemoveRoleFromInstanceProfileRequest:
    type: object
    properties:
      InstanceProfileName:
        type: instanceProfileNameType
        description: '<p>The name of the instance profile to update.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to remove.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  RemoveUserFromGroupRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>The name of the group to update.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user to remove.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  ResourceSpecificResult:
    type: object
    properties:
      EvalResourceName:
        type: ResourceNameType
        description: <p>The name of the simulated resource, in Amazon Resource Name (ARN) format.</p>
      EvalResourceDecision:
        type: PolicyEvaluationDecisionType
        description: <p>The result of the simulation of the simulated API action on the resource specified in <code>EvalResourceName</code>.</p>
      MatchedStatements?:
        type: StatementListType
        description: <p>A list of the statements in the input policies that determine the result for this part of the simulation. Remember that even if multiple statements allow the action on the resource, if <i>any</i> statement denies that action, then the explicit deny overrides any allow, and the deny statement is the only entry included in the result.</p>
      MissingContextValues?:
        type: ContextKeyNamesResultListType
        description: <p>A list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when a list of ARNs is included in the <code>ResourceArns</code> parameter instead of "*". If you do not specify individual resources, by setting <code>ResourceArns</code> to "*" or by not including the <code>ResourceArns</code> parameter, then any missing context values are instead included under the <code>EvaluationResults</code> section. To discover the context keys used by a set of policies, you can call <a>GetContextKeysForCustomPolicy</a> or <a>GetContextKeysForPrincipalPolicy</a>.</p>
      EvalDecisionDetails?:
        type: EvalDecisionDetailsType
        description: <p>Additional details about the results of the evaluation decision. When there are both IAM policies and resource policies, this parameter explains how each set of policies contributes to the final evaluation decision. When simulating cross-account access to a resource, both the resource-based policy and the caller's IAM policy must grant access.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the result of the simulation of a single API action call on a single resource.</p> <p>This data type is used by a member of the <a>EvaluationResult</a> data type.</p>
  ResyncMFADeviceRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>The name of the user whose MFA device you want to resynchronize.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      SerialNumber:
        type: serialNumberType
        description: '<p>Serial number that uniquely identifies the MFA device.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      AuthenticationCode1:
        type: authenticationCodeType
        description: <p>An authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
      AuthenticationCode2:
        type: authenticationCodeType
        description: <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  Role:
    type: object
    properties:
      Path:
        type: pathType
        description: <p> The path to the role. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      RoleName:
        type: roleNameType
        description: <p>The friendly name that identifies the role.</p>
      RoleId:
        type: idType
        description: <p> The stable and unique string identifying the role. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      Arn:
        type: arnType
        description: <p> The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      CreateDate:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the role was created.</p>
      AssumeRolePolicyDocument?:
        type: policyDocumentType
        description: <p>The policy that grants an entity permission to assume the role.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an IAM role.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateRole</a> </p> </li> <li> <p> <a>GetRole</a> </p> </li> <li> <p> <a>ListRoles</a> </p> </li> </ul>
  RoleDetail:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p>The path to the role. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      RoleName?:
        type: roleNameType
        description: <p>The friendly name that identifies the role.</p>
      RoleId?:
        type: idType
        description: <p>The stable and unique string identifying the role. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      Arn?:
        type: arnType
      CreateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the role was created.</p>
      AssumeRolePolicyDocument?:
        type: policyDocumentType
        description: <p>The trust policy that grants permission to assume the role.</p>
      InstanceProfileList?:
        type: instanceProfileListType
      RolePolicyList?:
        type: policyDetailListType
        description: <p>A list of inline policies embedded in the role. These policies are the role's access (permissions) policies.</p>
      AttachedManagedPolicies?:
        type: attachedPoliciesListType
        description: <p>A list of managed policies attached to the role. These policies are the role's access (permissions) policies.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an IAM role, including all of the role's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>
  SAMLProviderListEntry:
    type: object
    properties:
      Arn?:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the SAML provider.</p>
      ValidUntil?:
        type: dateType
        description: <p>The expiration date and time for the SAML provider.</p>
      CreateDate?:
        type: dateType
        description: <p>The date and time when the SAML provider was created.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the list of SAML providers for this account.</p>
  SSHPublicKey:
    type: object
    properties:
      UserName:
        type: userNameType
        description: <p>The name of the IAM user associated with the SSH public key.</p>
      SSHPublicKeyId:
        type: publicKeyIdType
        description: <p>The unique identifier for the SSH public key.</p>
      Fingerprint:
        type: publicKeyFingerprintType
        description: <p>The MD5 message digest of the SSH public key.</p>
      SSHPublicKeyBody:
        type: publicKeyMaterialType
        description: <p>The SSH public key.</p>
      Status:
        type: statusType
        description: <p>The status of the SSH public key. <code>Active</code> means the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means the key cannot be used.</p>
      UploadDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the SSH public key was uploaded.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an SSH public key.</p> <p>This data type is used as a response element in the <a>GetSSHPublicKey</a> and <a>UploadSSHPublicKey</a> actions. </p>
  SSHPublicKeyMetadata:
    type: object
    properties:
      UserName:
        type: userNameType
        description: <p>The name of the IAM user associated with the SSH public key.</p>
      SSHPublicKeyId:
        type: publicKeyIdType
        description: <p>The unique identifier for the SSH public key.</p>
      Status:
        type: statusType
        description: <p>The status of the SSH public key. <code>Active</code> means the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means the key cannot be used.</p>
      UploadDate:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the SSH public key was uploaded.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an SSH public key, without the key's body or fingerprint.</p> <p>This data type is used as a response element in the <a>ListSSHPublicKeys</a> action.</p>
  ServerCertificate:
    type: object
    properties:
      ServerCertificateMetadata:
        type: ServerCertificateMetadata
        description: <p>The meta information of the server certificate, such as its name, path, ID, and ARN.</p>
      CertificateBody:
        type: certificateBodyType
        description: <p>The contents of the public key certificate.</p>
      CertificateChain?:
        type: certificateChainType
        description: <p>The contents of the public key certificate chain.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a server certificate.</p> <p> This data type is used as a response element in the <a>GetServerCertificate</a> action. </p>
  ServerCertificateMetadata:
    type: object
    properties:
      Path:
        type: pathType
        description: <p> The path to the server certificate. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      ServerCertificateName:
        type: serverCertificateNameType
        description: <p>The name that identifies the server certificate.</p>
      ServerCertificateId:
        type: idType
        description: <p> The stable and unique string identifying the server certificate. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      Arn:
        type: arnType
        description: <p> The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      UploadDate?:
        type: dateType
        description: <p>The date when the server certificate was uploaded.</p>
      Expiration?:
        type: dateType
        description: <p>The date on which the certificate is set to expire.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a server certificate without its certificate body, certificate chain, and private key.</p> <p> This data type is used as a response element in the <a>UploadServerCertificate</a> and <a>ListServerCertificates</a> actions. </p>
  SetDefaultPolicyVersionRequest:
    type: object
    properties:
      PolicyArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM policy whose default version you want to set.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      VersionId:
        type: policyVersionIdType
        description: <p>The version of the policy to set as the default (operative) version.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  SigningCertificate:
    type: object
    properties:
      UserName:
        type: userNameType
        description: <p>The name of the user the signing certificate is associated with.</p>
      CertificateId:
        type: certificateIdType
        description: <p>The ID for the signing certificate.</p>
      CertificateBody:
        type: certificateBodyType
        description: <p>The contents of the signing certificate.</p>
      Status:
        type: statusType
        description: <p>The status of the signing certificate. <code>Active</code> means the key is valid for API calls, while <code>Inactive</code> means it is not.</p>
      UploadDate?:
        type: dateType
        description: <p>The date when the signing certificate was uploaded.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an X.509 signing certificate.</p> <p>This data type is used as a response element in the <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a> actions. </p>
  SimulateCustomPolicyRequest:
    type: object
    properties:
      PolicyInputList:
        type: SimulationPolicyListType
        description: <p>A list of policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy. Do not include any resource-based policies in this parameter. Any resource-based policy must be submitted with the <code>ResourcePolicy</code> parameter. The policies cannot be "scope-down" policies, such as you could include in a call to <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetFederationToken.html">GetFederationToken</a> or one of the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_AssumeRole.html">AssumeRole</a> APIs to restrict what a user can do while using the temporary credentials.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      ActionNames:
        type: ActionNameListType
        description: <p>A list of names of API actions to evaluate in the simulation. Each action is evaluated against each resource. Each action must include the service identifier, such as <code>iam:CreateUser</code>.</p>
      ResourceArns?:
        type: ResourceNameListType
        description: <p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>If you include a <code>ResourcePolicy</code>, then it must be applicable to all of the resources included in the simulation or you receive an invalid input error.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      ResourcePolicy?:
        type: policyDocumentType
        description: <p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      ResourceOwner?:
        type: ResourceNameType
        description: <p>An AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN, such as an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.</p>
      CallerArn?:
        type: ResourceNameType
        description: <p>The ARN of the IAM user that you want to use as the simulated caller of the APIs. <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> so that the policy's <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p>
      ContextEntries?:
        type: ContextEntryListType
        description: <p>A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permission policies, the corresponding value is supplied.</p>
      ResourceHandlingOption?:
        type: ResourceHandlingOptionType
        description: <p>Specifies the type of simulation to run. Different APIs that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security-group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network-interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported Platforms</a> in the <i>AWS EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security-group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security-group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security-group, network-interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security-group, network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet, volume</p> </li> </ul>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  SimulatePolicyResponse:
    type: object
    properties:
      EvaluationResults?:
        type: EvaluationResultsListType
        description: <p>The results of the simulation.</p>
      IsTruncated?:
        type: booleanType
        description: <p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.</p>
      Marker?:
        type: markerType
        description: <p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>SimulatePrincipalPolicy</a> or <a>SimulateCustomPolicy</a> request.</p>
  SimulatePrincipalPolicyRequest:
    type: object
    properties:
      PolicySourceArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of a user, group, or role whose policies you want to include in the simulation. If you specify a user, group, or role, the simulation includes all policies that are associated with that entity. If you specify a user, the simulation also includes all policies that are attached to any groups the user belongs to.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      PolicyInputList?:
        type: SimulationPolicyListType
        description: <p>An optional list of additional policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      ActionNames:
        type: ActionNameListType
        description: <p>A list of names of API actions to evaluate in the simulation. Each action is evaluated for each resource. Each action must include the service identifier, such as <code>iam:CreateUser</code>.</p>
      ResourceArns?:
        type: ResourceNameListType
        description: <p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      ResourcePolicy?:
        type: policyDocumentType
        description: <p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      ResourceOwner?:
        type: ResourceNameType
        description: <p>An AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN, such as an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.</p>
      CallerArn?:
        type: ResourceNameType
        description: <p>The ARN of the IAM user that you want to specify as the simulated caller of the APIs. If you do not specify a <code>CallerArn</code>, it defaults to the ARN of the user that you specify in <code>PolicySourceArn</code>, if you specified a user. If you include both a <code>PolicySourceArn</code> (for example, <code>arn:aws:iam::123456789012:user/David</code>) and a <code>CallerArn</code> (for example, <code>arn:aws:iam::123456789012:user/Bob</code>), the result is that you simulate calling the APIs as Bob, as if Bob had David's policies.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p> <p> <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> and the <code>PolicySourceArn</code> is not the ARN for an IAM user. This is required so that the resource-based policy's <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      ContextEntries?:
        type: ContextEntryListType
        description: <p>A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permission policies, the corresponding value is supplied.</p>
      ResourceHandlingOption?:
        type: ResourceHandlingOptionType
        description: <p>Specifies the type of simulation to run. Different APIs that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security-group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network-interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported Platforms</a> in the <i>AWS EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security-group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security-group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security-group, network-interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security-group, network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet, volume</p> </li> </ul>
      MaxItems?:
        type: maxItemsType
        description: <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
      Marker?:
        type: markerType
        description: <p>Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  Statement:
    type: object
    properties:
      SourcePolicyId?:
        type: PolicyIdentifierType
        description: <p>The identifier of the policy that was provided as an input.</p>
      SourcePolicyType?:
        type: PolicySourceType
        description: <p>The type of the policy.</p>
      StartPosition?:
        type: Position
        description: <p>The row and column of the beginning of the <code>Statement</code> in an IAM policy.</p>
      EndPosition?:
        type: Position
        description: <p>The row and column of the end of a <code>Statement</code> in an IAM policy.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains a reference to a <code>Statement</code> element in a policy document that determines the result of the simulation.</p> <p>This data type is used by the <code>MatchedStatements</code> member of the <code> <a>EvaluationResult</a> </code> type.</p>
  UpdateAccessKeyRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the user whose key you want to update.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      AccessKeyId:
        type: accessKeyIdType
        description: <p>The access key ID of the secret access key you want to update.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that can consist of any upper or lowercased letter or digit.</p>
      Status:
        type: statusType
        description: <p> The status you want to assign to the secret access key. <code>Active</code> means the key can be used for API calls to AWS, while <code>Inactive</code> means the key cannot be used.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateAccountPasswordPolicyRequest:
    type: object
    properties:
      MinimumPasswordLength?:
        type: minimumPasswordLengthType
        description: '<p>The minimum number of characters allowed in an IAM user password.</p>
          <p>Default value: 6</p>'
      RequireSymbols?:
        type: booleanType
        description: '<p>Specifies whether IAM user passwords must contain at least
          one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp;amp;
          * ( ) _ + - = [ ] { } | ''</p> <p>Default value: false</p>'
      RequireNumbers?:
        type: booleanType
        description: '<p>Specifies whether IAM user passwords must contain at least
          one numeric character (0 to 9).</p> <p>Default value: false</p>'
      RequireUppercaseCharacters?:
        type: booleanType
        description: '<p>Specifies whether IAM user passwords must contain at least
          one uppercase character from the ISO basic Latin alphabet (A to Z).</p>
          <p>Default value: false</p>'
      RequireLowercaseCharacters?:
        type: booleanType
        description: '<p>Specifies whether IAM user passwords must contain at least
          one lowercase character from the ISO basic Latin alphabet (a to z).</p>
          <p>Default value: false</p>'
      AllowUsersToChangePassword?:
        type: booleanType
        description: '<p> Allows all IAM users in your account to use the AWS Management
          Console to change their own passwords. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html">Letting
          IAM Users Change Their Own Passwords</a> in the <i>IAM User Guide</i>.</p>
          <p>Default value: false</p>'
      MaxPasswordAge?:
        type: maxPasswordAgeType
        description: '<p>The number of days that an IAM user password is valid. The
          default value of 0 means IAM user passwords never expire.</p> <p>Default
          value: 0</p>'
      PasswordReusePrevention?:
        type: passwordReusePreventionType
        description: '<p>Specifies the number of previous passwords that IAM users
          are prevented from reusing. The default value of 0 means IAM users are not
          prevented from reusing previous passwords.</p> <p>Default value: 0</p>'
      HardExpiry?:
        type: booleanObjectType | nil
        description: '<p>Prevents IAM users from setting a new password after their
          password has expired.</p> <p>Default value: false</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateAssumeRolePolicyRequest:
    type: object
    properties:
      RoleName:
        type: roleNameType
        description: '<p>The name of the role to update with the new policy.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter
          is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      PolicyDocument:
        type: policyDocumentType
        description: <p>The policy that grants an entity permission to assume the role.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateGroupRequest:
    type: object
    properties:
      GroupName:
        type: groupNameType
        description: '<p>Name of the IAM group to update. If you''re changing the
          name of the group, this is the original name.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      NewPath?:
        type: pathType
        description: <p>New path for the IAM group. Only include this if changing the group's path.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      NewGroupName?:
        type: groupNameType
        description: '<p>New name for the IAM group. Only include this if changing
          the group''s name.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateLoginProfileRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the user whose password you want to update.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      Password?:
        type: passwordType
        description: <p>The new password for the specified IAM user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D). However, the format can be further restricted by the account administrator by setting a password policy on the AWS account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>
      PasswordResetRequired?:
        type: booleanObjectType | nil
        description: <p>Allows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateOpenIDConnectProviderThumbprintRequest:
    type: object
    properties:
      OpenIDConnectProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the IAM OIDC provider resource object for which you want to update the thumbprint. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
      ThumbprintList:
        type: thumbprintListType
        description: <p>A list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see <a>CreateOpenIDConnectProvider</a>. </p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateSAMLProviderRequest:
    type: object
    properties:
      SAMLMetadataDocument:
        type: SAMLMetadataDocumentType
        description: <p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.</p>
      SAMLProviderArn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the SAML provider to update.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateSAMLProviderResponse:
    type: object
    properties:
      SAMLProviderArn?:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) of the SAML provider that was updated.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>UpdateSAMLProvider</a> request. </p>
  UpdateSSHPublicKeyRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the IAM user associated with the SSH public key.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      SSHPublicKeyId:
        type: publicKeyIdType
        description: <p>The unique identifier for the SSH public key.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that can consist of any upper or lowercased letter or digit.</p>
      Status:
        type: statusType
        description: <p>The status to assign to the SSH public key. <code>Active</code> means the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means the key cannot be used.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateServerCertificateRequest:
    type: object
    properties:
      ServerCertificateName:
        type: serverCertificateNameType
        description: '<p>The name of the server certificate that you want to update.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      NewPath?:
        type: pathType
        description: <p>The new path for the server certificate. Include this only if you are updating the server certificate's path.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      NewServerCertificateName?:
        type: serverCertificateNameType
        description: '<p>The new name for the server certificate. Include this only
          if you are updating the server certificate''s name. The name of the certificate
          cannot contain any spaces.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateSigningCertificateRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the IAM user the signing certificate belongs
          to.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
      CertificateId:
        type: certificateIdType
        description: <p>The ID of the signing certificate you want to update.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that can consist of any upper or lowercased letter or digit.</p>
      Status:
        type: statusType
        description: <p> The status you want to assign to the certificate. <code>Active</code> means the certificate can be used for API calls to AWS, while <code>Inactive</code> means the certificate cannot be used.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UpdateUserRequest:
    type: object
    properties:
      UserName:
        type: existingUserNameType
        description: '<p>Name of the user to update. If you''re changing the name
          of the user, this is the original user name.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
      NewPath?:
        type: pathType
        description: <p>New path for the IAM user. Include this parameter only if you're changing the user's path.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>
      NewUserName?:
        type: userNameType
        description: '<p>New name for the user. Include this parameter only if you''re
          changing the user''s name.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> for this parameter is a string of characters consisting of upper
          and lowercase alphanumeric characters with no spaces. You can also include
          any of the following characters: =,.@-</p>'
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UploadSSHPublicKeyRequest:
    type: object
    properties:
      UserName:
        type: userNameType
        description: '<p>The name of the IAM user to associate the SSH public key
          with.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          for this parameter is a string of characters consisting of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: =,.@-</p>'
      SSHPublicKeyBody:
        type: publicKeyMaterialType
        description: <p>The SSH public key. The public key must be encoded in ssh-rsa format or PEM format.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UploadSSHPublicKeyResponse:
    type: object
    properties:
      SSHPublicKey?:
        type: SSHPublicKey
        description: <p>Contains information about the SSH public key.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>UploadSSHPublicKey</a> request.</p>
  UploadServerCertificateRequest:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p>The path for the server certificate. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/). The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes, containing any ASCII character from the ! (\u0021) thru the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p> If you are uploading a server certificate specifically for use with Amazon CloudFront distributions, you must specify a path using the <code>--path</code> option. The path must begin with <code>/cloudfront</code> and must include a trailing slash (for example, <code>/cloudfront/test/</code>).</p> </note>
      ServerCertificateName:
        type: serverCertificateNameType
        description: '<p>The name for the server certificate. Do not include the path
          in this value. The name of the certificate cannot contain any spaces.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      CertificateBody:
        type: certificateBodyType
        description: <p>The contents of the public key certificate in PEM-encoded format.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      PrivateKey:
        type: privateKeyType
        description: <p>The contents of the private key in PEM-encoded format.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
      CertificateChain?:
        type: certificateChainType
        description: <p>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UploadServerCertificateResponse:
    type: object
    properties:
      ServerCertificateMetadata?:
        type: ServerCertificateMetadata
        description: <p>The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>UploadServerCertificate</a> request. </p>
  UploadSigningCertificateRequest:
    type: object
    properties:
      UserName?:
        type: existingUserNameType
        description: '<p>The name of the user the signing certificate is for.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this
          parameter is a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@-</p>'
      CertificateBody:
        type: certificateBodyType
        description: <p>The contents of the signing certificate.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters consisting of any printable ASCII character ranging from the space character (\u0020) through end of the ASCII character range (\u00FF). It also includes the special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D).</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
  UploadSigningCertificateResponse:
    type: object
    properties:
      Certificate:
        type: SigningCertificate
        description: <p>Information about the certificate.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains the response to a successful <a>UploadSigningCertificate</a> request. </p>
  User:
    type: object
    properties:
      Path:
        type: pathType
        description: <p>The path to the user. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      UserName:
        type: userNameType
        description: <p>The friendly name identifying the user.</p>
      UserId:
        type: idType
        description: <p>The stable and unique string identifying the user. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      Arn:
        type: arnType
        description: <p>The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>
      CreateDate:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the user was created.</p>
      PasswordLastUsed?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the user's password was last used to sign in to an AWS website. For a list of AWS websites that capture a user's last sign-in time, see the <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Credential Reports</a> topic in the <i>Using IAM</i> guide. If a password is used more than once in a five-minute span, only the first use is returned in this field. This field is null (not present) when:</p> <ul> <li> <p>The user does not have a password</p> </li> <li> <p>The password exists but has never been used (at least not since IAM started tracking this information on October 20th, 2014</p> </li> <li> <p>there is no sign-in data associated with the user</p> </li> </ul> <p>This value is returned only in the <a>GetUser</a> and <a>ListUsers</a> actions. </p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an IAM user entity.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateUser</a> </p> </li> <li> <p> <a>GetUser</a> </p> </li> <li> <p> <a>ListUsers</a> </p> </li> </ul>
  UserDetail:
    type: object
    properties:
      Path?:
        type: pathType
        description: <p>The path to the user. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      UserName?:
        type: userNameType
        description: <p>The friendly name identifying the user.</p>
      UserId?:
        type: idType
        description: <p>The stable and unique string identifying the user. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>
      Arn?:
        type: arnType
      CreateDate?:
        type: dateType
        description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the user was created.</p>
      UserPolicyList?:
        type: policyDetailListType
        description: <p>A list of the inline policies embedded in the user.</p>
      GroupList?:
        type: groupNameListType
        description: <p>A list of IAM groups that the user is in.</p>
      AttachedManagedPolicies?:
        type: attachedPoliciesListType
        description: <p>A list of the managed policies attached to the user.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about an IAM user, including all the user's policies and all the IAM groups the user is in.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>
  VirtualMFADevice:
    type: object
    properties:
      SerialNumber:
        type: serialNumberType
        description: <p>The serial number associated with <code>VirtualMFADevice</code>.</p>
      Base32StringSeed?:
        type: BootstrapDatum
        description: <p> The Base32 seed defined as specified in <a href="http://www.ietf.org/rfc/rfc3548.txt">RFC3548</a>. The <code>Base32StringSeed</code> is Base64-encoded. </p>
      QRCodePNG?:
        type: BootstrapDatum
        description: <p> A QR code PNG image that encodes <code>otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String</code> where <code>$virtualMFADeviceName</code> is one of the create call arguments, <code>AccountName</code> is the user name if set (otherwise, the account ID otherwise), and <code>Base32String</code> is the seed in Base32 format. The <code>Base32String</code> value is Base64-encoded. </p>
      User?:
        type: User
      EnableDate?:
        type: dateType
        description: <p>The date and time on which the virtual MFA device was enabled.</p>
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
    description: <p>Contains information about a virtual MFA device.</p>
  summaryMapType:
    type: object
    properties:
      //:
        type: summaryValueType
    xml:
      namespace: https://iam.amazonaws.com/doc/2010-05-08/
/{AddClientIDToOpenIDConnectProvider}:
  uriParameters:
    AddClientIDToOpenIDConnectProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Add Client I D To Open I D Connect Provider
  post:
    description: Adds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect (OIDC) provider resource. This action is idempotent; it does not fail or return an error if you add an existing client ID to the provider.
    displayName: Add Client I D To Open I D Connect Provider
    queryParameters:
      Action:
        type: string
        enum:
        - AddClientIDToOpenIDConnectProvider
    body:
      application/xml: AddClientIDToOpenIDConnectProviderRequest
    responses:
      200:
        body:
          application/xml: null
      400:
        description: InvalidInput
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{AddRoleToInstanceProfile}:
  uriParameters:
    AddRoleToInstanceProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Add Role To Instance Profile
  post:
    description: Adds the specified IAM role to the specified instance profile. <note> The caller of this API must be granted the <code>PassRole</code> permission on the IAM role by a permission policy. </note> For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.
    displayName: Add Role To Instance Profile
    queryParameters:
      Action:
        type: string
        enum:
        - AddRoleToInstanceProfile
    body:
      application/xml: AddRoleToInstanceProfileRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: EntityAlreadyExists
      500:
        description: ServiceFailure
/{AddUserToGroup}:
  uriParameters:
    AddUserToGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Add User To Group
  post:
    description: Adds the specified user to the specified group.
    displayName: Add User To Group
    queryParameters:
      Action:
        type: string
        enum:
        - AddUserToGroup
    body:
      application/xml: AddUserToGroupRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{AttachGroupPolicy}:
  uriParameters:
    AttachGroupPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Attach Group Policy
  post:
    description: Attaches the specified managed policy to the specified IAM group. You use this API to attach a managed policy to a group. To embed an inline policy in a group, use <a>PutGroupPolicy</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Attach Group Policy
    queryParameters:
      Action:
        type: string
        enum:
        - AttachGroupPolicy
    body:
      application/xml: AttachGroupPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{AttachRolePolicy}:
  uriParameters:
    AttachRolePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Attach Role Policy
  post:
    description: Attaches the specified managed policy to the specified IAM role. When you attach a managed policy to a role, the managed policy becomes part of the role's permission (access) policy. You cannot use a managed policy as the role's trust policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. Use this API to attach a <i>managed</i> policy to a role. To embed an inline policy in a role, use <a>PutRolePolicy</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Attach Role Policy
    queryParameters:
      Action:
        type: string
        enum:
        - AttachRolePolicy
    body:
      application/xml: AttachRolePolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{AttachUserPolicy}:
  uriParameters:
    AttachUserPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Attach User Policy
  post:
    description: Attaches the specified managed policy to the specified user. You use this API to attach a <i>managed</i> policy to a user. To embed an inline policy in a user, use <a>PutUserPolicy</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Attach User Policy
    queryParameters:
      Action:
        type: string
        enum:
        - AttachUserPolicy
    body:
      application/xml: AttachUserPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{ChangePassword}:
  uriParameters:
    ChangePassword?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Change Password
  post:
    description: Changes the password of the IAM user who is calling this action. The root account password is not affected by this action. To change the password for a different user, see <a>UpdateLoginProfile</a>. For more information about modifying passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing Passwords</a> in the <i>IAM User Guide</i>.
    displayName: Change Password
    queryParameters:
      Action:
        type: string
        enum:
        - ChangePassword
    body:
      application/xml: ChangePasswordRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      400:
        description: InvalidUserType
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{CreateAccessKey}:
  uriParameters:
    CreateAccessKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Access Key
  post:
    description: ' Creates a new AWS secret access key and corresponding AWS access
      key ID for the specified user. The default status for new keys is <code>Active</code>.
      If you do not specify a user name, IAM determines the user name implicitly based
      on the AWS access key ID signing the request. Because this action works for
      access keys under the AWS account, you can use this action to manage root credentials
      even if the AWS account has no associated users.  For information about limits
      on the number of keys you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations
      on IAM Entities</a> in the <i>IAM User Guide</i>. <important> To ensure the
      security of your AWS account, the secret access key is accessible only during
      key and user creation. You must save the key (for example, in a text file) if
      you want to be able to access it again. If a secret key is lost, you can delete
      the access keys for the associated user and then create new keys. </important>'
    displayName: Create Access Key
    queryParameters:
      Action:
        type: string
        enum:
        - CreateAccessKey
    body:
      application/xml: CreateAccessKeyRequest
    responses:
      200:
        body:
          application/xml: CreateAccessKeyResponse
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{CreateAccountAlias}:
  uriParameters:
    CreateAccountAlias?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Account Alias
  post:
    description: Creates an alias for your AWS account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.
    displayName: Create Account Alias
    queryParameters:
      Action:
        type: string
        enum:
        - CreateAccountAlias
    body:
      application/xml: CreateAccountAliasRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: EntityAlreadyExists
      500:
        description: ServiceFailure
/{CreateGroup}:
  uriParameters:
    CreateGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Group
  post:
    description: Creates a new group.  For information about the number of groups you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.
    displayName: Create Group
    queryParameters:
      Action:
        type: string
        enum:
        - CreateGroup
    body:
      application/xml: CreateGroupRequest
    responses:
      200:
        body:
          application/xml: CreateGroupResponse
      409:
        description: LimitExceeded
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{CreateInstanceProfile}:
  uriParameters:
    CreateInstanceProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Instance Profile
  post:
    description: ' Creates a new instance profile. For information about instance
      profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
      Instance Profiles</a>.  For information about the number of instance profiles
      you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations
      on IAM Entities</a> in the <i>IAM User Guide</i>.'
    displayName: Create Instance Profile
    queryParameters:
      Action:
        type: string
        enum:
        - CreateInstanceProfile
    body:
      application/xml: CreateInstanceProfileRequest
    responses:
      200:
        body:
          application/xml: CreateInstanceProfileResponse
      409:
        description: EntityAlreadyExists
      500:
        description: ServiceFailure
/{CreateLoginProfile}:
  uriParameters:
    CreateLoginProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Login Profile
  post:
    description: ' Creates a password for the specified user, giving the user the
      ability to access AWS services through the AWS Management Console. For more
      information about managing passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
      Passwords</a> in the <i>IAM User Guide</i>.'
    displayName: Create Login Profile
    queryParameters:
      Action:
        type: string
        enum:
        - CreateLoginProfile
    body:
      application/xml: CreateLoginProfileRequest
    responses:
      200:
        body:
          application/xml: CreateLoginProfileResponse
      409:
        description: EntityAlreadyExists
      404:
        description: NoSuchEntity
      400:
        description: PasswordPolicyViolation
      500:
        description: ServiceFailure
/{CreateOpenIDConnectProvider}:
  uriParameters:
    CreateOpenIDConnectProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Open I D Connect Provider
  post:
    description: Creates an IAM entity to describe an identity provider (IdP) that supports <a href="http://openid.net/connect/">OpenID Connect (OIDC)</a>. The OIDC provider that you create with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and the OIDC provider. When you create the IAM OIDC provider, you specify the URL of the OIDC identity provider (IdP) to trust, a list of client IDs (also known as audiences) that identify the application or applications that are allowed to authenticate using the OIDC provider, and a list of thumbprints of the server certificate(s) that the IdP uses. You get all of this information from the OIDC IdP that you want to use for access to AWS. <note> Because trust for the OIDC provider is ultimately derived from the IAM provider that this action creates, it is a best practice to limit access to the <a>CreateOpenIDConnectProvider</a> action to highly-privileged users. </note>
    displayName: Create Open I D Connect Provider
    queryParameters:
      Action:
        type: string
        enum:
        - CreateOpenIDConnectProvider
    body:
      application/xml: CreateOpenIDConnectProviderRequest
    responses:
      200:
        body:
          application/xml: CreateOpenIDConnectProviderResponse
      400:
        description: InvalidInput
      409:
        description: EntityAlreadyExists
      500:
        description: ServiceFailure
/{CreatePolicy}:
  uriParameters:
    CreatePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Policy
  post:
    description: Creates a new managed policy for your AWS account. This operation creates a policy version with a version identifier of <code>v1</code> and sets v1 as the policy's default version. For more information about policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>. For more information about managed policies in general, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Create Policy
    queryParameters:
      Action:
        type: string
        enum:
        - CreatePolicy
    body:
      application/xml: CreatePolicyRequest
    responses:
      200:
        body:
          application/xml: CreatePolicyResponse
      400:
        description: InvalidInput
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{CreatePolicyVersion}:
  uriParameters:
    CreatePolicyVersion?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Policy Version
  post:
    description: Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using <a>DeletePolicyVersion</a> before you create a new version. Optionally, you can set the new version as the policy's default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy is attached. For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.
    displayName: Create Policy Version
    queryParameters:
      Action:
        type: string
        enum:
        - CreatePolicyVersion
    body:
      application/xml: CreatePolicyVersionRequest
    responses:
      200:
        body:
          application/xml: CreatePolicyVersionResponse
      404:
        description: NoSuchEntity
      400:
        description: MalformedPolicyDocument
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{CreateRole}:
  uriParameters:
    CreateRole?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Role
  post:
    description: Creates a new role for your AWS account. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. For information about limitations on role names and the number of roles you can create, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.
    displayName: Create Role
    queryParameters:
      Action:
        type: string
        enum:
        - CreateRole
    body:
      application/xml: CreateRoleRequest
    responses:
      200:
        body:
          application/xml: CreateRoleResponse
      409:
        description: LimitExceeded
      400:
        description: MalformedPolicyDocument
      500:
        description: ServiceFailure
/{CreateSAMLProvider}:
  uriParameters:
    CreateSAMLProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create S A M L Provider
  post:
    description: Creates an IAM resource that describes an identity provider (IdP) that supports SAML 2.0. The SAML provider resource that you create with this operation can be used as a principal in an IAM role's trust policy to enable federated users who sign-in using the SAML IdP to assume the role. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API access to AWS. When you create the SAML provider resource, you upload an a SAML metadata document that you get from your IdP and that includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that the IdP sends. You must generate the metadata document using the identity management software that is used as your organization's IdP. <note>  This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>. </note>  For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html">Enabling SAML 2.0 Federated Users to Access the AWS Management Console</a> and <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>.
    displayName: Create S A M L Provider
    queryParameters:
      Action:
        type: string
        enum:
        - CreateSAMLProvider
    body:
      application/xml: CreateSAMLProviderRequest
    responses:
      200:
        body:
          application/xml: CreateSAMLProviderResponse
      400:
        description: InvalidInput
      409:
        description: EntityAlreadyExists
      500:
        description: ServiceFailure
/{CreateUser}:
  uriParameters:
    CreateUser?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create User
  post:
    description: Creates a new IAM user for your AWS account.  For information about limitations on the number of IAM users you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.
    displayName: Create User
    queryParameters:
      Action:
        type: string
        enum:
        - CreateUser
    body:
      application/xml: CreateUserRequest
    responses:
      200:
        body:
          application/xml: CreateUserResponse
      409:
        description: LimitExceeded
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{CreateVirtualMFADevice}:
  uriParameters:
    CreateVirtualMFADevice?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Create Virtual M F A Device
  post:
    description: Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a>EnableMFADevice</a> to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>. For information about limits on the number of MFA devices you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on Entities</a> in the <i>IAM User Guide</i>. <important> The seed information contained in the QR code and the Base32 string should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures. </important>
    displayName: Create Virtual M F A Device
    queryParameters:
      Action:
        type: string
        enum:
        - CreateVirtualMFADevice
    body:
      application/xml: CreateVirtualMFADeviceRequest
    responses:
      200:
        body:
          application/xml: CreateVirtualMFADeviceResponse
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeactivateMFADevice}:
  uriParameters:
    DeactivateMFADevice?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Deactivate M F A Device
  post:
    description: Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled. For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.
    displayName: Deactivate M F A Device
    queryParameters:
      Action:
        type: string
        enum:
        - DeactivateMFADevice
    body:
      application/xml: DeactivateMFADeviceRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: EntityTemporarilyUnmodifiable
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{DeleteAccessKey}:
  uriParameters:
    DeleteAccessKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Access Key
  post:
    description: Deletes the access key pair associated with the specified IAM user. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users.
    displayName: Delete Access Key
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteAccessKey
    body:
      application/xml: DeleteAccessKeyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeleteAccountAlias}:
  uriParameters:
    DeleteAccountAlias?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Account Alias
  post:
    description: ' Deletes the specified AWS account alias. For information about
      using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
      an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.'
    displayName: Delete Account Alias
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteAccountAlias
    body:
      application/xml: DeleteAccountAliasRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeleteAccountPasswordPolicy}:
  uriParameters:
    DeleteAccountPasswordPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Account Password Policy
  post:
    description: Deletes the password policy for the AWS account. There are no parameters.
    displayName: Delete Account Password Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteAccountPasswordPolicy
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeleteGroup}:
  uriParameters:
    DeleteGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Group
  post:
    description: Deletes the specified IAM group. The group must not contain any users or have any attached policies.
    displayName: Delete Group
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteGroup
    body:
      application/xml: DeleteGroupRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: DeleteConflict
      500:
        description: ServiceFailure
/{DeleteGroupPolicy}:
  uriParameters:
    DeleteGroupPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Group Policy
  post:
    description: Deletes the specified inline policy that is embedded in the specified IAM group. A group can also have managed policies attached to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>. For more information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Delete Group Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteGroupPolicy
    body:
      application/xml: DeleteGroupPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeleteInstanceProfile}:
  uriParameters:
    DeleteInstanceProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Instance Profile
  post:
    description: Deletes the specified instance profile. The instance profile must not have an associated role. <important> Make sure you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance. </important> For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.
    displayName: Delete Instance Profile
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteInstanceProfile
    body:
      application/xml: DeleteInstanceProfileRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: DeleteConflict
      500:
        description: ServiceFailure
/{DeleteLoginProfile}:
  uriParameters:
    DeleteLoginProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Login Profile
  post:
    description: Deletes the password for the specified IAM user, which terminates the user's ability to access AWS services through the AWS Management Console. <important>  Deleting a user's password does not prevent a user from accessing AWS through the command line interface or the API. To prevent all user access you must also either make any access keys inactive or delete them. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>.  </important>
    displayName: Delete Login Profile
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteLoginProfile
    body:
      application/xml: DeleteLoginProfileRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: EntityTemporarilyUnmodifiable
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{DeleteOpenIDConnectProvider}:
  uriParameters:
    DeleteOpenIDConnectProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Open I D Connect Provider
  post:
    description: Deletes an OpenID Connect identity provider (IdP) resource object in IAM. Deleting an IAM OIDC provider resource does not update any roles that reference the provider as a principal in their trust policies. Any attempt to assume a role that references a deleted provider fails. This action is idempotent; it does not fail or return an error if you call the action for a provider that does not exist.
    displayName: Delete Open I D Connect Provider
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteOpenIDConnectProvider
    body:
      application/xml: DeleteOpenIDConnectProviderRequest
    responses:
      200:
        body:
          application/xml: null
      400:
        description: InvalidInput
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{DeletePolicy}:
  uriParameters:
    DeletePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Policy
  post:
    description: 'Deletes the specified managed policy. Before you can delete a managed
      policy, you must first detach the policy from all users, groups, and roles that
      it is attached to, and you must delete all of the policy''s versions. The following
      steps describe the process for deleting a managed policy: <ul> <li> Detach the
      policy from all users, groups, and roles that the policy is attached to, using
      the <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>, or <a>DetachRolePolicy</a>
      APIs. To list all the users, groups, and roles that a policy is attached to,
      use <a>ListEntitiesForPolicy</a>. </li> <li> Delete all versions of the policy
      using <a>DeletePolicyVersion</a>. To list the policy''s versions, use <a>ListPolicyVersions</a>.
      You cannot use <a>DeletePolicyVersion</a> to delete the version that is marked
      as the default version. You delete the policy''s default version in the next
      step of the process. </li> <li> Delete the policy (this automatically deletes
      the policy''s default version) using this API. </li> </ul> For information about
      managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
      Policies and Inline Policies</a> in the <i>IAM User Guide</i>.'
    displayName: Delete Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DeletePolicy
    body:
      application/xml: DeletePolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{DeletePolicyVersion}:
  uriParameters:
    DeletePolicyVersion?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Policy Version
  post:
    description: Deletes the specified version from the specified managed policy. You cannot delete the default version from a policy using this API. To delete the default version from a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>. For information about versions for managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.
    displayName: Delete Policy Version
    queryParameters:
      Action:
        type: string
        enum:
        - DeletePolicyVersion
    body:
      application/xml: DeletePolicyVersionRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{DeleteRole}:
  uriParameters:
    DeleteRole?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Role
  post:
    description: Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. <important> Make sure you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance. </important>
    displayName: Delete Role
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteRole
    body:
      application/xml: DeleteRoleRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: DeleteConflict
      500:
        description: ServiceFailure
/{DeleteRolePolicy}:
  uriParameters:
    DeleteRolePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Role Policy
  post:
    description: Deletes the specified inline policy that is embedded in the specified IAM role. A role can also have managed policies attached to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>. For more information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Delete Role Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteRolePolicy
    body:
      application/xml: DeleteRolePolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeleteSAMLProvider}:
  uriParameters:
    DeleteSAMLProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete S A M L Provider
  post:
    description: Deletes a SAML provider resource in IAM. Deleting the provider resource from IAM does not update any roles that reference the SAML provider resource's ARN as a principal in their trust policies. Any attempt to assume a role that references a non-existent provider resource ARN fails. <note>  This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>. </note>
    displayName: Delete S A M L Provider
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteSAMLProvider
    body:
      application/xml: DeleteSAMLProviderRequest
    responses:
      200:
        body:
          application/xml: null
      400:
        description: InvalidInput
      409:
        description: LimitExceeded
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{DeleteSSHPublicKey}:
  uriParameters:
    DeleteSSHPublicKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete S S H Public Key
  post:
    description: Deletes the specified SSH public key. The SSH public key deleted by this action is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.
    displayName: Delete S S H Public Key
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteSSHPublicKey
    body:
      application/xml: DeleteSSHPublicKeyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
/{DeleteServerCertificate}:
  uriParameters:
    DeleteServerCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Server Certificate
  post:
    description: Deletes the specified server certificate. For more information about working with server certificates, including a list of AWS services that can use the server certificates that you manage with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. <important>  If you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, go to <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html">DeleteLoadBalancerListeners</a> in the <i>Elastic Load Balancing API Reference</i>. </important>
    displayName: Delete Server Certificate
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteServerCertificate
    body:
      application/xml: DeleteServerCertificateRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: DeleteConflict
      500:
        description: ServiceFailure
/{DeleteSigningCertificate}:
  uriParameters:
    DeleteSigningCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Signing Certificate
  post:
    description: Deletes a signing certificate associated with the specified IAM user. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated IAM users.
    displayName: Delete Signing Certificate
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteSigningCertificate
    body:
      application/xml: DeleteSigningCertificateRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeleteUser}:
  uriParameters:
    DeleteUser?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete User
  post:
    description: Deletes the specified IAM user. The user must not belong to any groups or have any access keys, signing certificates, or attached policies.
    displayName: Delete User
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteUser
    body:
      application/xml: DeleteUserRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: LimitExceeded
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{DeleteUserPolicy}:
  uriParameters:
    DeleteUserPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete User Policy
  post:
    description: Deletes the specified inline policy that is embedded in the specified IAM user. A user can also have managed policies attached to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>. For more information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Delete User Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteUserPolicy
    body:
      application/xml: DeleteUserPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{DeleteVirtualMFADevice}:
  uriParameters:
    DeleteVirtualMFADevice?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Virtual M F A Device
  post:
    description: Deletes a virtual MFA device. <note>  You must deactivate a user's virtual MFA device before you can delete it. For information about deactivating MFA devices, see <a>DeactivateMFADevice</a>.  </note>
    displayName: Delete Virtual M F A Device
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteVirtualMFADevice
    body:
      application/xml: DeleteVirtualMFADeviceRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: DeleteConflict
      500:
        description: ServiceFailure
/{DetachGroupPolicy}:
  uriParameters:
    DetachGroupPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Detach Group Policy
  post:
    description: Removes the specified managed policy from the specified IAM group. A group can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteGroupPolicy</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Detach Group Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DetachGroupPolicy
    body:
      application/xml: DetachGroupPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{DetachRolePolicy}:
  uriParameters:
    DetachRolePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Detach Role Policy
  post:
    description: Removes the specified managed policy from the specified role. A role can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteRolePolicy</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Detach Role Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DetachRolePolicy
    body:
      application/xml: DetachRolePolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{DetachUserPolicy}:
  uriParameters:
    DetachUserPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Detach User Policy
  post:
    description: Removes the specified managed policy from the specified user. A user can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteUserPolicy</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Detach User Policy
    queryParameters:
      Action:
        type: string
        enum:
        - DetachUserPolicy
    body:
      application/xml: DetachUserPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{EnableMFADevice}:
  uriParameters:
    EnableMFADevice?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Enable M F A Device
  post:
    description: Enables the specified MFA device and associates it with the specified IAM user. When enabled, the MFA device is required for every subsequent login by the IAM user associated with the device.
    displayName: Enable M F A Device
    queryParameters:
      Action:
        type: string
        enum:
        - EnableMFADevice
    body:
      application/xml: EnableMFADeviceRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: EntityAlreadyExists
      403:
        description: InvalidAuthenticationCode
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GenerateCredentialReport}:
  uriParameters:
    GenerateCredentialReport?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Generate Credential Report
  post:
    description: ' Generates a credential report for the AWS account. For more information
      about the credential report, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting
      Credential Reports</a> in the <i>IAM User Guide</i>.'
    displayName: Generate Credential Report
    queryParameters:
      Action:
        type: string
        enum:
        - GenerateCredentialReport
    responses:
      200:
        body:
          application/xml: GenerateCredentialReportResponse
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{GetAccessKeyLastUsed}:
  uriParameters:
    GetAccessKeyLastUsed?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Access Key Last Used
  post:
    description: Retrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the AWS service and region that were specified in the last request made with that key.
    displayName: Get Access Key Last Used
    queryParameters:
      Action:
        type: string
        enum:
        - GetAccessKeyLastUsed
    body:
      application/xml: GetAccessKeyLastUsedRequest
    responses:
      200:
        body:
          application/xml: GetAccessKeyLastUsedResponse
      404:
        description: NoSuchEntity
/{GetAccountAuthorizationDetails}:
  uriParameters:
    GetAccountAuthorizationDetails?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Account Authorization Details
  post:
    description: Retrieves information about all IAM users, groups, roles, and policies in your AWS account, including their relationships to one another. Use this API to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account. You can optionally filter the results using the <code>Filter</code> parameter. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: Get Account Authorization Details
    queryParameters:
      Action:
        type: string
        enum:
        - GetAccountAuthorizationDetails
    body:
      application/xml: GetAccountAuthorizationDetailsRequest
    responses:
      200:
        body:
          application/xml: GetAccountAuthorizationDetailsResponse
      500:
        description: ServiceFailure
/{GetAccountPasswordPolicy}:
  uriParameters:
    GetAccountPasswordPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Account Password Policy
  post:
    description: Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a>.
    displayName: Get Account Password Policy
    queryParameters:
      Action:
        type: string
        enum:
        - GetAccountPasswordPolicy
    responses:
      200:
        body:
          application/xml: GetAccountPasswordPolicyResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetAccountSummary}:
  uriParameters:
    GetAccountSummary?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Account Summary
  post:
    description: Retrieves information about IAM entity usage and IAM quotas in the AWS account.  For information about limitations on IAM entities, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.
    displayName: Get Account Summary
    queryParameters:
      Action:
        type: string
        enum:
        - GetAccountSummary
    responses:
      200:
        body:
          application/xml: GetAccountSummaryResponse
      500:
        description: ServiceFailure
/{GetContextKeysForCustomPolicy}:
  uriParameters:
    GetContextKeysForCustomPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Context Keys For Custom Policy
  post:
    description: Gets a list of all of the context keys referenced in the input policies. The policies are supplied as a list of one or more strings. To get the context keys from policies associated with an IAM user, group, or role, use <a>GetContextKeysForPrincipalPolicy</a>. Context keys are variables maintained by AWS and its services that provide details about the context of an API query request, and can be evaluated by testing against a value specified in an IAM policy. Use GetContextKeysForCustomPolicy to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>. Note that all parameters are shown in unencoded form here for clarity, but must be URL encoded to be included as a part of a real HTML request.
    displayName: Get Context Keys For Custom Policy
    queryParameters:
      Action:
        type: string
        enum:
        - GetContextKeysForCustomPolicy
    body:
      application/xml: GetContextKeysForCustomPolicyRequest
    responses:
      200:
        body:
          application/xml: GetContextKeysForPolicyResponse
      400:
        description: InvalidInput
/{GetContextKeysForPrincipalPolicy}:
  uriParameters:
    GetContextKeysForPrincipalPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Context Keys For Principal Policy
  post:
    description: Gets a list of all of the context keys referenced in all of the IAM policies attached to the specified IAM entity. The entity can be an IAM user, group, or role. If you specify a user, then the request also includes all of the policies attached to groups that the user is a member of. You can optionally include a list of one or more additional policies, specified as strings. If you want to include <i>only</i> a list of policies by string, use <a>GetContextKeysForCustomPolicy</a> instead.  <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>GetContextKeysForCustomPolicy</a> instead. Context keys are variables maintained by AWS and its services that provide details about the context of an API query request, and can be evaluated by testing against a value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a> to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.
    displayName: Get Context Keys For Principal Policy
    queryParameters:
      Action:
        type: string
        enum:
        - GetContextKeysForPrincipalPolicy
    body:
      application/xml: GetContextKeysForPrincipalPolicyRequest
    responses:
      200:
        body:
          application/xml: GetContextKeysForPolicyResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
/{GetCredentialReport}:
  uriParameters:
    GetCredentialReport?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Credential Report
  post:
    description: ' Retrieves a credential report for the AWS account. For more information
      about the credential report, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting
      Credential Reports</a> in the <i>IAM User Guide</i>.'
    displayName: Get Credential Report
    queryParameters:
      Action:
        type: string
        enum:
        - GetCredentialReport
    responses:
      200:
        body:
          application/xml: GetCredentialReportResponse
      410:
        description: ReportNotPresent
      404:
        description: ReportInProgress
      500:
        description: ServiceFailure
/{GetGroup}:
  uriParameters:
    GetGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Group
  post:
    description: ' Returns a list of IAM users that are in the specified IAM group.
      You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
      parameters.'
    displayName: Get Group
    queryParameters:
      Action:
        type: string
        enum:
        - GetGroup
    body:
      application/xml: GetGroupRequest
    responses:
      200:
        body:
          application/xml: GetGroupResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetGroupPolicy}:
  uriParameters:
    GetGroupPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Group Policy
  post:
    description: Retrieves the specified inline policy document that is embedded in the specified IAM group. <note> Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality. </note> An IAM group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Get Group Policy
    queryParameters:
      Action:
        type: string
        enum:
        - GetGroupPolicy
    body:
      application/xml: GetGroupPolicyRequest
    responses:
      200:
        body:
          application/xml: GetGroupPolicyResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetInstanceProfile}:
  uriParameters:
    GetInstanceProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Instance Profile
  post:
    description: ' Retrieves information about the specified instance profile, including
      the instance profile''s path, GUID, ARN, and role. For more information about
      instance profiles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
      Instance Profiles</a> in the <i>IAM User Guide</i>.'
    displayName: Get Instance Profile
    queryParameters:
      Action:
        type: string
        enum:
        - GetInstanceProfile
    body:
      application/xml: GetInstanceProfileRequest
    responses:
      200:
        body:
          application/xml: GetInstanceProfileResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetLoginProfile}:
  uriParameters:
    GetLoginProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Login Profile
  post:
    description: Retrieves the user name and password-creation date for the specified IAM user. If the user has not been assigned a password, the action returns a 404 (<code>NoSuchEntity</code>) error.
    displayName: Get Login Profile
    queryParameters:
      Action:
        type: string
        enum:
        - GetLoginProfile
    body:
      application/xml: GetLoginProfileRequest
    responses:
      200:
        body:
          application/xml: GetLoginProfileResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetOpenIDConnectProvider}:
  uriParameters:
    GetOpenIDConnectProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Open I D Connect Provider
  post:
    description: Returns information about the specified OpenID Connect (OIDC) provider resource object in IAM.
    displayName: Get Open I D Connect Provider
    queryParameters:
      Action:
        type: string
        enum:
        - GetOpenIDConnectProvider
    body:
      application/xml: GetOpenIDConnectProviderRequest
    responses:
      200:
        body:
          application/xml: GetOpenIDConnectProviderResponse
      400:
        description: InvalidInput
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetPolicy}:
  uriParameters:
    GetPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Policy
  post:
    description: Retrieves information about the specified managed policy, including the policy's default version and the total number of IAM users, groups, and roles to which the policy is attached. To retrieve the list of the specific users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API. This API returns metadata about the policy. To retrieve the actual policy document for a specific version of the policy, use <a>GetPolicyVersion</a>. This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded with an IAM user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Get Policy
    queryParameters:
      Action:
        type: string
        enum:
        - GetPolicy
    body:
      application/xml: GetPolicyRequest
    responses:
      200:
        body:
          application/xml: GetPolicyResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{GetPolicyVersion}:
  uriParameters:
    GetPolicyVersion?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Policy Version
  post:
    description: Retrieves information about the specified version of the specified managed policy, including the policy document. <note> Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality. </note> To list the available versions for a policy, use <a>ListPolicyVersions</a>. This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API. For more information about the types of policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.
    displayName: Get Policy Version
    queryParameters:
      Action:
        type: string
        enum:
        - GetPolicyVersion
    body:
      application/xml: GetPolicyVersionRequest
    responses:
      200:
        body:
          application/xml: GetPolicyVersionResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{GetRole}:
  uriParameters:
    GetRole?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Role
  post:
    description: Retrieves information about the specified role, including the role's path, GUID, ARN, and the role's trust policy that grants permission to assume the role. For more information about roles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. <note> Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality. </note>
    displayName: Get Role
    queryParameters:
      Action:
        type: string
        enum:
        - GetRole
    body:
      application/xml: GetRoleRequest
    responses:
      200:
        body:
          application/xml: GetRoleResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetRolePolicy}:
  uriParameters:
    GetRolePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Role Policy
  post:
    description: Retrieves the specified inline policy document that is embedded with the specified IAM role. <note> Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality. </note> An IAM role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. For more information about roles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using Roles to Delegate Permissions and Federate Identities</a>.
    displayName: Get Role Policy
    queryParameters:
      Action:
        type: string
        enum:
        - GetRolePolicy
    body:
      application/xml: GetRolePolicyRequest
    responses:
      200:
        body:
          application/xml: GetRolePolicyResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetSAMLProvider}:
  uriParameters:
    GetSAMLProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get S A M L Provider
  post:
    description: Returns the SAML provider metadocument that was uploaded when the IAM SAML provider resource object was created or updated. <note> This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>. </note>
    displayName: Get S A M L Provider
    queryParameters:
      Action:
        type: string
        enum:
        - GetSAMLProvider
    body:
      application/xml: GetSAMLProviderRequest
    responses:
      200:
        body:
          application/xml: GetSAMLProviderResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{GetSSHPublicKey}:
  uriParameters:
    GetSSHPublicKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get S S H Public Key
  post:
    description: Retrieves the specified SSH public key, including metadata about the key. The SSH public key retrieved by this action is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.
    displayName: Get S S H Public Key
    queryParameters:
      Action:
        type: string
        enum:
        - GetSSHPublicKey
    body:
      application/xml: GetSSHPublicKeyRequest
    responses:
      200:
        body:
          application/xml: GetSSHPublicKeyResponse
      404:
        description: NoSuchEntity
      400:
        description: UnrecognizedPublicKeyEncoding
/{GetServerCertificate}:
  uriParameters:
    GetServerCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Server Certificate
  post:
    description: Retrieves information about the specified server certificate stored in IAM. For more information about working with server certificates, including a list of AWS services that can use the server certificates that you manage with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>.
    displayName: Get Server Certificate
    queryParameters:
      Action:
        type: string
        enum:
        - GetServerCertificate
    body:
      application/xml: GetServerCertificateRequest
    responses:
      200:
        body:
          application/xml: GetServerCertificateResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetUser}:
  uriParameters:
    GetUser?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get User
  post:
    description: Retrieves information about the specified IAM user, including the user's creation date, path, unique ID, and ARN. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID used to sign the request to this API.
    displayName: Get User
    queryParameters:
      Action:
        type: string
        enum:
        - GetUser
    body:
      application/xml: GetUserRequest
    responses:
      200:
        body:
          application/xml: GetUserResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{GetUserPolicy}:
  uriParameters:
    GetUserPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get User Policy
  post:
    description: Retrieves the specified inline policy document that is embedded in the specified IAM user. <note> Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality. </note> An IAM user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Get User Policy
    queryParameters:
      Action:
        type: string
        enum:
        - GetUserPolicy
    body:
      application/xml: GetUserPolicyRequest
    responses:
      200:
        body:
          application/xml: GetUserPolicyResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListAccessKeys}:
  uriParameters:
    ListAccessKeys?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Access Keys
  post:
    description: Returns information about the access key IDs associated with the specified IAM user. If there are none, the action returns an empty list. Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. <note> To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. </note>
    displayName: List Access Keys
    queryParameters:
      Action:
        type: string
        enum:
        - ListAccessKeys
    body:
      application/xml: ListAccessKeysRequest
    responses:
      200:
        body:
          application/xml: ListAccessKeysResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListAccountAliases}:
  uriParameters:
    ListAccountAliases?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Account Aliases
  post:
    description: 'Lists the account alias associated with the AWS account (Note: you
      can have only one). For information about using an AWS account alias, see <a
      href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
      an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.'
    displayName: List Account Aliases
    queryParameters:
      Action:
        type: string
        enum:
        - ListAccountAliases
    body:
      application/xml: ListAccountAliasesRequest
    responses:
      200:
        body:
          application/xml: ListAccountAliasesResponse
      500:
        description: ServiceFailure
/{ListAttachedGroupPolicies}:
  uriParameters:
    ListAttachedGroupPolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Attached Group Policies
  post:
    description: Lists all managed policies that are attached to the specified IAM group. An IAM group can also have inline policies embedded with it. To list the inline policies for a group, use the <a>ListGroupPolicies</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the action returns an empty list.
    displayName: List Attached Group Policies
    queryParameters:
      Action:
        type: string
        enum:
        - ListAttachedGroupPolicies
    body:
      application/xml: ListAttachedGroupPoliciesRequest
    responses:
      200:
        body:
          application/xml: ListAttachedGroupPoliciesResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{ListAttachedRolePolicies}:
  uriParameters:
    ListAttachedRolePolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Attached Role Policies
  post:
    description: Lists all managed policies that are attached to the specified IAM role. An IAM role can also have inline policies embedded with it. To list the inline policies for a role, use the <a>ListRolePolicies</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the action returns an empty list.
    displayName: List Attached Role Policies
    queryParameters:
      Action:
        type: string
        enum:
        - ListAttachedRolePolicies
    body:
      application/xml: ListAttachedRolePoliciesRequest
    responses:
      200:
        body:
          application/xml: ListAttachedRolePoliciesResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{ListAttachedUserPolicies}:
  uriParameters:
    ListAttachedUserPolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Attached User Policies
  post:
    description: Lists all managed policies that are attached to the specified IAM user. An IAM user can also have inline policies embedded with it. To list the inline policies for a user, use the <a>ListUserPolicies</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the action returns an empty list.
    displayName: List Attached User Policies
    queryParameters:
      Action:
        type: string
        enum:
        - ListAttachedUserPolicies
    body:
      application/xml: ListAttachedUserPoliciesRequest
    responses:
      200:
        body:
          application/xml: ListAttachedUserPoliciesResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{ListEntitiesForPolicy}:
  uriParameters:
    ListEntitiesForPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Entities For Policy
  post:
    description: Lists all IAM users, groups, and roles that the specified managed policy is attached to. You can use the optional <code>EntityFilter</code> parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set <code>EntityFilter</code> to <code>Role</code>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Entities For Policy
    queryParameters:
      Action:
        type: string
        enum:
        - ListEntitiesForPolicy
    body:
      application/xml: ListEntitiesForPolicyRequest
    responses:
      200:
        body:
          application/xml: ListEntitiesForPolicyResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{ListGroupPolicies}:
  uriParameters:
    ListGroupPolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Group Policies
  post:
    description: Lists the names of the inline policies that are embedded in the specified IAM group. An IAM group can also have managed policies attached to it. To list the managed policies that are attached to a group, use <a>ListAttachedGroupPolicies</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified group, the action returns an empty list.
    displayName: List Group Policies
    queryParameters:
      Action:
        type: string
        enum:
        - ListGroupPolicies
    body:
      application/xml: ListGroupPoliciesRequest
    responses:
      200:
        body:
          application/xml: ListGroupPoliciesResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListGroups}:
  uriParameters:
    ListGroups?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Groups
  post:
    description: Lists the IAM groups that have the specified path prefix.  You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Groups
    queryParameters:
      Action:
        type: string
        enum:
        - ListGroups
    body:
      application/xml: ListGroupsRequest
    responses:
      200:
        body:
          application/xml: ListGroupsResponse
      500:
        description: ServiceFailure
/{ListGroupsForUser}:
  uriParameters:
    ListGroupsForUser?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Groups For User
  post:
    description: Lists the IAM groups that the specified IAM user belongs to. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Groups For User
    queryParameters:
      Action:
        type: string
        enum:
        - ListGroupsForUser
    body:
      application/xml: ListGroupsForUserRequest
    responses:
      200:
        body:
          application/xml: ListGroupsForUserResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListInstanceProfiles}:
  uriParameters:
    ListInstanceProfiles?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Instance Profiles
  post:
    description: Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Instance Profiles
    queryParameters:
      Action:
        type: string
        enum:
        - ListInstanceProfiles
    body:
      application/xml: ListInstanceProfilesRequest
    responses:
      200:
        body:
          application/xml: ListInstanceProfilesResponse
      500:
        description: ServiceFailure
/{ListInstanceProfilesForRole}:
  uriParameters:
    ListInstanceProfilesForRole?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Instance Profiles For Role
  post:
    description: Lists the instance profiles that have the specified associated IAM role. If there are none, the action returns an empty list. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Instance Profiles For Role
    queryParameters:
      Action:
        type: string
        enum:
        - ListInstanceProfilesForRole
    body:
      application/xml: ListInstanceProfilesForRoleRequest
    responses:
      200:
        body:
          application/xml: ListInstanceProfilesForRoleResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListMFADevices}:
  uriParameters:
    ListMFADevices?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List M F A Devices
  post:
    description: Lists the MFA devices for an IAM user. If the request includes a IAM user name, then this action lists all the MFA devices associated with the specified user. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request for this API. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List M F A Devices
    queryParameters:
      Action:
        type: string
        enum:
        - ListMFADevices
    body:
      application/xml: ListMFADevicesRequest
    responses:
      200:
        body:
          application/xml: ListMFADevicesResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListOpenIDConnectProviders}:
  uriParameters:
    ListOpenIDConnectProviders?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Open I D Connect Providers
  post:
    description: Lists information about the IAM OpenID Connect (OIDC) provider resource objects defined in the AWS account.
    displayName: List Open I D Connect Providers
    queryParameters:
      Action:
        type: string
        enum:
        - ListOpenIDConnectProviders
    body:
      application/xml: ListOpenIDConnectProvidersRequest
    responses:
      200:
        body:
          application/xml: ListOpenIDConnectProvidersResponse
      500:
        description: ServiceFailure
/{ListPolicies}:
  uriParameters:
    ListPolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Policies
  post:
    description: Lists all the managed policies that are available in your AWS account, including your own customer-defined managed policies and all AWS managed policies. You can filter the list of policies that is returned using the optional <code>OnlyAttached</code>, <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>. To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. For more information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: List Policies
    queryParameters:
      Action:
        type: string
        enum:
        - ListPolicies
    body:
      application/xml: ListPoliciesRequest
    responses:
      200:
        body:
          application/xml: ListPoliciesResponse
      500:
        description: ServiceFailure
/{ListPolicyVersions}:
  uriParameters:
    ListPolicyVersions?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Policy Versions
  post:
    description: Lists information about the versions of the specified managed policy, including the version that is currently set as the policy's default version. For more information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: List Policy Versions
    queryParameters:
      Action:
        type: string
        enum:
        - ListPolicyVersions
    body:
      application/xml: ListPolicyVersionsRequest
    responses:
      200:
        body:
          application/xml: ListPolicyVersionsResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: ServiceFailure
/{ListRolePolicies}:
  uriParameters:
    ListRolePolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Role Policies
  post:
    description: Lists the names of the inline policies that are embedded in the specified IAM role. An IAM role can also have managed policies attached to it. To list the managed policies that are attached to a role, use <a>ListAttachedRolePolicies</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified role, the action returns an empty list.
    displayName: List Role Policies
    queryParameters:
      Action:
        type: string
        enum:
        - ListRolePolicies
    body:
      application/xml: ListRolePoliciesRequest
    responses:
      200:
        body:
          application/xml: ListRolePoliciesResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListRoles}:
  uriParameters:
    ListRoles?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Roles
  post:
    description: Lists the IAM roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Roles
    queryParameters:
      Action:
        type: string
        enum:
        - ListRoles
    body:
      application/xml: ListRolesRequest
    responses:
      200:
        body:
          application/xml: ListRolesResponse
      500:
        description: ServiceFailure
/{ListSAMLProviders}:
  uriParameters:
    ListSAMLProviders?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List S A M L Providers
  post:
    description: Lists the SAML provider resource objects defined in IAM in the account. <note>  This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>. </note>
    displayName: List S A M L Providers
    queryParameters:
      Action:
        type: string
        enum:
        - ListSAMLProviders
    body:
      application/xml: ListSAMLProvidersRequest
    responses:
      200:
        body:
          application/xml: ListSAMLProvidersResponse
      500:
        description: ServiceFailure
/{ListSSHPublicKeys}:
  uriParameters:
    ListSSHPublicKeys?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List S S H Public Keys
  post:
    description: Returns information about the SSH public keys associated with the specified IAM user. If there are none, the action returns an empty list. The SSH public keys returned by this action are used only for authenticating the IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>. Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List S S H Public Keys
    queryParameters:
      Action:
        type: string
        enum:
        - ListSSHPublicKeys
    body:
      application/xml: ListSSHPublicKeysRequest
    responses:
      200:
        body:
          application/xml: ListSSHPublicKeysResponse
      404:
        description: NoSuchEntity
/{ListServerCertificates}:
  uriParameters:
    ListServerCertificates?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Server Certificates
  post:
    description: Lists the server certificates stored in IAM that have the specified path prefix. If none exist, the action returns an empty list.  You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. For more information about working with server certificates, including a list of AWS services that can use the server certificates that you manage with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>.
    displayName: List Server Certificates
    queryParameters:
      Action:
        type: string
        enum:
        - ListServerCertificates
    body:
      application/xml: ListServerCertificatesRequest
    responses:
      200:
        body:
          application/xml: ListServerCertificatesResponse
      500:
        description: ServiceFailure
/{ListSigningCertificates}:
  uriParameters:
    ListSigningCertificates?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Signing Certificates
  post:
    description: Returns information about the signing certificates associated with the specified IAM user. If there are none, the action returns an empty list. Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request for this API. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users.
    displayName: List Signing Certificates
    queryParameters:
      Action:
        type: string
        enum:
        - ListSigningCertificates
    body:
      application/xml: ListSigningCertificatesRequest
    responses:
      200:
        body:
          application/xml: ListSigningCertificatesResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListUserPolicies}:
  uriParameters:
    ListUserPolicies?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List User Policies
  post:
    description: Lists the names of the inline policies embedded in the specified IAM user. An IAM user can also have managed policies attached to it. To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified user, the action returns an empty list.
    displayName: List User Policies
    queryParameters:
      Action:
        type: string
        enum:
        - ListUserPolicies
    body:
      application/xml: ListUserPoliciesRequest
    responses:
      200:
        body:
          application/xml: ListUserPoliciesResponse
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{ListUsers}:
  uriParameters:
    ListUsers?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Users
  post:
    description: Lists the IAM users that have the specified path prefix. If no path prefix is specified, the action returns all users in the AWS account. If there are none, the action returns an empty list. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Users
    queryParameters:
      Action:
        type: string
        enum:
        - ListUsers
    body:
      application/xml: ListUsersRequest
    responses:
      200:
        body:
          application/xml: ListUsersResponse
      500:
        description: ServiceFailure
/{ListVirtualMFADevices}:
  uriParameters:
    ListVirtualMFADevices?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Virtual M F A Devices
  post:
    description: Lists the virtual MFA devices defined in the AWS account by assignment status. If you do not specify an assignment status, the action returns a list of all virtual MFA devices. Assignment status can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.
    displayName: List Virtual M F A Devices
    queryParameters:
      Action:
        type: string
        enum:
        - ListVirtualMFADevices
    body:
      application/xml: ListVirtualMFADevicesRequest
    responses:
      200:
        body:
          application/xml: ListVirtualMFADevicesResponse
/{PutGroupPolicy}:
  uriParameters:
    PutGroupPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Put Group Policy
  post:
    description: Adds or updates an inline policy document that is embedded in the specified IAM group. A user can also have managed policies attached to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. For information about limits on the number of inline policies that you can embed in a group, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>. <note> Because policy documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>. </note>
    displayName: Put Group Policy
    queryParameters:
      Action:
        type: string
        enum:
        - PutGroupPolicy
    body:
      application/xml: PutGroupPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: LimitExceeded
      400:
        description: MalformedPolicyDocument
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{PutRolePolicy}:
  uriParameters:
    PutRolePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Put Role Policy
  post:
    description: Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. For more information about IAM roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using Roles to Delegate Permissions and Federate Identities</a>. A role can also have a managed policy attached to it. To attach a managed policy to a role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. For information about limits on the number of inline policies that you can embed with a role, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>. <note> Because policy documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>. </note>
    displayName: Put Role Policy
    queryParameters:
      Action:
        type: string
        enum:
        - PutRolePolicy
    body:
      application/xml: PutRolePolicyRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: LimitExceeded
      400:
        description: MalformedPolicyDocument
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{PutUserPolicy}:
  uriParameters:
    PutUserPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Put User Policy
  post:
    description: Adds or updates an inline policy document that is embedded in the specified IAM user. An IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>. For information about limits on the number of inline policies that you can embed in a user, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>. <note> Because policy documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>. </note>
    displayName: Put User Policy
    queryParameters:
      Action:
        type: string
        enum:
        - PutUserPolicy
    body:
      application/xml: PutUserPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: LimitExceeded
      400:
        description: MalformedPolicyDocument
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{RemoveClientIDFromOpenIDConnectProvider}:
  uriParameters:
    RemoveClientIDFromOpenIDConnectProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Remove Client I D From Open I D Connect Provider
  post:
    description: Removes the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect (OIDC) provider resource object. This action is idempotent; it does not fail or return an error if you try to remove a client ID that does not exist.
    displayName: Remove Client I D From Open I D Connect Provider
    queryParameters:
      Action:
        type: string
        enum:
        - RemoveClientIDFromOpenIDConnectProvider
    body:
      application/xml: RemoveClientIDFromOpenIDConnectProviderRequest
    responses:
      200:
        body:
          application/xml: null
      400:
        description: InvalidInput
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{RemoveRoleFromInstanceProfile}:
  uriParameters:
    RemoveRoleFromInstanceProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Remove Role From Instance Profile
  post:
    description: Removes the specified IAM role from the specified EC2 instance profile. <important> Make sure you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance break any applications running on the instance. </important>  For more information about IAM roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.
    displayName: Remove Role From Instance Profile
    queryParameters:
      Action:
        type: string
        enum:
        - RemoveRoleFromInstanceProfile
    body:
      application/xml: RemoveRoleFromInstanceProfileRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{RemoveUserFromGroup}:
  uriParameters:
    RemoveUserFromGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Remove User From Group
  post:
    description: Removes the specified user from the specified group.
    displayName: Remove User From Group
    queryParameters:
      Action:
        type: string
        enum:
        - RemoveUserFromGroup
    body:
      application/xml: RemoveUserFromGroupRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{ResyncMFADevice}:
  uriParameters:
    ResyncMFADevice?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Resync M F A Device
  post:
    description: Synchronizes the specified MFA device with its IAM resource object on the AWS servers. For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.
    displayName: Resync M F A Device
    queryParameters:
      Action:
        type: string
        enum:
        - ResyncMFADevice
    body:
      application/xml: ResyncMFADeviceRequest
    responses:
      200:
        body:
          application/xml: null
      403:
        description: InvalidAuthenticationCode
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{SetDefaultPolicyVersion}:
  uriParameters:
    SetDefaultPolicyVersion?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Set Default Policy Version
  post:
    description: Sets the specified version of the specified policy as the policy's default (operative) version. This action affects all users, groups, and roles that the policy is attached to. To list the users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API. For information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.
    displayName: Set Default Policy Version
    queryParameters:
      Action:
        type: string
        enum:
        - SetDefaultPolicyVersion
    body:
      application/xml: SetDefaultPolicyVersionRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{SimulateCustomPolicy}:
  uriParameters:
    SimulateCustomPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Simulate Custom Policy
  post:
    description: Simulate how a set of IAM policies and optionally a resource-based policy works with a list of API actions and AWS resources to determine the policies' effective permissions. The policies are provided as strings. The simulation does not perform the API actions; it only checks the authorization to determine if the simulated policies allow or deny the actions. If you want to simulate existing policies attached to an IAM user, group, or role, use <a>SimulatePrincipalPolicy</a> instead. Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForCustomPolicy</a>. If the output is long, you can use <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.
    displayName: Simulate Custom Policy
    queryParameters:
      Action:
        type: string
        enum:
        - SimulateCustomPolicy
    body:
      application/xml: SimulateCustomPolicyRequest
    responses:
      200:
        body:
          application/xml: SimulatePolicyResponse
      400:
        description: InvalidInput
      500:
        description: PolicyEvaluation
/{SimulatePrincipalPolicy}:
  uriParameters:
    SimulatePrincipalPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Simulate Principal Policy
  post:
    description: Simulate how a set of IAM policies attached to an IAM entity works with a list of API actions and AWS resources to determine the policies' effective permissions. The entity can be an IAM user, group, or role. If you specify a user, then the simulation also includes all of the policies that are attached to groups that the user belongs to . You can optionally include a list of one or more additional policies specified as strings to include in the simulation. If you want to simulate only policies specified as strings, use <a>SimulateCustomPolicy</a> instead. You can also optionally include one resource-based policy to be evaluated with each of the resources included in the simulation. The simulation does not perform the API actions, it only checks the authorization to determine if the simulated policies allow or deny the actions.  <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>SimulateCustomPolicy</a> instead. Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForPrincipalPolicy</a>. If the output is long, you can use the <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.
    displayName: Simulate Principal Policy
    queryParameters:
      Action:
        type: string
        enum:
        - SimulatePrincipalPolicy
    body:
      application/xml: SimulatePrincipalPolicyRequest
    responses:
      200:
        body:
          application/xml: SimulatePolicyResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      500:
        description: PolicyEvaluation
/{UpdateAccessKey}:
  uriParameters:
    UpdateAccessKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Access Key
  post:
    description: Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key as part of a key rotation work flow. If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. For information about rotating keys, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html">Managing Keys and Certificates</a> in the <i>IAM User Guide</i>.
    displayName: Update Access Key
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateAccessKey
    body:
      application/xml: UpdateAccessKeyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{UpdateAccountPasswordPolicy}:
  uriParameters:
    UpdateAccountPasswordPolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Account Password Policy
  post:
    description: Updates the password policy settings for the AWS account. <note> This action does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. </note>  For more information about using a password policy, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> in the <i>IAM User Guide</i>.
    displayName: Update Account Password Policy
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateAccountPasswordPolicy
    body:
      application/xml: UpdateAccountPasswordPolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      400:
        description: MalformedPolicyDocument
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{UpdateAssumeRolePolicy}:
  uriParameters:
    UpdateAssumeRolePolicy?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Assume Role Policy
  post:
    description: Updates the policy that grants an IAM entity permission to assume a role. This is typically referred to as the "role trust policy". For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using Roles to Delegate Permissions and Federate Identities</a>.
    displayName: Update Assume Role Policy
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateAssumeRolePolicy
    body:
      application/xml: UpdateAssumeRolePolicyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      400:
        description: MalformedPolicyDocument
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{UpdateGroup}:
  uriParameters:
    UpdateGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Group
  post:
    description: Updates the name and/or the path of the specified IAM group. <important>  You should understand the implications of changing a group's path or name. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html">Renaming Users and Groups</a> in the <i>IAM User Guide</i>. </important> <note> To change an IAM group name the requester must have appropriate permissions on both the source object and the target object. For example, to change "Managers" to "MGRs", the entity making the request must have permission on both "Managers" and "MGRs", or must have permission on all (*). For more information about permissions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html">Permissions and Policies</a>.  </note>
    displayName: Update Group
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateGroup
    body:
      application/xml: UpdateGroupRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: EntityAlreadyExists
      500:
        description: ServiceFailure
/{UpdateLoginProfile}:
  uriParameters:
    UpdateLoginProfile?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Login Profile
  post:
    description: Changes the password for the specified IAM user. IAM users can change their own passwords by calling <a>ChangePassword</a>. For more information about modifying passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing Passwords</a> in the <i>IAM User Guide</i>.
    displayName: Update Login Profile
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateLoginProfile
    body:
      application/xml: UpdateLoginProfileRequest
    responses:
      200:
        body:
          application/xml: null
      409:
        description: EntityTemporarilyUnmodifiable
      404:
        description: NoSuchEntity
      400:
        description: PasswordPolicyViolation
      500:
        description: ServiceFailure
/{UpdateOpenIDConnectProviderThumbprint}:
  uriParameters:
    UpdateOpenIDConnectProviderThumbprint?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Open I D Connect Provider Thumbprint
  post:
    description: Replaces the existing list of server certificate thumbprints associated with an OpenID Connect (OIDC) provider resource object with a new list of thumbprints. The list that you pass with this action completely replaces the existing list of thumbprints. (The lists are not merged.) Typically, you need to update a thumbprint only when the identity provider's certificate changes, which occurs rarely. However, if the provider's certificate <i>does</i> change, any attempt to assume an IAM role that specifies the OIDC provider as a principal fails until the certificate thumbprint is updated. <note> Because trust for the OIDC provider is ultimately derived from the provider's certificate and is validated by the thumbprint, it is a best practice to limit access to the <code>UpdateOpenIDConnectProviderThumbprint</code> action to highly-privileged users. </note>
    displayName: Update Open I D Connect Provider Thumbprint
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateOpenIDConnectProviderThumbprint
    body:
      application/xml: UpdateOpenIDConnectProviderThumbprintRequest
    responses:
      200:
        body:
          application/xml: null
      400:
        description: InvalidInput
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
/{UpdateSAMLProvider}:
  uriParameters:
    UpdateSAMLProvider?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update S A M L Provider
  post:
    description: Updates the metadata document for an existing SAML provider resource object. <note> This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>. </note>
    displayName: Update S A M L Provider
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateSAMLProvider
    body:
      application/xml: UpdateSAMLProviderRequest
    responses:
      200:
        body:
          application/xml: UpdateSAMLProviderResponse
      404:
        description: NoSuchEntity
      400:
        description: InvalidInput
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{UpdateSSHPublicKey}:
  uriParameters:
    UpdateSSHPublicKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update S S H Public Key
  post:
    description: Sets the status of an IAM user's SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This action can be used to disable a user's SSH public key as part of a key rotation work flow. The SSH public key affected by this action is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.
    displayName: Update S S H Public Key
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateSSHPublicKey
    body:
      application/xml: UpdateSSHPublicKeyRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
/{UpdateServerCertificate}:
  uriParameters:
    UpdateServerCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Server Certificate
  post:
    description: Updates the name and/or the path of the specified server certificate stored in IAM. For more information about working with server certificates, including a list of AWS services that can use the server certificates that you manage with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. <important> You should understand the implications of changing a server certificate's path or name. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html#RenamingServerCerts">Renaming a Server Certificate</a> in the <i>IAM User Guide</i>. </important> <note> To change a server certificate name the requester must have appropriate permissions on both the source object and the target object. For example, to change the name from "ProductionCert" to "ProdCert", the entity making the request must have permission on "ProductionCert" and "ProdCert", or must have permission on all (*). For more information about permissions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access Management</a> in the <i>IAM User Guide</i>. </note>
    displayName: Update Server Certificate
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateServerCertificate
    body:
      application/xml: UpdateServerCertificateRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: EntityAlreadyExists
      500:
        description: ServiceFailure
/{UpdateSigningCertificate}:
  uriParameters:
    UpdateSigningCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update Signing Certificate
  post:
    description: Changes the status of the specified user signing certificate from active to disabled, or vice versa. This action can be used to disable an IAM user's signing certificate as part of a certificate rotation work flow. If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users.
    displayName: Update Signing Certificate
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateSigningCertificate
    body:
      application/xml: UpdateSigningCertificateRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{UpdateUser}:
  uriParameters:
    UpdateUser?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Update User
  post:
    description: Updates the name and/or the path of the specified IAM user. <important>  You should understand the implications of changing an IAM user's path or name. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_renaming">Renaming an IAM User</a> and <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_manage_rename.html">Renaming an IAM Group</a> in the <i>IAM User Guide</i>. </important> <note>  To change a user name the requester must have appropriate permissions on both the source object and the target object. For example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*). For more information about permissions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html">Permissions and Policies</a>.  </note>
    displayName: Update User
    queryParameters:
      Action:
        type: string
        enum:
        - UpdateUser
    body:
      application/xml: UpdateUserRequest
    responses:
      200:
        body:
          application/xml: null
      404:
        description: NoSuchEntity
      409:
        description: LimitExceeded
      500:
        description: ServiceFailure
/{UploadSSHPublicKey}:
  uriParameters:
    UploadSSHPublicKey?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Upload S S H Public Key
  post:
    description: Uploads an SSH public key and associates it with the specified IAM user. The SSH public key uploaded by this action can be used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.
    displayName: Upload S S H Public Key
    queryParameters:
      Action:
        type: string
        enum:
        - UploadSSHPublicKey
    body:
      application/xml: UploadSSHPublicKeyRequest
    responses:
      200:
        body:
          application/xml: UploadSSHPublicKeyResponse
      409:
        description: LimitExceeded
      404:
        description: NoSuchEntity
      400:
        description: InvalidPublicKey
/{UploadServerCertificate}:
  uriParameters:
    UploadServerCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Upload Server Certificate
  post:
    description: Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded. For more information about working with server certificates, including a list of AWS services that can use the server certificates that you manage with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. For information about the number of server certificates you can upload, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html">Limitations on IAM Entities and Objects</a> in the <i>IAM User Guide</i>. <note> Because the body of the public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling <code>UploadServerCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/programming.html">Calling the API by Making HTTP Query Requests</a> in the <i>IAM User Guide</i>. </note>
    displayName: Upload Server Certificate
    queryParameters:
      Action:
        type: string
        enum:
        - UploadServerCertificate
    body:
      application/xml: UploadServerCertificateRequest
    responses:
      200:
        body:
          application/xml: UploadServerCertificateResponse
      409:
        description: LimitExceeded
      400:
        description: MalformedCertificate
      500:
        description: ServiceFailure
/{UploadSigningCertificate}:
  uriParameters:
    UploadSigningCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Upload Signing Certificate
  post:
    description: Uploads an X.509 signing certificate and associates it with the specified IAM user. Some AWS services use X.509 signing certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>. If the <code>UserName</code> field is not specified, the IAM user name is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. <note> Because the body of a X.509 certificate can be large, you should use POST rather than GET when calling <code>UploadSigningCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>. </note>
    displayName: Upload Signing Certificate
    queryParameters:
      Action:
        type: string
        enum:
        - UploadSigningCertificate
    body:
      application/xml: UploadSigningCertificateRequest
    responses:
      200:
        body:
          application/xml: UploadSigningCertificateResponse
      409:
        description: LimitExceeded
      400:
        description: MalformedCertificate
      404:
        description: NoSuchEntity
      500:
        description: ServiceFailure
