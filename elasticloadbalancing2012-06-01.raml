#%RAML 1.0
title: Elastic Load Balancing
version: '2012-06-01'
description: '  A load balancer distributes incoming traffic across your EC2 instances.
  This enables you to increase the availability of your application. The load balancer
  also monitors the health of its registered instances and ensures that it routes
  traffic only to healthy instances. You configure your load balancer to accept incoming
  traffic by specifying one or more listeners, which are configured with a protocol
  and port number for connections from clients to the load balancer and a protocol
  and port number for connections from the load balancer to the instances.  Elastic
  Load Balancing supports two types of load balancers: Classic load balancers and
  Application load balancers (new). A Classic load balancer makes routing and load
  balancing decisions either at the transport layer (TCP/SSL) or the application layer
  (HTTP/HTTPS), and supports either EC2-Classic or a VPC. An Application load balancer
  makes routing and load balancing decisions at the application layer (HTTP/HTTPS),
  supports path-based routing, and can route requests to one or more ports on each
  EC2 instance or container instance in your virtual private cloud (VPC). For more
  information, see the .  This reference covers the 2012-06-01 API, which supports
  Classic load balancers. The 2015-12-01 API supports Application load balancers.  To
  get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>.
  Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.  All
  Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete
  at most one time. If you repeat an operation, it succeeds with a 200 OK response
  code.'
mediaType:
- application/xml
types:
  AccessLogEnabled:
    type: boolean
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AccessLogInterval:
    type: integer
    format: int
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AccessLogPrefix:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AccessPointName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AccessPointPort:
    type: integer
    format: int
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AdditionalAttributeKey:
    type: string
    pattern: ^[a-zA-Z0-9.]+$
    maxLength: 256
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AdditionalAttributeValue:
    type: string
    pattern: ^[a-zA-Z0-9.]+$
    maxLength: 256
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AdditionalAttributes:
    type: array
    maxItems: 10
    items:
      type: AdditionalAttribute
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AppCookieStickinessPolicies:
    type: array
    items:
      type: AppCookieStickinessPolicy
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AttributeName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AttributeType:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AttributeValue:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AvailabilityZone:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AvailabilityZones:
    type: array
    items:
      type: AvailabilityZone
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  BackendServerDescriptions:
    type: array
    items:
      type: BackendServerDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Cardinality:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  ConnectionDrainingEnabled:
    type: boolean
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  ConnectionDrainingTimeout:
    type: integer
    format: int
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  CookieExpirationPeriod:
    type: integer
    format: long
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  CookieName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  CreatedTime:
    type: datetime
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  CrossZoneLoadBalancingEnabled:
    type: boolean
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  DNSName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  DefaultValue:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Description:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  EndPointPort:
    type: integer
    format: int
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  HealthCheckInterval:
    type: integer
    format: int
    minimum: 5
    maximum: 300
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  HealthCheckTarget:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  HealthCheckTimeout:
    type: integer
    format: int
    minimum: 2
    maximum: 60
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  HealthyThreshold:
    type: integer
    format: int
    minimum: 2
    maximum: 10
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  IdleTimeout:
    type: integer
    format: int
    minimum: 1
    maximum: 3600
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  InstanceId:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  InstancePort:
    type: integer
    format: int
    minimum: 1
    maximum: 65535
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  InstanceStates:
    type: array
    items:
      type: InstanceState
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Instances:
    type: array
    items:
      type: Instance
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  LBCookieStickinessPolicies:
    type: array
    items:
      type: LBCookieStickinessPolicy
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  ListenerDescriptions:
    type: array
    items:
      type: ListenerDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Listeners:
    type: array
    items:
      type: Listener
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  LoadBalancerDescriptions:
    type: array
    items:
      type: LoadBalancerDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  LoadBalancerNames:
    type: array
    items:
      type: AccessPointName
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  LoadBalancerNamesMax20:
    type: array
    minItems: 1
    maxItems: 20
    items:
      type: AccessPointName
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  LoadBalancerScheme:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Marker:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PageSize:
    type: integer
    format: int
    minimum: 1
    maximum: 400
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyAttributeDescriptions:
    type: array
    items:
      type: PolicyAttributeDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyAttributeTypeDescriptions:
    type: array
    items:
      type: PolicyAttributeTypeDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyAttributes:
    type: array
    items:
      type: PolicyAttribute
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyDescriptions:
    type: array
    items:
      type: PolicyDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyNames:
    type: array
    items:
      type: PolicyName
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyTypeDescriptions:
    type: array
    items:
      type: PolicyTypeDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyTypeName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  PolicyTypeNames:
    type: array
    items:
      type: PolicyTypeName
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Ports:
    type: array
    items:
      type: AccessPointPort
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Protocol:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  ReasonCode:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  S3BucketName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  SSLCertificateId:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  SecurityGroupId:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  SecurityGroupName:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  SecurityGroupOwnerAlias:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  SecurityGroups:
    type: array
    items:
      type: SecurityGroupId
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  State:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  SubnetId:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  Subnets:
    type: array
    items:
      type: SubnetId
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  TagDescriptions:
    type: array
    items:
      type: TagDescription
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  TagKey:
    type: string
    pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
    minLength: 1
    maxLength: 128
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  TagKeyList:
    type: array
    minItems: 1
    items:
      type: TagKeyOnly
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  TagList:
    type: array
    minItems: 1
    items:
      type: Tag
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  TagValue:
    type: string
    pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
    minLength: 0
    maxLength: 256
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  UnhealthyThreshold:
    type: integer
    format: int
    minimum: 2
    maximum: 10
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  VPCId:
    type: string
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
  AccessLog:
    type: object
    properties:
      Enabled:
        type: AccessLogEnabled
        description: <p>Specifies whether access logs are enabled for the load balancer.</p>
      S3BucketName?:
        type: S3BucketName
        description: <p>The name of the Amazon S3 bucket where the access logs are stored.</p>
      EmitInterval?:
        type: AccessLogInterval
        description: '<p>The interval for publishing the access logs. You can specify
          an interval of either 5 minutes or 60 minutes.</p> <p>Default: 60 minutes</p>'
      S3BucketPrefix?:
        type: AccessLogPrefix
        description: <p>The logical hierarchy you created for your Amazon S3 bucket, for example <code>my-bucket-prefix/prod</code>. If the prefix is not provided, the log is placed at the root level of the bucket.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about the <code>AccessLog</code> attribute.</p>
  AddAvailabilityZonesInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      AvailabilityZones:
        type: AvailabilityZones
        description: <p>The Availability Zones. These must be in the same region as the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for EnableAvailabilityZonesForLoadBalancer.</p>
  AddAvailabilityZonesOutput:
    type: object
    properties:
      AvailabilityZones?:
        type: AvailabilityZones
        description: <p>The updated list of Availability Zones for the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of EnableAvailabilityZonesForLoadBalancer.</p>
  AddTagsInput:
    type: object
    properties:
      LoadBalancerNames:
        type: LoadBalancerNames
        description: <p>The name of the load balancer. You can specify one load balancer only.</p>
      Tags:
        type: TagList
        description: <p>The tags.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for AddTags.</p>
  AddTagsOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of AddTags.</p>
  AdditionalAttribute:
    type: object
    properties:
      Key?:
        type: AdditionalAttributeKey
        description: <p>This parameter is reserved.</p>
      Value?:
        type: AdditionalAttributeValue
        description: <p>This parameter is reserved.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>This data type is reserved.</p>
  AppCookieStickinessPolicy:
    type: object
    properties:
      PolicyName?:
        type: PolicyName
        description: <p>The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer.</p>
      CookieName?:
        type: CookieName
        description: <p>The name of the application cookie used for stickiness.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a policy for application-controlled session stickiness.</p>
  ApplySecurityGroupsToLoadBalancerInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      SecurityGroups:
        type: SecurityGroups
        description: <p>The IDs of the security groups to associate with the load balancer. Note that you cannot specify the name of the security group.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for ApplySecurityGroupsToLoadBalancer.</p>
  ApplySecurityGroupsToLoadBalancerOutput:
    type: object
    properties:
      SecurityGroups?:
        type: SecurityGroups
        description: <p>The IDs of the security groups associated with the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of ApplySecurityGroupsToLoadBalancer.</p>
  AttachLoadBalancerToSubnetsInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      Subnets:
        type: Subnets
        description: <p>The IDs of the subnets to add. You can add only one subnet per Availability Zone.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for AttachLoaBalancerToSubnets.</p>
  AttachLoadBalancerToSubnetsOutput:
    type: object
    properties:
      Subnets?:
        type: Subnets
        description: <p>The IDs of the subnets attached to the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of AttachLoadBalancerToSubnets.</p>
  BackendServerDescription:
    type: object
    properties:
      InstancePort?:
        type: InstancePort
        description: <p>The port on which the EC2 instance is listening.</p>
      PolicyNames?:
        type: PolicyNames
        description: <p>The names of the policies enabled for the EC2 instance.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about the configuration of an EC2 instance.</p>
  ConfigureHealthCheckInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      HealthCheck:
        type: HealthCheck
        description: <p>The configuration information.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for ConfigureHealthCheck.</p>
  ConfigureHealthCheckOutput:
    type: object
    properties:
      HealthCheck?:
        type: HealthCheck
        description: <p>The updated health check.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of ConfigureHealthCheck.</p>
  ConnectionDraining:
    type: object
    properties:
      Enabled:
        type: ConnectionDrainingEnabled
        description: <p>Specifies whether connection draining is enabled for the load balancer.</p>
      Timeout?:
        type: ConnectionDrainingTimeout
        description: <p>The maximum time, in seconds, to keep the existing connections open before deregistering the instances.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about the <code>ConnectionDraining</code> attribute.</p>
  ConnectionSettings:
    type: object
    properties:
      IdleTimeout:
        type: IdleTimeout
        description: <p>The time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about the <code>ConnectionSettings</code> attribute.</p>
  CreateAccessPointInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p> <p>This name must be unique within your set of load balancers for the region, must have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen.</p>
      Listeners:
        type: Listeners
        description: <p>The listeners.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>
      AvailabilityZones?:
        type: AvailabilityZones
        description: <p>One or more Availability Zones from the same region as the load balancer.</p> <p>You must specify at least one Availability Zone.</p> <p>You can add more Availability Zones after you create the load balancer using <a>EnableAvailabilityZonesForLoadBalancer</a>.</p>
      Subnets?:
        type: Subnets
        description: <p>The IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in <code>AvailabilityZones</code>.</p>
      SecurityGroups?:
        type: SecurityGroups
        description: <p>The IDs of the security groups to assign to the load balancer.</p>
      Scheme?:
        type: LoadBalancerScheme
        description: <p>The type of a load balancer. Valid only for load balancers in a VPC.</p> <p>By default, Elastic Load Balancing creates an Internet-facing load balancer with a DNS name that resolves to public IP addresses. For more information about Internet-facing and Internal load balancers, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme">Load Balancer Scheme</a> in the <i>Elastic Load Balancing User Guide</i>.</p> <p>Specify <code>internal</code> to create a load balancer with a DNS name that resolves to private IP addresses.</p>
      Tags?:
        type: TagList
        description: <p>A list of tags to assign to the load balancer.</p> <p>For more information about tagging your load balancer, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for CreateLoadBalancer.</p>
  CreateAccessPointOutput:
    type: object
    properties:
      DNSName?:
        type: DNSName
        description: <p>The DNS name of the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output for CreateLoadBalancer.</p>
  CreateAppCookieStickinessPolicyInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      PolicyName:
        type: PolicyName
        description: <p>The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.</p>
      CookieName:
        type: CookieName
        description: <p>The name of the application cookie used for stickiness.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for CreateAppCookieStickinessPolicy.</p>
  CreateAppCookieStickinessPolicyOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output for CreateAppCookieStickinessPolicy.</p>
  CreateLBCookieStickinessPolicyInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      PolicyName:
        type: PolicyName
        description: <p>The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.</p>
      CookieExpirationPeriod?:
        type: CookieExpirationPeriod
        description: <p>The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for CreateLBCookieStickinessPolicy.</p>
  CreateLBCookieStickinessPolicyOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output for CreateLBCookieStickinessPolicy.</p>
  CreateLoadBalancerListenerInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      Listeners:
        type: Listeners
        description: <p>The listeners.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for CreateLoadBalancerListeners.</p>
  CreateLoadBalancerListenerOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for CreateLoadBalancerListener.</p>
  CreateLoadBalancerPolicyInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      PolicyName:
        type: PolicyName
        description: <p>The name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.</p>
      PolicyTypeName:
        type: PolicyTypeName
        description: <p>The name of the base policy type. To get the list of policy types, use <a>DescribeLoadBalancerPolicyTypes</a>.</p>
      PolicyAttributes?:
        type: PolicyAttributes
        description: <p>The policy attributes.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for CreateLoadBalancerPolicy.</p>
  CreateLoadBalancerPolicyOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of CreateLoadBalancerPolicy.</p>
  CrossZoneLoadBalancing:
    type: object
    properties:
      Enabled:
        type: CrossZoneLoadBalancingEnabled
        description: <p>Specifies whether cross-zone load balancing is enabled for the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about the <code>CrossZoneLoadBalancing</code> attribute.</p>
  DeleteAccessPointInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DeleteLoadBalancer.</p>
  DeleteAccessPointOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DeleteLoadBalancer.</p>
  DeleteLoadBalancerListenerInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      LoadBalancerPorts:
        type: Ports
        description: <p>The client port numbers of the listeners.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DeleteLoadBalancerListeners.</p>
  DeleteLoadBalancerListenerOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DeleteLoadBalancerListeners.</p>
  DeleteLoadBalancerPolicyInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      PolicyName:
        type: PolicyName
        description: <p>The name of the policy.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DeleteLoadBalancerPolicy.</p>
  DeleteLoadBalancerPolicyOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DeleteLoadBalancerPolicy.</p>
  DeregisterEndPointsInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      Instances:
        type: Instances
        description: <p>The IDs of the instances.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DeregisterInstancesFromLoadBalancer.</p>
  DeregisterEndPointsOutput:
    type: object
    properties:
      Instances?:
        type: Instances
        description: <p>The remaining instances registered with the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DeregisterInstancesFromLoadBalancer.</p>
  DescribeAccessPointsInput:
    type: object
    properties:
      LoadBalancerNames?:
        type: LoadBalancerNames
        description: <p>The names of the load balancers.</p>
      Marker?:
        type: Marker
        description: <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
      PageSize?:
        type: PageSize
        description: <p>The maximum number of results to return with this call (a number from 1 to 400). The default is 400.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DescribeLoadBalancers.</p>
  DescribeAccessPointsOutput:
    type: object
    properties:
      LoadBalancerDescriptions?:
        type: LoadBalancerDescriptions
        description: <p>Information about the load balancers.</p>
      NextMarker?:
        type: Marker
        description: <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DescribeLoadBalancers.</p>
  DescribeEndPointStateInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      Instances?:
        type: Instances
        description: <p>The IDs of the instances.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DescribeInstanceHealth.</p>
  DescribeEndPointStateOutput:
    type: object
    properties:
      InstanceStates?:
        type: InstanceStates
        description: <p>Information about the health of the instances.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output for DescribeInstanceHealth.</p>
  DescribeLoadBalancerAttributesInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DescribeLoadBalancerAttributes.</p>
  DescribeLoadBalancerAttributesOutput:
    type: object
    properties:
      LoadBalancerAttributes?:
        type: LoadBalancerAttributes
        description: <p>Information about the load balancer attributes.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DescribeLoadBalancerAttributes.</p>
  DescribeLoadBalancerPoliciesInput:
    type: object
    properties:
      LoadBalancerName?:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      PolicyNames?:
        type: PolicyNames
        description: <p>The names of the policies.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DescribeLoadBalancerPolicies.</p>
  DescribeLoadBalancerPoliciesOutput:
    type: object
    properties:
      PolicyDescriptions?:
        type: PolicyDescriptions
        description: <p>Information about the policies.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DescribeLoadBalancerPolicies.</p>
  DescribeLoadBalancerPolicyTypesInput:
    type: object
    properties:
      PolicyTypeNames?:
        type: PolicyTypeNames
        description: <p>The names of the policy types. If no names are specified, describes all policy types defined by Elastic Load Balancing.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DescribeLoadBalancerPolicyTypes.</p>
  DescribeLoadBalancerPolicyTypesOutput:
    type: object
    properties:
      PolicyTypeDescriptions?:
        type: PolicyTypeDescriptions
        description: <p>Information about the policy types.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DescribeLoadBalancerPolicyTypes.</p>
  DescribeTagsInput:
    type: object
    properties:
      LoadBalancerNames:
        type: LoadBalancerNamesMax20
        description: <p>The names of the load balancers.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DescribeTags.</p>
  DescribeTagsOutput:
    type: object
    properties:
      TagDescriptions?:
        type: TagDescriptions
        description: <p>Information about the tags.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output for DescribeTags.</p>
  DetachLoadBalancerFromSubnetsInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      Subnets:
        type: Subnets
        description: <p>The IDs of the subnets.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DetachLoadBalancerFromSubnets.</p>
  DetachLoadBalancerFromSubnetsOutput:
    type: object
    properties:
      Subnets?:
        type: Subnets
        description: <p>The IDs of the remaining subnets for the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of DetachLoadBalancerFromSubnets.</p>
  HealthCheck:
    type: object
    properties:
      Target:
        type: HealthCheckTarget
        description: '<p>The instance being checked. The protocol is either TCP, HTTP,
          HTTPS, or SSL. The range of valid ports is one (1) through 65535.</p> <p>TCP
          is the default, specified as a TCP: port pair, for example "TCP:5000". In
          this case, a health check simply attempts to open a TCP connection to the
          instance on the specified port. Failure to connect within the configured
          timeout is considered unhealthy.</p> <p>SSL is also specified as SSL: port
          pair, for example, SSL:5000.</p> <p>For HTTP/HTTPS, you must include a ping
          path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping,
          for example "HTTP:80/weather/us/wa/seattle". In this case, a HTTP GET request
          is issued to the instance on the given port and path. Any answer other than
          "200 OK" within the timeout period is considered unhealthy.</p> <p>The total
          length of the HTTP ping target must be 1024 16-bit Unicode characters or
          less.</p>'
      Interval:
        type: HealthCheckInterval
        description: <p>The approximate interval, in seconds, between health checks of an individual instance.</p>
      Timeout:
        type: HealthCheckTimeout
        description: <p>The amount of time, in seconds, during which no response means a failed health check.</p> <p>This value must be less than the <code>Interval</code> value.</p>
      UnhealthyThreshold:
        type: UnhealthyThreshold
        description: <p>The number of consecutive health check failures required before moving the instance to the <code>Unhealthy</code> state.</p>
      HealthyThreshold:
        type: HealthyThreshold
        description: <p>The number of consecutive health checks successes required before moving the instance to the <code>Healthy</code> state.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a health check.</p>
  Instance:
    type: object
    properties:
      InstanceId?:
        type: InstanceId
        description: <p>The instance ID.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>The ID of an EC2 instance.</p>
  InstanceState:
    type: object
    properties:
      InstanceId?:
        type: InstanceId
        description: <p>The ID of the instance.</p>
      State?:
        type: State
        description: '<p>The current state of the instance.</p> <p>Valid values: <code>InService</code>
          | <code>OutOfService</code> | <code>Unknown</code> </p>'
      ReasonCode?:
        type: ReasonCode
        description: '<p>Information about the cause of <code>OutOfService</code>
          instances. Specifically, whether the cause is Elastic Load Balancing or
          the instance.</p> <p>Valid values: <code>ELB</code> | <code>Instance</code>
          | <code>N/A</code> </p>'
      Description?:
        type: Description
        description: <p>A description of the instance state. This string can contain one or more of the following messages.</p> <ul> <li> <p> <code>N/A</code> </p> </li> <li> <p> <code>A transient error occurred. Please try again later.</code> </p> </li> <li> <p> <code>Instance has failed at least the UnhealthyThreshold number of health checks consecutively.</code> </p> </li> <li> <p> <code>Instance has not passed the configured HealthyThreshold number of health checks consecutively.</code> </p> </li> <li> <p> <code>Instance registration is still in progress.</code> </p> </li> <li> <p> <code>Instance is in the EC2 Availability Zone for which LoadBalancer is not configured to route traffic to.</code> </p> </li> <li> <p> <code>Instance is not currently registered with the LoadBalancer.</code> </p> </li> <li> <p> <code>Instance deregistration currently in progress.</code> </p> </li> <li> <p> <code>Disable Availability Zone is currently in progress.</code> </p> </li> <li> <p> <code>Instance is in pending state.</code> </p> </li> <li> <p> <code>Instance is in stopped state.</code> </p> </li> <li> <p> <code>Instance is in terminated state.</code> </p> </li> </ul>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about the state of an EC2 instance.</p>
  LBCookieStickinessPolicy:
    type: object
    properties:
      PolicyName?:
        type: PolicyName
        description: <p>The name of the policy. This name must be unique within the set of policies for this load balancer.</p>
      CookieExpirationPeriod?:
        type: CookieExpirationPeriod
        description: <p>The time period, in seconds, after which the cookie should be considered stale. If this parameter is not specified, the stickiness session lasts for the duration of the browser session.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a policy for duration-based session stickiness.</p>
  Listener:
    type: object
    properties:
      Protocol:
        type: Protocol
        description: '<p>The load balancer transport protocol to use for routing:
          HTTP, HTTPS, TCP, or SSL.</p>'
      LoadBalancerPort:
        type: AccessPointPort
        description: '<p>The port on which the load balancer is listening. On EC2-VPC,
          you can specify any port from the range 1-65535. On EC2-Classic, you can
          specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.</p>'
      InstanceProtocol?:
        type: Protocol
        description: '<p>The protocol to use for routing traffic to instances: HTTP,
          HTTPS, TCP, or SSL.</p> <p>If the front-end protocol is HTTP, HTTPS, TCP,
          or SSL, <code>InstanceProtocol</code> must be at the same protocol.</p>
          <p>If there is another listener with the same <code>InstancePort</code>
          whose <code>InstanceProtocol</code> is secure, (HTTPS or SSL), the listener''s
          <code>InstanceProtocol</code> must also be secure.</p> <p>If there is another
          listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code>
          is HTTP or TCP, the listener''s <code>InstanceProtocol</code> must be HTTP
          or TCP.</p>'
      InstancePort:
        type: InstancePort
        description: <p>The port on which the instance is listening.</p>
      SSLCertificateId?:
        type: SSLCertificateId
        description: <p>The Amazon Resource Name (ARN) of the server certificate.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a listener.</p> <p>For information about the protocols and the ports supported by Elastic Load Balancing, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>
  ListenerDescription:
    type: object
    properties:
      Listener?:
        type: Listener
      PolicyNames?:
        type: PolicyNames
        description: <p>The policies. If there are no policies enabled, the list is empty.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>The policies enabled for a listener.</p>
  LoadBalancerAttributes:
    type: object
    properties:
      CrossZoneLoadBalancing?:
        type: CrossZoneLoadBalancing
        description: <p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Configure Cross-Zone Load Balancing</a> in the <i>Classic Load Balancers Guide</i>.</p>
      AccessLog?:
        type: AccessLog
        description: <p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html">Enable Access Logs</a> in the <i>Classic Load Balancers Guide</i>.</p>
      ConnectionDraining?:
        type: ConnectionDraining
        description: <p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Configure Connection Draining</a> in the <i>Classic Load Balancers Guide</i>.</p>
      ConnectionSettings?:
        type: ConnectionSettings
        description: <p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Configure Idle Connection Timeout</a> in the <i>Classic Load Balancers Guide</i>.</p>
      AdditionalAttributes?:
        type: AdditionalAttributes
        description: <p>This parameter is reserved.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>The attributes for a load balancer.</p>
  LoadBalancerDescription:
    type: object
    properties:
      LoadBalancerName?:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      DNSName?:
        type: DNSName
        description: <p>The DNS name of the load balancer.</p>
      CanonicalHostedZoneName?:
        type: DNSName
        description: <p>The DNS name of the load balancer.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/using-domain-names-with-elb.html">Configure a Custom Domain Name</a> in the <i>Classic Load Balancers Guide</i>.</p>
      CanonicalHostedZoneNameID?:
        type: DNSName
        description: <p>The ID of the Amazon Route 53 hosted zone for the load balancer.</p>
      ListenerDescriptions?:
        type: ListenerDescriptions
        description: <p>The listeners for the load balancer.</p>
      Policies?:
        type: Policies
        description: <p>The policies defined for the load balancer.</p>
      BackendServerDescriptions?:
        type: BackendServerDescriptions
        description: <p>Information about your EC2 instances.</p>
      AvailabilityZones?:
        type: AvailabilityZones
        description: <p>The Availability Zones for the load balancer.</p>
      Subnets?:
        type: Subnets
        description: <p>The IDs of the subnets for the load balancer.</p>
      VPCId?:
        type: VPCId
        description: <p>The ID of the VPC for the load balancer.</p>
      Instances?:
        type: Instances
        description: <p>The IDs of the instances for the load balancer.</p>
      HealthCheck?:
        type: HealthCheck
        description: <p>Information about the health checks conducted on the load balancer.</p>
      SourceSecurityGroup?:
        type: SourceSecurityGroup
        description: <p>The security group for the load balancer, which you can use as part of your inbound rules for your registered instances. To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.</p>
      SecurityGroups?:
        type: SecurityGroups
        description: <p>The security groups for the load balancer. Valid only for load balancers in a VPC.</p>
      CreatedTime?:
        type: CreatedTime
        description: <p>The date and time the load balancer was created.</p>
      Scheme?:
        type: LoadBalancerScheme
        description: <p>The type of load balancer. Valid only for load balancers in a VPC.</p> <p>If <code>Scheme</code> is <code>internet-facing</code>, the load balancer has a public DNS name that resolves to a public IP address.</p> <p>If <code>Scheme</code> is <code>internal</code>, the load balancer has a public DNS name that resolves to a private IP address.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a load balancer.</p>
  ModifyLoadBalancerAttributesInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      LoadBalancerAttributes:
        type: LoadBalancerAttributes
        description: <p>The attributes of the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for ModifyLoadBalancerAttributes.</p>
  ModifyLoadBalancerAttributesOutput:
    type: object
    properties:
      LoadBalancerName?:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      LoadBalancerAttributes?:
        type: LoadBalancerAttributes
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of ModifyLoadBalancerAttributes.</p>
  Policies:
    type: object
    properties:
      AppCookieStickinessPolicies?:
        type: AppCookieStickinessPolicies
        description: <p>The stickiness policies created using <a>CreateAppCookieStickinessPolicy</a>.</p>
      LBCookieStickinessPolicies?:
        type: LBCookieStickinessPolicies
        description: <p>The stickiness policies created using <a>CreateLBCookieStickinessPolicy</a>.</p>
      OtherPolicies?:
        type: PolicyNames
        description: <p>The policies other than the stickiness policies.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>The policies for a load balancer.</p>
  PolicyAttribute:
    type: object
    properties:
      AttributeName?:
        type: AttributeName
        description: <p>The name of the attribute.</p>
      AttributeValue?:
        type: AttributeValue
        description: <p>The value of the attribute.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a policy attribute.</p>
  PolicyAttributeDescription:
    type: object
    properties:
      AttributeName?:
        type: AttributeName
        description: <p>The name of the attribute.</p>
      AttributeValue?:
        type: AttributeValue
        description: <p>The value of the attribute.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a policy attribute.</p>
  PolicyAttributeTypeDescription:
    type: object
    properties:
      AttributeName?:
        type: AttributeName
        description: <p>The name of the attribute.</p>
      AttributeType?:
        type: AttributeType
        description: <p>The type of the attribute. For example, <code>Boolean</code> or <code>Integer</code>.</p>
      Description?:
        type: Description
        description: <p>A description of the attribute.</p>
      DefaultValue?:
        type: DefaultValue
        description: <p>The default value of the attribute, if applicable.</p>
      Cardinality?:
        type: Cardinality
        description: '<p>The cardinality of the attribute.</p> <p>Valid values:</p>
          <ul> <li> <p>ONE(1) : Single value required</p> </li> <li> <p>ZERO_OR_ONE(0..1)
          : Up to one value is allowed</p> </li> <li> <p>ZERO_OR_MORE(0..*) : Optional.
          Multiple values are allowed</p> </li> <li> <p>ONE_OR_MORE(1..*0) : Required.
          Multiple values are allowed</p> </li> </ul>'
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a policy attribute type.</p>
  PolicyDescription:
    type: object
    properties:
      PolicyName?:
        type: PolicyName
        description: <p>The name of the policy.</p>
      PolicyTypeName?:
        type: PolicyTypeName
        description: <p>The name of the policy type.</p>
      PolicyAttributeDescriptions?:
        type: PolicyAttributeDescriptions
        description: <p>The policy attributes.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a policy.</p>
  PolicyTypeDescription:
    type: object
    properties:
      PolicyTypeName?:
        type: PolicyTypeName
        description: <p>The name of the policy type.</p>
      Description?:
        type: Description
        description: <p>A description of the policy type.</p>
      PolicyAttributeTypeDescriptions?:
        type: PolicyAttributeTypeDescriptions
        description: <p>The description of the policy attributes associated with the policies defined by Elastic Load Balancing.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a policy type.</p>
  RegisterEndPointsInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      Instances:
        type: Instances
        description: <p>The IDs of the instances.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for RegisterInstancesWithLoadBalancer.</p>
  RegisterEndPointsOutput:
    type: object
    properties:
      Instances?:
        type: Instances
        description: <p>The updated list of instances for the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of RegisterInstancesWithLoadBalancer.</p>
  RemoveAvailabilityZonesInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      AvailabilityZones:
        type: AvailabilityZones
        description: <p>The Availability Zones.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for DisableAvailabilityZonesForLoadBalancer.</p>
  RemoveAvailabilityZonesOutput:
    type: object
    properties:
      AvailabilityZones?:
        type: AvailabilityZones
        description: <p>The remaining Availability Zones for the load balancer.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output for DisableAvailabilityZonesForLoadBalancer.</p>
  RemoveTagsInput:
    type: object
    properties:
      LoadBalancerNames:
        type: LoadBalancerNames
        description: <p>The name of the load balancer. You can specify a maximum of one load balancer name.</p>
      Tags:
        type: TagKeyList
        description: <p>The list of tag keys to remove.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for RemoveTags.</p>
  RemoveTagsOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of RemoveTags.</p>
  SetLoadBalancerListenerSSLCertificateInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      LoadBalancerPort:
        type: AccessPointPort
        description: <p>The port that uses the specified SSL certificate.</p>
      SSLCertificateId:
        type: SSLCertificateId
        description: <p>The Amazon Resource Name (ARN) of the SSL certificate.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for SetLoadBalancerListenerSSLCertificate.</p>
  SetLoadBalancerListenerSSLCertificateOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of SetLoadBalancerListenerSSLCertificate.</p>
  SetLoadBalancerPoliciesForBackendServerInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      InstancePort:
        type: EndPointPort
        description: <p>The port number associated with the EC2 instance.</p>
      PolicyNames:
        type: PolicyNames
        description: <p>The names of the policies. If the list is empty, then all current polices are removed from the EC2 instance.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for SetLoadBalancerPoliciesForBackendServer.</p>
  SetLoadBalancerPoliciesForBackendServerOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of SetLoadBalancerPoliciesForBackendServer.</p>
  SetLoadBalancerPoliciesOfListenerInput:
    type: object
    properties:
      LoadBalancerName:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      LoadBalancerPort:
        type: AccessPointPort
        description: <p>The external port of the load balancer.</p>
      PolicyNames:
        type: PolicyNames
        description: <p>The names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the parameters for SetLoadBalancePoliciesOfListener.</p>
  SetLoadBalancerPoliciesOfListenerOutput:
    type: object
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Contains the output of SetLoadBalancePoliciesOfListener.</p>
  SourceSecurityGroup:
    type: object
    properties:
      OwnerAlias?:
        type: SecurityGroupOwnerAlias
        description: <p>The owner of the security group.</p>
      GroupName?:
        type: SecurityGroupName
        description: <p>The name of the security group.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a source security group.</p>
  Tag:
    type: object
    properties:
      Key:
        type: TagKey
        description: <p>The key of the tag.</p>
      Value?:
        type: TagValue
        description: <p>The value of the tag.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>Information about a tag.</p>
  TagDescription:
    type: object
    properties:
      LoadBalancerName?:
        type: AccessPointName
        description: <p>The name of the load balancer.</p>
      Tags?:
        type: TagList
        description: <p>The tags.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>The tags associated with a load balancer.</p>
  TagKeyOnly:
    type: object
    properties:
      Key?:
        type: TagKey
        description: <p>The name of the key.</p>
    xml:
      namespace: http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/
    description: <p>The key of a tag.</p>
/{AddTags}:
  uriParameters:
    AddTags?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags. Each tag consists of a key and an optional value. If a tag with the same key is already associated with the load balancer, <code>AddTags</code> updates its value. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: AddTagsInput
    responses:
      200:
        body:
          application/xml: AddTagsOutput
      400:
        description: LoadBalancerNotFound
/{ApplySecurityGroupsToLoadBalancer}:
  uriParameters:
    ApplySecurityGroupsToLoadBalancer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Associates one or more security groups with your load balancer in a virtual private cloud (VPC). The specified security groups override the previously associated security groups. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-groups.html#elb-vpc-security-groups">Security Groups for Load Balancers in a VPC</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: ApplySecurityGroupsToLoadBalancerInput
    responses:
      200:
        body:
          application/xml: ApplySecurityGroupsToLoadBalancerOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{AttachLoadBalancerToSubnets}:
  uriParameters:
    AttachLoadBalancerToSubnets?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds one or more subnets to the set of configured subnets for the specified load balancer. The load balancer evenly distributes requests across all registered subnets. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-manage-subnets.html">Add or Remove Subnets for Your Load Balancer in a VPC</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: AttachLoadBalancerToSubnetsInput
    responses:
      200:
        body:
          application/xml: AttachLoadBalancerToSubnetsOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{ConfigureHealthCheck}:
  uriParameters:
    ConfigureHealthCheck?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Specifies the health check settings to use when evaluating the health state of your EC2 instances. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html">Configure Health Checks for Your Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: ConfigureHealthCheckInput
    responses:
      200:
        body:
          application/xml: ConfigureHealthCheckOutput
      400:
        description: LoadBalancerNotFound
/{CreateAppCookieStickinessPolicy}:
  uriParameters:
    CreateAppCookieStickinessPolicy?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners. This policy is similar to the policy created by <a>CreateLBCookieStickinessPolicy</a>, except that the lifetime of the special Elastic Load Balancing cookie, <code>AWSELB</code>, follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer only inserts a new stickiness cookie when the application response includes a new application cookie. If the application cookie is explicitly removed or expires, the session stops being sticky until a new application cookie is issued. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: CreateAppCookieStickinessPolicyInput
    responses:
      200:
        body:
          application/xml: CreateAppCookieStickinessPolicyOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{CreateLBCookieStickinessPolicy}:
  uriParameters:
    CreateLBCookieStickinessPolicy?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners. When a load balancer implements this policy, the load balancer uses a special cookie to track the instance for each request. When the load balancer receives a request, it first checks to see if this cookie is present in the request. If so, the load balancer sends the request to the application server specified in the cookie. If not, the load balancer sends the request to a server that is chosen based on the existing load-balancing algorithm. A cookie is inserted into the response for binding subsequent requests from the same user to that server. The validity of the cookie is based on the cookie expiration time, which is specified in the policy configuration. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: CreateLBCookieStickinessPolicyInput
    responses:
      200:
        body:
          application/xml: CreateLBCookieStickinessPolicyOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{CreateLoadBalancer}:
  uriParameters:
    CreateLoadBalancer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a Classic load balancer. You can add listeners, security groups, subnets, and tags when you create your load balancer, or you can add them later using <a>CreateLoadBalancerListeners</a>, <a>ApplySecurityGroupsToLoadBalancer</a>, <a>AttachLoadBalancerToSubnets</a>, and <a>AddTags</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>. You can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html">Limits for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: CreateAccessPointInput
    responses:
      200:
        body:
          application/xml: CreateAccessPointOutput
      400:
        description: DuplicateLoadBalancerName
      409:
        description: InvalidConfigurationRequest
/{CreateLoadBalancerListeners}:
  uriParameters:
    CreateLoadBalancerListeners?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates one or more listeners for the specified load balancer. If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: CreateLoadBalancerListenerInput
    responses:
      200:
        body:
          application/xml: CreateLoadBalancerListenerOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{CreateLoadBalancerPolicy}:
  uriParameters:
    CreateLoadBalancerPolicy?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a policy with the specified attributes for the specified load balancer. Policies are settings that are saved for your load balancer and that can be applied to the listener or the application server, depending on the policy type.
    body:
      application/xml: CreateLoadBalancerPolicyInput
    responses:
      200:
        body:
          application/xml: CreateLoadBalancerPolicyOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{DeleteLoadBalancer}:
  uriParameters:
    DeleteLoadBalancer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified load balancer. If you are attempting to recreate a load balancer, you must reconfigure all settings. The DNS name associated with a deleted load balancer are no longer usable. The name and associated DNS record of the deleted load balancer no longer exist and traffic sent to any of its IP addresses is no longer delivered to your instances. If the load balancer does not exist or has already been deleted, the call to <code>DeleteLoadBalancer</code> still succeeds.
    body:
      application/xml: DeleteAccessPointInput
    responses:
      200:
        body:
          application/xml: DeleteAccessPointOutput
/{DeleteLoadBalancerListeners}:
  uriParameters:
    DeleteLoadBalancerListeners?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified listeners from the specified load balancer.
    body:
      application/xml: DeleteLoadBalancerListenerInput
    responses:
      200:
        body:
          application/xml: DeleteLoadBalancerListenerOutput
      400:
        description: LoadBalancerNotFound
/{DeleteLoadBalancerPolicy}:
  uriParameters:
    DeleteLoadBalancerPolicy?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.
    body:
      application/xml: DeleteLoadBalancerPolicyInput
    responses:
      200:
        body:
          application/xml: DeleteLoadBalancerPolicyOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{DeregisterInstancesFromLoadBalancer}:
  uriParameters:
    DeregisterInstancesFromLoadBalancer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deregisters the specified instances from the specified load balancer. After the instance is deregistered, it no longer receives traffic from the load balancer. You can use <a>DescribeLoadBalancers</a> to verify that the instance is deregistered from the load balancer. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: DeregisterEndPointsInput
    responses:
      200:
        body:
          application/xml: DeregisterEndPointsOutput
      400:
        description: LoadBalancerNotFound
/{DescribeInstanceHealth}:
  uriParameters:
    DescribeInstanceHealth?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the state of the specified instances with respect to the specified load balancer. If no instances are specified, the call describes the state of all instances that are currently registered with the load balancer. If instances are specified, their state is returned even if they are no longer registered with the load balancer. The state of terminated instances is not returned.
    body:
      application/xml: DescribeEndPointStateInput
    responses:
      200:
        body:
          application/xml: DescribeEndPointStateOutput
      400:
        description: LoadBalancerNotFound
/{DescribeLoadBalancerAttributes}:
  uriParameters:
    DescribeLoadBalancerAttributes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the attributes for the specified load balancer.
    body:
      application/xml: DescribeLoadBalancerAttributesInput
    responses:
      200:
        body:
          application/xml: DescribeLoadBalancerAttributesOutput
      400:
        description: LoadBalancerNotFound
/{DescribeLoadBalancerPolicies}:
  uriParameters:
    DescribeLoadBalancerPolicies?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified policies. If you specify a load balancer name, the action returns the descriptions of all policies created for the load balancer. If you specify a policy name associated with your load balancer, the action returns the description of that policy. If you don't specify a load balancer name, the action returns descriptions of the specified sample policies, or descriptions of all sample policies. The names of the sample policies have the <code>ELBSample-</code> prefix.
    body:
      application/xml: DescribeLoadBalancerPoliciesInput
    responses:
      200:
        body:
          application/xml: DescribeLoadBalancerPoliciesOutput
      400:
        description: LoadBalancerNotFound
/{DescribeLoadBalancerPolicyTypes}:
  uriParameters:
    DescribeLoadBalancerPolicyTypes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified load balancer policy types or all load balancer policy types. The description of each type indicates how it can be used. For example, some policies can be used only with layer 7 listeners, some policies can be used only with layer 4 listeners, and some policies can be used only with your EC2 instances. You can use <a>CreateLoadBalancerPolicy</a> to create a policy configuration for any of these policy types. Then, depending on the policy type, use either <a>SetLoadBalancerPoliciesOfListener</a> or <a>SetLoadBalancerPoliciesForBackendServer</a> to set the policy.
    body:
      application/xml: DescribeLoadBalancerPolicyTypesInput
    responses:
      200:
        body:
          application/xml: DescribeLoadBalancerPolicyTypesOutput
      400:
        description: PolicyTypeNotFound
/{DescribeLoadBalancers}:
  uriParameters:
    DescribeLoadBalancers?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.
    body:
      application/xml: DescribeAccessPointsInput
    responses:
      200:
        body:
          application/xml: DescribeAccessPointsOutput
      400:
        description: LoadBalancerNotFound
/{DescribeTags}:
  uriParameters:
    DescribeTags?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the tags associated with the specified load balancers.
    body:
      application/xml: DescribeTagsInput
    responses:
      200:
        body:
          application/xml: DescribeTagsOutput
      400:
        description: LoadBalancerNotFound
/{DetachLoadBalancerFromSubnets}:
  uriParameters:
    DetachLoadBalancerFromSubnets?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Removes the specified subnets from the set of configured subnets for the load balancer. After a subnet is removed, all EC2 instances registered with the load balancer in the removed subnet go into the <code>OutOfService</code> state. Then, the load balancer balances the traffic among the remaining routable subnets.
    body:
      application/xml: DetachLoadBalancerFromSubnetsInput
    responses:
      200:
        body:
          application/xml: DetachLoadBalancerFromSubnetsOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{DisableAvailabilityZonesForLoadBalancer}:
  uriParameters:
    DisableAvailabilityZonesForLoadBalancer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer. There must be at least one Availability Zone registered with a load balancer at all times. After an Availability Zone is removed, all instances registered with the load balancer that are in the removed Availability Zone go into the <code>OutOfService</code> state. Then, the load balancer attempts to equally balance the traffic among its remaining Availability Zones. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add or Remove Availability Zones</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: RemoveAvailabilityZonesInput
    responses:
      200:
        body:
          application/xml: RemoveAvailabilityZonesOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{EnableAvailabilityZonesForLoadBalancer}:
  uriParameters:
    EnableAvailabilityZonesForLoadBalancer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer. The load balancer evenly distributes requests across all its registered Availability Zones that contain instances. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add or Remove Availability Zones</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: AddAvailabilityZonesInput
    responses:
      200:
        body:
          application/xml: AddAvailabilityZonesOutput
      400:
        description: LoadBalancerNotFound
/{ModifyLoadBalancerAttributes}:
  uriParameters:
    ModifyLoadBalancerAttributes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Modifies the attributes of the specified load balancer. You can
      modify the load balancer attributes, such as <code>AccessLogs</code>, <code>ConnectionDraining</code>,
      and <code>CrossZoneLoadBalancing</code> by either enabling or disabling them.
      Or, you can modify the load balancer attribute <code>ConnectionSettings</code>
      by specifying an idle connection timeout value for your load balancer. For more
      information, see the following in the <i>Classic Load Balancers Guide</i>: <ul>
      <li>  <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Cross-Zone
      Load Balancing</a>  </li> <li>  <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Connection
      Draining</a>  </li> <li>  <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html">Access
      Logs</a>  </li> <li>  <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Idle
      Connection Timeout</a>  </li> </ul>'
    body:
      application/xml: ModifyLoadBalancerAttributesInput
    responses:
      200:
        body:
          application/xml: ModifyLoadBalancerAttributesOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{RegisterInstancesWithLoadBalancer}:
  uriParameters:
    RegisterInstancesWithLoadBalancer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds the specified instances to the specified load balancer. The instance must be a running instance in the same network as the load balancer (EC2-Classic or the same VPC). If you have EC2-Classic instances and a load balancer in a VPC with ClassicLink enabled, you can link the EC2-Classic instances to that VPC and then register the linked EC2-Classic instances with the load balancer in the VPC. Note that <code>RegisterInstanceWithLoadBalancer</code> completes when the request has been registered. Instance registration takes a little time to complete. To check the state of the registered instances, use <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a>. After the instance is registered, it starts receiving traffic and requests from the load balancer. Any instance that is not in one of the Availability Zones registered for the load balancer is moved to the <code>OutOfService</code> state. If an Availability Zone is added to the load balancer later, any instances registered with the load balancer move to the <code>InService</code> state. To deregister instances from a load balancer, use <a>DeregisterInstancesFromLoadBalancer</a>. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: RegisterEndPointsInput
    responses:
      200:
        body:
          application/xml: RegisterEndPointsOutput
      400:
        description: LoadBalancerNotFound
/{RemoveTags}:
  uriParameters:
    RemoveTags?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Removes one or more tags from the specified load balancer.
    body:
      application/xml: RemoveTagsInput
    responses:
      200:
        body:
          application/xml: RemoveTagsOutput
      400:
        description: LoadBalancerNotFound
/{SetLoadBalancerListenerSSLCertificate}:
  uriParameters:
    SetLoadBalancerListenerSSLCertificate?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Sets the certificate that terminates the specified listener's SSL connections. The specified certificate replaces any prior certificate that was used on the same load balancer and port. For more information about updating your SSL certificate, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-update-ssl-cert.html">Replace the SSL Certificate for Your Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: SetLoadBalancerListenerSSLCertificateInput
    responses:
      200:
        body:
          application/xml: SetLoadBalancerListenerSSLCertificateOutput
      400:
        description: CertificateNotFound
      409:
        description: InvalidConfigurationRequest
/{SetLoadBalancerPoliciesForBackendServer}:
  uriParameters:
    SetLoadBalancerPoliciesForBackendServer?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Replaces the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies. At this time, only the back-end server authentication policy type can be applied to the instance ports; this policy type is composed of multiple public key policies. Each time you use <code>SetLoadBalancerPoliciesForBackendServer</code> to enable the policies, use the <code>PolicyNames</code> parameter to list the policies that you want to enable. You can use <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> to verify that the policy is associated with the EC2 instance. For more information about enabling back-end instance authentication, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#configure_backendauth_clt">Configure Back-end Instance Authentication</a> in the <i>Classic Load Balancers Guide</i>. For more information about Proxy Protocol, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html">Configure Proxy Protocol Support</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: SetLoadBalancerPoliciesForBackendServerInput
    responses:
      200:
        body:
          application/xml: SetLoadBalancerPoliciesForBackendServerOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
/{SetLoadBalancerPoliciesOfListener}:
  uriParameters:
    SetLoadBalancerPoliciesOfListener?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Replaces the current set of policies for the specified load balancer port with the specified set of policies. To enable back-end server authentication, use <a>SetLoadBalancerPoliciesForBackendServer</a>. For more information about setting policies, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html">Update the SSL Negotiation Configuration</a>, <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based Session Stickiness</a>, and <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.
    body:
      application/xml: SetLoadBalancerPoliciesOfListenerInput
    responses:
      200:
        body:
          application/xml: SetLoadBalancerPoliciesOfListenerOutput
      400:
        description: LoadBalancerNotFound
      409:
        description: InvalidConfigurationRequest
