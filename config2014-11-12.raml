#%RAML 1.0
title: AWS Config
version: '2014-11-12'
description: '  AWS Config provides a way to keep track of the configurations of all
  the AWS resources associated with your AWS account. You can use AWS Config to get
  the current and historical configurations of each AWS resource and also to get information
  about the relationship between the resources. An AWS resource can be an Amazon Compute
  Cloud (Amazon EC2) instance, an Elastic Block Store (EBS) volume, an Elastic network
  Interface (ENI), or a security group. For a complete list of resources currently
  supported by AWS Config, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported
  AWS Resources</a>.  You can access and manage AWS Config through the AWS Management
  Console, the AWS Command Line Interface (AWS CLI), the AWS Config API, or the AWS
  SDKs for AWS Config  This reference guide contains documentation for the AWS Config
  API and the AWS CLI commands that you can use to manage AWS Config.  The AWS Config
  API uses the Signature Version 4 protocol for signing requests. For more information
  about how to sign a request with this protocol, see <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
  Version 4 Signing Process</a>.  For detailed information about AWS Config features
  and their associated actions or commands, as well as how to work with AWS Management
  Console, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html">What
  Is AWS Config?</a> in the <i>AWS Config Developer Guide</i>.'
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  ARN:
    type: string
  AccountId:
    type: string
  AllSupported:
    type: boolean
  AvailabilityZone:
    type: string
  AwsRegion:
    type: string
  Boolean:
    type: boolean
  ChannelName:
    type: string
    minLength: 1
    maxLength: 256
  ChronologicalOrder:
    type: string
    enum:
    - Reverse
    - Forward
  ComplianceByConfigRules:
    type: array
    items:
      type: ComplianceByConfigRule
  ComplianceByResources:
    type: array
    items:
      type: ComplianceByResource
  ComplianceResourceTypes:
    type: array
    minItems: 0
    maxItems: 100
    items:
      type: StringWithCharLimit256
  ComplianceSummariesByResourceType:
    type: array
    items:
      type: ComplianceSummaryByResourceType
  ComplianceType:
    type: string
    enum:
    - COMPLIANT
    - NON_COMPLIANT
    - NOT_APPLICABLE
    - INSUFFICIENT_DATA
  ComplianceTypes:
    type: array
    minItems: 0
    maxItems: 3
    items:
      type: ComplianceType
  ConfigRuleEvaluationStatusList:
    type: array
    items:
      type: ConfigRuleEvaluationStatus
  ConfigRuleNames:
    type: array
    minItems: 0
    maxItems: 25
    items:
      type: StringWithCharLimit64
  ConfigRuleState:
    type: string
    enum:
    - ACTIVE
    - DELETING
    - DELETING_RESULTS
    - EVALUATING
  ConfigRules:
    type: array
    items:
      type: ConfigRule
  Configuration:
    type: string
  ConfigurationItemCaptureTime:
    type: datetime
  ConfigurationItemList:
    type: array
    items:
      type: ConfigurationItem
  ConfigurationItemMD5Hash:
    type: string
  ConfigurationItemStatus:
    type: string
    enum:
    - Ok
    - Failed
    - Discovered
    - Deleted
  ConfigurationRecorderList:
    type: array
    items:
      type: ConfigurationRecorder
  ConfigurationRecorderNameList:
    type: array
    items:
      type: RecorderName
  ConfigurationRecorderStatusList:
    type: array
    items:
      type: ConfigurationRecorderStatus
  ConfigurationStateId:
    type: string
  Date:
    type: datetime
  DeliveryChannelList:
    type: array
    items:
      type: DeliveryChannel
  DeliveryChannelNameList:
    type: array
    items:
      type: ChannelName
  DeliveryChannelStatusList:
    type: array
    items:
      type: DeliveryChannelStatus
  DeliveryStatus:
    type: string
    enum:
    - Success
    - Failure
    - Not_Applicable
  EarlierTime:
    type: datetime
  EmptiableStringWithCharLimit256:
    type: string
    minLength: 0
    maxLength: 256
  EvaluationResults:
    type: array
    items:
      type: EvaluationResult
  Evaluations:
    type: array
    minItems: 0
    maxItems: 100
    items:
      type: Evaluation
  EventSource:
    type: string
    enum:
    - aws.config
  IncludeGlobalResourceTypes:
    type: boolean
  Integer:
    type: integer
    format: int
  LaterTime:
    type: datetime
  Limit:
    type: integer
    format: int
    minimum: 0
    maximum: 100
  MaximumExecutionFrequency:
    type: string
    enum:
    - One_Hour
    - Three_Hours
    - Six_Hours
    - Twelve_Hours
    - TwentyFour_Hours
  MessageType:
    type: string
    enum:
    - ConfigurationItemChangeNotification
    - ConfigurationSnapshotDeliveryCompleted
    - ScheduledNotification
  Name:
    type: string
  NextToken:
    type: string
  OrderingTimestamp:
    type: datetime
  Owner:
    type: string
    enum:
    - CUSTOM_LAMBDA
    - AWS
  RecorderName:
    type: string
    minLength: 1
    maxLength: 256
  RecorderStatus:
    type: string
    enum:
    - Pending
    - Success
    - Failure
  ReevaluateConfigRuleNames:
    type: array
    minItems: 1
    maxItems: 25
    items:
      type: StringWithCharLimit64
  RelatedEvent:
    type: string
  RelatedEventList:
    type: array
    items:
      type: RelatedEvent
  RelationshipList:
    type: array
    items:
      type: Relationship
  RelationshipName:
    type: string
  ResourceCreationTime:
    type: datetime
  ResourceDeletionTime:
    type: datetime
  ResourceId:
    type: string
  ResourceIdList:
    type: array
    items:
      type: ResourceId
  ResourceIdentifierList:
    type: array
    items:
      type: ResourceIdentifier
  ResourceName:
    type: string
  ResourceType:
    type: string
    enum:
    - AWS::EC2::CustomerGateway
    - AWS::EC2::EIP
    - AWS::EC2::Host
    - AWS::EC2::Instance
    - AWS::EC2::InternetGateway
    - AWS::EC2::NetworkAcl
    - AWS::EC2::NetworkInterface
    - AWS::EC2::RouteTable
    - AWS::EC2::SecurityGroup
    - AWS::EC2::Subnet
    - AWS::CloudTrail::Trail
    - AWS::EC2::Volume
    - AWS::EC2::VPC
    - AWS::EC2::VPNConnection
    - AWS::EC2::VPNGateway
    - AWS::IAM::Group
    - AWS::IAM::Policy
    - AWS::IAM::Role
    - AWS::IAM::User
    - AWS::ACM::Certificate
    - AWS::RDS::DBInstance
    - AWS::RDS::DBSubnetGroup
    - AWS::RDS::DBSecurityGroup
    - AWS::RDS::DBSnapshot
    - AWS::RDS::EventSubscription
    - AWS::ElasticLoadBalancingV2::LoadBalancer
  ResourceTypeList:
    type: array
    items:
      type: ResourceType
  ResourceTypes:
    type: array
    minItems: 0
    maxItems: 20
    items:
      type: StringWithCharLimit256
  SourceDetails:
    type: array
    minItems: 0
    maxItems: 25
    items:
      type: SourceDetail
  String:
    type: string
  StringWithCharLimit128:
    type: string
    minLength: 1
    maxLength: 128
  StringWithCharLimit256:
    type: string
    minLength: 1
    maxLength: 256
  StringWithCharLimit64:
    type: string
    minLength: 1
    maxLength: 64
  SupplementaryConfigurationName:
    type: string
  SupplementaryConfigurationValue:
    type: string
  Value:
    type: string
  Version:
    type: string
  Compliance:
    type: object
    properties:
      ComplianceType?:
        type: ComplianceType
        description: <p>Indicates whether an AWS resource or AWS Config rule is compliant.</p> <p>A resource is compliant if it complies with all of the AWS Config rules that evaluate it, and it is noncompliant if it does not comply with one or more of these rules.</p> <p>A rule is compliant if all of the resources that the rule evaluates comply with it, and it is noncompliant if any of these resources do not comply.</p> <p>AWS Config returns the <code>INSUFFICIENT_DATA</code> value when no evaluation results are available for the AWS resource or Config rule.</p> <p>For the <code>Compliance</code> data type, AWS Config supports only <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>INSUFFICIENT_DATA</code> values. AWS Config does not support the <code>NOT_APPLICABLE</code> value for the <code>Compliance</code> data type.</p>
      ComplianceContributorCount?:
        type: ComplianceContributorCount
        description: <p>The number of AWS resources or AWS Config rules that cause a result of <code>NON_COMPLIANT</code>, up to a maximum number.</p>
    description: <p>Indicates whether an AWS resource or AWS Config rule is compliant and provides the number of contributors that affect the compliance.</p>
  ComplianceByConfigRule:
    type: object
    properties:
      ConfigRuleName?:
        type: StringWithCharLimit64
        description: <p>The name of the AWS Config rule.</p>
      Compliance?:
        type: Compliance
        description: <p>Indicates whether the AWS Config rule is compliant.</p>
    description: <p>Indicates whether an AWS Config rule is compliant. A rule is compliant if all of the resources that the rule evaluated comply with it, and it is noncompliant if any of these resources do not comply. </p>
  ComplianceByResource:
    type: object
    properties:
      ResourceType?:
        type: StringWithCharLimit256
        description: <p>The type of the AWS resource that was evaluated.</p>
      ResourceId?:
        type: StringWithCharLimit256
        description: <p>The ID of the AWS resource that was evaluated.</p>
      Compliance?:
        type: Compliance
        description: <p>Indicates whether the AWS resource complies with all of the AWS Config rules that evaluated it.</p>
    description: <p>Indicates whether an AWS resource that is evaluated according to one or more AWS Config rules is compliant. A resource is compliant if it complies with all of the rules that evaluate it, and it is noncompliant if it does not comply with one or more of these rules. </p>
  ComplianceContributorCount:
    type: object
    properties:
      CappedCount?:
        type: Integer
        description: <p>The number of AWS resources or AWS Config rules responsible for the current compliance of the item.</p>
      CapExceeded?:
        type: Boolean
        description: <p>Indicates whether the maximum count is reached.</p>
    description: <p>The number of AWS resources or AWS Config rules responsible for the current compliance of the item, up to a maximum number. </p>
  ComplianceSummary:
    type: object
    properties:
      CompliantResourceCount?:
        type: ComplianceContributorCount
        description: <p>The number of AWS Config rules or AWS resources that are compliant, up to a maximum of 25 for rules and 100 for resources.</p>
      NonCompliantResourceCount?:
        type: ComplianceContributorCount
        description: <p>The number of AWS Config rules or AWS resources that are noncompliant, up to a maximum of 25 for rules and 100 for resources.</p>
      ComplianceSummaryTimestamp?:
        type: Date
        description: <p>The time that AWS Config created the compliance summary.</p>
    description: <p>The number of AWS Config rules or AWS resources that are compliant and noncompliant, up to a maximum.</p>
  ComplianceSummaryByResourceType:
    type: object
    properties:
      ResourceType?:
        type: StringWithCharLimit256
        description: <p>The type of AWS resource.</p>
      ComplianceSummary?:
        type: ComplianceSummary
        description: <p>The number of AWS resources that are compliant or noncompliant, up to a maximum of 100 for each compliance.</p>
    description: <p>The number of AWS resources of a specific type that are compliant or noncompliant, up to a maximum of 100 for each compliance.</p>
  ConfigExportDeliveryInfo:
    type: object
    properties:
      lastStatus?:
        type: DeliveryStatus
        description: <p>Status of the last attempted delivery.</p>
      lastErrorCode?:
        type: String
        description: <p>The error code from the last attempted delivery.</p>
      lastErrorMessage?:
        type: String
        description: <p>The error message from the last attempted delivery.</p>
      lastAttemptTime?:
        type: Date
        description: <p>The time of the last attempted delivery.</p>
      lastSuccessfulTime?:
        type: Date
        description: <p>The time of the last successful delivery.</p>
      nextDeliveryTime?:
        type: Date
        description: <p>The time that the next delivery occurs.</p>
    description: <p>A list that contains the status of the delivery of either the snapshot or the configuration history to the specified Amazon S3 bucket.</p>
  ConfigRule:
    type: object
    properties:
      ConfigRuleName?:
        type: StringWithCharLimit64
        description: <p>The name that you assign to the AWS Config rule. The name is required if you are adding a new rule.</p>
      ConfigRuleArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the AWS Config rule.</p>
      ConfigRuleId?:
        type: String
        description: <p>The ID of the AWS Config rule.</p>
      Description?:
        type: EmptiableStringWithCharLimit256
        description: <p>The description that you provide for the AWS Config rule.</p>
      Scope?:
        type: Scope
        description: <p>Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.</p>
      Source:
        type: Source
        description: <p>Provides the rule owner (AWS or customer), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.</p>
      InputParameters?:
        type: StringWithCharLimit256
        description: <p>A string in JSON format that is passed to the AWS Config rule Lambda function.</p>
      MaximumExecutionFrequency?:
        type: MaximumExecutionFrequency
        description: '<p>The maximum frequency with which AWS Config runs evaluations
          for a rule. You can specify a value for <code>MaximumExecutionFrequency</code>
          when: </p> <ul> <li> <p>You are using an AWS managed rule that is triggered
          at a periodic frequency.</p> </li> <li> <p>Your custom rule is triggered
          when AWS Config delivers the configuration snapshot.</p> </li> </ul> <p>For
          more information, see <a>ConfigSnapshotDeliveryProperties</a>.</p>'
      ConfigRuleState?:
        type: ConfigRuleState
        description: <p>Indicates whether the AWS Config rule is active or is currently being deleted by AWS Config. It can also indicate the evaluation status for the Config rule.</p> <p>AWS Config sets the state of the rule to <code>EVALUATING</code> temporarily after you use the <code>StartConfigRulesEvaluation</code> request to evaluate your resources against the Config rule.</p> <p>AWS Config sets the state of the rule to <code>DELETING_RESULTS</code> temporarily after you use the <code>DeleteEvaluationResults</code> request to delete the current evaluation results for the Config rule.</p> <p>AWS Config sets the state of a rule to <code>DELETING</code> temporarily after you use the <code>DeleteConfigRule</code> request to delete the rule. After AWS Config deletes the rule, the rule and all of its evaluations are erased and are no longer available.</p>
    description: <p>An AWS Config rule represents an AWS Lambda function that you create for a custom rule or a predefined function for an AWS managed rule. The function evaluates configuration items to assess whether your AWS resources comply with your desired configurations. This function can run when AWS Config detects a configuration change to an AWS resource and at a periodic frequency that you choose (for example, every 24 hours).</p> <note> <p>You can use the AWS CLI and AWS SDKs if you want to create a rule that triggers evaluations for your resources when AWS Config delivers the configuration snapshot. For more information, see <a>ConfigSnapshotDeliveryProperties</a>.</p> </note> <p>For more information about developing and using AWS Config rules, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating AWS Resource Configurations with AWS Config</a> in the <i>AWS Config Developer Guide</i>.</p>
  ConfigRuleEvaluationStatus:
    type: object
    properties:
      ConfigRuleName?:
        type: StringWithCharLimit64
        description: <p>The name of the AWS Config rule.</p>
      ConfigRuleArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the AWS Config rule.</p>
      ConfigRuleId?:
        type: String
        description: <p>The ID of the AWS Config rule.</p>
      LastSuccessfulInvocationTime?:
        type: Date
        description: <p>The time that AWS Config last successfully invoked the AWS Config rule to evaluate your AWS resources.</p>
      LastFailedInvocationTime?:
        type: Date
        description: <p>The time that AWS Config last failed to invoke the AWS Config rule to evaluate your AWS resources.</p>
      LastSuccessfulEvaluationTime?:
        type: Date
        description: <p>The time that AWS Config last successfully evaluated your AWS resources against the rule.</p>
      LastFailedEvaluationTime?:
        type: Date
        description: <p>The time that AWS Config last failed to evaluate your AWS resources against the rule.</p>
      FirstActivatedTime?:
        type: Date
        description: <p>The time that you first activated the AWS Config rule.</p>
      LastErrorCode?:
        type: String
        description: <p>The error code that AWS Config returned when the rule last failed.</p>
      LastErrorMessage?:
        type: String
        description: <p>The error message that AWS Config returned when the rule last failed.</p>
      FirstEvaluationStarted?:
        type: Boolean
        description: <p>Indicates whether AWS Config has evaluated your resources against the rule at least once.</p> <ul> <li><code>true</code> - AWS Config has evaluated your AWS resources against the rule at least once.</li> <li><code>false</code> - AWS Config has not once finished evaluating your AWS resources against the rule.</li> </ul>
    description: <p>Status information for your AWS managed Config rules. The status includes information such as the last time the rule ran, the last time it failed, and the related error for the last failure.</p> <p>This action does not return status information about custom Config rules.</p>
  ConfigSnapshotDeliveryProperties:
    type: object
    properties:
      deliveryFrequency?:
        type: MaximumExecutionFrequency
        description: <p>The frequency with which AWS Config delivers configuration snapshots.</p>
    description: <p>Provides options for how often AWS Config delivers configuration snapshots to the Amazon S3 bucket in your delivery channel.</p> <note> <p>If you want to create a rule that triggers evaluations for your resources when AWS Config delivers the configuration snapshot, see the following:</p> </note> <p>The frequency for a rule that triggers evaluations for your resources when AWS Config delivers the configuration snapshot is set by one of two values, depending on which is less frequent:</p> <ul> <li> <p>The value for the <code>deliveryFrequency</code> parameter within the delivery channel configuration, which sets how often AWS Config delivers configuration snapshots. This value also sets how often AWS Config invokes evaluations for Config rules.</p> </li> <li> <p>The value for the <code>MaximumExecutionFrequency</code> parameter, which sets the maximum frequency with which AWS Config invokes evaluations for the rule. For more information, see <a>ConfigRule</a>.</p> </li> </ul> <p>If the <code>deliveryFrequency</code> value is less frequent than the <code>MaximumExecutionFrequency</code> value for a rule, AWS Config invokes the rule only as often as the <code>deliveryFrequency</code> value.</p> <ol> <li> <p>For example, you want your rule to run evaluations when AWS Config delivers the configuration snapshot. </p> </li> <li> <p>You specify the <code>MaximumExecutionFrequency</code> value for <code>Six_Hours</code>. </p> </li> <li> <p>You then specify the delivery channel <code>deliveryFrequency</code> value for <code>TwentyFour_Hours</code>. </p> </li> <li> <p>Because the value for <code>deliveryFrequency</code> is less frequent than <code>MaximumExecutionFrequency</code>, AWS Config invokes evaluations for the rule every 24 hours. </p> </li> </ol> <p>You should set the <code>MaximumExecutionFrequency</code> value to be at least as frequent as the <code>deliveryFrequency</code> value. You can view the <code>deliveryFrequency</code> value by using the <code>DescribeDeliveryChannnels</code> action.</p> <p>To update the <code>deliveryFrequency</code> with which AWS Config delivers your configuration snapshots, use the <code>PutDeliveryChannel</code> action.</p>
  ConfigStreamDeliveryInfo:
    type: object
    properties:
      lastStatus?:
        type: DeliveryStatus
        description: <p>Status of the last attempted delivery.</p> <p><b>Note</b> Providing an SNS topic on a <a href="http://docs.aws.amazon.com/config/latest/APIReference/API_DeliveryChannel.html">DeliveryChannel</a> for AWS Config is optional. If the SNS delivery is turned off, the last status will be <b>Not_Applicable</b>.</p>
      lastErrorCode?:
        type: String
        description: <p>The error code from the last attempted delivery.</p>
      lastErrorMessage?:
        type: String
        description: <p>The error message from the last attempted delivery.</p>
      lastStatusChangeTime?:
        type: Date
        description: <p>The time from the last status change.</p>
    description: <p>A list that contains the status of the delivery of the configuration stream notification to the Amazon SNS topic. </p>
  ConfigurationItem:
    type: object
    properties:
      version?:
        type: Version
        description: <p>The version number of the resource configuration.</p>
      accountId?:
        type: AccountId
        description: <p>The 12 digit AWS account ID associated with the resource.</p>
      configurationItemCaptureTime?:
        type: ConfigurationItemCaptureTime
        description: <p>The time when the configuration recording was initiated.</p>
      configurationItemStatus?:
        type: ConfigurationItemStatus
        description: <p>The configuration item status.</p>
      configurationStateId?:
        type: ConfigurationStateId
        description: <p>An identifier that indicates the ordering of the configuration items of a resource.</p>
      configurationItemMD5Hash?:
        type: ConfigurationItemMD5Hash
        description: <p>Unique MD5 hash that represents the configuration item&apos;s state.</p> <p>You can use MD5 hash to compare the states of two or more configuration items that are associated with the same resource.</p>
      arn?:
        type: ARN
        description: <p>The Amazon Resource Name (ARN) of the resource.</p>
      resourceType?:
        type: ResourceType
        description: <p>The type of AWS resource.</p>
      resourceId?:
        type: ResourceId
        description: <p>The ID of the resource (for example., <code>sg-xxxxxx</code>).</p>
      resourceName?:
        type: ResourceName
        description: <p>The custom name of the resource, if available.</p>
      awsRegion?:
        type: AwsRegion
        description: <p>The region where the resource resides.</p>
      availabilityZone?:
        type: AvailabilityZone
        description: <p>The Availability Zone associated with the resource.</p>
      resourceCreationTime?:
        type: ResourceCreationTime
        description: <p>The time stamp when the resource was created. </p>
      tags?:
        type: Tags
        description: <p>A mapping of key value tags associated with the resource.</p>
      relatedEvents?:
        type: RelatedEventList
        description: <p>A list of CloudTrail event IDs.</p> <p>A populated field indicates that the current configuration was initiated by the events recorded in the CloudTrail log. For more information about CloudTrail, see <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">What is AWS CloudTrail?</a>.</p> <p>An empty field indicates that the current configuration was not initiated by any event.</p>
      relationships?:
        type: RelationshipList
        description: <p>A list of related AWS resources.</p>
      configuration?:
        type: Configuration
        description: <p>The description of the resource configuration.</p>
      supplementaryConfiguration?:
        type: SupplementaryConfiguration
        description: <p>Configuration attributes that AWS Config returns for certain resource types to supplement the information returned for the <code>configuration</code> parameter.</p>
    description: <p>A list that contains detailed configurations of a specified resource.</p> <note> <p>Currently, the list does not contain information about non-AWS components (for example, applications on your Amazon EC2 instances).</p> </note>
  ConfigurationRecorder:
    type: object
    properties:
      name?:
        type: RecorderName
        description: <p>The name of the recorder. By default, AWS Config automatically assigns the name &quot;default&quot; when creating the configuration recorder. You cannot change the assigned name.</p>
      roleARN?:
        type: String
        description: <p>Amazon Resource Name (ARN) of the IAM role used to describe the AWS resources associated with the account.</p>
      recordingGroup?:
        type: RecordingGroup
        description: <p>Specifies the types of AWS resource for which AWS Config records configuration changes.</p>
    description: <p>An object that represents the recording of configuration changes of an AWS resource.</p>
  ConfigurationRecorderStatus:
    type: object
    properties:
      name?:
        type: String
        description: <p>The name of the configuration recorder.</p>
      lastStartTime?:
        type: Date
        description: <p>The time the recorder was last started.</p>
      lastStopTime?:
        type: Date
        description: <p>The time the recorder was last stopped.</p>
      recording?:
        type: Boolean
        description: <p>Specifies whether the recorder is currently recording or not.</p>
      lastStatus?:
        type: RecorderStatus
        description: <p>The last (previous) status of the recorder.</p>
      lastErrorCode?:
        type: String
        description: <p>The error code indicating that the recording failed.</p>
      lastErrorMessage?:
        type: String
        description: <p>The message indicating that the recording failed due to an error.</p>
      lastStatusChangeTime?:
        type: Date
        description: <p>The time when the status was last changed.</p>
    description: <p>The current status of the configuration recorder.</p>
  DeleteConfigRuleRequest:
    type: object
    properties:
      ConfigRuleName:
        type: StringWithCharLimit64
        description: <p>The name of the AWS Config rule that you want to delete.</p>
  DeleteConfigurationRecorderRequest:
    type: object
    properties:
      ConfigurationRecorderName:
        type: RecorderName
        description: <p>The name of the configuration recorder to be deleted. You can retrieve the name of your configuration recorder by using the <code>DescribeConfigurationRecorders</code> action.</p>
    description: <p>The request object for the <code>DeleteConfigurationRecorder</code> action.</p>
  DeleteDeliveryChannelRequest:
    type: object
    properties:
      DeliveryChannelName:
        type: ChannelName
        description: <p>The name of the delivery channel to delete.</p>
    description: <p> The input for the <a>DeleteDeliveryChannel</a> action. The action accepts the following data in JSON format. </p>
  DeleteEvaluationResultsRequest:
    type: object
    properties:
      ConfigRuleName:
        type: StringWithCharLimit64
        description: <p>The name of the Config rule for which you want to delete the evaluation results.</p>
  DeleteEvaluationResultsResponse:
    type: object
    description: <p>The output when you delete the evaluation results for the specified Config rule.</p>
  DeliverConfigSnapshotRequest:
    type: object
    properties:
      deliveryChannelName:
        type: ChannelName
        description: <p>The name of the delivery channel through which the snapshot is delivered.</p>
    description: <p> The input for the <a>DeliverConfigSnapshot</a> action. </p>
  DeliverConfigSnapshotResponse:
    type: object
    properties:
      configSnapshotId?:
        type: String
        description: <p>The ID of the snapshot that is being created.</p>
    description: <p> The output for the <a>DeliverConfigSnapshot</a> action in JSON format. </p>
  DeliveryChannel:
    type: object
    properties:
      name?:
        type: ChannelName
        description: <p>The name of the delivery channel. By default, AWS Config assigns the name &quot;default&quot; when creating the delivery channel. To change the delivery channel name, you must use the DeleteDeliveryChannel action to delete your current delivery channel, and then you must use the PutDeliveryChannel command to create a delivery channel that has the desired name.</p>
      s3BucketName?:
        type: String
        description: <p>The name of the Amazon S3 bucket to which AWS Config delivers configuration snapshots and configuration history files.</p> <p>If you specify a bucket that belongs to another AWS account, that bucket must have policies that grant access permissions to AWS Config. For more information, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy.html">Permissions for the Amazon S3 Bucket</a> in the AWS Config Developer Guide.</p>
      s3KeyPrefix?:
        type: String
        description: <p>The prefix for the specified Amazon S3 bucket.</p>
      snsTopicARN?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which AWS Config sends notifications about configuration changes.</p> <p>If you choose a topic from another account, the topic must have policies that grant access permissions to AWS Config. For more information, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/sns-topic-policy.html">Permissions for the Amazon SNS Topic</a> in the AWS Config Developer Guide.</p>
      configSnapshotDeliveryProperties?:
        type: ConfigSnapshotDeliveryProperties
    description: <p>The channel through which AWS Config delivers notifications and updated configuration states.</p>
  DeliveryChannelStatus:
    type: object
    properties:
      name?:
        type: String
        description: <p>The name of the delivery channel.</p>
      configSnapshotDeliveryInfo?:
        type: ConfigExportDeliveryInfo
        description: <p>A list containing the status of the delivery of the snapshot to the specified Amazon S3 bucket.</p>
      configHistoryDeliveryInfo?:
        type: ConfigExportDeliveryInfo
        description: <p>A list that contains the status of the delivery of the configuration history to the specified Amazon S3 bucket.</p>
      configStreamDeliveryInfo?:
        type: ConfigStreamDeliveryInfo
        description: <p>A list containing the status of the delivery of the configuration stream notification to the specified Amazon SNS topic.</p>
    description: '<p>The status of a specified delivery channel.</p> <p>Valid values:
      <code>Success</code> | <code>Failure</code></p>'
  DescribeComplianceByConfigRuleRequest:
    type: object
    properties:
      ConfigRuleNames?:
        type: ConfigRuleNames
        description: <p>Specify one or more AWS Config rule names to filter the results by rule.</p>
      ComplianceTypes?:
        type: ComplianceTypes
        description: <p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>INSUFFICIENT_DATA</code>.</p>
      NextToken?:
        type: String
        description: <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
  DescribeComplianceByConfigRuleResponse:
    type: object
    properties:
      ComplianceByConfigRules?:
        type: ComplianceByConfigRules
        description: <p>Indicates whether each of the specified AWS Config rules is compliant.</p>
      NextToken?:
        type: String
        description: <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
  DescribeComplianceByResourceRequest:
    type: object
    properties:
      ResourceType?:
        type: StringWithCharLimit256
        description: <p>The types of AWS resources for which you want compliance information; for example, <code>AWS::EC2::Instance</code>. For this action, you can specify that the resource type is an AWS account by specifying <code>AWS::::Account</code>.</p>
      ResourceId?:
        type: StringWithCharLimit256
        description: <p>The ID of the AWS resource for which you want compliance information. You can specify only one resource ID. If you specify a resource ID, you must also specify a type for <code>ResourceType</code>.</p>
      ComplianceTypes?:
        type: ComplianceTypes
        description: <p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>INSUFFICIENT_DATA</code>.</p>
      Limit?:
        type: Limit
        description: <p>The maximum number of evaluation results returned on each page. The default is 10. You cannot specify a limit greater than 100. If you specify 0, AWS Config uses the default.</p>
      NextToken?:
        type: NextToken
        description: <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
  DescribeComplianceByResourceResponse:
    type: object
    properties:
      ComplianceByResources?:
        type: ComplianceByResources
        description: <p>Indicates whether the specified AWS resource complies with all of the AWS Config rules that evaluate it.</p>
      NextToken?:
        type: NextToken
        description: <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
  DescribeConfigRuleEvaluationStatusRequest:
    type: object
    properties:
      ConfigRuleNames?:
        type: ConfigRuleNames
        description: <p>The name of the AWS managed Config rules for which you want status information. If you do not specify any names, AWS Config returns status information for all AWS managed Config rules that you use. </p>
  DescribeConfigRuleEvaluationStatusResponse:
    type: object
    properties:
      ConfigRulesEvaluationStatus?:
        type: ConfigRuleEvaluationStatusList
        description: <p>Status information about your AWS managed Config rules.</p>
  DescribeConfigRulesRequest:
    type: object
    properties:
      ConfigRuleNames?:
        type: ConfigRuleNames
        description: <p>The names of the AWS Config rules for which you want details. If you do not specify any names, AWS Config returns details for all your rules.</p>
      NextToken?:
        type: String
        description: <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
  DescribeConfigRulesResponse:
    type: object
    properties:
      ConfigRules?:
        type: ConfigRules
        description: <p>The details about your AWS Config rules.</p>
      NextToken?:
        type: String
        description: <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
  DescribeConfigurationRecorderStatusRequest:
    type: object
    properties:
      ConfigurationRecorderNames?:
        type: ConfigurationRecorderNameList
        description: <p>The name(s) of the configuration recorder. If the name is not specified, the action returns the current status of all the configuration recorders associated with the account. </p>
    description: <p>The input for the <a>DescribeConfigurationRecorderStatus</a> action.</p>
  DescribeConfigurationRecorderStatusResponse:
    type: object
    properties:
      ConfigurationRecordersStatus?:
        type: ConfigurationRecorderStatusList
        description: <p> A list that contains status of the specified recorders. </p>
    description: <p>The output for the <a>DescribeConfigurationRecorderStatus</a> action in JSON format.</p>
  DescribeConfigurationRecordersRequest:
    type: object
    properties:
      ConfigurationRecorderNames?:
        type: ConfigurationRecorderNameList
        description: <p>A list of configuration recorder names.</p>
    description: <p>The input for the <a>DescribeConfigurationRecorders</a> action.</p>
  DescribeConfigurationRecordersResponse:
    type: object
    properties:
      ConfigurationRecorders?:
        type: ConfigurationRecorderList
        description: <p>A list that contains the descriptions of the specified configuration recorders.</p>
    description: <p>The output for the <a>DescribeConfigurationRecorders</a> action.</p>
  DescribeDeliveryChannelStatusRequest:
    type: object
    properties:
      DeliveryChannelNames?:
        type: DeliveryChannelNameList
        description: <p>A list of delivery channel names.</p>
    description: <p>The input for the <a>DeliveryChannelStatus</a> action.</p>
  DescribeDeliveryChannelStatusResponse:
    type: object
    properties:
      DeliveryChannelsStatus?:
        type: DeliveryChannelStatusList
        description: <p>A list that contains the status of a specified delivery channel.</p>
    description: <p>The output for the <a>DescribeDeliveryChannelStatus</a> action.</p>
  DescribeDeliveryChannelsRequest:
    type: object
    properties:
      DeliveryChannelNames?:
        type: DeliveryChannelNameList
        description: <p>A list of delivery channel names.</p>
    description: <p>The input for the <a>DescribeDeliveryChannels</a> action.</p>
  DescribeDeliveryChannelsResponse:
    type: object
    properties:
      DeliveryChannels?:
        type: DeliveryChannelList
        description: <p>A list that contains the descriptions of the specified delivery channel.</p>
    description: <p>The output for the <a>DescribeDeliveryChannels</a> action.</p>
  Evaluation:
    type: object
    properties:
      ComplianceResourceType:
        type: StringWithCharLimit256
        description: <p>The type of AWS resource that was evaluated.</p>
      ComplianceResourceId:
        type: StringWithCharLimit256
        description: <p>The ID of the AWS resource that was evaluated.</p>
      ComplianceType:
        type: ComplianceType
        description: <p>Indicates whether the AWS resource complies with the AWS Config rule that it was evaluated against.</p> <p>For the <code>Evaluation</code> data type, AWS Config supports only the <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code> values. AWS Config does not support the <code>INSUFFICIENT_DATA</code> value for this data type.</p> <p>Similarly, AWS Config does not accept <code>INSUFFICIENT_DATA</code> as the value for <code>ComplianceType</code> from a <code>PutEvaluations</code> request. For example, an AWS Lambda function for a custom Config rule cannot pass an <code>INSUFFICIENT_DATA</code> value to AWS Config.</p>
      Annotation?:
        type: StringWithCharLimit256
        description: <p>Supplementary information about how the evaluation determined the compliance.</p>
      OrderingTimestamp:
        type: OrderingTimestamp
        description: <p>The time of the event in AWS Config that triggered the evaluation. For event-based evaluations, the time indicates when AWS Config created the configuration item that triggered the evaluation. For periodic evaluations, the time indicates when AWS Config delivered the configuration snapshot that triggered the evaluation.</p>
    description: <p>Identifies an AWS resource and indicates whether it complies with the AWS Config rule that it was evaluated against.</p>
  EvaluationResult:
    type: object
    properties:
      EvaluationResultIdentifier?:
        type: EvaluationResultIdentifier
        description: <p>Uniquely identifies the evaluation result.</p>
      ComplianceType?:
        type: ComplianceType
        description: <p>Indicates whether the AWS resource complies with the AWS Config rule that evaluated it.</p> <p>For the <code>EvaluationResult</code> data type, AWS Config supports only the <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code> values. AWS Config does not support the <code>INSUFFICIENT_DATA</code> value for the <code>EvaluationResult</code> data type.</p>
      ResultRecordedTime?:
        type: Date
        description: <p>The time when AWS Config recorded the evaluation result.</p>
      ConfigRuleInvokedTime?:
        type: Date
        description: <p>The time when the AWS Config rule evaluated the AWS resource.</p>
      Annotation?:
        type: StringWithCharLimit256
        description: <p>Supplementary information about how the evaluation determined the compliance.</p>
      ResultToken?:
        type: String
        description: <p>An encrypted token that associates an evaluation with an AWS Config rule. The token identifies the rule, the AWS resource being evaluated, and the event that triggered the evaluation.</p>
    description: <p>The details of an AWS Config evaluation. Provides the AWS resource that was evaluated, the compliance of the resource, related timestamps, and supplementary information. </p>
  EvaluationResultIdentifier:
    type: object
    properties:
      EvaluationResultQualifier?:
        type: EvaluationResultQualifier
        description: <p>Identifies an AWS Config rule used to evaluate an AWS resource, and provides the type and ID of the evaluated resource.</p>
      OrderingTimestamp?:
        type: Date
        description: <p>The time of the event that triggered the evaluation of your AWS resources. The time can indicate when AWS Config delivered a configuration item change notification, or it can indicate when AWS Config delivered the configuration snapshot, depending on which event triggered the evaluation.</p>
    description: <p>Uniquely identifies an evaluation result.</p>
  EvaluationResultQualifier:
    type: object
    properties:
      ConfigRuleName?:
        type: StringWithCharLimit64
        description: <p>The name of the AWS Config rule that was used in the evaluation.</p>
      ResourceType?:
        type: StringWithCharLimit256
        description: <p>The type of AWS resource that was evaluated.</p>
      ResourceId?:
        type: StringWithCharLimit256
        description: <p>The ID of the evaluated AWS resource.</p>
    description: <p>Identifies an AWS Config rule that evaluated an AWS resource, and provides the type and ID of the resource that the rule evaluated.</p>
  GetComplianceDetailsByConfigRuleRequest:
    type: object
    properties:
      ConfigRuleName:
        type: StringWithCharLimit64
        description: <p>The name of the AWS Config rule for which you want compliance information.</p>
      ComplianceTypes?:
        type: ComplianceTypes
        description: <p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code>.</p>
      Limit?:
        type: Limit
        description: <p>The maximum number of evaluation results returned on each page. The default is 10. You cannot specify a limit greater than 100. If you specify 0, AWS Config uses the default.</p>
      NextToken?:
        type: NextToken
        description: <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
  GetComplianceDetailsByConfigRuleResponse:
    type: object
    properties:
      EvaluationResults?:
        type: EvaluationResults
        description: <p>Indicates whether the AWS resource complies with the specified AWS Config rule.</p>
      NextToken?:
        type: NextToken
        description: <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
  GetComplianceDetailsByResourceRequest:
    type: object
    properties:
      ResourceType:
        type: StringWithCharLimit256
        description: <p>The type of the AWS resource for which you want compliance information.</p>
      ResourceId:
        type: StringWithCharLimit256
        description: <p>The ID of the AWS resource for which you want compliance information.</p>
      ComplianceTypes?:
        type: ComplianceTypes
        description: <p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code>.</p>
      NextToken?:
        type: String
        description: <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
  GetComplianceDetailsByResourceResponse:
    type: object
    properties:
      EvaluationResults?:
        type: EvaluationResults
        description: <p>Indicates whether the specified AWS resource complies each AWS Config rule.</p>
      NextToken?:
        type: String
        description: <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
  GetComplianceSummaryByConfigRuleResponse:
    type: object
    properties:
      ComplianceSummary?:
        type: ComplianceSummary
        description: <p>The number of AWS Config rules that are compliant and the number that are noncompliant, up to a maximum of 25 for each.</p>
  GetComplianceSummaryByResourceTypeRequest:
    type: object
    properties:
      ResourceTypes?:
        type: ResourceTypes
        description: <p>Specify one or more resource types to get the number of resources that are compliant and the number that are noncompliant for each resource type.</p> <p>For this request, you can specify an AWS resource type such as <code>AWS::EC2::Instance</code>, and you can specify that the resource type is an AWS account by specifying <code>AWS::::Account</code>.</p>
  GetComplianceSummaryByResourceTypeResponse:
    type: object
    properties:
      ComplianceSummariesByResourceType?:
        type: ComplianceSummariesByResourceType
        description: <p>The number of resources that are compliant and the number that are noncompliant. If one or more resource types were provided with the request, the numbers are returned for each resource type. The maximum number returned is 100.</p>
  GetResourceConfigHistoryRequest:
    type: object
    properties:
      resourceType:
        type: ResourceType
        description: <p>The resource type.</p>
      resourceId:
        type: ResourceId
        description: <p>The ID of the resource (for example., <code>sg-xxxxxx</code>).</p>
      laterTime?:
        type: LaterTime
        description: <p>The time stamp that indicates a later time. If not specified, current time is taken.</p>
      earlierTime?:
        type: EarlierTime
        description: <p>The time stamp that indicates an earlier time. If not specified, the action returns paginated results that contain configuration items that start from when the first configuration item was recorded.</p>
      chronologicalOrder?:
        type: ChronologicalOrder
        description: <p>The chronological order for configuration items listed. By default the results are listed in reverse chronological order.</p>
      limit?:
        type: Limit
        description: <p>The maximum number of configuration items returned on each page. The default is 10. You cannot specify a limit greater than 100. If you specify 0, AWS Config uses the default.</p>
      nextToken?:
        type: NextToken
        description: <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
    description: <p>The input for the <a>GetResourceConfigHistory</a> action.</p>
  GetResourceConfigHistoryResponse:
    type: object
    properties:
      configurationItems?:
        type: ConfigurationItemList
        description: <p>A list that contains the configuration history of one or more resources.</p>
      nextToken?:
        type: NextToken
        description: <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
    description: <p>The output for the <a>GetResourceConfigHistory</a> action.</p>
  ListDiscoveredResourcesRequest:
    type: object
    properties:
      resourceType:
        type: ResourceType
        description: <p>The type of resources that you want AWS Config to list in the response.</p>
      resourceIds?:
        type: ResourceIdList
        description: <p>The IDs of only those resources that you want AWS Config to list in the response. If you do not specify this parameter, AWS Config lists all resources of the specified type that it has discovered.</p>
      resourceName?:
        type: ResourceName
        description: <p>The custom name of only those resources that you want AWS Config to list in the response. If you do not specify this parameter, AWS Config lists all resources of the specified type that it has discovered.</p>
      limit?:
        type: Limit
        description: <p>The maximum number of resource identifiers returned on each page. The default is 100. You cannot specify a limit greater than 100. If you specify 0, AWS Config uses the default.</p>
      includeDeletedResources?:
        type: Boolean
        description: <p>Specifies whether AWS Config includes deleted resources in the results. By default, deleted resources are not included.</p>
      nextToken?:
        type: NextToken
        description: <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
  ListDiscoveredResourcesResponse:
    type: object
    properties:
      resourceIdentifiers?:
        type: ResourceIdentifierList
        description: <p>The details that identify a resource that is discovered by AWS Config, including the resource type, ID, and (if available) the custom resource name.</p>
      nextToken?:
        type: NextToken
        description: <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
  PutConfigRuleRequest:
    type: object
    properties:
      ConfigRule:
        type: ConfigRule
  PutConfigurationRecorderRequest:
    type: object
    properties:
      ConfigurationRecorder:
        type: ConfigurationRecorder
        description: <p>The configuration recorder object that records each configuration change made to the resources.</p>
    description: <p>The input for the <a>PutConfigurationRecorder</a> action.</p>
  PutDeliveryChannelRequest:
    type: object
    properties:
      DeliveryChannel:
        type: DeliveryChannel
        description: <p>The configuration delivery channel object that delivers the configuration information to an Amazon S3 bucket, and to an Amazon SNS topic.</p>
    description: <p>The input for the <a>PutDeliveryChannel</a> action.</p>
  PutEvaluationsRequest:
    type: object
    properties:
      Evaluations?:
        type: Evaluations
        description: <p>The assessments that the AWS Lambda function performs. Each evaluation identifies an AWS resource and indicates whether it complies with the AWS Config rule that invokes the AWS Lambda function.</p>
      ResultToken:
        type: String
        description: <p>An encrypted token that associates an evaluation with an AWS Config rule. Identifies the rule and the event that triggered the evaluation</p>
  PutEvaluationsResponse:
    type: object
    properties:
      FailedEvaluations?:
        type: Evaluations
        description: <p>Requests that failed because of a client or server error.</p>
  RecordingGroup:
    type: object
    properties:
      allSupported?:
        type: AllSupported
        description: <p>Specifies whether AWS Config records configuration changes for every supported type of regional resource.</p> <p>If you set this option to <code>true</code>, when AWS Config adds support for a new type of regional resource, it automatically starts recording resources of that type.</p> <p>If you set this option to <code>true</code>, you cannot enumerate a list of <code>resourceTypes</code>.</p>
      includeGlobalResourceTypes?:
        type: IncludeGlobalResourceTypes
        description: <p>Specifies whether AWS Config includes all supported types of global resources (for example, IAM resources) with the resources that it records.</p> <p>Before you can set this option to <code>true</code>, you must set the <code>allSupported</code> option to <code>true</code>.</p> <p>If you set this option to <code>true</code>, when AWS Config adds support for a new type of global resource, it automatically starts recording resources of that type.</p> <p>The configuration details for any global resource are the same in all regions. To prevent duplicate configuration items, you should consider customizing AWS Config in only one region to record global resources.</p>
      resourceTypes?:
        type: ResourceTypeList
        description: <p>A comma-separated list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, <code>AWS::EC2::Instance</code> or <code>AWS::CloudTrail::Trail</code>).</p> <p>Before you can set this option to <code>true</code>, you must set the <code>allSupported</code> option to <code>false</code>.</p> <p>If you set this option to <code>true</code>, when AWS Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>resourceType Value</b> column in <a href="http://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported AWS Resource Types</a>.</p>
    description: '<p>Specifies the types of AWS resource for which AWS Config records
      configuration changes.</p> <p>In the recording group, you specify whether all
      supported types or specific types of resources are recorded.</p> <p>By default,
      AWS Config records configuration changes for all supported types of regional
      resources that AWS Config discovers in the region in which it is running. Regional
      resources are tied to a region and can be used only in that region. Examples
      of regional resources are EC2 instances and EBS volumes.</p> <p>You can also
      have AWS Config record configuration changes for supported types of global resources
      (for example, IAM resources). Global resources are not tied to an individual
      region and can be used in all regions.</p> <important> <p>The configuration
      details for any global resource are the same in all regions. If you customize
      AWS Config in multiple regions to record global resources, it will create multiple
      configuration items each time a global resource changes: one configuration item
      for each region. These configuration items will contain identical data. To prevent
      duplicate configuration items, you should consider customizing AWS Config in
      only one region to record global resources, unless you want the configuration
      items to be available in multiple regions.</p> </important> <p>If you don''t
      want AWS Config to record all resources, you can specify which types of resources
      it will record with the <code>resourceTypes</code> parameter.</p> <p>For a list
      of supported resource types, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported
      resource types</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/select-resources.html">Selecting
      Which Resources AWS Config Records</a>.</p>'
  Relationship:
    type: object
    properties:
      resourceType?:
        type: ResourceType
        description: <p>The resource type of the related resource.</p>
      resourceId?:
        type: ResourceId
        description: <p>The ID of the related resource (for example, <code>sg-xxxxxx</code>).</p>
      resourceName?:
        type: ResourceName
        description: <p>The custom name of the related resource, if available.</p>
      relationshipName?:
        type: RelationshipName
        description: <p>The type of relationship with the related resource.</p>
    description: <p>The relationship of the related resource to the main resource.</p>
  ResourceIdentifier:
    type: object
    properties:
      resourceType?:
        type: ResourceType
        description: <p>The type of resource.</p>
      resourceId?:
        type: ResourceId
        description: <p>The ID of the resource (for example., <code>sg-xxxxxx</code>).</p>
      resourceName?:
        type: ResourceName
        description: <p>The custom name of the resource (if available).</p>
      resourceDeletionTime?:
        type: ResourceDeletionTime
        description: <p>The time that the resource was deleted.</p>
    description: <p>The details that identify a resource that is discovered by AWS Config, including the resource type, ID, and (if available) the custom resource name.</p>
  Scope:
    type: object
    properties:
      ComplianceResourceTypes?:
        type: ComplianceResourceTypes
        description: <p>The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for <code>ComplianceResourceId</code>.</p>
      TagKey?:
        type: StringWithCharLimit128
        description: <p>The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.</p>
      TagValue?:
        type: StringWithCharLimit256
        description: <p>The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule. If you specify a value for <code>TagValue</code>, you must also specify a value for <code>TagKey</code>.</p>
      ComplianceResourceId?:
        type: StringWithCharLimit256
        description: <p>The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for <code>ComplianceResourceTypes</code>.</p>
    description: <p>Defines which resources trigger an evaluation for an AWS Config rule. The scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. Specify a scope to constrain which resources trigger an evaluation for a rule. Otherwise, evaluations for the rule are triggered when any resource in your recording group changes in configuration. </p>
  Source:
    type: object
    properties:
      Owner?:
        type: Owner
        description: <p>Indicates whether AWS or the customer owns and manages the AWS Config rule.</p>
      SourceIdentifier?:
        type: StringWithCharLimit256
        description: <p>For AWS managed Config rules, a pre-defined identifier from a list. To reference the list, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">Using AWS Managed Config Rules</a>.</p> <p>For custom Config rules, the identifier is the Amazon Resource Name (ARN) of the rule's AWS Lambda function.</p>
      SourceDetails?:
        type: SourceDetails
        description: <p>Provides the source and type of the event that causes AWS Config to evaluate your AWS resources.</p>
    description: <p>Provides the AWS Config rule owner (AWS or customer), the rule identifier, and the events that trigger the evaluation of your AWS resources.</p>
  SourceDetail:
    type: object
    properties:
      EventSource?:
        type: EventSource
        description: <p> </p> <p>The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWS resources.</p>
      MessageType?:
        type: MessageType
        description: <p>The type of notification that triggers AWS Config to run an evaluation. You can specify the following notification types:</p> <p><code>ConfigurationItemChangeNotification</code> - Triggers an evaluation when AWS Config delivers a configuration item change notification.</p> <p><code>ScheduledNotification</code> - Triggers a periodic evaluation at the frequency specified for <code>MaximumExecutionFrequency</code>.</p> <p><code>ConfigurationSnapshotDeliveryCompleted</code> - Triggers a periodic evaluation when AWS Config delivers a configuration snapshot.</p>
      MaximumExecutionFrequency?:
        type: MaximumExecutionFrequency
        description: <p>The frequency that you want AWS Config to run evaluations for a rule that is triggered periodically. If you specify a value for <code>MaximumExecutionFrequency</code>, then <code>MessageType</code> must use the <code>ScheduledNotification</code> value.</p>
    description: <p>Provides the source and the message types that trigger AWS Config to evaluate your AWS resources against a rule. It also provides the frequency with which you want AWS Config to run evaluations for the rule if the trigger type is periodic. You can specify the parameter values for <code>SourceDetail</code> only for custom rules. </p>
  StartConfigRulesEvaluationRequest:
    type: object
    properties:
      ConfigRuleNames?:
        type: ReevaluateConfigRuleNames
        description: <p>The list of names of Config rules that you want to run evaluations for.</p>
  StartConfigRulesEvaluationResponse:
    type: object
    description: <p>The output when you start the evaluation for the specified Config rule.</p>
  StartConfigurationRecorderRequest:
    type: object
    properties:
      ConfigurationRecorderName:
        type: RecorderName
        description: <p>The name of the recorder object that records each configuration change made to the resources.</p>
    description: <p>The input for the <a>StartConfigurationRecorder</a> action.</p>
  StopConfigurationRecorderRequest:
    type: object
    properties:
      ConfigurationRecorderName:
        type: RecorderName
        description: <p>The name of the recorder object that records each configuration change made to the resources.</p>
    description: <p>The input for the <a>StopConfigurationRecorder</a> action.</p>
  SupplementaryConfiguration:
    type: object
    properties:
      //:
        type: SupplementaryConfigurationValue
  Tags:
    type: object
    properties:
      //:
        type: Value
/{DeleteConfigRule}:
  uriParameters:
    DeleteConfigRule?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Config Rule
  post:
    description: Deletes the specified AWS Config rule and all of its evaluation results. AWS Config sets the state of a rule to <code>DELETING</code> until the deletion is complete. You cannot update a rule while it is in this state. If you make a <code>PutConfigRule</code> or <code>DeleteConfigRule</code> request for the rule, you will receive a <code>ResourceInUseException</code>. You can check the state of a rule by using the <code>DescribeConfigRules</code> request.
    displayName: Delete Config Rule
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteConfigRule
    body:
      application/json: DeleteConfigRuleRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NoSuchConfigRuleException
/{DeleteConfigurationRecorder}:
  uriParameters:
    DeleteConfigurationRecorder?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Configuration Recorder
  post:
    description: Deletes the configuration recorder. After the configuration recorder is deleted, AWS Config will not record resource configuration changes until you create a new configuration recorder. This action does not delete the configuration information that was previously recorded. You will be able to access the previously recorded information by using the <code>GetResourceConfigHistory</code> action, but you will not be able to access this information in the AWS Config console until you create a new configuration recorder.
    displayName: Delete Configuration Recorder
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteConfigurationRecorder
    body:
      application/json: DeleteConfigurationRecorderRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NoSuchConfigurationRecorderException
/{DeleteDeliveryChannel}:
  uriParameters:
    DeleteDeliveryChannel?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Delivery Channel
  post:
    description: Deletes the delivery channel. Before you can delete the delivery channel, you must stop the configuration recorder by using the <a>StopConfigurationRecorder</a> action.
    displayName: Delete Delivery Channel
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteDeliveryChannel
    body:
      application/json: DeleteDeliveryChannelRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NoSuchDeliveryChannelException
/{DeleteEvaluationResults}:
  uriParameters:
    DeleteEvaluationResults?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Delete Evaluation Results
  post:
    description: Deletes the evaluation results for the specified Config rule. You can specify one Config rule per request. After you delete the evaluation results, you can call the <a>StartConfigRulesEvaluation</a> API to start evaluating your AWS resources against the rule.
    displayName: Delete Evaluation Results
    queryParameters:
      Action:
        type: string
        enum:
        - DeleteEvaluationResults
    body:
      application/json: DeleteEvaluationResultsRequest
    responses:
      200:
        body:
          application/json: DeleteEvaluationResultsResponse
      400:
        description: NoSuchConfigRuleException
/{DeliverConfigSnapshot}:
  uriParameters:
    DeliverConfigSnapshot?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Deliver Config Snapshot
  post:
    description: Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the specified delivery channel. After the delivery has started, AWS Config sends following notifications using an Amazon SNS topic that you have specified. <ul> <li>Notification of starting the delivery.</li> <li>Notification of delivery completed, if the delivery was successfully completed.</li> <li>Notification of delivery failure, if the delivery failed to complete.</li> </ul>
    displayName: Deliver Config Snapshot
    queryParameters:
      Action:
        type: string
        enum:
        - DeliverConfigSnapshot
    body:
      application/json: DeliverConfigSnapshotRequest
    responses:
      200:
        body:
          application/json: DeliverConfigSnapshotResponse
      400:
        description: NoSuchDeliveryChannelException
/{DescribeComplianceByConfigRule}:
  uriParameters:
    DescribeComplianceByConfigRule?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Compliance By Config Rule
  post:
    description: 'Indicates whether the specified AWS Config rules are compliant.
      If a rule is noncompliant, this action returns the number of AWS resources that
      do not comply with the rule. A rule is compliant if all of the evaluated resources
      comply with it, and it is noncompliant if any of these resources do not comply.  If
      AWS Config has no current evaluation results for the rule, it returns <code>INSUFFICIENT_DATA</code>.
      This result might indicate one of the following conditions: <ul> <li>AWS Config
      has never invoked an evaluation for the rule. To check whether it has, use the
      <code>DescribeConfigRuleEvaluationStatus</code> action to get the <code>LastSuccessfulInvocationTime</code>
      and <code>LastFailedInvocationTime</code>.</li> <li>The rule''s AWS Lambda function
      is failing to send evaluation results to AWS Config. Verify that the role that
      you assigned to your configuration recorder includes the <code>config:PutEvaluations</code>
      permission. If the rule is a custom rule, verify that the AWS Lambda execution
      role includes the <code>config:PutEvaluations</code> permission.</li> <li>The
      rule''s AWS Lambda function has returned <code>NOT_APPLICABLE</code> for all
      evaluation results. This can occur if the resources were deleted or removed
      from the rule''s scope.</li> </ul>'
    displayName: Describe Compliance By Config Rule
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeComplianceByConfigRule
    body:
      application/json: DescribeComplianceByConfigRuleRequest
    responses:
      200:
        body:
          application/json: DescribeComplianceByConfigRuleResponse
      400:
        description: InvalidParameterValueException
/{DescribeComplianceByResource}:
  uriParameters:
    DescribeComplianceByResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Compliance By Resource
  post:
    description: 'Indicates whether the specified AWS resources are compliant. If
      a resource is noncompliant, this action returns the number of AWS Config rules
      that the resource does not comply with.  A resource is compliant if it complies
      with all the AWS Config rules that evaluate it. It is noncompliant if it does
      not comply with one or more of these rules. If AWS Config has no current evaluation
      results for the resource, it returns <code>INSUFFICIENT_DATA</code>. This result
      might indicate one of the following conditions about the rules that evaluate
      the resource: <ul> <li>AWS Config has never invoked an evaluation for the rule.
      To check whether it has, use the <code>DescribeConfigRuleEvaluationStatus</code>
      action to get the <code>LastSuccessfulInvocationTime</code> and <code>LastFailedInvocationTime</code>.</li>
      <li>The rule''s AWS Lambda function is failing to send evaluation results to
      AWS Config. Verify that the role that you assigned to your configuration recorder
      includes the <code>config:PutEvaluations</code> permission. If the rule is a
      custom rule, verify that the AWS Lambda execution role includes the <code>config:PutEvaluations</code>
      permission.</li> <li>The rule''s AWS Lambda function has returned <code>NOT_APPLICABLE</code>
      for all evaluation results. This can occur if the resources were deleted or
      removed from the rule''s scope.</li> </ul>'
    displayName: Describe Compliance By Resource
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeComplianceByResource
    body:
      application/json: DescribeComplianceByResourceRequest
    responses:
      200:
        body:
          application/json: DescribeComplianceByResourceResponse
      400:
        description: InvalidParameterValueException
/{DescribeConfigRuleEvaluationStatus}:
  uriParameters:
    DescribeConfigRuleEvaluationStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Config Rule Evaluation Status
  post:
    description: Returns status information for each of your AWS managed Config rules. The status includes information such as the last time AWS Config invoked the rule, the last time AWS Config failed to invoke the rule, and the related error for the last failure.
    displayName: Describe Config Rule Evaluation Status
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeConfigRuleEvaluationStatus
    body:
      application/json: DescribeConfigRuleEvaluationStatusRequest
    responses:
      200:
        body:
          application/json: DescribeConfigRuleEvaluationStatusResponse
      400:
        description: NoSuchConfigRuleException
/{DescribeConfigRules}:
  uriParameters:
    DescribeConfigRules?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Config Rules
  post:
    description: Returns details about your AWS Config rules.
    displayName: Describe Config Rules
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeConfigRules
    body:
      application/json: DescribeConfigRulesRequest
    responses:
      200:
        body:
          application/json: DescribeConfigRulesResponse
      400:
        description: NoSuchConfigRuleException
/{DescribeConfigurationRecorderStatus}:
  uriParameters:
    DescribeConfigurationRecorderStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Configuration Recorder Status
  post:
    description: Returns the current status of the specified configuration recorder. If a configuration recorder is not specified, this action returns the status of all configuration recorder associated with the account. <note> Currently, you can specify only one configuration recorder per account. </note>
    displayName: Describe Configuration Recorder Status
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeConfigurationRecorderStatus
    body:
      application/json: DescribeConfigurationRecorderStatusRequest
    responses:
      200:
        body:
          application/json: DescribeConfigurationRecorderStatusResponse
      400:
        description: NoSuchConfigurationRecorderException
/{DescribeConfigurationRecorders}:
  uriParameters:
    DescribeConfigurationRecorders?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Configuration Recorders
  post:
    description: Returns the name of one or more specified configuration recorders. If the recorder name is not specified, this action returns the names of all the configuration recorders associated with the account.  <note> Currently, you can specify only one configuration recorder per account. </note>
    displayName: Describe Configuration Recorders
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeConfigurationRecorders
    body:
      application/json: DescribeConfigurationRecordersRequest
    responses:
      200:
        body:
          application/json: DescribeConfigurationRecordersResponse
      400:
        description: NoSuchConfigurationRecorderException
/{DescribeDeliveryChannelStatus}:
  uriParameters:
    DescribeDeliveryChannelStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Delivery Channel Status
  post:
    description: Returns the current status of the specified delivery channel. If a delivery channel is not specified, this action returns the current status of all delivery channels associated with the account.  <note> Currently, you can specify only one delivery channel per account. </note>
    displayName: Describe Delivery Channel Status
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeDeliveryChannelStatus
    body:
      application/json: DescribeDeliveryChannelStatusRequest
    responses:
      200:
        body:
          application/json: DescribeDeliveryChannelStatusResponse
      400:
        description: NoSuchDeliveryChannelException
/{DescribeDeliveryChannels}:
  uriParameters:
    DescribeDeliveryChannels?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Describe Delivery Channels
  post:
    description: Returns details about the specified delivery channel. If a delivery channel is not specified, this action returns the details of all delivery channels associated with the account.  <note> Currently, you can specify only one delivery channel per account. </note>
    displayName: Describe Delivery Channels
    queryParameters:
      Action:
        type: string
        enum:
        - DescribeDeliveryChannels
    body:
      application/json: DescribeDeliveryChannelsRequest
    responses:
      200:
        body:
          application/json: DescribeDeliveryChannelsResponse
      400:
        description: NoSuchDeliveryChannelException
/{GetComplianceDetailsByConfigRule}:
  uriParameters:
    GetComplianceDetailsByConfigRule?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Compliance Details By Config Rule
  post:
    description: Returns the evaluation results for the specified AWS Config rule. The results indicate which AWS resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule.
    displayName: Get Compliance Details By Config Rule
    queryParameters:
      Action:
        type: string
        enum:
        - GetComplianceDetailsByConfigRule
    body:
      application/json: GetComplianceDetailsByConfigRuleRequest
    responses:
      200:
        body:
          application/json: GetComplianceDetailsByConfigRuleResponse
      400:
        description: InvalidParameterValueException
/{GetComplianceDetailsByResource}:
  uriParameters:
    GetComplianceDetailsByResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Compliance Details By Resource
  post:
    description: Returns the evaluation results for the specified AWS resource. The results indicate which AWS Config rules were used to evaluate the resource, when each rule was last used, and whether the resource complies with each rule.
    displayName: Get Compliance Details By Resource
    queryParameters:
      Action:
        type: string
        enum:
        - GetComplianceDetailsByResource
    body:
      application/json: GetComplianceDetailsByResourceRequest
    responses:
      200:
        body:
          application/json: GetComplianceDetailsByResourceResponse
      400:
        description: InvalidParameterValueException
/{GetComplianceSummaryByConfigRule}:
  uriParameters:
    GetComplianceSummaryByConfigRule?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Compliance Summary By Config Rule
  post:
    description: Returns the number of AWS Config rules that are compliant and noncompliant, up to a maximum of 25 for each.
    displayName: Get Compliance Summary By Config Rule
    queryParameters:
      Action:
        type: string
        enum:
        - GetComplianceSummaryByConfigRule
    responses:
      200:
        body:
          application/json: GetComplianceSummaryByConfigRuleResponse
/{GetComplianceSummaryByResourceType}:
  uriParameters:
    GetComplianceSummaryByResourceType?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Compliance Summary By Resource Type
  post:
    description: Returns the number of resources that are compliant and the number that are noncompliant. You can specify one or more resource types to get these numbers for each resource type. The maximum number returned is 100.
    displayName: Get Compliance Summary By Resource Type
    queryParameters:
      Action:
        type: string
        enum:
        - GetComplianceSummaryByResourceType
    body:
      application/json: GetComplianceSummaryByResourceTypeRequest
    responses:
      200:
        body:
          application/json: GetComplianceSummaryByResourceTypeResponse
      400:
        description: InvalidParameterValueException
/{GetResourceConfigHistory}:
  uriParameters:
    GetResourceConfigHistory?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Get Resource Config History
  post:
    description: Returns a list of configuration items for the specified resource. The list contains details about each state of the resource during the specified time interval. The response is paginated, and by default, AWS Config returns a limit of 10 configuration items per page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string, and to get the next page of results, run the request again and enter this string for the <code>nextToken</code> parameter. <note> Each call to the API is limited to span a duration of seven days. It is likely that the number of records returned is smaller than the specified <code>limit</code>. In such cases, you can make another call, using the <code>nextToken</code>. </note>
    displayName: Get Resource Config History
    queryParameters:
      Action:
        type: string
        enum:
        - GetResourceConfigHistory
    body:
      application/json: GetResourceConfigHistoryRequest
    responses:
      200:
        body:
          application/json: GetResourceConfigHistoryResponse
      400:
        description: ValidationException
    (extras.Pagination):
      inputToken: nextToken
      outputToken: nextToken
      limitKey: limit
      resultKey: configurationItems
/{ListDiscoveredResources}:
  uriParameters:
    ListDiscoveredResources?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: List Discovered Resources
  post:
    description: Accepts a resource type and returns a list of resource identifiers for the resources of that type. A resource identifier includes the resource type, ID, and (if available) the custom resource name. The results consist of resources that AWS Config has discovered, including those that AWS Config is not currently recording. You can narrow the results to include only resources that have specific resource IDs or a resource name. <note> You can specify either resource IDs or a resource name but not both in the same request. </note> The response is paginated, and by default AWS Config lists 100 resource identifiers on each page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string, and to get the next page of results, run the request again and enter this string for the <code>nextToken</code> parameter.
    displayName: List Discovered Resources
    queryParameters:
      Action:
        type: string
        enum:
        - ListDiscoveredResources
    body:
      application/json: ListDiscoveredResourcesRequest
    responses:
      200:
        body:
          application/json: ListDiscoveredResourcesResponse
      400:
        description: ValidationException
/{PutConfigRule}:
  uriParameters:
    PutConfigRule?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Put Config Rule
  post:
    description: Adds or updates an AWS Config rule for evaluating whether your AWS resources comply with your desired configurations.  You can use this action for custom Config rules and AWS managed Config rules. A custom Config rule is a rule that you develop and maintain. An AWS managed Config rule is a customizable, predefined rule that AWS Config provides. If you are adding a new custom Config rule, you must first create the AWS Lambda function that the rule invokes to evaluate your resources. When you use the <code>PutConfigRule</code> action to add the rule to AWS Config, you must specify the Amazon Resource Name (ARN) that AWS Lambda assigns to the function. Specify the ARN for the <code>SourceIdentifier</code> key. This key is part of the <code>Source</code> object, which is part of the <code>ConfigRule</code> object.  If you are adding a new AWS managed Config rule, specify the rule's identifier for the <code>SourceIdentifier</code> key. To reference AWS managed Config rule identifiers, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">Using AWS Managed Config Rules</a>. For any new rule that you add, specify the <code>ConfigRuleName</code> in the <code>ConfigRule</code> object. Do not specify the <code>ConfigRuleArn</code> or the <code>ConfigRuleId</code>. These values are generated by AWS Config for new rules. If you are updating a rule that you have added previously, specify the rule's <code>ConfigRuleName</code>, <code>ConfigRuleId</code>, or <code>ConfigRuleArn</code> in the <code>ConfigRule</code> data type that you use in this request. The maximum number of rules that AWS Config supports is 25. For more information about developing and using AWS Config rules, see <a href="http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating AWS Resource Configurations with AWS Config</a> in the <i>AWS Config Developer Guide</i>. <p/>
    displayName: Put Config Rule
    queryParameters:
      Action:
        type: string
        enum:
        - PutConfigRule
    body:
      application/json: PutConfigRuleRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: InvalidParameterValueException
/{PutConfigurationRecorder}:
  uriParameters:
    PutConfigurationRecorder?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Put Configuration Recorder
  post:
    description: Creates a new configuration recorder to record the selected resource configurations. You can use this action to change the role <code>roleARN</code> and/or the <code>recordingGroup</code> of an existing recorder. To change the role, call the action on the existing configuration recorder and specify a role. <note> Currently, you can specify only one configuration recorder per account. If <code>ConfigurationRecorder</code> does not have the <b>recordingGroup</b> parameter specified, the default is to record all supported resource types. </note>
    displayName: Put Configuration Recorder
    queryParameters:
      Action:
        type: string
        enum:
        - PutConfigurationRecorder
    body:
      application/json: PutConfigurationRecorderRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: MaxNumberOfConfigurationRecordersExceededException
/{PutDeliveryChannel}:
  uriParameters:
    PutDeliveryChannel?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Put Delivery Channel
  post:
    description: Creates a delivery channel object to deliver configuration information to an Amazon S3 bucket and Amazon SNS topic. Before you can create a delivery channel, you must create a configuration recorder. You can use this action to change the Amazon S3 bucket or an Amazon SNS topic of the existing delivery channel. To change the Amazon S3 bucket or an Amazon SNS topic, call this action and specify the changed values for the S3 bucket and the SNS topic. If you specify a different value for either the S3 bucket or the SNS topic, this action will keep the existing value for the parameter that is not changed. <note> You can have only one delivery channel per AWS account. </note>
    displayName: Put Delivery Channel
    queryParameters:
      Action:
        type: string
        enum:
        - PutDeliveryChannel
    body:
      application/json: PutDeliveryChannelRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: MaxNumberOfDeliveryChannelsExceededException
/{PutEvaluations}:
  uriParameters:
    PutEvaluations?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Put Evaluations
  post:
    description: Used by an AWS Lambda function to deliver evaluation results to AWS Config. This action is required in every AWS Lambda function that is invoked by an AWS Config rule.
    displayName: Put Evaluations
    queryParameters:
      Action:
        type: string
        enum:
        - PutEvaluations
    body:
      application/json: PutEvaluationsRequest
    responses:
      200:
        body:
          application/json: PutEvaluationsResponse
      400:
        description: InvalidParameterValueException
/{StartConfigRulesEvaluation}:
  uriParameters:
    StartConfigRulesEvaluation?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Start Config Rules Evaluation
  post:
    description: 'Evaluates your resources against the specified Config rules. You
      can specify up to 25 Config rules per request. An existing <a>StartConfigRulesEvaluation</a>
      call must complete for the specified rules before you can call the API again.
      If you chose to have AWS Config stream to an Amazon SNS topic, you will receive
      a <code>ConfigRuleEvaluationStarted</code> notification when the evaluation
      starts. <note> You don''t need to call the <code>StartConfigRulesEvaluation</code>
      API to run an evaluation for a new rule. When you create a new rule, AWS Config
      automatically evaluates your resources against the rule.  </note> The <code>StartConfigRulesEvaluation</code>
      API is useful if you want to run on-demand evaluations, such as the following
      example: <ol> <li>You have a custom rule that evaluates your IAM resources every
      24 hours.</li> <li>You update your Lambda function to add additional conditions
      to your rule.</li> <li>Instead of waiting for the next periodic evaluation,
      you call the <code>StartConfigRulesEvaluation</code> API.</li> <li>AWS Config
      invokes your Lambda function and evaluates your IAM resources.</li> <li>Your
      custom rule will still run periodic evaluations every 24 hours.</li> </ol>'
    displayName: Start Config Rules Evaluation
    queryParameters:
      Action:
        type: string
        enum:
        - StartConfigRulesEvaluation
    body:
      application/json: StartConfigRulesEvaluationRequest
    responses:
      200:
        body:
          application/json: StartConfigRulesEvaluationResponse
      400:
        description: NoSuchConfigRuleException
/{StartConfigurationRecorder}:
  uriParameters:
    StartConfigurationRecorder?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Start Configuration Recorder
  post:
    description: Starts recording configurations of the AWS resources you have selected to record in your AWS account. You must have created at least one delivery channel to successfully start the configuration recorder.
    displayName: Start Configuration Recorder
    queryParameters:
      Action:
        type: string
        enum:
        - StartConfigurationRecorder
    body:
      application/json: StartConfigurationRecorderRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NoSuchConfigurationRecorderException
/{StopConfigurationRecorder}:
  uriParameters:
    StopConfigurationRecorder?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  displayName: Stop Configuration Recorder
  post:
    description: Stops recording configurations of the AWS resources you have selected to record in your AWS account.
    displayName: Stop Configuration Recorder
    queryParameters:
      Action:
        type: string
        enum:
        - StopConfigurationRecorder
    body:
      application/json: StopConfigurationRecorderRequest
    responses:
      200:
        body:
          application/json: null
      400:
        description: NoSuchConfigurationRecorderException
