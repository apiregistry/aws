#%RAML 1.0
title: AWS Support
version: '2013-04-15'
description: '  The AWS Support API reference is intended for programmers who need
  detailed information about the AWS Support operations and data types. This service
  enables you to manage your AWS Support cases programmatically. It uses HTTP methods
  that return results in JSON format.  The AWS Support service also exposes a set
  of <a href="http://aws.amazon.com/premiumsupport/trustedadvisor/">Trusted Advisor</a>
  features. You can retrieve a list of checks and their descriptions, get check results,
  specify checks to refresh, and get the refresh status of checks.   The following
  list describes the AWS Support case management operations: <ul> <li>   <b>Service
  names, issue categories, and available severity levels. </b>The <a>DescribeServices</a>
  and <a>DescribeSeverityLevels</a> operations return AWS service names, service codes,
  service categories, and problem severity levels. You use these values when you call
  the <a>CreateCase</a> operation.  </li> <li>   <b>Case creation, case details, and
  case resolution.</b> The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>,
  and <a>ResolveCase</a> operations create AWS Support cases, retrieve information
  about cases, and resolve cases. </li> <li>   <b>Case communication.</b> The <a>DescribeCommunications</a>,
  <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations retrieve
  and add communications and attachments to AWS Support cases.  </li> </ul>  The following
  list describes the operations available from the AWS Support service for Trusted
  Advisor: <ul> <li>   <a>DescribeTrustedAdvisorChecks</a> returns the list of checks
  that run against your AWS resources. </li> <li>  Using the <code>checkId</code>
  for a specific check returned by <a>DescribeTrustedAdvisorChecks</a>, you can call
  <a>DescribeTrustedAdvisorCheckResult</a> to obtain the results for the check you
  specified. </li> <li>   <a>DescribeTrustedAdvisorCheckSummaries</a> returns summarized
  results for one or more Trusted Advisor checks. </li> <li>   <a>RefreshTrustedAdvisorCheck</a>
  requests that Trusted Advisor rerun a specified check.  </li> <li>   <a>DescribeTrustedAdvisorCheckRefreshStatuses</a>
  reports the refresh status of one or more checks.  </li> </ul>  For authentication
  of requests, AWS Support uses <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
  Version 4 Signing Process</a>.  See <a href="http://docs.aws.amazon.com/awssupport/latest/user/Welcome.html">About
  the AWS Support API</a> in the <i>AWS Support User Guide</i> for information about
  how to use this service to create and manage your support cases, and how to call
  Trusted Advisor for results of checks on your resources. '
mediaType:
- application/json
types:
  AfterTime:
    type: string
  AttachmentId:
    type: string
  AttachmentSet:
    type: array
    items:
      type: AttachmentDetails
  AttachmentSetId:
    type: string
  Attachments:
    type: array
    items:
      type: Attachment
  BeforeTime:
    type: string
  Boolean:
    type: boolean
  CaseId:
    type: string
  CaseIdList:
    type: array
    minItems: 0
    maxItems: 100
    items:
      type: CaseId
  CaseList:
    type: array
    items:
      type: CaseDetails
  CaseStatus:
    type: string
  CategoryCode:
    type: string
  CategoryList:
    type: array
    items:
      type: Category
  CategoryName:
    type: string
  CcEmailAddress:
    type: string
  CcEmailAddressList:
    type: array
    minItems: 0
    maxItems: 10
    items:
      type: CcEmailAddress
  CommunicationBody:
    type: string
    minLength: 1
    maxLength: 8000
  CommunicationList:
    type: array
    items:
      type: Communication
  Data:
    type: file
  DisplayId:
    type: string
  Double:
    type: number
    format: double
  ExpiryTime:
    type: string
  FileName:
    type: string
  IncludeCommunications:
    type: boolean
  IncludeResolvedCases:
    type: boolean
  IssueType:
    type: string
  Language:
    type: string
  Long:
    type: integer
    format: long
  MaxResults:
    type: integer
    format: int
    minimum: 10
    maximum: 100
  NextToken:
    type: string
  Result:
    type: boolean
  ServiceCode:
    type: string
  ServiceCodeList:
    type: array
    minItems: 0
    maxItems: 100
    items:
      type: ServiceCode
  ServiceList:
    type: array
    items:
      type: Service
  ServiceName:
    type: string
  SeverityCode:
    type: string
  SeverityLevelCode:
    type: string
  SeverityLevelName:
    type: string
  SeverityLevelsList:
    type: array
    items:
      type: SeverityLevel
  Status:
    type: string
  String:
    type: string
  StringList:
    type: array
    items:
      type: String
  Subject:
    type: string
  SubmittedBy:
    type: string
  TimeCreated:
    type: string
  TrustedAdvisorCheckList:
    type: array
    items:
      type: TrustedAdvisorCheckDescription
  TrustedAdvisorCheckRefreshStatusList:
    type: array
    items:
      type: TrustedAdvisorCheckRefreshStatus
  TrustedAdvisorCheckSummaryList:
    type: array
    items:
      type: TrustedAdvisorCheckSummary
  TrustedAdvisorResourceDetailList:
    type: array
    items:
      type: TrustedAdvisorResourceDetail
  AddAttachmentsToSetRequest:
    type: object
    properties:
      attachmentSetId?:
        type: AttachmentSetId
        description: <p>The ID of the attachment set. If an <code>attachmentSetId</code> is not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> is specified, the attachments are added to the specified set, if it exists.</p>
      attachments:
        type: Attachments
        description: <p>One or more attachments to add to the set. The limit is 3 attachments per set, and the size limit is 5 MB per attachment.</p>
    description: <p/>
  AddAttachmentsToSetResponse:
    type: object
    properties:
      attachmentSetId?:
        type: AttachmentSetId
        description: <p>The ID of the attachment set. If an <code>attachmentSetId</code> was not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> was specified, the attachments are added to the specified set, if it exists.</p>
      expiryTime?:
        type: ExpiryTime
        description: <p>The time and date when the attachment set expires.</p>
    description: <p>The ID and expiry time of the attachment set returned by the <a>AddAttachmentsToSet</a> operation.</p>
  AddCommunicationToCaseRequest:
    type: object
    properties:
      caseId?:
        type: CaseId
        description: '<p>The AWS Support case ID requested or returned in the call.
          The case ID is an alphanumeric string formatted as shown in this example:
          case-<i>12345678910-2013-c4c1d2bf33c5cf47</i> </p>'
      communicationBody:
        type: CommunicationBody
        description: <p>The body of an email communication to add to the support case.</p>
      ccEmailAddresses?:
        type: CcEmailAddressList
        description: <p>The email addresses in the CC line of an email to be added to the support case.</p>
      attachmentSetId?:
        type: AttachmentSetId
        description: <p>The ID of a set of one or more attachments for the communication to add to the case. Create the set by calling <a>AddAttachmentsToSet</a> </p>
    description: <p>To be written.</p>
  AddCommunicationToCaseResponse:
    type: object
    properties:
      result?:
        type: Result
        description: <p>True if <a>AddCommunicationToCase</a> succeeds. Otherwise, returns an error.</p>
    description: <p>The result of the <a>AddCommunicationToCase</a> operation.</p>
  Attachment:
    type: object
    properties:
      fileName?:
        type: FileName
        description: <p>The name of the attachment file.</p>
      data?:
        type: Data
        description: <p>The content of the attachment file.</p>
    description: <p>An attachment to a case communication. The attachment consists of the file name and the content of the file.</p>
  AttachmentDetails:
    type: object
    properties:
      attachmentId?:
        type: AttachmentId
        description: <p>The ID of the attachment.</p>
      fileName?:
        type: FileName
        description: <p>The file name of the attachment.</p>
    description: <p>The file name and ID of an attachment to a case communication. You can use the ID to retrieve the attachment with the <a>DescribeAttachment</a> operation.</p>
  CaseDetails:
    type: object
    properties:
      caseId?:
        type: CaseId
        description: '<p>The AWS Support case ID requested or returned in the call.
          The case ID is an alphanumeric string formatted as shown in this example:
          case-<i>12345678910-2013-c4c1d2bf33c5cf47</i> </p>'
      displayId?:
        type: DisplayId
        description: <p>The ID displayed for the case in the AWS Support Center. This is a numeric string.</p>
      subject?:
        type: Subject
        description: <p>The subject line for the case in the AWS Support Center.</p>
      status?:
        type: Status
        description: <p>The status of the case.</p>
      serviceCode?:
        type: ServiceCode
        description: <p>The code for the AWS service returned by the call to <a>DescribeServices</a>.</p>
      categoryCode?:
        type: CategoryCode
        description: <p>The category of problem for the AWS Support case.</p>
      severityCode?:
        type: SeverityCode
        description: <p>The code for the severity level returned by the call to <a>DescribeSeverityLevels</a>.</p>
      submittedBy?:
        type: SubmittedBy
        description: <p>The email address of the account that submitted the case.</p>
      timeCreated?:
        type: TimeCreated
        description: <p>The time that the case was case created in the AWS Support Center.</p>
      recentCommunications?:
        type: RecentCaseCommunications
        description: <p>The five most recent communications between you and AWS Support Center, including the IDs of any attachments to the communications. Also includes a <code>nextToken</code> that you can use to retrieve earlier communications.</p>
      ccEmailAddresses?:
        type: CcEmailAddressList
        description: <p>The email addresses that receive copies of communication about the case.</p>
      language?:
        type: Language
        description: <p>The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.</p>
    description: '<p>A JSON-formatted object that contains the metadata for a support
      case. It is contained the response from a <a>DescribeCases</a> request. <b>CaseDetails</b>
      contains the following fields:</p> <ul> <li> <p> <b>caseId.</b> The AWS Support
      case ID requested or returned in the call. The case ID is an alphanumeric string
      formatted as shown in this example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>.</p>
      </li> <li> <p> <b>categoryCode.</b> The category of problem for the AWS Support
      case. Corresponds to the CategoryCode values returned by a call to <a>DescribeServices</a>.</p>
      </li> <li> <p> <b>displayId.</b> The identifier for the case on pages in the
      AWS Support Center.</p> </li> <li> <p> <b>language.</b> The ISO 639-1 code for
      the language in which AWS provides support. AWS Support currently supports English
      ("en") and Japanese ("ja"). Language parameters must be passed explicitly for
      operations that take them.</p> </li> <li> <p> <b>recentCommunications.</b> One
      or more <a>Communication</a> objects. Fields of these objects are <code>attachments</code>,
      <code>body</code>, <code>caseId</code>, <code>submittedBy</code>, and <code>timeCreated</code>.</p>
      </li> <li> <p> <b>nextToken.</b> A resumption point for pagination.</p> </li>
      <li> <p> <b>serviceCode.</b> The identifier for the AWS service that corresponds
      to the service code defined in the call to <a>DescribeServices</a>.</p> </li>
      <li> <p> <b>severityCode. </b>The severity code assigned to the case. Contains
      one of the values returned by the call to <a>DescribeSeverityLevels</a>.</p>
      </li> <li> <p> <b>status.</b> The status of the case in the AWS Support Center.</p>
      </li> <li> <p> <b>subject.</b> The subject line of the case.</p> </li> <li>
      <p> <b>submittedBy.</b> The email address of the account that submitted the
      case.</p> </li> <li> <p> <b>timeCreated.</b> The time the case was created,
      in ISO-8601 format.</p> </li> </ul>'
  Category:
    type: object
    properties:
      code?:
        type: CategoryCode
        description: <p>The category code for the support case.</p>
      name?:
        type: CategoryName
        description: <p>The category name for the support case.</p>
    description: <p>A JSON-formatted name/value pair that represents the category name and category code of the problem, selected from the <a>DescribeServices</a> response for each AWS service.</p>
  Communication:
    type: object
    properties:
      caseId?:
        type: CaseId
        description: '<p>The AWS Support case ID requested or returned in the call.
          The case ID is an alphanumeric string formatted as shown in this example:
          case-<i>12345678910-2013-c4c1d2bf33c5cf47</i> </p>'
      body?:
        type: CommunicationBody
        description: <p>The text of the communication between the customer and AWS Support.</p>
      submittedBy?:
        type: SubmittedBy
        description: <p>The email address of the account that submitted the AWS Support case.</p>
      timeCreated?:
        type: TimeCreated
        description: <p>The time the communication was created.</p>
      attachmentSet?:
        type: AttachmentSet
        description: <p>Information about the attachments to the case communication.</p>
    description: <p>A communication associated with an AWS Support case. The communication consists of the case ID, the message body, attachment information, the account email address, and the date and time of the communication.</p>
  CreateCaseRequest:
    type: object
    properties:
      subject:
        type: Subject
        description: <p>The title of the AWS Support case.</p>
      serviceCode?:
        type: ServiceCode
        description: <p>The code for the AWS service returned by the call to <a>DescribeServices</a>.</p>
      severityCode?:
        type: SeverityCode
        description: <p>The code for the severity level returned by the call to <a>DescribeSeverityLevels</a>.</p> <note> <p>The availability of severity levels depends on each customer's support subscription. In other words, your subscription may not necessarily require the urgent level of response time.</p> </note>
      categoryCode?:
        type: CategoryCode
        description: <p>The category of problem for the AWS Support case.</p>
      communicationBody:
        type: CommunicationBody
        description: <p>The communication body text when you create an AWS Support case by calling <a>CreateCase</a>.</p>
      ccEmailAddresses?:
        type: CcEmailAddressList
        description: <p>A list of email addresses that AWS Support copies on case correspondence.</p>
      language?:
        type: Language
        description: <p>The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.</p>
      issueType?:
        type: IssueType
        description: <p>The type of issue for the case. You can specify either "customer-service" or "technical." If you do not indicate a value, the default is "technical."</p>
      attachmentSetId?:
        type: AttachmentSetId
        description: <p>The ID of a set of one or more attachments for the case. Create the set by using <a>AddAttachmentsToSet</a>.</p>
    description: <p/>
  CreateCaseResponse:
    type: object
    properties:
      caseId?:
        type: CaseId
        description: '<p>The AWS Support case ID requested or returned in the call.
          The case ID is an alphanumeric string formatted as shown in this example:
          case-<i>12345678910-2013-c4c1d2bf33c5cf47</i> </p>'
    description: <p>The AWS Support case ID returned by a successful completion of the <a>CreateCase</a> operation. </p>
  DescribeAttachmentRequest:
    type: object
    properties:
      attachmentId:
        type: AttachmentId
        description: <p>The ID of the attachment to return. Attachment IDs are returned by the <a>DescribeCommunications</a> operation.</p>
  DescribeAttachmentResponse:
    type: object
    properties:
      attachment?:
        type: Attachment
        description: <p>The attachment content and file name.</p>
    description: <p>The content and file name of the attachment returned by the <a>DescribeAttachment</a> operation.</p>
  DescribeCasesRequest:
    type: object
    properties:
      caseIdList?:
        type: CaseIdList
        description: <p>A list of ID numbers of the support cases you want returned. The maximum number of cases is 100.</p>
      displayId?:
        type: DisplayId
        description: <p>The ID displayed for a case in the AWS Support Center user interface.</p>
      afterTime?:
        type: AfterTime
        description: <p>The start date for a filtered date search on support case communications. Case communications are available for 12 months after creation.</p>
      beforeTime?:
        type: BeforeTime
        description: <p>The end date for a filtered date search on support case communications. Case communications are available for 12 months after creation.</p>
      includeResolvedCases?:
        type: IncludeResolvedCases
        description: <p>Specifies whether resolved support cases should be included in the <a>DescribeCases</a> results. The default is <i>false</i>.</p>
      nextToken?:
        type: NextToken
        description: <p>A resumption point for pagination.</p>
      maxResults?:
        type: MaxResults
        description: <p>The maximum number of results to return before paginating.</p>
      language?:
        type: Language
        description: <p>The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.</p>
      includeCommunications?:
        type: IncludeCommunications
        description: <p>Specifies whether communications should be included in the <a>DescribeCases</a> results. The default is <i>true</i>.</p>
    description: <p/>
  DescribeCasesResponse:
    type: object
    properties:
      cases?:
        type: CaseList
        description: <p>The details for the cases that match the request.</p>
      nextToken?:
        type: NextToken
        description: <p>A resumption point for pagination.</p>
    description: <p>Returns an array of <a>CaseDetails</a> objects and a <code>nextToken</code> that defines a point for pagination in the result set.</p>
  DescribeCommunicationsRequest:
    type: object
    properties:
      caseId:
        type: CaseId
        description: '<p>The AWS Support case ID requested or returned in the call.
          The case ID is an alphanumeric string formatted as shown in this example:
          case-<i>12345678910-2013-c4c1d2bf33c5cf47</i> </p>'
      beforeTime?:
        type: BeforeTime
        description: <p>The end date for a filtered date search on support case communications. Case communications are available for 12 months after creation.</p>
      afterTime?:
        type: AfterTime
        description: <p>The start date for a filtered date search on support case communications. Case communications are available for 12 months after creation.</p>
      nextToken?:
        type: NextToken
        description: <p>A resumption point for pagination.</p>
      maxResults?:
        type: MaxResults
        description: <p>The maximum number of results to return before paginating.</p>
    description: <p/>
  DescribeCommunicationsResponse:
    type: object
    properties:
      communications?:
        type: CommunicationList
        description: <p>The communications for the case.</p>
      nextToken?:
        type: NextToken
        description: <p>A resumption point for pagination.</p>
    description: <p>The communications returned by the <a>DescribeCommunications</a> operation.</p>
  DescribeServicesRequest:
    type: object
    properties:
      serviceCodeList?:
        type: ServiceCodeList
        description: <p>A JSON-formatted list of service codes available for AWS services.</p>
      language?:
        type: Language
        description: <p>The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.</p>
    description: <p/>
  DescribeServicesResponse:
    type: object
    properties:
      services?:
        type: ServiceList
        description: <p>A JSON-formatted list of AWS services.</p>
    description: <p>The list of AWS services returned by the <a>DescribeServices</a> operation.</p>
  DescribeSeverityLevelsRequest:
    type: object
    properties:
      language?:
        type: Language
        description: <p>The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.</p>
    description: <p/>
  DescribeSeverityLevelsResponse:
    type: object
    properties:
      severityLevels?:
        type: SeverityLevelsList
        description: <p>The available severity levels for the support case. Available severity levels are defined by your service level agreement with AWS.</p>
    description: <p>The list of severity levels returned by the <a>DescribeSeverityLevels</a> operation.</p>
  DescribeTrustedAdvisorCheckRefreshStatusesRequest:
    type: object
    properties:
      checkIds:
        type: StringList
        description: <p>The IDs of the Trusted Advisor checks to get the status of. <b>Note:</b> Specifying the check ID of a check that is automatically refreshed causes an <code>InvalidParameterValue</code> error.</p>
    description: <p/>
  DescribeTrustedAdvisorCheckRefreshStatusesResponse:
    type: object
    properties:
      statuses:
        type: TrustedAdvisorCheckRefreshStatusList
        description: <p>The refresh status of the specified Trusted Advisor checks.</p>
    description: <p>The statuses of the Trusted Advisor checks returned by the <a>DescribeTrustedAdvisorCheckRefreshStatuses</a> operation.</p>
  DescribeTrustedAdvisorCheckResultRequest:
    type: object
    properties:
      checkId:
        type: String
        description: <p>The unique identifier for the Trusted Advisor check.</p>
      language?:
        type: String
        description: <p>The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.</p>
    description: <p/>
  DescribeTrustedAdvisorCheckResultResponse:
    type: object
    properties:
      result?:
        type: TrustedAdvisorCheckResult
        description: <p>The detailed results of the Trusted Advisor check.</p>
    description: <p>The result of the Trusted Advisor check returned by the <a>DescribeTrustedAdvisorCheckResult</a> operation.</p>
  DescribeTrustedAdvisorCheckSummariesRequest:
    type: object
    properties:
      checkIds:
        type: StringList
        description: <p>The IDs of the Trusted Advisor checks.</p>
    description: <p/>
  DescribeTrustedAdvisorCheckSummariesResponse:
    type: object
    properties:
      summaries:
        type: TrustedAdvisorCheckSummaryList
        description: <p>The summary information for the requested Trusted Advisor checks.</p>
    description: <p>The summaries of the Trusted Advisor checks returned by the <a>DescribeTrustedAdvisorCheckSummaries</a> operation.</p>
  DescribeTrustedAdvisorChecksRequest:
    type: object
    properties:
      language:
        type: String
        description: <p>The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.</p>
    description: <p/>
  DescribeTrustedAdvisorChecksResponse:
    type: object
    properties:
      checks:
        type: TrustedAdvisorCheckList
        description: <p>Information about all available Trusted Advisor checks.</p>
    description: <p>Information about the Trusted Advisor checks returned by the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
  RecentCaseCommunications:
    type: object
    properties:
      communications?:
        type: CommunicationList
        description: <p>The five most recent communications associated with the case.</p>
      nextToken?:
        type: NextToken
        description: <p>A resumption point for pagination.</p>
    description: <p>The five most recent communications associated with the case.</p>
  RefreshTrustedAdvisorCheckRequest:
    type: object
    properties:
      checkId:
        type: String
        description: <p>The unique identifier for the Trusted Advisor check to refresh. <b>Note:</b> Specifying the check ID of a check that is automatically refreshed causes an <code>InvalidParameterValue</code> error.</p>
    description: <p/>
  RefreshTrustedAdvisorCheckResponse:
    type: object
    properties:
      status:
        type: TrustedAdvisorCheckRefreshStatus
        description: <p>The current refresh status for a check, including the amount of time until the check is eligible for refresh.</p>
    description: <p>The current refresh status of a Trusted Advisor check.</p>
  ResolveCaseRequest:
    type: object
    properties:
      caseId?:
        type: CaseId
        description: '<p>The AWS Support case ID requested or returned in the call.
          The case ID is an alphanumeric string formatted as shown in this example:
          case-<i>12345678910-2013-c4c1d2bf33c5cf47</i> </p>'
    description: <p/>
  ResolveCaseResponse:
    type: object
    properties:
      initialCaseStatus?:
        type: CaseStatus
        description: <p>The status of the case when the <a>ResolveCase</a> request was sent.</p>
      finalCaseStatus?:
        type: CaseStatus
        description: <p>The status of the case after the <a>ResolveCase</a> request was processed.</p>
    description: <p>The status of the case returned by the <a>ResolveCase</a> operation.</p>
  Service:
    type: object
    properties:
      code?:
        type: ServiceCode
        description: <p>The code for an AWS service returned by the <a>DescribeServices</a> response. The <code>name</code> element contains the corresponding friendly name.</p>
      name?:
        type: ServiceName
        description: <p>The friendly name for an AWS service. The <code>code</code> element contains the corresponding code.</p>
      categories?:
        type: CategoryList
        description: <p>A list of categories that describe the type of support issue a case describes. Categories consist of a category name and a category code. Category names and codes are passed to AWS Support when you call <a>CreateCase</a>.</p>
    description: <p>Information about an AWS service returned by the <a>DescribeServices</a> operation. </p>
  SeverityLevel:
    type: object
    properties:
      code?:
        type: SeverityLevelCode
        description: '<p>One of four values: "low," "medium," "high," and "urgent".
          These values correspond to response times returned to the caller in <code>severityLevel.name</code>.
          </p>'
      name?:
        type: SeverityLevelName
        description: <p>The name of the severity level that corresponds to the severity level code.</p>
    description: <p>A code and name pair that represent a severity level that can be applied to a support case.</p>
  TrustedAdvisorCategorySpecificSummary:
    type: object
    properties:
      costOptimizing?:
        type: TrustedAdvisorCostOptimizingSummary
        description: <p>The summary information about cost savings for a Trusted Advisor check that is in the Cost Optimizing category.</p>
    description: <p>The container for summary information that relates to the category of the Trusted Advisor check.</p>
  TrustedAdvisorCheckDescription:
    type: object
    properties:
      id:
        type: String
        description: <p>The unique identifier for the Trusted Advisor check.</p>
      name:
        type: String
        description: <p>The display name for the Trusted Advisor check.</p>
      description:
        type: String
        description: <p>The description of the Trusted Advisor check, which includes the alert criteria and recommended actions (contains HTML markup).</p>
      category:
        type: String
        description: <p>The category of the Trusted Advisor check.</p>
      metadata:
        type: StringList
        description: <p>The column headings for the data returned by the Trusted Advisor check. The order of the headings corresponds to the order of the data in the <b>Metadata</b> element of the <a>TrustedAdvisorResourceDetail</a> for the check. <b>Metadata</b> contains all the data that is shown in the Excel download, even in those cases where the UI shows just summary data. </p>
    description: <p>The description and metadata for a Trusted Advisor check.</p>
  TrustedAdvisorCheckRefreshStatus:
    type: object
    properties:
      checkId:
        type: String
        description: <p>The unique identifier for the Trusted Advisor check.</p>
      status:
        type: String
        description: '<p>The status of the Trusted Advisor check for which a refresh
          has been requested: "none", "enqueued", "processing", "success", or "abandoned".</p>'
      millisUntilNextRefreshable:
        type: Long
        description: <p>The amount of time, in milliseconds, until the Trusted Advisor check is eligible for refresh.</p>
    description: <p>The refresh status of a Trusted Advisor check.</p>
  TrustedAdvisorCheckResult:
    type: object
    properties:
      checkId:
        type: String
        description: <p>The unique identifier for the Trusted Advisor check.</p>
      timestamp:
        type: String
        description: <p>The time of the last refresh of the check.</p>
      status:
        type: String
        description: '<p>The alert status of the check: "ok" (green), "warning" (yellow),
          "error" (red), or "not_available".</p>'
      resourcesSummary:
        type: TrustedAdvisorResourcesSummary
      categorySpecificSummary:
        type: TrustedAdvisorCategorySpecificSummary
        description: <p>Summary information that relates to the category of the check. Cost Optimizing is the only category that is currently supported.</p>
      flaggedResources:
        type: TrustedAdvisorResourceDetailList
        description: <p>The details about each resource listed in the check result.</p>
    description: <p>The results of a Trusted Advisor check returned by <a>DescribeTrustedAdvisorCheckResult</a>.</p>
  TrustedAdvisorCheckSummary:
    type: object
    properties:
      checkId:
        type: String
        description: <p>The unique identifier for the Trusted Advisor check.</p>
      timestamp:
        type: String
        description: <p>The time of the last refresh of the check.</p>
      status:
        type: String
        description: '<p>The alert status of the check: "ok" (green), "warning" (yellow),
          "error" (red), or "not_available".</p>'
      hasFlaggedResources?:
        type: Boolean
        description: <p>Specifies whether the Trusted Advisor check has flagged resources.</p>
      resourcesSummary:
        type: TrustedAdvisorResourcesSummary
      categorySpecificSummary:
        type: TrustedAdvisorCategorySpecificSummary
        description: <p>Summary information that relates to the category of the check. Cost Optimizing is the only category that is currently supported.</p>
    description: <p>A summary of a Trusted Advisor check result, including the alert status, last refresh, and number of resources examined.</p>
  TrustedAdvisorCostOptimizingSummary:
    type: object
    properties:
      estimatedMonthlySavings:
        type: Double
        description: <p>The estimated monthly savings that might be realized if the recommended actions are taken.</p>
      estimatedPercentMonthlySavings:
        type: Double
        description: <p>The estimated percentage of savings that might be realized if the recommended actions are taken.</p>
    description: <p>The estimated cost savings that might be realized if the recommended actions are taken.</p>
  TrustedAdvisorResourceDetail:
    type: object
    properties:
      status:
        type: String
        description: <p>The status code for the resource identified in the Trusted Advisor check.</p>
      region?:
        type: String
        description: <p>The AWS region in which the identified resource is located.</p>
      resourceId:
        type: String
        description: <p>The unique identifier for the identified resource.</p>
      isSuppressed?:
        type: Boolean
        description: <p>Specifies whether the AWS resource was ignored by Trusted Advisor because it was marked as suppressed by the user.</p>
      metadata:
        type: StringList
        description: <p>Additional information about the identified resource. The exact metadata and its order can be obtained by inspecting the <a>TrustedAdvisorCheckDescription</a> object returned by the call to <a>DescribeTrustedAdvisorChecks</a>. <b>Metadata</b> contains all the data that is shown in the Excel download, even in those cases where the UI shows just summary data. </p>
    description: <p>Contains information about a resource identified by a Trusted Advisor check.</p>
  TrustedAdvisorResourcesSummary:
    type: object
    properties:
      resourcesProcessed:
        type: Long
        description: <p>The number of AWS resources that were analyzed by the Trusted Advisor check.</p>
      resourcesFlagged:
        type: Long
        description: <p>The number of AWS resources that were flagged (listed) by the Trusted Advisor check.</p>
      resourcesIgnored:
        type: Long
        description: <p>The number of AWS resources ignored by Trusted Advisor because information was unavailable.</p>
      resourcesSuppressed:
        type: Long
        description: <p>The number of AWS resources ignored by Trusted Advisor because they were marked as suppressed by the user.</p>
    description: <p>Details about AWS resources that were analyzed in a call to Trusted Advisor <a>DescribeTrustedAdvisorCheckSummaries</a>. </p>
/{AddAttachmentsToSet}:
  uriParameters:
    AddAttachmentsToSet?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds one or more attachments to an attachment set. If an <code>attachmentSetId</code> is not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> is specified, the attachments are added to the specified set, if it exists. An attachment set is a temporary container for attachments that are to be added to a case or case communication. The set is available for one hour after it is created; the <code>expiryTime</code> returned in the response indicates when the set expires. The maximum number of attachments in a set is 3, and the maximum size of any attachment in the set is 5 MB.
    body:
      application/json: AddAttachmentsToSetRequest
    responses:
      200:
        body:
          application/json: AddAttachmentsToSetResponse
      400:
        description: InternalServerError
/{AddCommunicationToCase}:
  uriParameters:
    AddCommunicationToCase?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds additional customer communication to an AWS Support case. You use the <code>caseId</code> value to identify the case to add communication to. You can list a set of email addresses to copy on the communication using the <code>ccEmailAddresses</code> value. The <code>communicationBody</code> value contains the text of the communication. The response indicates the success or failure of the request. This operation implements a subset of the features of the AWS Support Center.
    body:
      application/json: AddCommunicationToCaseRequest
    responses:
      200:
        body:
          application/json: AddCommunicationToCaseResponse
      400:
        description: InternalServerError
/{CreateCase}:
  uriParameters:
    CreateCase?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Creates a new case in the AWS Support Center. This operation is
      modeled on the behavior of the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create
      Case</a> page. Its parameters require you to specify the following information:  <ul>
      <li>  <b>issueType.</b> The type of issue for the case. You can specify either
      "customer-service" or "technical." If you do not indicate a value, the default
      is "technical."  </li> <li>  <b>serviceCode.</b> The code for an AWS service.
      You obtain the <code>serviceCode</code> by calling <a>DescribeServices</a>.  </li>
      <li>  <b>categoryCode.</b> The category for the service defined for the <code>serviceCode</code>
      value. You also obtain the category code for a service by calling <a>DescribeServices</a>.
      Each AWS service defines its own set of category codes.  </li> <li>  <b>severityCode.</b>
      A value that indicates the urgency of the case, which in turn determines the
      response time according to your service level agreement with AWS Support. You
      obtain the SeverityCode by calling <a>DescribeSeverityLevels</a>. </li> <li>  <b>subject.</b>
      The <b>Subject</b> field on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create
      Case</a> page. </li> <li>  <b>communicationBody.</b> The <b>Description</b>
      field on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create
      Case</a> page. </li> <li>  <b>attachmentSetId.</b> The ID of a set of attachments
      that has been created by using <a>AddAttachmentsToSet</a>. </li> <li>  <b>language.</b>
      The human language in which AWS Support handles the case. English and Japanese
      are currently supported. </li> <li>  <b>ccEmailAddresses.</b> The AWS Support
      Center <b>CC</b> field on the <a href="https://console.aws.amazon.com/support/home#/case/create">Create
      Case</a> page. You can list email addresses to be copied on any correspondence
      about the case. The account that opens the case is already identified by passing
      the AWS Credentials in the HTTP POST method or in a method or function call
      from one of the programming languages supported by an <a href="http://aws.amazon.com/tools/">AWS
      SDK</a>.  </li> </ul> <note> To add additional communication or attachments
      to an existing case, use <a>AddCommunicationToCase</a>. </note> A successful
      <a>CreateCase</a> request returns an AWS Support case number. Case numbers are
      used by the <a>DescribeCases</a> operation to retrieve existing AWS Support
      cases. '
    body:
      application/json: CreateCaseRequest
    responses:
      200:
        body:
          application/json: CreateCaseResponse
      400:
        description: InternalServerError
/{DescribeAttachment}:
  uriParameters:
    DescribeAttachment?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns the attachment that has the specified ID. Attachment IDs are generated by the case management system when you add an attachment to a case or case communication. Attachment IDs are returned in the <a>AttachmentDetails</a> objects that are returned by the <a>DescribeCommunications</a> operation.
    body:
      application/json: DescribeAttachmentRequest
    responses:
      200:
        body:
          application/json: DescribeAttachmentResponse
      400:
        description: InternalServerError
/{DescribeCases}:
  uriParameters:
    DescribeCases?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Returns a list of cases that you specify by passing one or more
      case IDs. In addition, you can filter the cases by date by setting values for
      the <code>afterTime</code> and <code>beforeTime</code> request parameters. You
      can set values for the <code>includeResolvedCases</code> and <code>includeCommunications</code>
      request parameters to control how much information is returned.  Case data is
      available for 12 months after creation. If a case was created more than 12 months
      ago, a request for data might cause an error. The response returns the following
      in JSON format: <ul> <li> One or more <a>CaseDetails</a> data types.  </li>
      <li> One or more <code>nextToken</code> values, which specify where to paginate
      the returned records represented by the <code>CaseDetails</code> objects. </li>
      </ul>'
    body:
      application/json: DescribeCasesRequest
    responses:
      200:
        body:
          application/json: DescribeCasesResponse
      400:
        description: InternalServerError
/{DescribeCommunications}:
  uriParameters:
    DescribeCommunications?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns communications (and attachments) for one or more support cases. You can use the <code>afterTime</code> and <code>beforeTime</code> parameters to filter by date. You can use the <code>caseId</code> parameter to restrict the results to a particular case. Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request for data might cause an error. You can use the <code>maxResults</code> and <code>nextToken</code> parameters to control the pagination of the result set. Set <code>maxResults</code> to the number of cases you want displayed on each page, and use <code>nextToken</code> to specify the resumption of pagination.
    body:
      application/json: DescribeCommunicationsRequest
    responses:
      200:
        body:
          application/json: DescribeCommunicationsResponse
      400:
        description: InternalServerError
/{DescribeServices}:
  uriParameters:
    DescribeServices?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns the current list of AWS services and a list of service categories that applies to each one. You then use service names and categories in your <a>CreateCase</a> requests. Each AWS service has its own set of categories. The service codes and category codes correspond to the values that are displayed in the <b>Service</b> and <b>Category</b> drop-down lists on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page. The values in those fields, however, do not necessarily match the service codes and categories returned by the <code>DescribeServices</code> request. Always use the service codes and categories obtained programmatically. This practice ensures that you always have the most recent set of service and category codes.
    body:
      application/json: DescribeServicesRequest
    responses:
      200:
        body:
          application/json: DescribeServicesResponse
      400:
        description: InternalServerError
/{DescribeSeverityLevels}:
  uriParameters:
    DescribeSeverityLevels?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Returns the list of severity levels that you can assign to an AWS
      Support case. The severity level for a case is also a field in the <a>CaseDetails</a>
      data type included in any <a>CreateCase</a> request. '
    body:
      application/json: DescribeSeverityLevelsRequest
    responses:
      200:
        body:
          application/json: DescribeSeverityLevelsResponse
      400:
        description: InternalServerError
/{DescribeTrustedAdvisorCheckRefreshStatuses}:
  uriParameters:
    DescribeTrustedAdvisorCheckRefreshStatuses?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns the refresh status of the Trusted Advisor checks that have the specified check IDs. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>. <note> Some checks are refreshed automatically, and their refresh statuses cannot be retrieved by using this operation. Use of the <code>DescribeTrustedAdvisorCheckRefreshStatuses</code> operation for these checks causes an <code>InvalidParameterValue</code> error. </note>
    body:
      application/json: DescribeTrustedAdvisorCheckRefreshStatusesRequest
    responses:
      200:
        body:
          application/json: DescribeTrustedAdvisorCheckRefreshStatusesResponse
      400:
        description: InternalServerError
/{DescribeTrustedAdvisorCheckResult}:
  uriParameters:
    DescribeTrustedAdvisorCheckResult?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Returns the results of the Trusted Advisor check that has the specified
      check ID. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>.
      The response contains a <a>TrustedAdvisorCheckResult</a> object, which contains
      these three objects: <ul> <li>  <a>TrustedAdvisorCategorySpecificSummary</a>  </li>
      <li>  <a>TrustedAdvisorResourceDetail</a>  </li> <li>  <a>TrustedAdvisorResourcesSummary</a>  </li>
      </ul> In addition, the response contains these fields: <ul> <li>  <b>status.</b>
      The alert status of the check: "ok" (green), "warning" (yellow), "error" (red),
      or "not_available". </li> <li>  <b>timestamp.</b> The time of the last refresh
      of the check. </li> <li>  <b>checkId.</b> The unique identifier for the check.
      </li> </ul>'
    body:
      application/json: DescribeTrustedAdvisorCheckResultRequest
    responses:
      200:
        body:
          application/json: DescribeTrustedAdvisorCheckResultResponse
      400:
        description: InternalServerError
/{DescribeTrustedAdvisorCheckSummaries}:
  uriParameters:
    DescribeTrustedAdvisorCheckSummaries?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns the summaries of the results of the Trusted Advisor checks that have the specified check IDs. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>. The response contains an array of <a>TrustedAdvisorCheckSummary</a> objects.
    body:
      application/json: DescribeTrustedAdvisorCheckSummariesRequest
    responses:
      200:
        body:
          application/json: DescribeTrustedAdvisorCheckSummariesResponse
      400:
        description: InternalServerError
/{DescribeTrustedAdvisorChecks}:
  uriParameters:
    DescribeTrustedAdvisorChecks?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about all available Trusted Advisor checks, including name, ID, category, description, and metadata. You must specify a language code; English ("en") and Japanese ("ja") are currently supported. The response contains a <a>TrustedAdvisorCheckDescription</a> for each check.
    body:
      application/json: DescribeTrustedAdvisorChecksRequest
    responses:
      200:
        body:
          application/json: DescribeTrustedAdvisorChecksResponse
      400:
        description: InternalServerError
/{RefreshTrustedAdvisorCheck}:
  uriParameters:
    RefreshTrustedAdvisorCheck?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Requests a refresh of the Trusted Advisor check that has the specified
      check ID. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>.
      <note> Some checks are refreshed automatically, and they cannot be refreshed
      by using this operation. Use of the <code>RefreshTrustedAdvisorCheck</code>
      operation for these checks causes an <code>InvalidParameterValue</code> error.
      </note> The response contains a <a>TrustedAdvisorCheckRefreshStatus</a> object,
      which contains these fields: <ul> <li>  <b>status.</b> The refresh status of
      the check: "none", "enqueued", "processing", "success", or "abandoned". </li>
      <li>  <b>millisUntilNextRefreshable.</b> The amount of time, in milliseconds,
      until the check is eligible for refresh. </li> <li>  <b>checkId.</b> The unique
      identifier for the check. </li> </ul>'
    body:
      application/json: RefreshTrustedAdvisorCheckRequest
    responses:
      200:
        body:
          application/json: RefreshTrustedAdvisorCheckResponse
      400:
        description: InternalServerError
/{ResolveCase}:
  uriParameters:
    ResolveCase?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Takes a <code>caseId</code> and returns the initial state of the case along with the state of the case after the call to <a>ResolveCase</a> completed.
    body:
      application/json: ResolveCaseRequest
    responses:
      200:
        body:
          application/json: ResolveCaseResponse
      400:
        description: InternalServerError
