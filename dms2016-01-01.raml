#%RAML 1.0
title: AWS Database Migration Service
version: '2016-01-01'
description: '  AWS Database Migration Service (AWS DMS) can migrate your data to
  and from the most widely used commercial and open-source databases such as Oracle,
  PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, and MySQL.
  The service supports homogeneous migrations such as Oracle to Oracle, as well as
  heterogeneous migrations between different database platforms, such as Oracle to
  MySQL or SQL Server to PostgreSQL.'
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AccountQuotaList:
    type: array
    items:
      type: AccountQuota
  Boolean:
    type: boolean
  BooleanOptional:
    type: boolean
  CertificateList:
    type: array
    items:
      type: Certificate
  ConnectionList:
    type: array
    items:
      type: Connection
  DmsSslModeValue:
    type: string
    enum:
    - none
    - require
    - verify-ca
    - verify-full
  EndpointList:
    type: array
    items:
      type: Endpoint
  FilterList:
    type: array
    items:
      type: Filter
  FilterValueList:
    type: array
    items:
      type: String
  Integer:
    type: integer
    format: int
  IntegerOptional:
    type: integer
    format: int
  KeyList:
    type: array
    items:
      type: String
  Long:
    type: integer
    format: long
  MigrationTypeValue:
    type: string
    enum:
    - full-load
    - cdc
    - full-load-and-cdc
  OrderableReplicationInstanceList:
    type: array
    items:
      type: OrderableReplicationInstance
  RefreshSchemasStatusTypeValue:
    type: string
    enum:
    - successful
    - failed
    - refreshing
  ReplicationEndpointTypeValue:
    type: string
    enum:
    - source
    - target
  ReplicationInstanceList:
    type: array
    items:
      type: ReplicationInstance
  ReplicationInstancePrivateIpAddressList:
    type: array
    items:
      type: String
  ReplicationInstancePublicIpAddressList:
    type: array
    items:
      type: String
  ReplicationSubnetGroups:
    type: array
    items:
      type: ReplicationSubnetGroup
  ReplicationTaskList:
    type: array
    items:
      type: ReplicationTask
  SchemaList:
    type: array
    items:
      type: String
  SecretString:
    type: string
  StartReplicationTaskTypeValue:
    type: string
    enum:
    - start-replication
    - resume-processing
    - reload-target
  String:
    type: string
  SubnetIdentifierList:
    type: array
    items:
      type: String
  SubnetList:
    type: array
    items:
      type: Subnet
  SupportedEndpointTypeList:
    type: array
    items:
      type: SupportedEndpointType
  TStamp:
    type: datetime
  TableStatisticsList:
    type: array
    items:
      type: TableStatistics
  TagList:
    type: array
    items:
      type: Tag
  VpcSecurityGroupIdList:
    type: array
    items:
      type: String
  VpcSecurityGroupMembershipList:
    type: array
    items:
      type: VpcSecurityGroupMembership
  AccountQuota:
    type: object
    properties:
      AccountQuotaName?:
        type: String
        description: <p>The name of the AWS DMS quota for this AWS account.</p>
      Used?:
        type: Long
        description: <p>The amount currently used toward the quota maximum.</p>
      Max?:
        type: Long
        description: <p>The maximum allowed value for the quota.</p>
    description: <p>Describes a quota for an AWS account, for example, the number of replication instances allowed.</p>
  AddTagsToResourceMessage:
    type: object
    properties:
      ResourceArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be added to. AWS DMS resources include a replication instance, endpoint, and a replication task.</p>
      Tags:
        type: TagList
        description: <p>The tag to be assigned to the DMS resource.</p>
    description: <p/>
  AddTagsToResourceResponse:
    type: object
    description: <p/>
  AvailabilityZone:
    type: object
    properties:
      Name?:
        type: String
        description: <p>The name of the availability zone.</p>
    description: <p/>
  Certificate:
    type: object
    properties:
      CertificateIdentifier?:
        type: String
        description: <p>The customer-assigned name of the certificate. Valid characters are [A-z_0-9].</p>
      CertificateCreationDate?:
        type: TStamp
        description: <p>the date the certificate was created.</p>
      CertificatePem?:
        type: String
        description: <p>The contents of the .pem X.509 certificate file.</p>
      CertificateArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) for the certificate.</p>
      CertificateOwner?:
        type: String
        description: <p>The owner of the certificate.</p>
      ValidFromDate?:
        type: TStamp
        description: <p>The beginning date the certificate is valid.</p>
      ValidToDate?:
        type: TStamp
        description: <p>the final date the certificate is valid.</p>
      SigningAlgorithm?:
        type: String
        description: <p>The signing algorithm for the certificate.</p>
      KeyLength?:
        type: IntegerOptional
        description: <p>The key length of the cryptographic algorithm being used.</p>
    description: <p>The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.</p>
  Connection:
    type: object
    properties:
      ReplicationInstanceArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
      EndpointArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      Status?:
        type: String
        description: <p>The connection status.</p>
      LastFailureMessage?:
        type: String
        description: <p>The error message when the connection last failed.</p>
      EndpointIdentifier?:
        type: String
        description: <p>The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.</p>
      ReplicationInstanceIdentifier?:
        type: String
        description: <p>The replication instance identifier. This parameter is stored as a lowercase string.</p>
    description: <p/>
  CreateEndpointMessage:
    type: object
    properties:
      EndpointIdentifier:
        type: String
        description: <p>The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.</p>
      EndpointType:
        type: ReplicationEndpointTypeValue
        description: <p>The type of endpoint.</p>
      EngineName:
        type: String
        description: <p>The type of engine for the endpoint. Valid values include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, and SQLSERVER.</p>
      Username:
        type: String
        description: <p>The user name to be used to login to the endpoint database.</p>
      Password:
        type: SecretString
        description: <p>The password to be used to login to the endpoint database.</p>
      ServerName:
        type: String
        description: <p>The name of the server where the endpoint database resides.</p>
      Port:
        type: IntegerOptional
        description: <p>The port used by the endpoint database.</p>
      DatabaseName?:
        type: String
        description: <p>The name of the endpoint database.</p>
      ExtraConnectionAttributes?:
        type: String
        description: <p>Additional attributes associated with the connection.</p>
      KmsKeyId?:
        type: String
        description: <p>The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.</p>
      Tags?:
        type: TagList
        description: <p>Tags to be added to the endpoint.</p>
      CertificateArn?:
        type: String
        description: <p>The Amazon Resource Number (ARN) for the certificate.</p>
      SslMode?:
        type: DmsSslModeValue
        description: '<p>The SSL mode to use for the SSL connection.</p> <p>SSL mode
          can be one of four values: none, require, verify-ca, verify-full. </p> <p>The
          default value is none.</p>'
    description: <p/>
  CreateEndpointResponse:
    type: object
    properties:
      Endpoint?:
        type: Endpoint
        description: <p>The endpoint that was created.</p>
    description: <p/>
  CreateReplicationInstanceMessage:
    type: object
    properties:
      ReplicationInstanceIdentifier:
        type: String
        description: '<p>The replication instance identifier. This parameter is stored
          as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
          from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First
          character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or
          contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code>
          </p>'
      AllocatedStorage?:
        type: IntegerOptional
        description: <p>The amount of storage (in gigabytes) to be initially allocated for the replication instance.</p>
      ReplicationInstanceClass:
        type: String
        description: '<p>The compute and memory capacity of the replication instance
          as specified by the replication instance class.</p> <p> Valid Values: <code>dms.t2.micro
          | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge
          | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>'
      VpcSecurityGroupIds?:
        type: VpcSecurityGroupIdList
        description: <p> Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. </p>
      AvailabilityZone?:
        type: String
        description: '<p>The EC2 Availability Zone that the replication instance will
          be created in.</p> <p>Default: A random, system-chosen Availability Zone
          in the endpoint''s region.</p> <p> Example: <code>us-east-1d</code> </p>'
      ReplicationSubnetGroupIdentifier?:
        type: String
        description: <p>A subnet group to associate with the replication instance.</p>
      PreferredMaintenanceWindow?:
        type: String
        description: '<p>The weekly time range during which system maintenance can
          occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>
          </p> <p>Default: A 30-minute window selected at random from an 8-hour block
          of time per region, occurring on a random day of the week.</p> <p>Valid
          Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute
          window.</p>'
      MultiAZ?:
        type: BooleanOptional
        description: <p> Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
      EngineVersion?:
        type: String
        description: <p>The engine version number of the replication instance.</p>
      AutoMinorVersionUpgrade?:
        type: BooleanOptional
        description: '<p>Indicates that minor engine upgrades will be applied automatically
          to the replication instance during the maintenance window.</p> <p>Default:
          <code>true</code> </p>'
      Tags?:
        type: TagList
        description: <p>Tags to be associated with the replication instance.</p>
      KmsKeyId?:
        type: String
        description: <p>The KMS key identifier that will be used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.</p>
      PubliclyAccessible?:
        type: BooleanOptional
        description: <p> Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. </p>
    description: <p/>
  CreateReplicationInstanceResponse:
    type: object
    properties:
      ReplicationInstance?:
        type: ReplicationInstance
        description: <p>The replication instance that was created.</p>
    description: <p/>
  CreateReplicationSubnetGroupMessage:
    type: object
    properties:
      ReplicationSubnetGroupIdentifier:
        type: String
        description: '<p>The name for the replication subnet group. This value is
          stored as a lowercase string.</p> <p>Constraints: Must contain no more than
          255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must
          not be "default".</p> <p>Example: <code>mySubnetgroup</code> </p>'
      ReplicationSubnetGroupDescription:
        type: String
        description: <p>The description for the subnet group.</p>
      SubnetIds:
        type: SubnetIdentifierList
        description: <p>The EC2 subnet IDs for the subnet group.</p>
      Tags?:
        type: TagList
        description: <p>The tag to be assigned to the subnet group.</p>
    description: <p/>
  CreateReplicationSubnetGroupResponse:
    type: object
    properties:
      ReplicationSubnetGroup?:
        type: ReplicationSubnetGroup
        description: <p>The replication subnet group that was created.</p>
    description: <p/>
  CreateReplicationTaskMessage:
    type: object
    properties:
      ReplicationTaskIdentifier:
        type: String
        description: <p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
      SourceEndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      TargetEndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      ReplicationInstanceArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
      MigrationType:
        type: MigrationTypeValue
        description: <p>The migration type.</p>
      TableMappings:
        type: String
        description: <p>The path of the JSON file that contains the table mappings. Preceed the path with "file://".</p> <p>For example, --table-mappings file://mappingfile.json</p>
      ReplicationTaskSettings?:
        type: String
        description: <p>Settings for the task, such as target metadata settings.</p>
      CdcStartTime?:
        type: TStamp
        description: <p>The start time for the Change Data Capture (CDC) operation.</p>
      Tags?:
        type: TagList
        description: <p>Tags to be added to the replication instance.</p>
    description: <p/>
  CreateReplicationTaskResponse:
    type: object
    properties:
      ReplicationTask?:
        type: ReplicationTask
        description: <p>The replication task that was created.</p>
    description: <p/>
  DeleteCertificateMessage:
    type: object
    properties:
      CertificateArn:
        type: String
        description: <p>the Amazon Resource Name (ARN) of the deleted certificate.</p>
  DeleteCertificateResponse:
    type: object
    properties:
      Certificate?:
        type: Certificate
        description: <p>The SSL certificate.</p>
  DeleteEndpointMessage:
    type: object
    properties:
      EndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    description: <p/>
  DeleteEndpointResponse:
    type: object
    properties:
      Endpoint?:
        type: Endpoint
        description: <p>The endpoint that was deleted.</p>
    description: <p/>
  DeleteReplicationInstanceMessage:
    type: object
    properties:
      ReplicationInstanceArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance to be deleted.</p>
    description: <p/>
  DeleteReplicationInstanceResponse:
    type: object
    properties:
      ReplicationInstance?:
        type: ReplicationInstance
        description: <p>The replication instance that was deleted.</p>
    description: <p/>
  DeleteReplicationSubnetGroupMessage:
    type: object
    properties:
      ReplicationSubnetGroupIdentifier:
        type: String
        description: <p>The subnet group name of the replication instance.</p>
    description: <p/>
  DeleteReplicationSubnetGroupResponse:
    type: object
    description: <p/>
  DeleteReplicationTaskMessage:
    type: object
    properties:
      ReplicationTaskArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication task to be deleted.</p>
    description: <p/>
  DeleteReplicationTaskResponse:
    type: object
    properties:
      ReplicationTask?:
        type: ReplicationTask
        description: <p>The deleted replication task.</p>
    description: <p/>
  DescribeAccountAttributesMessage:
    type: object
    description: <p/>
  DescribeAccountAttributesResponse:
    type: object
    properties:
      AccountQuotas?:
        type: AccountQuotaList
        description: <p>Account quota information.</p>
    description: <p/>
  DescribeCertificatesMessage:
    type: object
    properties:
      Filters?:
        type: FilterList
        description: <p>Filters applied to the certificate described in the form of key-value pairs.</p>
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 10</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
  DescribeCertificatesResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p>The pagination token.</p>
      Certificates?:
        type: CertificateList
        description: <p>The SSL certificates associated with the replication instance.</p>
  DescribeConnectionsMessage:
    type: object
    properties:
      Filters?:
        type: FilterList
        description: '<p>The filters applied to the connection.</p> <p>Valid filter
          names: endpoint-arn | replication-instance-arn</p>'
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeConnectionsResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
      Connections?:
        type: ConnectionList
        description: <p>A description of the connections.</p>
    description: <p/>
  DescribeEndpointTypesMessage:
    type: object
    properties:
      Filters?:
        type: FilterList
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter
          names: engine-name | endpoint-type</p>'
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeEndpointTypesResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
      SupportedEndpointTypes?:
        type: SupportedEndpointTypeList
        description: <p>The type of endpoints that are supported.</p>
    description: <p/>
  DescribeEndpointsMessage:
    type: object
    properties:
      Filters?:
        type: FilterList
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter
          names: endpoint-arn | endpoint-type | endpoint-id | engine-name</p>'
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeEndpointsResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
      Endpoints?:
        type: EndpointList
        description: <p>Endpoint description.</p>
    description: <p/>
  DescribeOrderableReplicationInstancesMessage:
    type: object
    properties:
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeOrderableReplicationInstancesResponse:
    type: object
    properties:
      OrderableReplicationInstances?:
        type: OrderableReplicationInstanceList
        description: <p>The order-able replication instances available.</p>
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeRefreshSchemasStatusMessage:
    type: object
    properties:
      EndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    description: <p/>
  DescribeRefreshSchemasStatusResponse:
    type: object
    properties:
      RefreshSchemasStatus?:
        type: RefreshSchemasStatus
        description: <p>The status of the schema.</p>
    description: <p/>
  DescribeReplicationInstancesMessage:
    type: object
    properties:
      Filters?:
        type: FilterList
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter
          names: replication-instance-arn | replication-instance-id | replication-instance-class
          | engine-version</p>'
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeReplicationInstancesResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
      ReplicationInstances?:
        type: ReplicationInstanceList
        description: <p>The replication instances described.</p>
    description: <p/>
  DescribeReplicationSubnetGroupsMessage:
    type: object
    properties:
      Filters?:
        type: FilterList
        description: <p>Filters applied to the describe action.</p>
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeReplicationSubnetGroupsResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
      ReplicationSubnetGroups?:
        type: ReplicationSubnetGroups
        description: <p>A description of the replication subnet groups.</p>
    description: <p/>
  DescribeReplicationTasksMessage:
    type: object
    properties:
      Filters?:
        type: FilterList
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter
          names: replication-task-arn | replication-task-id | migration-type | endpoint-arn
          | replication-instance-arn</p>'
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeReplicationTasksResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
      ReplicationTasks?:
        type: ReplicationTaskList
        description: <p>A description of the replication tasks.</p>
    description: <p/>
  DescribeSchemasMessage:
    type: object
    properties:
      EndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeSchemasResponse:
    type: object
    properties:
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
      Schemas?:
        type: SchemaList
        description: <p>The described schema.</p>
    description: <p/>
  DescribeTableStatisticsMessage:
    type: object
    properties:
      ReplicationTaskArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication task.</p>
      MaxRecords?:
        type: IntegerOptional
        description: '<p> The maximum number of records to include in the response.
          If more records exist than the specified <code>MaxRecords</code> value,
          a pagination token called a marker is included in the response so that the
          remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints:
          Minimum 20, maximum 100.</p>'
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  DescribeTableStatisticsResponse:
    type: object
    properties:
      ReplicationTaskArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication task.</p>
      TableStatistics?:
        type: TableStatisticsList
        description: <p>The table statistics.</p>
      Marker?:
        type: String
        description: <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    description: <p/>
  Endpoint:
    type: object
    properties:
      EndpointIdentifier?:
        type: String
        description: <p>The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.</p>
      EndpointType?:
        type: ReplicationEndpointTypeValue
        description: <p>The type of endpoint.</p>
      EngineName?:
        type: String
        description: <p>The database engine name.</p>
      Username?:
        type: String
        description: <p>The user name used to connect to the endpoint.</p>
      ServerName?:
        type: String
        description: <p>The name of the server at the endpoint.</p>
      Port?:
        type: IntegerOptional
        description: <p>The port value used to access the endpoint.</p>
      DatabaseName?:
        type: String
        description: <p>The name of the database at the endpoint.</p>
      ExtraConnectionAttributes?:
        type: String
        description: <p>Additional connection attributes used to connect to the endpoint.</p>
      Status?:
        type: String
        description: <p>The status of the endpoint.</p>
      KmsKeyId?:
        type: String
        description: <p>The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.</p>
      EndpointArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      CertificateArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) used for SSL connection to the endpoint.</p>
      SslMode?:
        type: DmsSslModeValue
        description: '<p>The SSL mode used to connect to the endpoint.</p> <p>SSL
          mode can be one of four values: none, require, verify-ca, verify-full. </p>
          <p>The default value is none.</p>'
    description: <p/>
  Filter:
    type: object
    properties:
      Name:
        type: String
        description: <p>The name of the filter.</p>
      Values:
        type: FilterValueList
        description: <p>The filter value.</p>
    description: <p/>
  ImportCertificateMessage:
    type: object
    properties:
      CertificateIdentifier:
        type: String
        description: <p>The customer-assigned name of the certificate. Valid characters are [A-z_0-9].</p>
      CertificatePem?:
        type: String
        description: <p>The contents of the .pem X.509 certificate file.</p>
  ImportCertificateResponse:
    type: object
    properties:
      Certificate?:
        type: Certificate
        description: <p>The certificate to be uploaded.</p>
  ListTagsForResourceMessage:
    type: object
    properties:
      ResourceArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the AWS DMS resource.</p>
    description: <p/>
  ListTagsForResourceResponse:
    type: object
    properties:
      TagList?:
        type: TagList
        description: <p>A list of tags for the resource.</p>
    description: <p/>
  ModifyEndpointMessage:
    type: object
    properties:
      EndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      EndpointIdentifier?:
        type: String
        description: <p>The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.</p>
      EndpointType?:
        type: ReplicationEndpointTypeValue
        description: <p>The type of endpoint.</p>
      EngineName?:
        type: String
        description: <p>The type of engine for the endpoint. Valid values include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, and SQLSERVER.</p>
      Username?:
        type: String
        description: <p>The user name to be used to login to the endpoint database.</p>
      Password?:
        type: SecretString
        description: <p>The password to be used to login to the endpoint database.</p>
      ServerName?:
        type: String
        description: <p>The name of the server where the endpoint database resides.</p>
      Port?:
        type: IntegerOptional
        description: <p>The port used by the endpoint database.</p>
      DatabaseName?:
        type: String
        description: <p>The name of the endpoint database.</p>
      ExtraConnectionAttributes?:
        type: String
        description: <p>Additional attributes associated with the connection.</p>
      CertificateArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the certificate used for SSL connection.</p>
      SslMode?:
        type: DmsSslModeValue
        description: '<p>The SSL mode to be used.</p> <p>SSL mode can be one of four
          values: none, require, verify-ca, verify-full. </p> <p>The default value
          is none.</p>'
    description: <p/>
  ModifyEndpointResponse:
    type: object
    properties:
      Endpoint?:
        type: Endpoint
        description: <p>The modified endpoint.</p>
    description: <p/>
  ModifyReplicationInstanceMessage:
    type: object
    properties:
      ReplicationInstanceArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
      AllocatedStorage?:
        type: IntegerOptional
        description: <p>The amount of storage (in gigabytes) to be allocated for the replication instance.</p>
      ApplyImmediately?:
        type: Boolean
        description: <p>Indicates whether the changes should be applied immediately or during the next maintenance window.</p>
      ReplicationInstanceClass?:
        type: String
        description: '<p>The compute and memory capacity of the replication instance.</p>
          <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large
          | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code>
          </p>'
      VpcSecurityGroupIds?:
        type: VpcSecurityGroupIdList
        description: <p> Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. </p>
      PreferredMaintenanceWindow?:
        type: String
        description: '<p>The weekly time range (in UTC) during which system maintenance
          can occur, which might result in an outage. Changing this parameter does
          not result in an outage, except in the following situation, and the change
          is asynchronously applied as soon as possible. If moving this window to
          the current time, there must be at least 30 minutes between the current
          time and end of the window to ensure pending changes are applied.</p> <p>Default:
          Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid
          Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be
          at least 30 minutes</p>'
      MultiAZ?:
        type: BooleanOptional
        description: <p> Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
      EngineVersion?:
        type: String
        description: <p>The engine version number of the replication instance.</p>
      AllowMajorVersionUpgrade?:
        type: Boolean
        description: '<p>Indicates that major version upgrades are allowed. Changing
          this parameter does not result in an outage and the change is asynchronously
          applied as soon as possible.</p> <p>Constraints: This parameter must be
          set to true when specifying a value for the <code>EngineVersion</code> parameter
          that is a different major version than the replication instance''s current
          version.</p>'
      AutoMinorVersionUpgrade?:
        type: BooleanOptional
        description: <p> Indicates that minor version upgrades will be applied automatically to the replication instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and AWS DMS has enabled auto patching for that engine version. </p>
      ReplicationInstanceIdentifier?:
        type: String
        description: <p>The replication instance identifier. This parameter is stored as a lowercase string.</p>
    description: <p/>
  ModifyReplicationInstanceResponse:
    type: object
    properties:
      ReplicationInstance?:
        type: ReplicationInstance
        description: <p>The modified replication instance.</p>
    description: <p/>
  ModifyReplicationSubnetGroupMessage:
    type: object
    properties:
      ReplicationSubnetGroupIdentifier:
        type: String
        description: <p>The name of the replication instance subnet group.</p>
      ReplicationSubnetGroupDescription?:
        type: String
        description: <p>The description of the replication instance subnet group.</p>
      SubnetIds:
        type: SubnetIdentifierList
        description: <p>A list of subnet IDs.</p>
    description: <p/>
  ModifyReplicationSubnetGroupResponse:
    type: object
    properties:
      ReplicationSubnetGroup?:
        type: ReplicationSubnetGroup
        description: <p>The modified replication subnet group.</p>
    description: <p/>
  OrderableReplicationInstance:
    type: object
    properties:
      EngineVersion?:
        type: String
        description: <p>The version of the replication engine.</p>
      ReplicationInstanceClass?:
        type: String
        description: '<p>The compute and memory capacity of the replication instance.</p>
          <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large
          | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code>
          </p>'
      StorageType?:
        type: String
        description: <p>The type of storage used by the replication instance.</p>
      MinAllocatedStorage?:
        type: Integer
        description: <p>The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.</p>
      MaxAllocatedStorage?:
        type: Integer
        description: <p>The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.</p>
      DefaultAllocatedStorage?:
        type: Integer
        description: <p>The default amount of storage (in gigabytes) that is allocated for the replication instance.</p>
      IncludedAllocatedStorage?:
        type: Integer
        description: <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
    description: <p/>
  RefreshSchemasMessage:
    type: object
    properties:
      EndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      ReplicationInstanceArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
    description: <p/>
  RefreshSchemasResponse:
    type: object
    properties:
      RefreshSchemasStatus?:
        type: RefreshSchemasStatus
        description: <p>The status of the refreshed schema.</p>
    description: <p/>
  RefreshSchemasStatus:
    type: object
    properties:
      EndpointArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      ReplicationInstanceArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
      Status?:
        type: RefreshSchemasStatusTypeValue
        description: <p>The status of the schema.</p>
      LastRefreshDate?:
        type: TStamp
        description: <p>The date the schema was last refreshed.</p>
      LastFailureMessage?:
        type: String
        description: <p>The last failure message for the schema.</p>
    description: <p/>
  RemoveTagsFromResourceMessage:
    type: object
    properties:
      ResourceArn:
        type: String
        description: <p>&gt;The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be removed from.</p>
      TagKeys:
        type: KeyList
        description: <p>The tag key (name) of the tag to be removed.</p>
    description: <p/>
  RemoveTagsFromResourceResponse:
    type: object
    description: <p/>
  ReplicationInstance:
    type: object
    properties:
      ReplicationInstanceIdentifier?:
        type: String
        description: '<p>The replication instance identifier. This parameter is stored
          as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
          from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First
          character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or
          contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code>
          </p>'
      ReplicationInstanceClass?:
        type: String
        description: '<p>The compute and memory capacity of the replication instance.</p>
          <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large
          | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code>
          </p>'
      ReplicationInstanceStatus?:
        type: String
        description: <p>The status of the replication instance.</p>
      AllocatedStorage?:
        type: Integer
        description: <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
      InstanceCreateTime?:
        type: TStamp
        description: <p>The time the replication instance was created.</p>
      VpcSecurityGroups?:
        type: VpcSecurityGroupMembershipList
        description: <p>The VPC security group for the instance.</p>
      AvailabilityZone?:
        type: String
        description: <p>The Availability Zone for the instance.</p>
      ReplicationSubnetGroup?:
        type: ReplicationSubnetGroup
        description: <p>The subnet group for the replication instance.</p>
      PreferredMaintenanceWindow?:
        type: String
        description: <p>The maintenance window times for the replication instance.</p>
      PendingModifiedValues?:
        type: ReplicationPendingModifiedValues
        description: <p>The pending modification values.</p>
      MultiAZ?:
        type: Boolean
        description: <p> Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
      EngineVersion?:
        type: String
        description: <p>The engine version number of the replication instance.</p>
      AutoMinorVersionUpgrade?:
        type: Boolean
        description: <p>Boolean value indicating if minor version upgrades will be automatically applied to the instance.</p>
      KmsKeyId?:
        type: String
        description: <p>The KMS key identifier that is used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.</p>
      ReplicationInstanceArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
      ReplicationInstancePublicIpAddress?:
        type: String
        description: <p>The public IP address of the replication instance.</p>
      ReplicationInstancePrivateIpAddress?:
        type: String
        description: <p>The private IP address of the replication instance.</p>
      ReplicationInstancePublicIpAddresses?:
        type: ReplicationInstancePublicIpAddressList
        description: <p>The public IP address of the replication instance.</p>
      ReplicationInstancePrivateIpAddresses?:
        type: ReplicationInstancePrivateIpAddressList
        description: <p>The private IP address of the replication instance.</p>
      PubliclyAccessible?:
        type: Boolean
        description: <p> Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. </p>
    description: <p/>
  ReplicationPendingModifiedValues:
    type: object
    properties:
      ReplicationInstanceClass?:
        type: String
        description: '<p>The compute and memory capacity of the replication instance.</p>
          <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large
          | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code>
          </p>'
      AllocatedStorage?:
        type: IntegerOptional
        description: <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
      MultiAZ?:
        type: BooleanOptional
        description: <p> Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
      EngineVersion?:
        type: String
        description: <p>The engine version number of the replication instance.</p>
    description: <p/>
  ReplicationSubnetGroup:
    type: object
    properties:
      ReplicationSubnetGroupIdentifier?:
        type: String
        description: <p>The identifier of the replication instance subnet group.</p>
      ReplicationSubnetGroupDescription?:
        type: String
        description: <p>The description of the replication subnet group.</p>
      VpcId?:
        type: String
        description: <p>The ID of the VPC.</p>
      SubnetGroupStatus?:
        type: String
        description: <p>The status of the subnet group.</p>
      Subnets?:
        type: SubnetList
        description: <p>The subnets that are in the subnet group.</p>
    description: <p/>
  ReplicationTask:
    type: object
    properties:
      ReplicationTaskIdentifier?:
        type: String
        description: <p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
      SourceEndpointArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      TargetEndpointArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
      ReplicationInstanceArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
      MigrationType?:
        type: MigrationTypeValue
        description: <p>The type of migration.</p>
      TableMappings?:
        type: String
        description: <p>Table mappings specified in the task.</p>
      ReplicationTaskSettings?:
        type: String
        description: <p>The settings for the replication task.</p>
      Status?:
        type: String
        description: <p>The status of the replication task.</p>
      LastFailureMessage?:
        type: String
        description: <p>The last error (failure) message generated for the replication instance.</p>
      ReplicationTaskCreationDate?:
        type: TStamp
        description: <p>The date the replication task was created.</p>
      ReplicationTaskStartDate?:
        type: TStamp
        description: <p>The date the replication task is scheduled to start.</p>
      ReplicationTaskArn?:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication task.</p>
      ReplicationTaskStats?:
        type: ReplicationTaskStats
        description: <p>The statistics for the task, including elapsed time, tables loaded, and table errors.</p>
    description: <p/>
  ReplicationTaskStats:
    type: object
    properties:
      FullLoadProgressPercent?:
        type: Integer
        description: <p>The percent complete for the full load migration task.</p>
      ElapsedTimeMillis?:
        type: Long
        description: <p>The elapsed time of the task, in milliseconds.</p>
      TablesLoaded?:
        type: Integer
        description: <p>The number of tables loaded for this task.</p>
      TablesLoading?:
        type: Integer
        description: <p>The number of tables currently loading for this task.</p>
      TablesQueued?:
        type: Integer
        description: <p>The number of tables queued for this task.</p>
      TablesErrored?:
        type: Integer
        description: <p>The number of errors that have occurred during this task.</p>
    description: <p/>
  StartReplicationTaskMessage:
    type: object
    properties:
      ReplicationTaskArn:
        type: String
        description: <p>The Amazon Resource Number (ARN) of the replication task to be started.</p>
      StartReplicationTaskType:
        type: StartReplicationTaskTypeValue
        description: <p>The type of replication task.</p>
      CdcStartTime?:
        type: TStamp
        description: <p>The start time for the Change Data Capture (CDC) operation.</p>
    description: <p/>
  StartReplicationTaskResponse:
    type: object
    properties:
      ReplicationTask?:
        type: ReplicationTask
        description: <p>The replication task started.</p>
    description: <p/>
  StopReplicationTaskMessage:
    type: object
    properties:
      ReplicationTaskArn:
        type: String
        description: <p>The Amazon Resource Number(ARN) of the replication task to be stopped.</p>
    description: <p/>
  StopReplicationTaskResponse:
    type: object
    properties:
      ReplicationTask?:
        type: ReplicationTask
        description: <p>The replication task stopped.</p>
    description: <p/>
  Subnet:
    type: object
    properties:
      SubnetIdentifier?:
        type: String
        description: <p>The subnet identifier.</p>
      SubnetAvailabilityZone?:
        type: AvailabilityZone
        description: <p>The Availability Zone of the subnet.</p>
      SubnetStatus?:
        type: String
        description: <p>The status of the subnet.</p>
    description: <p/>
  SupportedEndpointType:
    type: object
    properties:
      EngineName?:
        type: String
        description: <p>The database engine name.</p>
      SupportsCDC?:
        type: Boolean
        description: <p>Indicates if Change Data Capture (CDC) is supported.</p>
      EndpointType?:
        type: ReplicationEndpointTypeValue
        description: <p>The type of endpoint.</p>
    description: <p/>
  TableStatistics:
    type: object
    properties:
      SchemaName?:
        type: String
        description: <p>The schema name.</p>
      TableName?:
        type: String
        description: <p>The name of the table.</p>
      Inserts?:
        type: Long
        description: <p>The number of insert actions performed on a table.</p>
      Deletes?:
        type: Long
        description: <p>The number of delete actions performed on a table.</p>
      Updates?:
        type: Long
        description: <p>The number of update actions performed on a table.</p>
      Ddls?:
        type: Long
        description: <p>The Data Definition Language (DDL) used to build and modify the structure of your tables.</p>
      FullLoadRows?:
        type: Long
        description: <p>The number of rows added during the Full Load operation.</p>
      LastUpdateTime?:
        type: TStamp
        description: <p>The last time the table was updated.</p>
      TableState?:
        type: String
        description: <p>The state of the table.</p>
    description: <p/>
  Tag:
    type: object
    properties:
      Key?:
        type: String
        description: '<p>A key is the required name of the tag. The string value can
          be from 1 to 128 Unicode characters in length and cannot be prefixed with
          "aws:" or "dms:". The string can only contain only the set of Unicode letters,
          digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex:
          "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").</p>'
      Value?:
        type: String
        description: '<p>A value is the optional value of the tag. The string value
          can be from 1 to 256 Unicode characters in length and cannot be prefixed
          with "aws:" or "dms:". The string can only contain only the set of Unicode
          letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java
          regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").</p>'
    description: <p/>
  TestConnectionMessage:
    type: object
    properties:
      ReplicationInstanceArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) of the replication instance.</p>
      EndpointArn:
        type: String
        description: <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    description: <p/>
  TestConnectionResponse:
    type: object
    properties:
      Connection?:
        type: Connection
        description: <p>The connection tested.</p>
    description: <p/>
  VpcSecurityGroupMembership:
    type: object
    properties:
      VpcSecurityGroupId?:
        type: String
        description: <p>The VPC security group Id.</p>
      Status?:
        type: String
        description: <p>The status of the VPC security group.</p>
    description: <p/>
/{AddTagsToResource}:
  uriParameters:
    AddTagsToResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Adds metadata tags to a DMS resource, including replication instance, endpoint, security group, and migration task. These tags can also be used with cost allocation reporting to track cost associated with DMS resources, or used in a Condition statement in an IAM policy for DMS.
    displayName: Add Tags To Resource
    body:
      application/json: AddTagsToResourceMessage
    responses:
      200:
        body:
          application/json: AddTagsToResourceResponse
      400:
        description: ResourceNotFoundFault
/{CreateEndpoint}:
  uriParameters:
    CreateEndpoint?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates an endpoint using the provided settings.
    displayName: Create Endpoint
    body:
      application/json: CreateEndpointMessage
    responses:
      200:
        body:
          application/json: CreateEndpointResponse
      400:
        description: KMSKeyNotAccessibleFault
/{CreateReplicationInstance}:
  uriParameters:
    CreateReplicationInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates the replication instance using the specified parameters.
    displayName: Create Replication Instance
    body:
      application/json: CreateReplicationInstanceMessage
    responses:
      200:
        body:
          application/json: CreateReplicationInstanceResponse
      400:
        description: AccessDeniedFault
/{CreateReplicationSubnetGroup}:
  uriParameters:
    CreateReplicationSubnetGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a replication subnet group given a list of the subnet IDs in a VPC.
    displayName: Create Replication Subnet Group
    body:
      application/json: CreateReplicationSubnetGroupMessage
    responses:
      200:
        body:
          application/json: CreateReplicationSubnetGroupResponse
      400:
        description: AccessDeniedFault
/{CreateReplicationTask}:
  uriParameters:
    CreateReplicationTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Creates a replication task using the specified parameters.
    displayName: Create Replication Task
    body:
      application/json: CreateReplicationTaskMessage
    responses:
      200:
        body:
          application/json: CreateReplicationTaskResponse
      400:
        description: InvalidResourceStateFault
/{DeleteCertificate}:
  uriParameters:
    DeleteCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: 'Deletes the specified certificate. '
    displayName: Delete Certificate
    body:
      application/json: DeleteCertificateMessage
    responses:
      200:
        body:
          application/json: DeleteCertificateResponse
      400:
        description: ResourceNotFoundFault
/{DeleteEndpoint}:
  uriParameters:
    DeleteEndpoint?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified endpoint. <note> All tasks associated with the endpoint must be deleted before you can delete the endpoint. </note> <p/>
    displayName: Delete Endpoint
    body:
      application/json: DeleteEndpointMessage
    responses:
      200:
        body:
          application/json: DeleteEndpointResponse
      400:
        description: ResourceNotFoundFault
/{DeleteReplicationInstance}:
  uriParameters:
    DeleteReplicationInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified replication instance. <note> You must delete any migration tasks that are associated with the replication instance before you can delete it. </note> <p/>
    displayName: Delete Replication Instance
    body:
      application/json: DeleteReplicationInstanceMessage
    responses:
      200:
        body:
          application/json: DeleteReplicationInstanceResponse
      400:
        description: InvalidResourceStateFault
/{DeleteReplicationSubnetGroup}:
  uriParameters:
    DeleteReplicationSubnetGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes a subnet group.
    displayName: Delete Replication Subnet Group
    body:
      application/json: DeleteReplicationSubnetGroupMessage
    responses:
      200:
        body:
          application/json: DeleteReplicationSubnetGroupResponse
      400:
        description: InvalidResourceStateFault
/{DeleteReplicationTask}:
  uriParameters:
    DeleteReplicationTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Deletes the specified replication task.
    displayName: Delete Replication Task
    body:
      application/json: DeleteReplicationTaskMessage
    responses:
      200:
        body:
          application/json: DeleteReplicationTaskResponse
      400:
        description: ResourceNotFoundFault
/{DescribeAccountAttributes}:
  uriParameters:
    DescribeAccountAttributes?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Lists all of the AWS DMS attributes for a customer account. The attributes include AWS DMS quotas for the account, such as the number of replication instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value. This command does not take any parameters.
    displayName: Describe Account Attributes
    body:
      application/json: DescribeAccountAttributesMessage
    responses:
      200:
        body:
          application/json: DescribeAccountAttributesResponse
/{DescribeCertificates}:
  uriParameters:
    DescribeCertificates?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Provides a description of the certificate.
    displayName: Describe Certificates
    body:
      application/json: DescribeCertificatesMessage
    responses:
      200:
        body:
          application/json: DescribeCertificatesResponse
      400:
        description: ResourceNotFoundFault
/{DescribeConnections}:
  uriParameters:
    DescribeConnections?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Describes the status of the connections that have been made between the replication instance and an endpoint. Connections are created when you test an endpoint.
    displayName: Describe Connections
    body:
      application/json: DescribeConnectionsMessage
    responses:
      200:
        body:
          application/json: DescribeConnectionsResponse
      400:
        description: ResourceNotFoundFault
/{DescribeEndpointTypes}:
  uriParameters:
    DescribeEndpointTypes?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about the type of endpoints available.
    displayName: Describe Endpoint Types
    body:
      application/json: DescribeEndpointTypesMessage
    responses:
      200:
        body:
          application/json: DescribeEndpointTypesResponse
/{DescribeEndpoints}:
  uriParameters:
    DescribeEndpoints?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about the endpoints for your account in the current region.
    displayName: Describe Endpoints
    body:
      application/json: DescribeEndpointsMessage
    responses:
      200:
        body:
          application/json: DescribeEndpointsResponse
      400:
        description: ResourceNotFoundFault
/{DescribeOrderableReplicationInstances}:
  uriParameters:
    DescribeOrderableReplicationInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about the replication instance types that can be created in the specified region.
    displayName: Describe Orderable Replication Instances
    body:
      application/json: DescribeOrderableReplicationInstancesMessage
    responses:
      200:
        body:
          application/json: DescribeOrderableReplicationInstancesResponse
/{DescribeRefreshSchemasStatus}:
  uriParameters:
    DescribeRefreshSchemasStatus?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns the status of the RefreshSchemas operation.
    displayName: Describe Refresh Schemas Status
    body:
      application/json: DescribeRefreshSchemasStatusMessage
    responses:
      200:
        body:
          application/json: DescribeRefreshSchemasStatusResponse
      400:
        description: InvalidResourceStateFault
/{DescribeReplicationInstances}:
  uriParameters:
    DescribeReplicationInstances?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about replication instances for your account in the current region.
    displayName: Describe Replication Instances
    body:
      application/json: DescribeReplicationInstancesMessage
    responses:
      200:
        body:
          application/json: DescribeReplicationInstancesResponse
      400:
        description: ResourceNotFoundFault
/{DescribeReplicationSubnetGroups}:
  uriParameters:
    DescribeReplicationSubnetGroups?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about the replication subnet groups.
    displayName: Describe Replication Subnet Groups
    body:
      application/json: DescribeReplicationSubnetGroupsMessage
    responses:
      200:
        body:
          application/json: DescribeReplicationSubnetGroupsResponse
      400:
        description: ResourceNotFoundFault
/{DescribeReplicationTasks}:
  uriParameters:
    DescribeReplicationTasks?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about replication tasks for your account in the current region.
    displayName: Describe Replication Tasks
    body:
      application/json: DescribeReplicationTasksMessage
    responses:
      200:
        body:
          application/json: DescribeReplicationTasksResponse
      400:
        description: ResourceNotFoundFault
/{DescribeSchemas}:
  uriParameters:
    DescribeSchemas?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns information about the schema for the specified endpoint. <p/>
    displayName: Describe Schemas
    body:
      application/json: DescribeSchemasMessage
    responses:
      200:
        body:
          application/json: DescribeSchemasResponse
      400:
        description: InvalidResourceStateFault
/{DescribeTableStatistics}:
  uriParameters:
    DescribeTableStatistics?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted.
    displayName: Describe Table Statistics
    body:
      application/json: DescribeTableStatisticsMessage
    responses:
      200:
        body:
          application/json: DescribeTableStatisticsResponse
      400:
        description: ResourceNotFoundFault
/{ImportCertificate}:
  uriParameters:
    ImportCertificate?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Uploads the specified certificate.
    displayName: Import Certificate
    body:
      application/json: ImportCertificateMessage
    responses:
      200:
        body:
          application/json: ImportCertificateResponse
      400:
        description: ResourceAlreadyExistsFault
/{ListTagsForResource}:
  uriParameters:
    ListTagsForResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Lists all tags for an AWS DMS resource.
    displayName: List Tags For Resource
    body:
      application/json: ListTagsForResourceMessage
    responses:
      200:
        body:
          application/json: ListTagsForResourceResponse
      400:
        description: ResourceNotFoundFault
/{ModifyEndpoint}:
  uriParameters:
    ModifyEndpoint?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the specified endpoint.
    displayName: Modify Endpoint
    body:
      application/json: ModifyEndpointMessage
    responses:
      200:
        body:
          application/json: ModifyEndpointResponse
      400:
        description: InvalidResourceStateFault
/{ModifyReplicationInstance}:
  uriParameters:
    ModifyReplicationInstance?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the replication instance to apply new settings. You can change one or more parameters by specifying these parameters and the new values in the request. Some settings are applied during the maintenance window. <p/>
    displayName: Modify Replication Instance
    body:
      application/json: ModifyReplicationInstanceMessage
    responses:
      200:
        body:
          application/json: ModifyReplicationInstanceResponse
      400:
        description: InvalidResourceStateFault
/{ModifyReplicationSubnetGroup}:
  uriParameters:
    ModifyReplicationSubnetGroup?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Modifies the settings for the specified replication subnet group.
    displayName: Modify Replication Subnet Group
    body:
      application/json: ModifyReplicationSubnetGroupMessage
    responses:
      200:
        body:
          application/json: ModifyReplicationSubnetGroupResponse
      400:
        description: AccessDeniedFault
/{RefreshSchemas}:
  uriParameters:
    RefreshSchemas?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Populates the schema for the specified endpoint. This is an asynchronous operation and can take several minutes. You can check the status of this operation by calling the DescribeRefreshSchemasStatus operation.
    displayName: Refresh Schemas
    body:
      application/json: RefreshSchemasMessage
    responses:
      200:
        body:
          application/json: RefreshSchemasResponse
      400:
        description: InvalidResourceStateFault
/{RemoveTagsFromResource}:
  uriParameters:
    RemoveTagsFromResource?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Removes metadata tags from a DMS resource.
    displayName: Remove Tags From Resource
    body:
      application/json: RemoveTagsFromResourceMessage
    responses:
      200:
        body:
          application/json: RemoveTagsFromResourceResponse
      400:
        description: ResourceNotFoundFault
/{StartReplicationTask}:
  uriParameters:
    StartReplicationTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Starts the replication task.
    displayName: Start Replication Task
    body:
      application/json: StartReplicationTaskMessage
    responses:
      200:
        body:
          application/json: StartReplicationTaskResponse
      400:
        description: ResourceNotFoundFault
/{StopReplicationTask}:
  uriParameters:
    StopReplicationTask?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Stops the replication task. <p/>
    displayName: Stop Replication Task
    body:
      application/json: StopReplicationTaskMessage
    responses:
      200:
        body:
          application/json: StopReplicationTaskResponse
      400:
        description: ResourceNotFoundFault
/{TestConnection}:
  uriParameters:
    TestConnection?:
      type: string
      enum:
      - ''
      (extras.syntetic): true
      description: This url parameter exists only to differentiate different operations on the same url
  post:
    description: Tests the connection between the replication instance and the endpoint.
    displayName: Test Connection
    body:
      application/json: TestConnectionMessage
    responses:
      200:
        body:
          application/json: TestConnectionResponse
      400:
        description: ResourceNotFoundFault
