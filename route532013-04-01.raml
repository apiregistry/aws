#%RAML 1.0
title: Amazon Route 53
version: '2013-04-01'
mediaType:
- application/xml
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AWSAccountID:
    type: string
  AlarmName:
    type: string
    minLength: 1
    maxLength: 256
  AliasHealthEnabled:
    type: boolean
  AssociateVPCComment:
    type: string
  ChangeAction:
    type: string
    enum:
    - CREATE
    - DELETE
    - UPSERT
  ChangeBatchRecords:
    type: array
    minItems: 1
    items:
      type: ChangeBatchRecord
    (commons.Depricated): null
  ChangeStatus:
    type: string
    enum:
    - PENDING
    - INSYNC
  Changes:
    type: array
    minItems: 1
    items:
      type: Change
  CheckerIpRanges:
    type: array
    items:
      type: IPAddressCidr
  ChildHealthCheckList:
    type: array
    maxItems: 256
    items:
      type: HealthCheckId
  CloudWatchRegion:
    type: string
    enum:
    - us-east-1
    - us-west-1
    - us-west-2
    - eu-central-1
    - eu-west-1
    - ap-south-1
    - ap-southeast-1
    - ap-southeast-2
    - ap-northeast-1
    - ap-northeast-2
    - sa-east-1
    minLength: 1
    maxLength: 64
  ComparisonOperator:
    type: string
    enum:
    - GreaterThanOrEqualToThreshold
    - GreaterThanThreshold
    - LessThanThreshold
    - LessThanOrEqualToThreshold
  DNSName:
    type: string
    maxLength: 1024
  DNSRCode:
    type: string
  Date:
    type: string
    maxLength: 256
    (commons.Depricated): null
  DelegationSetNameServers:
    type: array
    minItems: 1
    items:
      type: DNSName
  DelegationSets:
    type: array
    items:
      type: DelegationSet
  DimensionField:
    type: string
    minLength: 1
    maxLength: 255
  DimensionList:
    type: array
    maxItems: 10
    items:
      type: Dimension
  DisassociateVPCComment:
    type: string
  EnableSNI:
    type: boolean
  EvaluationPeriods:
    type: integer
    format: int
    minimum: 1
  FailureThreshold:
    type: integer
    format: int
    minimum: 1
    maximum: 10
  FullyQualifiedDomainName:
    type: string
    maxLength: 255
  GeoLocationContinentCode:
    type: string
    minLength: 2
    maxLength: 2
  GeoLocationContinentName:
    type: string
    minLength: 1
    maxLength: 32
  GeoLocationCountryCode:
    type: string
    minLength: 1
    maxLength: 2
  GeoLocationCountryName:
    type: string
    minLength: 1
    maxLength: 64
  GeoLocationDetailsList:
    type: array
    items:
      type: GeoLocationDetails
  GeoLocationSubdivisionCode:
    type: string
    minLength: 1
    maxLength: 3
  GeoLocationSubdivisionName:
    type: string
    minLength: 1
    maxLength: 64
  HealthCheckCount:
    type: integer
    format: long
  HealthCheckId:
    type: string
    maxLength: 64
  HealthCheckNonce:
    type: string
    minLength: 1
    maxLength: 64
  HealthCheckObservations:
    type: array
    items:
      type: HealthCheckObservation
  HealthCheckRegion:
    type: string
    enum:
    - us-east-1
    - us-west-1
    - us-west-2
    - eu-west-1
    - ap-southeast-1
    - ap-southeast-2
    - ap-northeast-1
    - sa-east-1
    minLength: 1
    maxLength: 64
    description: <p>An Amazon EC2 region that you want Amazon Route 53 to use to perform health checks.</p>
  HealthCheckRegionList:
    type: array
    minItems: 1
    maxItems: 64
    items:
      type: HealthCheckRegion
  HealthCheckType:
    type: string
    enum:
    - HTTP
    - HTTPS
    - HTTP_STR_MATCH
    - HTTPS_STR_MATCH
    - TCP
    - CALCULATED
    - CLOUDWATCH_METRIC
  HealthCheckVersion:
    type: integer
    format: long
    minimum: 1
  HealthChecks:
    type: array
    items:
      type: HealthCheck
  HealthThreshold:
    type: integer
    format: int
    minimum: 0
    maximum: 256
  HostedZoneCount:
    type: integer
    format: long
  HostedZoneRRSetCount:
    type: integer
    format: long
  HostedZones:
    type: array
    items:
      type: HostedZone
  IPAddress:
    type: string
    pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    maxLength: 15
  IPAddressCidr:
    type: string
  InsufficientDataHealthStatus:
    type: string
    enum:
    - Healthy
    - Unhealthy
    - LastKnownStatus
  Inverted:
    type: boolean
  IsPrivateZone:
    type: boolean
  MeasureLatency:
    type: boolean
  Message:
    type: string
    maxLength: 1024
  MetricName:
    type: string
    minLength: 1
    maxLength: 255
  Nameserver:
    type: string
    minLength: 0
    maxLength: 255
  Namespace:
    type: string
    minLength: 1
    maxLength: 255
  Nonce:
    type: string
    minLength: 1
    maxLength: 128
  PageMarker:
    type: string
    maxLength: 64
  PageMaxItems:
    type: string
  PageTruncated:
    type: boolean
  Period:
    type: integer
    format: int
    minimum: 60
  Port:
    type: integer
    format: int
    minimum: 1
    maximum: 65535
  RData:
    type: string
    maxLength: 4000
  RRType:
    type: string
    enum:
    - SOA
    - A
    - TXT
    - NS
    - CNAME
    - MX
    - NAPTR
    - PTR
    - SRV
    - SPF
    - AAAA
  RecordData:
    type: array
    items:
      type: RecordDataEntry
  RecordDataEntry:
    type: string
    minLength: 0
    maxLength: 512
    description: <p>A value that Amazon Route 53 returned for this resource record set. A RecordDataEntry element is one of the following:</p> <ul> <li> <p>For non-alias resource record sets, a <code>RecordDataEntry</code> element contains one value in the resource record set. If the resource record set contains multiple values, the response includes one <code>RecordDataEntry</code> element for each value.</p> </li> <li> <p>For multiple resource record sets that have the same name and type, which includes weighted, latency, geolocation, and failover, a <code>RecordDataEntry</code> element contains the value from the appropriate resource record set based on the request.</p> </li> <li> <p>For alias resource record sets that refer to AWS resources other than another resource record set, the <code>RecordDataEntry</code> element contains an IP address or a domain name for the AWS resource, depending on the type of resource.</p> </li> <li> <p>For alias resource record sets that refer to other resource record sets, a <code>RecordDataEntry</code> element contains one value from the referenced resource record set. If the referenced resource record set contains multiple values, the response includes one <code>RecordDataEntry</code> element for each value.</p> </li> </ul>
  RequestInterval:
    type: integer
    format: int
    minimum: 10
    maximum: 30
  ResourceDescription:
    type: string
    maxLength: 256
  ResourceId:
    type: string
    maxLength: 32
  ResourcePath:
    type: string
    maxLength: 255
  ResourceRecordSetFailover:
    type: string
    enum:
    - PRIMARY
    - SECONDARY
  ResourceRecordSetIdentifier:
    type: string
    minLength: 1
    maxLength: 128
  ResourceRecordSetRegion:
    type: string
    enum:
    - us-east-1
    - us-west-1
    - us-west-2
    - eu-west-1
    - eu-central-1
    - ap-southeast-1
    - ap-southeast-2
    - ap-northeast-1
    - ap-northeast-2
    - sa-east-1
    - cn-north-1
    - ap-south-1
    minLength: 1
    maxLength: 64
  ResourceRecordSetWeight:
    type: integer
    format: long
    minimum: 0
    maximum: 255
  ResourceRecordSets:
    type: array
    items:
      type: ResourceRecordSet
  ResourceRecords:
    type: array
    minItems: 1
    items:
      type: ResourceRecord
  ResourceTagSetList:
    type: array
    items:
      type: ResourceTagSet
  ResourceURI:
    type: string
    maxLength: 1024
  SearchString:
    type: string
    maxLength: 255
  Statistic:
    type: string
    enum:
    - Average
    - Sum
    - SampleCount
    - Maximum
    - Minimum
  Status:
    type: string
  SubnetMask:
    type: string
    minLength: 0
    maxLength: 2
  TTL:
    type: integer
    format: long
    minimum: 0
  TagKey:
    type: string
    maxLength: 128
  TagKeyList:
    type: array
    minItems: 1
    maxItems: 10
    items:
      type: TagKey
  TagList:
    type: array
    minItems: 1
    maxItems: 10
    items:
      type: Tag
  TagResourceId:
    type: string
    maxLength: 64
  TagResourceIdList:
    type: array
    minItems: 1
    maxItems: 10
    items:
      type: TagResourceId
  TagResourceType:
    type: string
    enum:
    - healthcheck
    - hostedzone
  TagValue:
    type: string
    maxLength: 256
  Threshold:
    type: number
    format: double
  TimeStamp:
    type: datetime
  TrafficPolicies:
    type: array
    items:
      type: TrafficPolicy
  TrafficPolicyComment:
    type: string
    maxLength: 1024
  TrafficPolicyDocument:
    type: string
    maxLength: 102400
  TrafficPolicyId:
    type: string
    maxLength: 36
  TrafficPolicyInstanceCount:
    type: integer
    format: int
  TrafficPolicyInstanceId:
    type: string
    maxLength: 36
  TrafficPolicyInstanceState:
    type: string
  TrafficPolicyInstances:
    type: array
    items:
      type: TrafficPolicyInstance
  TrafficPolicyName:
    type: string
    maxLength: 512
  TrafficPolicySummaries:
    type: array
    items:
      type: TrafficPolicySummary
  TrafficPolicyVersion:
    type: integer
    format: int
    minimum: 1
    maximum: 1000
  TrafficPolicyVersionMarker:
    type: string
    maxLength: 4
  TransportProtocol:
    type: string
  VPCId:
    type: string
    maxLength: 1024
    description: <p>A VPC ID</p>
  VPCRegion:
    type: string
    enum:
    - us-east-1
    - us-west-1
    - us-west-2
    - eu-west-1
    - eu-central-1
    - ap-southeast-1
    - ap-southeast-2
    - ap-south-1
    - ap-northeast-1
    - ap-northeast-2
    - sa-east-1
    - cn-north-1
    minLength: 1
    maxLength: 64
  VPCs:
    type: array
    minItems: 1
    items:
      type: VPC
    description: <p>A list of VPCs</p>
  AlarmIdentifier:
    type: object
    properties:
      Region:
        type: CloudWatchRegion
        description: <p>A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.</p> <p>For the current list of CloudWatch regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#cw_region">Amazon CloudWatch</a> in <i>AWS Regions and Endpoints</i> in the <i>Amazon Web Services General Reference</i>.</p>
      Name:
        type: AlarmName
        description: <p>The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.</p>
    description: <p>A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.</p>
  AliasTarget:
    type: object
    properties:
      HostedZoneId:
        type: ResourceId
        description: '<p> <i>Alias resource records sets only</i>: The value used
          depends on where the queries are routed:</p> <dl> <dt>A CloudFront distribution</dt>
          <dd> <p>Specify <code>Z2FDTNDATAQYW2</code>.</p> <note> <p>Alias resource
          record sets for CloudFront cannot be created in a private zone.</p> </note>
          </dd> <dt>Elastic Beanstalk environment</dt> <dd> <p>Specify the hosted
          zone ID for the region in which you created the environment. The environment
          must have a regionalized subdomain. For a list of regions and the corresponding
          hosted zone IDs, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region">
          AWS Elastic Beanstalk</a> in the <i>Regions and Endpoints</i> chapter of
          the AWSk General Reference.</p> </dd> <dt>ELB load balancer</dt> <dd> <p>Specify
          the value of the hosted zone ID for the load balancer. Use the following
          methods to get the hosted zone ID:</p> <ul> <li> <p>AWS Management Console:
          Go to the Amazon EC2; page, click Load Balancers in the navigation pane,
          select the load balancer, and get the value of the Hosted Zone ID field
          on the Description tab. Use the same process to get the DNS Name. See <a>HostedZone$Name</a>.</p>
          </li> <li> <p>Elastic Load Balancing API: Use <code>DescribeLoadBalancers</code>
          to get the value of <code>CanonicalHostedZoneNameID</code>. Use the same
          process to get the <code>CanonicalHostedZoneName</code>. See <a>HostedZone$Name</a>.</p>
          </li> <li> <p>AWS CLI: Use <code> <a href="http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html">describe-load-balancers</a>
          </code> to get the value of <code>CanonicalHostedZoneNameID</code>. Use
          the same process to get the <code>CanonicalHostedZoneName</code>. See <a>HostedZone$Name</a>.</p>
          </li> </ul> </dd> <dt>An Amazon S3 bucket configured as a static website</dt>
          <dd> <p>Specify the hosted zone ID for the Amazon S3 website endpoint in
          which you created the bucket. For more information about valid values, see
          the table <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">
          Amazon S3 (S3) Website Endpoints</a> in the <i>Amazon Web Services General
          Reference</i>.</p> </dd> <dt>Another Amazon Route 53 resource record set
          in your hosted zone</dt> <dd> <p>Specify the hosted zone ID of your hosted
          zone. (An alias resource record set cannot reference a resource record set
          in a different hosted zone.)</p> </dd> </dl>'
      DNSName:
        type: DNSName
        description: '<p> <i>Alias resource record sets only:</i> The value that you
          specify depends on where you want to route queries:</p> <ul> <li> <p> <b>A
          CloudFront distribution:</b> Specify the domain name that CloudFront assigned
          when you created your distribution.</p> <p>Your CloudFront distribution
          must include an alternate domain name that matches the name of the resource
          record set. For example, if the name of the resource record set is <i>acme.example.com</i>,
          your CloudFront distribution must include <i>acme.example.com</i> as one
          of the alternate domain names. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html">Using
          Alternate Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
          Guide</i>.</p> </li> <li> <p> <b>Elastic Beanstalk environment</b>: Specify
          the <code>CNAME</code> attribute for the environment. (The environment must
          have a regionalized domain name.) You can use the following methods to get
          the value of the CNAME attribute:</p> <ul> <li> <p> <i>AWS Managment Console</i>:
          For information about how to get the value by using the console, see <a
          href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html">Using
          Custom Domains with Elastic Beanstalk</a> in the <i>AWS Elastic Beanstalk
          Developer Guide</i>.</p> </li> <li> <p> <i>Elastic Load Balancing API</i>:
          Use the <code>DescribeEnvironments</code> action to get the value of the
          <code>CNAME</code> attribute. For more information, see <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/API_DescribeEnvironments.html">DescribeEnvironments</a>
          in the <i>AWS Elastic Beanstalk API Reference</i>.</p> </li> <li> <p> <i>AWS
          CLI</i>: Use the describe-environments command to get the value of the <code>CNAME</code>
          attribute. For more information, see <a href="http://docs.aws.amazon.com/cli/latest/reference/elasticbeanstalk/describe-environments.html">describe-environments</a>
          in the <i>AWS Command Line Interface Reference</i>.</p> </li> </ul> </li>
          <li> <p> <b>An ELB load balancer:</b> Specify the DNS name associated with
          the load balancer. Get the DNS name by using the AWS Management Console,
          the ELB API, or the AWS CLI. Use the same method to get values for <code>HostedZoneId</code>
          and <code>DNSName</code>. If you get one value from the console and the
          other value from the API or the CLI, creating the resource record set will
          fail.</p> <ul> <li> <p> <i>AWS Management Console</i>: Go to the Amazon
          EC2 page, click Load Balancers in the navigation pane, choose the load balancer,
          choose the Description tab, and get the value of the DNS Name field that
          begins with dualstack. Use the same process to get the Hosted Zone ID. See
          <a>HostedZone$Id</a>.</p> </li> <li> <p> <i>Elastic Load Balancing API</i>:
          Use <code> <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a>
          </code> to get the value of <code>CanonicalHostedZoneName</code>. Use the
          same process to get the <code>CanonicalHostedZoneNameId</code>. See <a>HostedZone$Id</a>.</p>
          </li> <li> <p> <i>AWS CLI</i>: Use <code> <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DescribeLoadBalancers.html">describe-load-balancers</a>
          </code> to get the value of <code>CanonicalHostedZoneName</code>. Use the
          same process to get the <code>CanonicalHostedZoneNameId</code>. See HostedZoneId.</p>
          </li> </ul> </li> <li> <p> <b>An Amazon S3 bucket that is configured as
          a static website:</b> Specify the domain name of the Amazon S3 website endpoint
          in which you created the bucket; for example, <code>s3-website-us-east-1.amazonaws.com</code>.
          For more information about valid values, see the table <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Amazon
          Simple Storage Service (S3) Website Endpoints</a> in the <i>Amazon Web Services
          General Reference</i>. For more information about using Amazon S3 buckets
          for websites, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting
          a Static Website on Amazon S3</a> in the <i>Amazon Simple Storage Service
          Developer Guide.</i> </p> </li> <li> <p> <b>Another Amazon Route 53 resource
          record set</b>: Specify the value of the <code>Name</code> element for a
          resource record set in the current hosted zone.</p> </li> </ul>'
      EvaluateTargetHealth:
        type: AliasHealthEnabled
        description: <p> <i>Applies only to alias, weighted alias, latency alias, and failover alias record sets:</i> If you set the value of <code>EvaluateTargetHealth</code> to <code>true</code> for the resource record set or sets in an alias, weighted alias, latency alias, or failover alias resource record set, and if you specify a value for <code> <a>HealthCheck$Id</a> </code> for every resource record set that is referenced by these alias resource record sets, the alias resource record sets inherit the health of the referenced resource record sets.</p> <p>In this configuration, when Amazon Route 53 receives a DNS query for an alias resource record set:</p> <ul> <li> <p>Amazon Route 53 looks at the resource record sets that are referenced by the alias resource record sets to determine which health checks they're using.</p> </li> <li> <p>Amazon Route 53 checks the current status of each health check. (Amazon Route 53 periodically checks the health of the endpoint that is specified in a health check; it doesn't perform the health check when the DNS query arrives.)</p> </li> <li> <p>Based on the status of the health checks, Amazon Route 53 determines which resource record sets are healthy. Unhealthy resource record sets are immediately removed from consideration. In addition, if all of the resource record sets that are referenced by an alias resource record set are unhealthy, that alias resource record set also is immediately removed from consideration.</p> </li> <li> <p>Based on the configuration of the alias resource record sets (weighted alias or latency alias, for example) and the configuration of the resource record sets that they reference, Amazon Route 53 chooses a resource record set from the healthy resource record sets, and responds to the query.</p> </li> </ul> <p>Note the following:</p> <ul> <li> <p>You cannot set <code>EvaluateTargetHealth</code> to <code>true</code> when the alias target is a CloudFront distribution.</p> </li> <li> <p>If the AWS resource that you specify in <code>AliasTarget</code> is a resource record set or a group of resource record sets (for example, a group of weighted resource record sets), but it is not another alias resource record set, we recommend that you associate a health check with all of the resource record sets in the alias target.For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-complex-configs.html#dns-failover-complex-configs-hc-omitting">What Happens When You Omit Health Checks?</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> <li> <p>If you specify an Elastic Beanstalk environment in <code>HostedZoneId</code> and <code>DNSName</code>, and if the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. (An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance.) If you set <code>EvaluateTargetHealth</code> to <code>true</code> and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Amazon Route 53 routes queries to other available resources that are healthy, if any.</p> <p>If the environment contains a single Amazon EC2 instance, there are no special requirements.</p> </li> <li> <p>If you specify an ELB load balancer in <code> <a>AliasTarget</a> </code>, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. If no Amazon EC2 instances are healthy or if the load balancer itself is unhealthy, and if <code>EvaluateTargetHealth</code> is true for the corresponding alias resource record set, Amazon Route 53 routes queries to other resources. When you create a load balancer, you configure settings for Elastic Load Balancing health checks; they're not Amazon Route 53 health checks, but they perform a similar function. Do not create Amazon Route 53 health checks for the Amazon EC2 instances that you register with an ELB load balancer.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-complex-configs.html">How Health Checks Work in More Complex Amazon Route 53 Configurations</a> in the <i>Amazon Route 53 Developers Guide</i>.</p> </li> <li> <p>We recommend that you set <code>EvaluateTargetHealth</code> to true only when you have enough idle capacity to handle the failure of one or more endpoints.</p> </li> </ul> <p>For more information and examples, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon Route 53 Health Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
    description: <p> <i>Alias resource record sets only:</i> Information about the CloudFront distribution, Elastic Beanstalk environment, ELB load balancer, Amazon S3 bucket, or Amazon Route 53 resource record set to which you are redirecting queries. The Elastic Beanstalk environment must have a regionalized subdomain.</p> <p>When creating resource record sets for a private hosted zone, note the following:</p> <ul> <li> <p>Resource record sets cannot be created for CloudFront distributions in a private hosted zone.</p> </li> <li> <p>Creating geolocation alias resource record sets or latency alias resource record sets in a private hosted zone is unsupported.</p> </li> <li> <p>For information about creating failover resource record sets in a private hosted zone, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a>.</p> </li> </ul>
  AssociateVPCWithHostedZoneResponse:
    type: object
    properties:
      ChangeInfo:
        type: ChangeInfo
        description: <p>A complex type that describes the changes made to your hosted zone.</p>
    description: <p>A complex type that contains the response information for the hosted zone.</p>
  Change:
    type: object
    properties:
      Action:
        type: ChangeAction
        description: '<p>The action to perform:</p> <ul> <li> <p> <code>CREATE</code>:
          Creates a resource record set that has the specified values.</p> </li> <li>
          <p> <code>DELETE</code>: Deletes a existing resource record set that has
          the specified values for <code>Name</code>, <code>Type</code>, <code>SetIdentifier</code>
          (for latency, weighted, geolocation, and failover resource record sets),
          and <code>TTL</code> (except alias resource record sets, for which the TTL
          is determined by the AWS resource that you''re routing DNS queries to).</p>
          <important> <p>To delete the resource record set that is associated with
          a traffic policy instance, use <code> <a>DeleteTrafficPolicyInstance</a>
          </code>. Amazon Route 53will delete the resource record set automatically.
          If you delete the resource record set by using <code>ChangeResourceRecordSets</code>,
          Amazon Route 53 doesn''t automatically delete the traffic policy instance,
          and you''ll continue to be charged for it even though it''s no longer in
          use. </p> </important> </li> <li> <p> <code>UPSERT</code>: If a resource
          record set does not already exist, Amazon Route 53 creates it. If a resource
          record set does exist, Amazon Route 53 updates it with the values in the
          request. Amazon Route 53 can update an existing resource record set only
          when all of the following values match: <code>Name</code>, <code>Type</code>,
          and <code>SetIdentifier</code> (for weighted, latency, geolocation, and
          failover resource record sets).</p> </li> </ul>'
      ResourceRecordSet:
        type: ResourceRecordSet
        description: <p>Information about the resource record set to create or delete.</p>
    description: <p>The information for each resource record set that you want to change.</p>
  ChangeBatch:
    type: object
    properties:
      Comment?:
        type: ResourceDescription
        description: <p> <i>Optional:</i> Any comments you want to include about a change batch request.</p>
      Changes:
        type: Changes
        description: <p>Information about the changes to make to the record sets.</p>
    description: <p>The information for a change request.</p>
  ChangeBatchRecord:
    type: object
    properties:
      Id:
        type: ResourceId
        description: <p>The ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.</p>
      SubmittedAt?:
        type: TimeStamp
        description: <p>The date and time the change was submitted, in the format <code>YYYY-MM-DDThh:mm:ssZ</code>, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The <code>Z</code> after the time indicates that the time is listed in Coordinated Universal Time (UTC).</p>
      Status:
        type: ChangeStatus
        description: '<p>The current state of the request. <code>PENDING</code> indicates
          that this request has not yet been applied to all Amazon Route 53 DNS servers.</p>
          <p>Valid Values: <code>PENDING</code> | <code>INSYNC</code> </p>'
      Comment?:
        type: ResourceDescription
        description: <p>A complex type that describes change information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>
      Submitter?:
        type: AWSAccountID
        description: <p>The AWS account ID attached to the changes. </p>
      Changes?:
        type: Changes
        description: <p>A list of changes made in the ChangeBatch.</p>
    (commons.Depricated): null
    description: <p>A complex type that lists the changes and information for a ChangeBatch.</p>
  ChangeInfo:
    type: object
    properties:
      Id:
        type: ResourceId
        description: <p>The ID of the request.</p>
      Status:
        type: ChangeStatus
        description: <p>The current state of the request. <code>PENDING</code> indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.</p>
      SubmittedAt:
        type: TimeStamp
        description: '<p>The date and time the change request was submitted, in Coordinated
          Universal Time (UTC) format: <code>YYYY-MM-DDThh:mm:ssZ</code>. For more
          information, see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO
          8601</a>.</p>'
      Comment?:
        type: ResourceDescription
        description: <p>A complex type that describes change information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>
    description: <p>A complex type that describes change information about changes made to your hosted zone.</p>
  ChangeResourceRecordSetsResponse:
    type: object
    properties:
      ChangeInfo:
        type: ChangeInfo
        description: <p>A complex type that contains information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>
    description: <p>A complex type containing the response for the request.</p>
  ChangeTagsForResourceResponse:
    type: object
    description: <p>Empty response for the request.</p>
  CloudWatchAlarmConfiguration:
    type: object
    properties:
      EvaluationPeriods:
        type: EvaluationPeriods
        description: <p>For the metric that the CloudWatch alarm is associated with, the number of periods that the metric is compared to the threshold.</p>
      Threshold:
        type: Threshold
        description: <p>For the metric that the CloudWatch alarm is associated with, the value the metric is compared with.</p>
      ComparisonOperator:
        type: ComparisonOperator
        description: <p>For the metric that the CloudWatch alarm is associated with, the arithmetic operation that is used for the comparison.</p>
      Period:
        type: Period
        description: <p>For the metric that the CloudWatch alarm is associated with, the duration of one evaluation period in seconds.</p>
      MetricName:
        type: MetricName
        description: <p>The name of the CloudWatch metric that the alarm is associated with.</p>
      Namespace:
        type: Namespace
        description: <p>The namespace of the metric that the alarm is associated with. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a> in the <i>Amazon CloudWatch Developer Guide</i>.</p>
      Statistic:
        type: Statistic
        description: <p>For the metric that the CloudWatch alarm is associated with, the statistic that is applied to the metric.</p>
      Dimensions?:
        type: DimensionList
        description: <p>For the metric that the CloudWatch alarm is associated with, a complex type that contains information about the dimensions for the metric.For information, see <a href=" http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a> in the <i>Amazon CloudWatch Developer Guide</i>.</p>
    description: <p>A complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.</p>
  CreateHealthCheckRequest:
    type: object
    properties:
      CallerReference:
        type: HealthCheckNonce
        description: <p>A unique string that identifies the request and that allows failed <code>CreateHealthCheck</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a health check.</p>
      HealthCheckConfig:
        type: HealthCheckConfig
        description: <p>A complex type that contains the response to a <code>CreateHealthCheck</code> request. </p>
    description: <p>A complex type that contains the health check request information.</p>
  CreateHostedZoneRequest:
    type: object
    properties:
      Name:
        type: DNSName
        description: <p>The name of the domain. For resource record types that include a domain name, specify a fully qualified domain name, for example, <i>www.example.com</i>. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Amazon Route 53 treats <i>www.example.com</i> (without a trailing dot) and <i>www.example.com.</i> (with a trailing dot) as identical.</p> <p>If you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Amazon Route 53, change the name servers for your domain to the set of <code>NameServers</code> that <code>CreateHostedZone</code> returns in the DelegationSet element.</p>
      VPC?:
        type: VPC
        description: <p>The VPC that you want your hosted zone to be associated with. By providing this parameter, your newly created hosted cannot be resolved anywhere other than the given VPC.</p>
      CallerReference:
        type: Nonce
        description: <p>A unique string that identifies the request and that allows failed <code>CreateHostedZone</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a hosted zone. <code>CallerReference</code> can be any unique string, for example, a date/time stamp.</p>
      HostedZoneConfig?:
        type: HostedZoneConfig
        description: <p> (Optional) A complex type that contains an optional comment about your hosted zone. If you don't want to specify a comment, omit both the <code>HostedZoneConfig</code> and <code>Comment</code> elements.</p>
      DelegationSetId?:
        type: ResourceId
        description: <p>If you want to associate a reusable delegation set with this hosted zone, the ID that Amazon Route 53 assigned to the reusable delegation set when you created it. For more information about reusable delegation sets, see <a>CreateReusableDelegationSet</a>.</p> <dl> <dt>Type</dt> <dd> <p>String</p> </dd> <dt>Default</dt> <dd> <p>None</p> </dd> <dt>Parent</dt> <dd> <p> <code>CreatedHostedZoneRequest</code> </p> </dd> </dl>
    description: <p>A complex type containing the hosted zone request information.</p>
  CreateReusableDelegationSetRequest:
    type: object
    properties:
      CallerReference:
        type: Nonce
        description: <p>A unique string that identifies the request, and that allows you to retry failed <code>CreateReusableDelegationSet</code> requests without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you submit a <code>CreateReusableDelegationSet</code> request. <code>CallerReference</code> can be any unique string, for example a date/time stamp.</p>
      HostedZoneId?:
        type: ResourceId
        description: <p>If you want to mark the delegation set for an existing hosted zone as reusable, the ID for that hosted zone.</p>
  CreateTrafficPolicyInstanceRequest:
    type: object
    properties:
      HostedZoneId:
        type: ResourceId
        description: <p>The ID of the hosted zone in which you want Amazon Route 53 to create resource record sets by using the configuration in a traffic policy.</p>
      Name:
        type: DNSName
        description: <p>The domain name (such as example.com) or subdomain name (such as www.example.com) for which Amazon Route 53 responds to DNS queries by using the resource record sets that Amazon Route 53 creates for this traffic policy instance.</p>
      TTL:
        type: TTL
        description: <p>(Optional) The TTL that you want Amazon Route 53 to assign to all of the resource record sets that it creates in the specified hosted zone.</p>
      TrafficPolicyId:
        type: TrafficPolicyId
        description: <p>The ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.</p>
      TrafficPolicyVersion:
        type: TrafficPolicyVersion
        description: <p>The version of the traffic policy that you want to use to create resource record sets in the specified hosted zone.</p>
    description: <p>A complex type that contains information about the resource record sets that you want to create based on a specified traffic policy.</p>
  CreateTrafficPolicyRequest:
    type: object
    properties:
      Name:
        type: TrafficPolicyName
        description: <p>The name of the traffic policy.</p>
      Document:
        type: TrafficPolicyDocument
        description: <p>The definition of this traffic policy in JSON format. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/api-policies-traffic-policy-document-format.html">Traffic Policy Document Format</a> in the <i>Amazon Route 53 API Reference</i>.</p>
      Comment?:
        type: TrafficPolicyComment
        description: <p>(Optional) Any comments that you want to include about the traffic policy.</p>
    description: <p>A complex type that contains information about the traffic policy that you want to create.</p>
  DelegationSet:
    type: object
    properties:
      Id?:
        type: ResourceId
      CallerReference?:
        type: Nonce
      NameServers:
        type: DelegationSetNameServers
        description: <p>A complex type that contains a list of the authoritative name servers for the hosted zone.</p>
    description: <p>A complex type that describes the name servers for this hosted zone.</p>
  DeleteHealthCheckResponse:
    type: object
    description: <p>An empty element.</p>
  DeleteHostedZoneResponse:
    type: object
    properties:
      ChangeInfo:
        type: ChangeInfo
        description: <p>A complex type that contains the ID, the status, and the date and time of your delete request.</p>
    description: <p>A complex type containing the response information for the request.</p>
  DeleteReusableDelegationSetResponse:
    type: object
    description: <p>An empty element.</p>
  DeleteTrafficPolicyInstanceResponse:
    type: object
    description: <p>An empty element.</p>
  DeleteTrafficPolicyResponse:
    type: object
    description: <p>An empty element.</p>
  Dimension:
    type: object
    properties:
      Name:
        type: DimensionField
        description: <p>For the metric that the CloudWatch alarm is associated with, the name of one dimension.</p>
      Value:
        type: DimensionField
        description: <p>For the metric that the CloudWatch alarm is associated with, the value of one dimension.</p>
    description: <p>For the metric that the CloudWatch alarm is associated with, a complex type that contains information about one dimension.</p>
  DisassociateVPCFromHostedZoneResponse:
    type: object
    properties:
      ChangeInfo:
        type: ChangeInfo
        description: <p>A complex type that describes the changes made to your hosted zone.</p>
    description: <p>A complex type that contains the response information for the disassociate request.</p>
  GeoLocation:
    type: object
    properties:
      ContinentCode?:
        type: GeoLocationContinentCode
        description: '<p>The two-letter code for the continent.</p> <p>Valid values:
          <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> |
          <code>OC</code> | <code>NA</code> | <code>SA</code> </p> <p>Constraint:
          Specifying <code>ContinentCode</code> with either <code>CountryCode</code>
          or <code>SubdivisionCode</code> returns an <code>InvalidInput</code> error.</p>'
      CountryCode?:
        type: GeoLocationCountryCode
        description: <p>The two-letter code for the country.</p>
      SubdivisionCode?:
        type: GeoLocationSubdivisionCode
        description: <p>The code for the subdivision, for example, a state in the United States or a province in Canada.</p>
    description: <p>A complex type that contains information about a geo location.</p>
  GeoLocationDetails:
    type: object
    properties:
      ContinentCode?:
        type: GeoLocationContinentCode
        description: <p>The two-letter code for the continent.</p>
      ContinentName?:
        type: GeoLocationContinentName
        description: <p>The full name of the continent.</p>
      CountryCode?:
        type: GeoLocationCountryCode
        description: <p>The two-letter code for the country.</p>
      CountryName?:
        type: GeoLocationCountryName
        description: <p>The name of the country.</p>
      SubdivisionCode?:
        type: GeoLocationSubdivisionCode
        description: <p>The code for the subdivision, for example, a state in the United States or a province in Canada.</p>
      SubdivisionName?:
        type: GeoLocationSubdivisionName
        description: <p>The full name of the subdivision, for example, a state in the United States or a province in Canada.</p>
    description: <p>A complex type that contains the codes and full continent, country, and subdivision names for the specified <code>geolocation</code> code.</p>
  GetChangeDetailsResponse:
    type: object
    properties:
      ChangeBatchRecord:
        type: ChangeBatchRecord
        description: <p>A complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the contained changes.</p>
    (commons.Depricated): null
    description: <p>A complex type that contains the <code>ChangeBatchRecord</code> element.</p>
  GetChangeResponse:
    type: object
    properties:
      ChangeInfo:
        type: ChangeInfo
        description: <p>A complex type that contains information about the specified change batch.</p>
    description: <p>A complex type that contains the <code>ChangeInfo</code> element.</p>
  GetCheckerIpRangesRequest:
    type: object
    description: <p>Empty request.</p>
  GetCheckerIpRangesResponse:
    type: object
    properties:
      CheckerIpRanges:
        type: CheckerIpRanges
        description: <p>A complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.</p>
    description: <p>A complex type that contains the <code>CheckerIpRanges</code> element.</p>
  GetGeoLocationResponse:
    type: object
    properties:
      GeoLocationDetails:
        type: GeoLocationDetails
        description: <p>A complex type that contains the codes and full continent, country, and subdivision names for the specified geolocation code.</p>
    description: <p>A complex type that contains the response information for the specified geolocation code.</p>
  GetHealthCheckCountRequest:
    type: object
    description: <p>To retrieve a count of all your health checks, send a <code>GET</code> request to the <code>/2013-04-01/healthcheckcount</code> resource.</p>
  GetHealthCheckCountResponse:
    type: object
    properties:
      HealthCheckCount:
        type: HealthCheckCount
        description: <p>The number of health checks associated with the current AWS account.</p>
    description: <p>A complex type that contains the response to a <code>healthcheckcount</code> request.</p>
  GetHealthCheckLastFailureReasonResponse:
    type: object
    properties:
      HealthCheckObservations:
        type: HealthCheckObservations
        description: <p>A list that contains one <code>Observation</code> element for each Amazon Route 53 health checker that is reporting a last failure reason. </p>
    description: <p>A complex type that contains the response to a <code>GetHealthCheckLastFailureReason</code> request.</p>
  GetHealthCheckResponse:
    type: object
    properties:
      HealthCheck:
        type: HealthCheck
        description: <p>A complex type that contains information about one health check that is associated with the current AWS account.</p>
    description: <p>A complex type that contains the response to a <code>GetHealthCheck</code> request.</p>
  GetHealthCheckStatusResponse:
    type: object
    properties:
      HealthCheckObservations:
        type: HealthCheckObservations
        description: <p>A list that contains one <code>HealthCheckObservation</code> element for each Amazon Route 53 health checker that is reporting a status about the health check endpoint.</p>
    description: <p>A complex type that contains the response to a <code>GetHealthCheck</code> request.</p>
  GetHostedZoneCountRequest:
    type: object
    description: <p>To retrieve a count of all your hosted zones, send a <code>GET</code> request to the <code>/2013-04-01/hostedzonecount</code> resource.</p>
  GetHostedZoneCountResponse:
    type: object
    properties:
      HostedZoneCount:
        type: HostedZoneCount
        description: <p>The total number of public and private hosted zones associated with the current AWS account.</p>
    description: <p>A complex type that contains the response to a <code>hostedzonecount</code> request.</p>
  GetHostedZoneResponse:
    type: object
    properties:
      HostedZone:
        type: HostedZone
        description: <p>A complex type that contains general information about the hosted zone.</p>
      DelegationSet?:
        type: DelegationSet
        description: <p>A complex type that describes the name servers for this hosted zone.</p>
      VPCs?:
        type: VPCs
        description: <p>A complex type that contains information about VPCs associated with the specified hosted zone.</p>
    description: <p>A complex type containing the response information for the hosted zone.</p>
  GetReusableDelegationSetResponse:
    type: object
    properties:
      DelegationSet:
        type: DelegationSet
        description: <p>A complex type that contains information about the reusable delegation set.</p>
    description: <p>A complex type that contains the response to the <code>GetReusableDelegationSet</code> request.</p>
  GetTrafficPolicyInstanceCountRequest:
    type: object
    description: <p>To retrieve a count of all your traffic policy instances, send a <code>GET</code> request to the <code>/2013-04-01/trafficpolicyinstancecount</code> resource.</p>
  GetTrafficPolicyInstanceCountResponse:
    type: object
    properties:
      TrafficPolicyInstanceCount:
        type: TrafficPolicyInstanceCount
        description: <p>The number of traffic policy instances that are associated with the current AWS account.</p>
    description: <p>A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.</p>
  GetTrafficPolicyInstanceResponse:
    type: object
    properties:
      TrafficPolicyInstance:
        type: TrafficPolicyInstance
        description: <p>A complex type that contains settings for the traffic policy instance.</p>
    description: <p>A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.</p>
  GetTrafficPolicyResponse:
    type: object
    properties:
      TrafficPolicy:
        type: TrafficPolicy
        description: <p>A complex type that contains settings for the specified traffic policy.</p>
    description: <p>A complex type that contains the response information for the request.</p>
  HealthCheck:
    type: object
    properties:
      Id:
        type: HealthCheckId
        description: <p>The identifier that Amazon Route 53assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long. </p>
      CallerReference:
        type: HealthCheckNonce
        description: <p>A unique string that you specified when you created the health check.</p>
      HealthCheckConfig:
        type: HealthCheckConfig
        description: <p>A complex type that contains detailed information about one health check.</p>
      HealthCheckVersion:
        type: HealthCheckVersion
        description: <p>The version of the health check. You can optionally pass this value in a call to <code>UpdateHealthCheck</code> to prevent overwriting another change to the health check.</p>
      CloudWatchAlarmConfiguration?:
        type: CloudWatchAlarmConfiguration
        description: <p>A complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.</p>
    description: <p>A complex type that contains information about one health check that is associated with the current AWS account.</p>
  HealthCheckConfig:
    type: object
    properties:
      IPAddress?:
        type: IPAddress
        description: '<p>The IPv4 IP address of the endpoint on which you want Amazon
          Route 53 to perform health checks. If you don''t specify a value for <code>IPAddress</code>,
          Amazon Route 53 sends a DNS request to resolve the domain name that you
          specify in <code>FullyQualifiedDomainName</code> at the interval that you
          specify in RequestInterval. Using an IP address that DNS returns, Amazon
          Route 53 then checks the health of the endpoint.</p> <p>If the endpoint
          is an Amazon EC2 instance, we recommend that you create an Elastic IP address,
          associate it with your Amazon EC2 instance, and specify the Elastic IP address
          for <code>IPAddress</code>. This ensures that the IP address of your instance
          will never change.</p> <p>For more information, see <a>HealthCheckConfig$FullyQualifiedDomainName</a>.</p>
          <p>Contraints: Amazon Route 53 cannot check the health of endpoints for
          which the IP address is in local, private, non-routable, or multicast ranges.
          For more information about IP addresses for which you cannot create health
          checks, see <a href="https://tools.ietf.org/html/rfc5735">RFC 5735, Special
          Use IPv4 Addresses</a> and <a href="https://tools.ietf.org/html/rfc6598">RFC
          6598, IANA-Reserved IPv4 Prefix for Shared Address Space</a>.</p> <p>When
          the value of Type is <code>CALCULATED</code> or <code>CLOUDWATCH_METRIC</code>,
          omit IPAddress.</p>'
      Port?:
        type: Port
        description: <p>The port on the endpoint on which you want Amazon Route 53 to perform health checks. Specify a value for Port only when you specify a value for <code>IPAddress</code>.</p>
      Type:
        type: HealthCheckType
        description: '<p>The type of health check that you want to create, which indicates
          how Amazon Route 53 determines whether an endpoint is healthy.</p> <important>
          <p>You can''t change the value of <code>Type</code> after you create a health
          check.</p> </important> <p>You can create the following types of health
          checks:</p> <ul> <li> <p> <b>HTTP</b>: Amazon Route 53 tries to establish
          a TCP connection. If successful, Amazon Route 53 submits an HTTP request
          and waits for an HTTP status code of 200 or greater and less than 400.</p>
          </li> <li> <p> <b>HTTPS</b>: Amazon Route 53 tries to establish a TCP connection.
          If successful, Amazon Route 53 submits an HTTPS request and waits for an
          HTTP status code of 200 or greater and less than 400.</p> <important> <p>If
          you specify <code>HTTPS</code> for the value of <code>Type</code>, the endpoint
          must support TLS v1.0 or later.</p> </important> </li> <li> <p> <b>HTTP_STR_MATCH</b>:
          Amazon Route 53 tries to establish a TCP connection. If successful, Amazon
          Route 53 submits an HTTP request and searches the first 5,120 bytes of the
          response body for the string that you specify in <code>SearchString</code>.</p>
          </li> <li> <p> <b>HTTPS_STR_MATCH</b>: Amazon Route 53 tries to establish
          a TCP connection. If successful, Amazon Route 53 submits an <code>HTTPS</code>
          request and searches the first 5,120 bytes of the response body for the
          string that you specify in <code>SearchString</code>.</p> </li> <li> <p>
          <b>TCP</b>: Amazon Route 53 tries to establish a TCP connection.</p> </li>
          <li> <p> <b>CLOUDWATCH_METRIC</b>: The health check is associated with a
          CloudWatch alarm. If the state of the alarm is <code>OK</code>, the health
          check is considered healthy. If the state is <code>ALARM</code>, the health
          check is considered unhealthy. If CloudWatch doesn''t have sufficient data
          to determine whether the state is <code>OK</code> or <code>ALARM</code>,
          the health check status depends on the setting for <code>InsufficientDataHealthStatus</code>:
          <code>Healthy</code>, <code>Unhealthy</code>, or <code>LastKnownStatus</code>.
          </p> </li> <li> <p> <b>CALCULATED</b>: For health checks that monitor the
          status of other health checks, Amazon Route 53 adds up the number of health
          checks that Amazon Route 53 health checkers consider to be healthy and compares
          that number with the value of <code>HealthThreshold</code>. </p> </li> </ul>
          <p>For more information about how Amazon Route 53 determines whether an
          endpoint is healthy, see the introduction to this topic.</p>'
      ResourcePath?:
        type: ResourcePath
        description: <p>The path, if any, that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html. </p>
      FullyQualifiedDomainName?:
        type: FullyQualifiedDomainName
        description: <p>Amazon Route 53 behavior depends on whether you specify a value for <code>IPAddress</code>.</p> <p> <b>If you specify</b> <code>IPAddress</code>:</p> <p>The value that you want Amazon Route 53 to pass in the <code>Host</code> header in all health checks except TCP health checks. This is typically the fully qualified DNS name of the website that you are attempting to health check. When Amazon Route 53 checks the health of an endpoint, here is how it constructs the <code>Host</code> header:</p> <ul> <li> <p>If you specify a value of <code>80</code> for <code>Port</code> and <code>HTTP</code> or <code>HTTP_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the Host header. </p> </li> <li> <p>If you specify a value of <code>443</code> for <code>Port</code> and <code>HTTPS</code> or <code>HTTPS_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</p> </li> <li> <p>If you specify another value for <code>Port</code> and any value except <code>TCP</code> for <code>Type</code>, Amazon Route 53 passes <code>FullyQualifiedDomainName:Port</code> to the endpoint in the <code>Host</code> header.</p> </li> </ul> <p>If you don't specify a value for <code>FullyQualifiedDomainName</code>, Amazon Route 53 substitutes the value of <code>IPAddress</code> in the <code>Host</code> header in each of the preceding cases.</p> <p> <b>If you don't specify</b> <code>IPAddress</code>:</p> <p>If you don't specify a value for <code>IPAddress</code>, Amazon Route 53 sends a DNS request to the domain that you specify in <code>FullyQualifiedDomainName</code> at the interval you specify in <code>RequestInterval</code>. Using an IP address that DNS returns, Amazon Route 53 then checks the health of the endpoint.</p> <p>If you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by <code>FullyQualifiedDomainName</code>, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as us-east-1-www.example.com), not the name of the resource record sets (www.example.com).</p> <important> <p>In this configuration, if you create a health check for which the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.</p> </important> <p>In addition, if the value that you specify for <code>Type</code> is <code>HTTP</code>, <code>HTTPS</code>, <code>HTTP_STR_MATCH</code>, or <code>HTTPS_STR_MATCH</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header, as it does when you specify a value for <code>IPAddress</code>. If the value of <code>Type</code> is <code>TCP</code>, Amazon Route 53 doesn't pass a <code>Host</code> header.</p>
      SearchString?:
        type: SearchString
        description: <p>If the value of Type is <code>HTTP_STR_MATCH</code> or <code>HTTP_STR_MATCH</code>, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Amazon Route 53 considers the resource healthy.</p> <p>Amazon Route 53 considers case when searching for <code>SearchString</code> in the response body. </p>
      RequestInterval?:
        type: RequestInterval
        description: <p>The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request. Each Amazon Route 53 health checker makes requests at this interval.</p> <important> <p>You can't change the value of <code>RequestInterval</code> after you create a health check.</p> </important>
      FailureThreshold?:
        type: FailureThreshold
        description: <p>The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
      MeasureLatency?:
        type: MeasureLatency
        description: <p>Specify whether you want Amazon Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint, and to display CloudWatch latency graphs on the <b>Health Checks</b> page in the Amazon Route 53 console.</p> <important> <p>You can't change the value of <code>MeasureLatency</code> after you create a health check.</p> </important>
      Inverted?:
        type: Inverted
        description: <p>Specify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.</p>
      HealthThreshold?:
        type: HealthThreshold
        description: <p>The number of child health checks that are associated with a <code>CALCULATED</code> health that Amazon Route 53 must consider healthy for the <code>CALCULATED</code> health check to be considered healthy. To specify the child health checks that you want to associate with a <code>CALCULATED</code> health check, use the <a>HealthCheckConfig$ChildHealthChecks</a> and <a>HealthCheckConfig$ChildHealthChecks</a> elements.</p> <p>Note the following:</p> <ul> <li> <p>If you specify a number greater than the number of child health checks, Amazon Route 53 always considers this health check to be unhealthy.</p> </li> <li> <p>If you specify <code>0</code>, Amazon Route 53 always considers this health check to be healthy.</p> </li> </ul>
      ChildHealthChecks?:
        type: ChildHealthCheckList
        description: <p>(CALCULATED Health Checks Only) A complex type that contains one <code>ChildHealthCheck</code> element for each health check that you want to associate with a <code>CALCULATED</code> health check.</p>
      EnableSNI?:
        type: EnableSNI
        description: <p>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>client_hello</code> message during TLS negotiation. This allows the endpoint to respond to <code>HTTPS</code> health check requests with the applicable SSL/TLS certificate.</p> <p>Some endpoints require that <code>HTTPS</code> requests include the host name in the <code>client_hello</code> message. If you don't enable SNI, the status of the health check will be <code>SSL alert handshake_failure</code>. A health check can also have that status for other reasons. If SNI is enabled and you're still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.</p> <p>The SSL/TLS certificate on your endpoint includes a domain name in the <code>Common Name</code> field and possibly several more in the <code>Subject Alternative Names</code> field. One of the domain names in the certificate should match the value that you specify for <code>FullyQualifiedDomainName</code>. If the endpoint responds to the <code>client_hello</code> message with a certificate that does not include the domain name that you specified in <code>FullyQualifiedDomainName</code>, a health checker will retry the handshake. In the second attempt, the health checker will omit <code>FullyQualifiedDomainName</code> from the <code>client_hello</code> message.</p>
      Regions?:
        type: HealthCheckRegionList
        description: <p>A complex type that contains one Region element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.</p>
      AlarmIdentifier?:
        type: AlarmIdentifier
        description: <p>A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.</p>
      InsufficientDataHealthStatus?:
        type: InsufficientDataHealthStatus
        description: '<p>When CloudWatch has insufficient data about the metric to
          determine the alarm state, the status that you want Amazon Route 53 to assign
          to the health check:</p> <ul> <li> <p> <code>Healthy</code>: Amazon Route
          53 considers the health check to be healthy.</p> </li> <li> <p> <code>Unhealthy</code>:
          Amazon Route 53 considers the health check to be unhealthy.</p> </li> <li>
          <p> <code>LastKnownStatus</code>: Amazon Route 53uses the status of the
          health check from the last time CloudWatch had sufficient data to determine
          the alarm state. For new health checks that have no last known status, the
          default status for the health check is healthy.</p> </li> </ul>'
    description: <p>A complex type that contains information about the health check.</p>
  HealthCheckObservation:
    type: object
    properties:
      Region?:
        type: HealthCheckRegion
        description: <p>The region of the Amazon Route 53 health checker that provided the status in StatusReport.</p>
      IPAddress?:
        type: IPAddress
        description: <p>The IP address of the Amazon Route 53 health checker that provided the failure reason in <code>StatusReport</code>.</p>
      StatusReport?:
        type: StatusReport
        description: <p>A complex type that contains the last failure reason as reported by one Amazon Route 53 health checker and the time of the failed health check.</p>
    description: <p>A complex type that contains the last failure reason as reported by one Amazon Route 53 health checker.</p>
  HostedZone:
    type: object
    properties:
      Id:
        type: ResourceId
        description: <p>The ID that Amazon Route 53 assigned to the hosted zone when you created it.</p>
      Name:
        type: DNSName
        description: <p>The name of the domain. For public hosted zones, this is the name that you have registered with your DNS registrar.</p> <p>For information about how to specify characters other than <code>a-z</code>, <code>0-9</code>, and <code>-</code> (hyphen) and how to specify internationalized domain names, see <a>CreateHostedZone</a>.</p>
      CallerReference:
        type: Nonce
        description: <p>The value that you specified for <code>CallerReference</code> when you created the hosted zone.</p>
      Config?:
        type: HostedZoneConfig
        description: <p>A complex type that includes the <code>Comment</code> and <code>PrivateZone</code> elements. If you omitted the <code>HostedZoneConfig</code> and <code>Comment</code> elements from the request, the <code>Config</code> and <code>Comment</code> elements don't appear in the response.</p>
      ResourceRecordSetCount?:
        type: HostedZoneRRSetCount
        description: <p>The number of resource record sets in the hosted zone.</p>
    description: <p>A complex type that contains general information about the hosted zone.</p>
  HostedZoneConfig:
    type: object
    properties:
      Comment?:
        type: ResourceDescription
        description: <p>Any comments that you want to include about the hosted zone.</p>
      PrivateZone?:
        type: IsPrivateZone
        description: <p>A value that indicates whether this is a private hosted zone.</p>
    description: <p>A complex type that contains an optional comment about your hosted zone. If you don't want to specify a comment, omit both the <code>HostedZoneConfig</code> and <code>Comment</code> elements.</p>
  ListChangeBatchesByHostedZoneResponse:
    type: object
    properties:
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHostedZones</code> that produced the current response. </p>
      Marker:
        type: PageMarker
        description: <p>For the second and subsequent calls to ListHostedZones, Marker is the value that you specified for the marker parameter in the request that produced the current response. </p>
      IsTruncated?:
        type: PageTruncated
        description: <p>A flag that indicates if there are more change batches to list.</p>
      ChangeBatchRecords:
        type: ChangeBatchRecords
        description: <p>The change batches within the given hosted zone and time period. </p>
      NextMarker?:
        type: PageMarker
        description: <p>The next page marker.</p>
    (commons.Depricated): null
    description: <p>A complex type containing the response information for the request.</p>
  ListChangeBatchesByRRSetResponse:
    type: object
    properties:
      MaxItems:
        type: PageMaxItems
        description: <p>The maximum number of items on a page.</p>
      Marker:
        type: PageMarker
        description: <p>The page marker.</p>
      IsTruncated?:
        type: PageTruncated
        description: <p>A flag that indicates if there are more change batches to list.</p>
      ChangeBatchRecords:
        type: ChangeBatchRecords
        description: <p>The change batches within the given hosted zone and time period. </p>
      NextMarker?:
        type: PageMarker
        description: <p>The next page marker.</p>
    (commons.Depricated): null
    description: <p>The input for a ListChangeBatchesByRRSet request.</p>
  ListGeoLocationsResponse:
    type: object
    properties:
      GeoLocationDetailsList:
        type: GeoLocationDetailsList
        description: <p>A complex type that contains one <code>GeoLocationDetails</code> element for each location that Amazon Route 53 supports for geolocation.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A value that indicates whether more locations remain to be listed after the last location in this response. If so, the value of <code>IsTruncated</code> is <code>true</code>. To get more values, submit another request and include the values of <code>NextContinentCode</code>, <code>NextCountryCode</code>, and <code>NextSubdivisionCode</code> in the <code>StartContinentCode</code>, <code>StartCountryCode</code>, and <code>StartSubdivisionCode</code>, as applicable.</p>
      NextContinentCode?:
        type: GeoLocationContinentCode
        description: <p>If <code>IsTruncated</code> is <code>true</code>, you can make a follow-up request to display more locations. Enter the value of <code>NextContinentCode</code> in the <code>StartContinentCode</code> parameter in another <code>GET</code> <code>ListGeoLocations</code> request.</p>
      NextCountryCode?:
        type: GeoLocationCountryCode
        description: <p>If <code>IsTruncated</code> is <code>true</code>, you can make a follow-up request to display more locations. Enter the value of <code>NextCountryCode</code> in the <code>StartCountryCode</code> parameter in another <code>GET</code> <code>ListGeoLocations</code> request.</p>
      NextSubdivisionCode?:
        type: GeoLocationSubdivisionCode
        description: <p>If <code>IsTruncated</code> is <code>true</code>, you can make a follow-up request to display more locations. Enter the value of <code>NextSubdivisionCode</code> in the <code>StartSubdivisionCode</code> parameter in another <code>GET</code> <code>ListGeoLocations</code> request.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for <code>MaxItems</code> in the request.</p>
    description: <p>A complex type containing the response information for the request.</p>
  ListHealthChecksResponse:
    type: object
    properties:
      HealthChecks:
        type: HealthChecks
        description: <p>A complex type that contains one <code>HealthCheck</code> element for each health check that is associated with the current AWS account.</p>
      Marker:
        type: PageMarker
        description: <p>For the second and subsequent calls to <code>ListHealthChecks</code>, <code>Marker</code> is the value that you specified for the marker parameter in the previous request.</p>
      IsTruncated:
        type: PageTruncated
        description: '<p>A flag that indicates whether there are more health checks
          to be listed. If the response was truncated, you can get the next group
          of <code>maxitems</code> health checks by calling <code>ListHealthChecks</code>
          again and specifying the value of the <code>NextMarker</code> element in
          the marker parameter.</p> <p>Valid Values: <code>true</code> | <code>false</code>
          </p>'
      NextMarker?:
        type: PageMarker
        description: <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the first health check in the next group of <code>maxitems</code> health checks. Call <code>ListHealthChecks</code> again and specify the value of <code>NextMarker</code> in the marker parameter.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHealthChecks</code> that produced the current response.</p>
    description: <p>A complex type that contains the response to a <code>ListHealthChecks</code> request.</p>
  ListHostedZonesByNameResponse:
    type: object
    properties:
      HostedZones:
        type: HostedZones
        description: <p>A complex type that contains general information about the hosted zone.</p>
      DNSName?:
        type: DNSName
        description: <p>For the second and subsequent calls to <code>ListHostedZonesByName</code>, <code>DNSName</code> is the value that you specified for the <code>dnsname</code> parameter in the request that produced the current response.</p>
      HostedZoneId?:
        type: ResourceId
        description: <p>The ID that Amazon Route 53 assigned to the hosted zone when you created it.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag that indicates whether there are more hosted zones to be listed. If the response was truncated, you can get the next group of <code>maxitems</code> hosted zones by calling <code>ListHostedZonesByName</code> again and specifying the values of <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements in the <code>dnsname</code> and <code>hostedzoneid</code> parameters.</p>
      NextDNSName?:
        type: DNSName
        description: <p>If <code>IsTruncated</code> is true, the value of <code>NextDNSName</code> is the name of the first hosted zone in the next group of <code>maxitems</code> hosted zones. Call <code>ListHostedZonesByName</code> again and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code> parameters, respectively.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>
      NextHostedZoneId?:
        type: ResourceId
        description: <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextHostedZoneId</code> identifies the first hosted zone in the next group of <code>maxitems</code> hosted zones. Call <code>ListHostedZonesByName</code> again and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code> parameters, respectively.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHostedZonesByName</code> that produced the current response.</p>
    description: <p>A complex type that contains the response information for the request.</p>
  ListHostedZonesResponse:
    type: object
    properties:
      HostedZones:
        type: HostedZones
        description: <p>A complex type that contains general information about the hosted zone.</p>
      Marker:
        type: PageMarker
        description: <p>For the second and subsequent calls to <code>ListHostedZones</code>, <code>Marker</code> is the value that you specified for the marker parameter in the request that produced the current response.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag indicating whether there are more hosted zones to be listed. If the response was truncated, you can get the next group of <code>maxitems</code> hosted zones by calling <code>ListHostedZones</code> again and specifying the value of the <code>NextMarker</code> element in the marker parameter.</p>
      NextMarker?:
        type: PageMarker
        description: <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the first hosted zone in the next group of <code>maxitems</code> hosted zones. Call <code>ListHostedZones</code> again and specify the value of <code>NextMarker</code> in the <code>marker</code> parameter.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHostedZones</code> that produced the current response.</p>
  ListResourceRecordSetsResponse:
    type: object
    properties:
      ResourceRecordSets:
        type: ResourceRecordSets
        description: <p>Information about multiple resource record sets.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag that indicates whether more resource record sets remain to be listed. If your results were truncated, you can make a follow-up pagination request by using the <code>NextRecordName</code> element.</p>
      NextRecordName?:
        type: DNSName
        description: <p>If the results were truncated, the name of the next record in the list.</p> <p>This element is present only if <code>IsTruncated</code> is true. </p>
      NextRecordType?:
        type: RRType
        description: <p>If the results were truncated, the type of the next record in the list.</p> <p>This element is present only if <code>IsTruncated</code> is true. </p>
      NextRecordIdentifier?:
        type: ResourceRecordSetIdentifier
        description: '<p> <i>Weighted, latency, geolocation, and failover resource
          record sets only</i>: If results were truncated for a given DNS name and
          type, the value of <code>SetIdentifier</code> for the next resource record
          set that has the current DNS name and type.</p>'
      MaxItems:
        type: PageMaxItems
        description: <p>The maximum number of records you requested.</p>
    description: <p>A complex type that contains list information for the resource record set.</p>
  ListReusableDelegationSetsResponse:
    type: object
    properties:
      DelegationSets:
        type: DelegationSets
        description: <p>A complex type that contains one <code>DelegationSet</code> element for each reusable delegation set that was created by the current AWS account.</p>
      Marker:
        type: PageMarker
        description: <p>For the second and subsequent calls to <code>ListReusableDelegationSets</code>, <code>Marker</code> is the value that you specified for the marker parameter in the request that produced the current response.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag that indicates whether there are more reusable delegation sets to be listed. If the response is truncated, you can get the next group of <code>maxitems</code> reusable delegation sets by calling <code>ListReusableDelegationSets</code> again and specifying the value of the <code>NextMarker</code> element in the <code>marker</code> parameter.</p>
      NextMarker?:
        type: PageMarker
        description: <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the first reusable delegation set in the next group of <code>maxitems</code> reusable delegation sets. Call <code>ListReusableDelegationSets</code> again and specify the value of <code>NextMarker</code> in the <code>marker</code> parameter.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListReusableDelegationSets</code> that produced the current response.</p>
    description: <p>A complex type that contains information about the reusable delegation sets that are associated with the current AWS account.</p>
  ListTagsForResourceResponse:
    type: object
    properties:
      ResourceTagSet:
        type: ResourceTagSet
        description: <p>A <code>ResourceTagSet</code> containing tags associated with the specified resource.</p>
    description: <p>A complex type that contains information about the health checks or hosted zones for which you want to list tags.</p>
  ListTagsForResourcesResponse:
    type: object
    properties:
      ResourceTagSets:
        type: ResourceTagSetList
        description: <p>A list of <code>ResourceTagSet</code>s containing tags associated with the specified resources.</p>
    description: <p>A complex type containing tags for the specified resources.</p>
  ListTrafficPoliciesResponse:
    type: object
    properties:
      TrafficPolicySummaries:
        type: TrafficPolicySummaries
        description: <p>A list that contains one <code>TrafficPolicySummary</code> element for each traffic policy that was created by the current AWS account.</p>
      IsTruncated:
        type: PageTruncated
        description: '<p>A flag that indicates whether there are more traffic policies
          to be listed. If the response was truncated, you can get the next group
          of <code>MaxItems</code> traffic policies by calling <code>ListTrafficPolicies</code>
          again and specifying the value of the <code>TrafficPolicyIdMarker</code>
          element in the <code>TrafficPolicyIdMarker</code> request parameter.</p>
          <p>Valid Values: <code>true</code> | <code>false</code> </p>'
      TrafficPolicyIdMarker:
        type: TrafficPolicyId
        description: <p>If the value of <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyIdMarker</code> is the ID of the first traffic policy in the next group of <code>MaxItems</code> traffic policies.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicies</code> that produced the current response.</p>
    description: <p>A complex type that contains the response information for the request.</p>
  ListTrafficPolicyInstancesByHostedZoneResponse:
    type: object
    properties:
      TrafficPolicyInstances:
        type: TrafficPolicyInstances
        description: <p>A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request. </p>
      TrafficPolicyInstanceNameMarker?:
        type: DNSName
        description: <p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      TrafficPolicyInstanceTypeMarker?:
        type: RRType
        description: <p>If <code>IsTruncated</code> is true, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of <code>MaxItems</code> traffic policy instances by calling <code>ListTrafficPolicyInstancesByHostedZone</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> elements in the corresponding request parameters.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstancesByHostedZone</code> that produced the current response. </p>
    description: <p>A complex type that contains the response information for the request.</p>
  ListTrafficPolicyInstancesByPolicyResponse:
    type: object
    properties:
      TrafficPolicyInstances:
        type: TrafficPolicyInstances
        description: <p>A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request.</p>
      HostedZoneIdMarker?:
        type: ResourceId
        description: <p>If <code>IsTruncated</code> is <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      TrafficPolicyInstanceNameMarker?:
        type: DNSName
        description: <p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      TrafficPolicyInstanceTypeMarker?:
        type: RRType
        description: <p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of <code>MaxItems</code> traffic policy instances by calling <code>ListTrafficPolicyInstancesByPolicy</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> elements in the corresponding request parameters.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstancesByPolicy</code> that produced the current response.</p>
    description: <p>A complex type that contains the response information for the request.</p>
  ListTrafficPolicyInstancesResponse:
    type: object
    properties:
      TrafficPolicyInstances:
        type: TrafficPolicyInstances
        description: <p>A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request.</p>
      HostedZoneIdMarker?:
        type: ResourceId
        description: <p>If <code>IsTruncated</code> is <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      TrafficPolicyInstanceNameMarker?:
        type: DNSName
        description: <p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      TrafficPolicyInstanceTypeMarker?:
        type: RRType
        description: <p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of <code>MaxItems</code> traffic policy instances by calling <code>ListTrafficPolicyInstances</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> elements in the corresponding request parameters.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstances</code> that produced the current response.</p>
    description: <p>A complex type that contains the response information for the request.</p>
  ListTrafficPolicyVersionsResponse:
    type: object
    properties:
      TrafficPolicies:
        type: TrafficPolicies
        description: <p>A list that contains one <code>TrafficPolicy</code> element for each traffic policy version that is associated with the specified traffic policy.</p>
      IsTruncated:
        type: PageTruncated
        description: <p>A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of <code>maxitems</code> traffic policies by calling <code>ListTrafficPolicyVersions</code> again and specifying the value of the <code>NextMarker</code> element in the <code>marker</code> parameter.</p>
      TrafficPolicyVersionMarker:
        type: TrafficPolicyVersionMarker
        description: <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>TrafficPolicyVersionMarker</code> identifies the first traffic policy in the next group of <code>MaxItems</code> traffic policies. Call <code>ListTrafficPolicyVersions</code> again and specify the value of <code>TrafficPolicyVersionMarker</code> in the <code>TrafficPolicyVersionMarker</code> request parameter.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>
      MaxItems:
        type: PageMaxItems
        description: <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListTrafficPolicyVersions</code> that produced the current response.</p>
    description: <p>A complex type that contains the response information for the request.</p>
  ResourceRecord:
    type: object
    properties:
      Value:
        type: RData
        description: <p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DeveloperGuide/ResourceRecordTypes.html">Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p> <note> <p>If you are creating an alias resource record set, omit <code>Value</code>.</p> </note>
    description: <p>Information specific to the resource record.</p> <note> <p>If you are creating an alias resource record set, omit <code>ResourceRecord</code>.</p> </note>
  ResourceRecordSet:
    type: object
    properties:
      Name:
        type: DNSName
        description: <p>The name of the domain you want to perform the action on.</p> <p>Enter a fully qualified domain name, for example, <code>www.example.com</code>. You can optionally include a trailing dot. If you omit the trailing dot, Amazon Route 53 still assumes that the domain name that you specify is fully qualified. This means that Amazon Route 53 treats <code>www.example.com</code> (without a trailing dot) and <code>www.example.com.</code> (with a trailing dot) as identical.</p> <p>For information about how to specify characters other than <code>a-z</code>, <code>0-9</code>, and <code>-</code> (hyphen) and how to specify internationalized domain names, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS Domain Name Format</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can use the asterisk (*) wildcard to replace the leftmost label in a domain name. For example, <code>*.example.com</code>. Note the following:</p> <ul> <li> <p>The * must replace the entire label. For example, you can't specify <code>*prod.example.com</code> or <code>prod*.example.com</code>.</p> </li> <li> <p>The * can't replace any of the middle labels, for example, marketing.*.example.com.</p> </li> <li> <p>If you include * in any position other than the leftmost label in a domain name, DNS treats it as an * character (ASCII 42), not as a wildcard.</p> <important> <p>You can't use the * wildcard for resource records sets that have a type of NS.</p> </important> </li> </ul> <p>You can use the * wildcard as the leftmost label in a domain name, for example, <code>*.example.com</code>. You cannot use an * for one of the middle labels, for example, <code>marketing.*.example.com</code>. In addition, the * must replace the entire label; for example, you can't specify <code>prod*.example.com</code>.</p>
      Type:
        type: RRType
        description: '<p>The DNS record type. For information about different record
          types and how data is encoded for them, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html">Supported
          DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
          <p>Valid values for basic resource record sets: <code>A</code> | <code>AAAA</code>
          | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> | <code>NS</code>
          | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code>
          | <code>TXT</code> </p> <p>Values for weighted, latency, geolocation, and
          failover resource record sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code>
          | <code>MX</code> | <code>NAPTR</code> | <code>PTR</code> | <code>SPF</code>
          | <code>SRV</code> | <code>TXT</code>. When creating a group of weighted,
          latency, geolocation, or failover resource record sets, specify the same
          value for all of the resource record sets in the group.</p> <note> <p>SPF
          records were formerly used to verify the identity of the sender of email
          messages. However, we no longer recommend that you create resource record
          sets for which the value of <code>Type</code> is <code>SPF</code>. RFC 7208,
          <i>Sender Policy Framework (SPF) for Authorizing Use of Domains in Email,
          Version 1</i>, has been updated to say, "...[I]ts existence and mechanism
          defined in [RFC4408] have led to some interoperability issues. Accordingly,
          its use is no longer appropriate for SPF version 1; implementations are
          not to use it." In RFC 7208, see section 14.1, <a href="http://tools.ietf.org/html/rfc7208#section-14.1">The
          SPF DNS Record Type</a>.</p> </note> <p>Values for alias resource record
          sets:</p> <ul> <li> <p> <b>CloudFront distributions:</b> <code>A</code>
          </p> </li> <li> <p> <b>Elastic Beanstalk environment that has a regionalized
          subdomain</b>: <code>A</code> </p> </li> <li> <p> <b>ELB load balancers:</b>
          <code>A</code> | <code>AAAA</code> </p> </li> <li> <p> <b>Amazon S3 buckets:</b>
          <code>A</code> </p> </li> <li> <p> <b>Another resource record set in this
          hosted zone:</b> Specify the type of the resource record set for which you''re
          creating the alias. Specify any value except <code>NS</code> or <code>SOA</code>.</p>
          </li> </ul>'
      SetIdentifier?:
        type: ResourceRecordSetIdentifier
        description: <p> <i>Weighted, Latency, Geo, and Failover resource record sets only:</i> An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type. The value of <code>SetIdentifier</code> must be unique for each resource record set that has the same combination of DNS name and type. Omit <code>SetIdentifier</code> for any other types of record sets.</p>
      Weight?:
        type: ResourceRecordSetWeight
        description: <p> <i>Weighted resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Amazon Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Amazon Route 53 then responds to queries based on the ratio of a resource's weight to the total. Note the following:</p> <ul> <li> <p>You must specify a value for the <code>Weight</code> element for every weighted resource record set.</p> </li> <li> <p>You can only specify one <code>ResourceRecord</code> per weighted resource record set.</p> </li> <li> <p>You cannot create latency, failover, or geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as weighted resource record sets.</p> </li> <li> <p>You can create a maximum of 100 weighted resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements.</p> </li> <li> <p>For weighted (but not weighted alias) resource record sets, if you set <code>Weight</code> to <code>0</code> for a resource record set, Amazon Route 53 never responds to queries with the applicable value for that resource record set. However, if you set <code>Weight</code> to <code>0</code> for all resource record sets that have the same combination of DNS name and type, traffic is routed to all resources with equal probability.</p> <p>The effect of setting <code>Weight</code> to <code>0</code> is different when you associate health checks with weighted resource record sets. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html">Options for Configuring Amazon Route 53 Active-Active and Active-Passive Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> </ul>
      Region?:
        type: ResourceRecordSetRegion
        description: <p> <i>Latency-based resource record sets only:</i> The Amazon EC2 region where the resource that is specified in this resource record set resides. The resource typically is an AWS resource, such as an Amazon EC2 instance or an ELB load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.</p> <note> <p>Creating latency and latency alias resource record sets in private hosted zones is not supported.</p> </note> <p>When Amazon Route 53 receives a DNS query for a domain name and type for which you have created latency resource record sets, Amazon Route 53 selects the latency resource record set that has the lowest latency between the end user and the associated Amazon EC2 region. Amazon Route 53 then returns the value that is associated with the selected resource record set.</p> <p>Note the following:</p> <ul> <li> <p>You can only specify one <code>ResourceRecord</code> per latency resource record set.</p> </li> <li> <p>You can only create one latency resource record set for each Amazon EC2 region.</p> </li> <li> <p>You are not required to create latency resource record sets for all Amazon EC2 regions. Amazon Route 53 will choose the region with the best latency from among the regions for which you create latency resource record sets.</p> </li> <li> <p>You cannot create non-latency resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as latency resource record sets.</p> </li> </ul>
      GeoLocation?:
        type: GeoLocation
        description: <p> <i>Geo location resource record sets only:</i> A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query. For example, if you want all queries from Africa to be routed to a web server with an IP address of <code>192.0.2.111</code>, create a resource record set with a <code>Type</code> of <code>A</code> and a <code>ContinentCode</code> of <code>AF</code>.</p> <note> <p>Creating geolocation and geolocation alias resource record sets in private hosted zones is not supported.</p> </note> <p>If you create separate resource record sets for overlapping geographic regions (for example, one resource record set for a continent and one for a country on the same continent), priority goes to the smallest geographic region. This allows you to route most queries for a continent to one resource and to route queries for a country on that continent to a different resource.</p> <p>You cannot create two geolocation resource record sets that specify the same geographic location.</p> <p>The value <code>*</code> in the <code>CountryCode</code> element matches all geographic locations that aren't specified in other geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements.</p> <important> <p>Geolocation works by mapping IP addresses to locations. However, some IP addresses aren't mapped to geographic locations, so even if you create geolocation resource record sets that cover all seven continents, Amazon Route 53 will receive some DNS queries from locations that it can't identify. We recommend that you create a resource record set for which the value of <code>CountryCode</code> is <code>*</code>, which handles both queries that come from locations for which you haven't created geolocation resource record sets and queries from IP addresses that aren't mapped to a location. If you don't create a <code>*</code> resource record set, Amazon Route 53 returns a "no answer" response for queries from those locations.</p> </important> <p>You cannot create non-geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as geolocation resource record sets.</p>
      Failover?:
        type: ResourceRecordSetFailover
        description: '<p> <i>Failover resource record sets only:</i> To configure
          failover, you add the <code>Failover</code> element to two resource record
          sets. For one resource record set, you specify <code>PRIMARY</code> as the
          value for <code>Failover</code>; for the other resource record set, you
          specify <code>SECONDARY</code>. In addition, you include the <code>HealthCheckId</code>
          element and specify the health check that you want Amazon Route 53 to perform
          for each resource record set.</p> <p>Except where noted, the following failover
          behaviors assume that you have included the <code>HealthCheckId</code> element
          in both resource record sets:</p> <ul> <li> <p>When the primary resource
          record set is healthy, Amazon Route 53 responds to DNS queries with the
          applicable value from the primary resource record set regardless of the
          health of the secondary resource record set.</p> </li> <li> <p>When the
          primary resource record set is unhealthy and the secondary resource record
          set is healthy, Amazon Route 53 responds to DNS queries with the applicable
          value from the secondary resource record set.</p> </li> <li> <p>When the
          secondary resource record set is unhealthy, Amazon Route 53 responds to
          DNS queries with the applicable value from the primary resource record set
          regardless of the health of the primary resource record set.</p> </li> <li>
          <p>If you omit the <code>HealthCheckId</code> element for the secondary
          resource record set, and if the primary resource record set is unhealthy,
          Amazon Route 53 always responds to DNS queries with the applicable value
          from the secondary resource record set. This is true regardless of the health
          of the associated endpoint.</p> </li> </ul> <p>You cannot create non-failover
          resource record sets that have the same values for the <code>Name</code>
          and <code>Type</code> elements as failover resource record sets.</p> <p>For
          failover alias resource record sets, you must also include the <code>EvaluateTargetHealth</code>
          element and set the value to true.</p> <p>For more information about configuring
          failover for Amazon Route 53, see the following topics in the <i>Amazon
          Route 53 Developer Guide</i>: </p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon
          Route 53 Health Checks and DNS Failover</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring
          Failover in a Private Hosted Zone</a> </p> </li> </ul> <p>Valid values:
          <code>PRIMARY</code> | <code>SECONDARY</code> </p>'
      TTL?:
        type: TTL
        description: <p>The resource record cache time to live (TTL), in seconds. Note the following:</p> <ul> <li> <p>If you're creating an alias resource record set, omit <code>TTL</code>. Amazon Route 53 uses the value of <code>TTL</code> for the alias target. </p> </li> <li> <p>If you're associating this resource record set with a health check (if you're adding a <code>HealthCheckId</code> element), we recommend that you specify a <code>TTL</code> of 60 seconds or less so clients respond quickly to changes in health status.</p> </li> <li> <p>All of the resource record sets in a group of weighted, latency, geolocation, or failover resource record sets must have the same value for <code>TTL</code>.</p> </li> <li> <p>If a group of weighted resource record sets includes one or more weighted alias resource record sets for which the alias target is an ELB load balancer, we recommend that you specify a <code>TTL</code> of 60 seconds for all of the non-alias weighted resource record sets that have the same name and type. Values other than 60 seconds (the TTL for load balancers) will change the effect of the values that you specify for <code>Weight</code>.</p> </li> </ul>
      ResourceRecords?:
        type: ResourceRecords
        description: <p>Information about the resource records to act upon.</p> <note> <p>If you are creating an alias resource record set, omit <code>ResourceRecords</code>.</p> </note>
      AliasTarget?:
        type: AliasTarget
        description: <p> <i>Alias resource record sets only:</i> Information about the CloudFront distribution, Elastic Beanstalk environment, ELB load balancer, Amazon S3 bucket, or Amazon Route 53 resource record set to which you are redirecting queries. The Elastic Beanstalk environment must have a regionalized subdomain.</p> <p>If you're creating resource records sets for a private hosted zone, note the following:</p> <ul> <li> <p>You can't create alias resource record sets for CloudFront distributions in a private hosted zone.</p> </li> <li> <p>Creating geolocation alias resource record sets or latency alias resource record sets in a private hosted zone is unsupported.</p> </li> <li> <p>For information about creating failover resource record sets in a private hosted zone, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> </ul>
      HealthCheckId?:
        type: HealthCheckId
        description: <p>If you want Amazon Route 53 to return this resource record set in response to a DNS query only when a health check is passing, include the <code>HealthCheckId</code> element and specify the ID of the applicable health check.</p> <p>Amazon Route 53 determines whether a resource record set is healthy based on one of the following:</p> <ul> <li> <p>By periodically sending a request to the endpoint that is specified in the health check</p> </li> <li> <p>By aggregating the status of a specified group of health checks (calculated health checks)</p> </li> <li> <p>By determining the current state of a CloudWatch alarm (CloudWatch metric health checks)</p> </li> </ul> <p>For information about how Amazon Route 53 determines whether a health check is healthy, see <a>CreateHealthCheck</a>.</p> <p>The <code>HealthCheckId</code> element is only useful when Amazon Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Amazon Route 53 to base the choice in part on the status of a health check. Configuring health checks only makes sense in the following configurations:</p> <ul> <li> <p>You're checking the health of the resource record sets in a weighted, latency, geolocation, or failover resource record set, and you specify health check IDs for all of the resource record sets. If the health check for one resource record set specifies an endpoint that is not healthy, Amazon Route 53 stops responding to queries using the value for that resource record set.</p> </li> <li> <p>You set <code>EvaluateTargetHealth</code> to true for the resource record sets in an alias, weighted alias, latency alias, geolocation alias, or failover alias resource record set, and you specify health check IDs for all of the resource record sets that are referenced by the alias resource record sets.</p> </li> </ul> <important> <p>Amazon Route 53 doesn't check the health of the endpoint specified in the resource record set, for example, the endpoint specified by the IP address in the <code>Value</code> element. When you add a <code>HealthCheckId</code> element to a resource record set, Amazon Route 53 checks the health of the endpoint that you specified in the health check. </p> </important> <p>For geolocation resource record sets, if an endpoint is unhealthy, Amazon Route 53 looks for a resource record set for the larger, associated geographic region. For example, suppose you have resource record sets for a state in the United States, for the United States, for North America, and for all locations. If the endpoint for the state resource record set is unhealthy, Amazon Route 53 checks the resource record sets for the United States, for North America, and for all locations (a resource record set for which the value of <code>CountryCode</code> is <code>*</code>), in that order, until it finds a resource record set for which the endpoint is healthy. </p> <p>If your health checks specify the endpoint only by domain name, we recommend that you create a separate health check for each endpoint. For example, create a health check for each <code>HTTP</code> server that is serving content for <code>www.example.com</code>. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as <code>us-east-1-www.example.com</code>), not the name of the resource record sets (example.com).</p> <important> <p>n this configuration, if you create a health check for which the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and then associate the health check with those resource record sets, health check results will be unpredictable.</p> </important> <p>For more informaiton, see the following topics in the Amazon Route 53 Developer Guide:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon Route 53 Health Checks and DNS Failover</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a> </p> </li> </ul>
      TrafficPolicyInstanceId?:
        type: TrafficPolicyInstanceId
    description: <p>Information about the resource record set to create or delete.</p>
  ResourceTagSet:
    type: object
    properties:
      ResourceType?:
        type: TagResourceType
        description: <p>The type of the resource.</p> <ul> <li> <p>The resource type for health checks is <code>healthcheck</code>.</p> </li> <li> <p>The resource type for hosted zones is <code>hostedzone</code>.</p> </li> </ul>
      ResourceId?:
        type: TagResourceId
        description: <p>The ID for the specified resource.</p>
      Tags?:
        type: TagList
        description: <p>The tags associated with the specified resource.</p>
    description: <p>A complex type containing a resource and its associated tags.</p>
  StatusReport:
    type: object
    properties:
      Status?:
        type: Status
        description: <p>A description of the status of the health check endpoint as reported by one of the Amazon Route 53 health checkers.</p>
      CheckedTime?:
        type: TimeStamp
        description: <p>The time at which the health checker performed the health check in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> and Coordinated Universal Time (UTC). For example, the value <code>2014-10-27T17:48:16.751Z</code> represents October 27, 2014 at 17:48:16.751 UTC.</p>
    description: <p>A complex type that contains the status that one Amazon Route 53 health checker reports and the time of the health check.</p>
  Tag:
    type: object
    properties:
      Key?:
        type: TagKey
        description: '<p>The value of <code>Key</code> depends on the operation that
          you want to perform:</p> <ul> <li> <p> <b>Add a tag to a health check or
          hosted zone</b>: <code>Key</code> is the name that you want to give the
          new tag.</p> </li> <li> <p> <b>Edit a tag</b>: <code>Key</code> is the name
          of the tag whose <code>Value</code> element you want to remove.</p> </li>
          <li> <p> <b> Delete a key</b>: <code>Key</code> is the name of the tag you
          want to remove.</p> </li> <li> <p> <b>Give a name to a health check</b>:
          Edit the default <code>Name</code> tag. In the Amazon Route 53 console,
          the list of your health checks includes a <b>Name</b> column that lets you
          see the name that you''ve given to each health check.</p> </li> </ul>'
      Value?:
        type: TagValue
        description: '<p>The value of <code>Value</code> depends on the operation
          that you want to perform:</p> <ul> <li> <p> <b>Add a tag to a health check
          or hosted zone</b>: <code>Value</code> is the value that you want to give
          the new tag.</p> </li> <li> <p> <b>Edit a tag</b>: <code>Value</code> is
          the new value that you want to assign the tag.</p> </li> </ul>'
    description: <p>A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.</p>
  TestDNSAnswerResponse:
    type: object
    properties:
      Nameserver:
        type: Nameserver
        description: <p>The Amazon Route 53 name server used to respond to the request.</p>
      RecordName:
        type: DNSName
        description: <p>The name of the resource record set that you submitted a request for.</p>
      RecordType:
        type: RRType
        description: <p>The type of the resource record set that you submitted a request for.</p>
      RecordData:
        type: RecordData
        description: <p>A list that contains values that Amazon Route 53 returned for this resource record set.</p>
      ResponseCode:
        type: DNSRCode
        description: <p>A code that indicates whether the request is valid or not. The most common response code is <code>NOERROR</code>, meaning that the request is valid. If the response is not valid, Amazon Route 53 returns a response code that describes the error. For a list of possible response codes, see <a href="http://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6">DNS RCODES</a> on the IANA website. </p>
      Protocol:
        type: TransportProtocol
        description: <p>The protocol that Amazon Route 53 used to respond to the request, either <code>UDP</code> or <code>TCP</code>. </p>
    description: <p>A complex type that contains the response to a <code>TestDNSAnswer</code> request. </p>
  TrafficPolicy:
    type: object
    properties:
      Id:
        type: TrafficPolicyId
      Version:
        type: TrafficPolicyVersion
      Name:
        type: TrafficPolicyName
      Type:
        type: RRType
      Document:
        type: TrafficPolicyDocument
      Comment?:
        type: TrafficPolicyComment
  TrafficPolicyInstance:
    type: object
    properties:
      Id:
        type: TrafficPolicyInstanceId
      HostedZoneId:
        type: ResourceId
      Name:
        type: DNSName
      TTL:
        type: TTL
      State:
        type: TrafficPolicyInstanceState
      Message:
        type: Message
      TrafficPolicyId:
        type: TrafficPolicyId
      TrafficPolicyVersion:
        type: TrafficPolicyVersion
      TrafficPolicyType:
        type: RRType
  TrafficPolicySummary:
    type: object
    properties:
      Id:
        type: TrafficPolicyId
      Name:
        type: TrafficPolicyName
      Type:
        type: RRType
      LatestVersion:
        type: TrafficPolicyVersion
      TrafficPolicyCount:
        type: TrafficPolicyVersion
  UpdateHealthCheckResponse:
    type: object
    properties:
      HealthCheck:
        type: HealthCheck
  UpdateHostedZoneCommentResponse:
    type: object
    properties:
      HostedZone:
        type: HostedZone
    description: <p>A complex type that contains the response to the UpdateHostedZoneCommentRequest.</p>
  UpdateTrafficPolicyCommentResponse:
    type: object
    properties:
      TrafficPolicy:
        type: TrafficPolicy
        description: <p>A complex type that contains settings for the specified traffic policy.</p>
    description: <p>A complex type that contains the response information for the traffic policy.</p>
  UpdateTrafficPolicyInstanceResponse:
    type: object
    properties:
      TrafficPolicyInstance:
        type: TrafficPolicyInstance
        description: <p>A complex type that contains settings for the updated traffic policy instance.</p>
    description: <p>A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.</p>
  VPC:
    type: object
    properties:
      VPCRegion?:
        type: VPCRegion
      VPCId?:
        type: VPCId
/2013-04-01:
  /trafficpolicyinstancecount:
    displayName: Get Traffic Policy Instance Count
    get:
      description: Gets the number of traffic policy instances that are associated with the current AWS account. To get the number of traffic policy instances, send a <code>GET</code> request to the <code>/2013-04-01/trafficpolicyinstancecount</code> resource.
      displayName: Get Traffic Policy Instance Count
      queryParameters:
        Action:
          type: string
          enum:
          - GetTrafficPolicyInstanceCount
      body:
        application/xml: GetTrafficPolicyInstanceCountRequest
      responses:
        200:
          body:
            application/xml: GetTrafficPolicyInstanceCountResponse
  /trafficpolicyinstances:
    displayName: List Traffic Policy Instances
    /trafficpolicy:
      displayName: List Traffic Policy Instances By Policy
      get:
        description: 'Gets information about the traffic policy instances that you
          created by using a specify traffic policy version. <note> After you submit
          a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code>
          request, there''s a brief delay while Amazon Route 53 creates the resource
          record sets that are specified in the traffic policy definition. For more
          information, see the <code>State</code> response element. </note> Send a
          <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance</code>
          resource and include the ID and version of the traffic policy. Amazon Route
          53 returns a maximum of 100 items in each response. If you have a lot of
          traffic policy instances, you can use the <code>MaxItems</code> parameter
          to list them in groups of up to 100. The response includes five values that
          help you navigate from one group of <code>MaxItems</code> traffic policy
          instances to the next: <ul> <li>  <b>IsTruncated</b>  If the value of <code>IsTruncated</code>
          in the response is <code>true</code>, there are more traffic policy instances
          associated with the specified traffic policy. If <code>IsTruncated</code>
          is <code>false</code>, this response includes the last traffic policy instance
          that is associated with the specified traffic policy. </li> <li>  <b>MaxItems</b>  The
          value that you specified for the <code>MaxItems</code> parameter in the
          request that produced the current response. </li> <li>  <b>HostedZoneIdMarker</b>,
          <b>TrafficPolicyInstanceNameMarker</b>, and <b>TrafficPolicyInstanceTypeMarker</b>  If
          <code>IsTruncated</code> is <code>true</code>, these values in the response
          represent the first traffic policy instance in the next group of <code>MaxItems</code>
          traffic policy instances. To list more traffic policy instances, make another
          call to <code>ListTrafficPolicyInstancesByPolicy</code>, and specify these
          values in the corresponding request parameters. If <code>IsTruncated</code>
          is <code>false</code>, all three elements are omitted from the response.
          </li> </ul>'
        displayName: List Traffic Policy Instances By Policy
        queryParameters:
          Action:
            type: string
            enum:
            - ListTrafficPolicyInstancesByPolicy
          id:
            type: TrafficPolicyId
            description: <p>The ID of the traffic policy for which you want to list traffic policy instances.</p>
          version:
            type: TrafficPolicyVersion
            description: <p>The version of the traffic policy for which you want to list traffic policy instances. The version must be associated with the traffic policy that is specified by <code>TrafficPolicyId</code>.</p>
          hostedzoneid?:
            type: ResourceId
            description: <p>For the first request to <code>ListTrafficPolicyInstancesByPolicy</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone for the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, omit this value.</p>
          trafficpolicyinstancename?:
            type: DNSName
            description: <p>For the first request to <code>ListTrafficPolicyInstancesByPolicy</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, omit this value.</p>
          trafficpolicyinstancetype?:
            type: RRType
            description: <p>For the first request to <code>ListTrafficPolicyInstancesByPolicy</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p>
          maxitems?:
            type: PageMaxItems
            description: <p>The maximum number of traffic policy instances to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policy instances, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
        responses:
          200:
            body:
              application/xml: ListTrafficPolicyInstancesByPolicyResponse
          400:
            description: InvalidInput
          404:
            description: NoSuchTrafficPolicyInstance | NoSuchTrafficPolicy
    /hostedzone:
      displayName: List Traffic Policy Instances By HostedZone
      get:
        description: 'Gets information about the traffic policy instances that you
          created in a specified hosted zone. <note> After you submit an <code>UpdateTrafficPolicyInstance</code>
          request, there''s a brief delay while Amazon Route 53 creates the resource
          record sets that are specified in the traffic policy definition. For more
          information, see the <code>State</code> response element. </note> Send a
          <code>GET</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicyinstance</code>
          resource and include the ID of the hosted zone. Amazon Route 53 returns
          a maximum of 100 items in each response. If you have a lot of traffic policy
          instances, you can use the <code>MaxItems</code> parameter to list them
          in groups of up to 100. The response includes four values that help you
          navigate from one group of <code>MaxItems</code> traffic policy instances
          to the next: <ul> <li>  <b>IsTruncated</b>  If the value of <code/>IsTruncated
          in the response is <code>true</code>, there are more traffic policy instances
          associated with the current AWS account. If <code>IsTruncated</code> is
          <code>false</code>, this response includes the last traffic policy instance
          that is associated with the current account. </li> <li>  <b>MaxItems</b>  The
          value that you specified for the <code>MaxItems</code> parameter in the
          request that produced the current response. </li> <li>  <b>TrafficPolicyInstanceNameMarker</b>
          and <b>TrafficPolicyInstanceTypeMarker</b>  If <code>IsTruncated</code>
          is <code>true</code>, these two values in the response represent the first
          traffic policy instance in the next group of <code>MaxItems</code> traffic
          policy instances. To list more traffic policy instances, make another call
          to <code>ListTrafficPolicyInstancesByHostedZone</code>, and specify these
          values in the corresponding request parameters. If <code>IsTruncated</code>
          is <code>false</code>, all three elements are omitted from the response.
          </li> </ul>'
        displayName: List Traffic Policy Instances By HostedZone
        queryParameters:
          Action:
            type: string
            enum:
            - ListTrafficPolicyInstancesByHostedZone
          id:
            type: ResourceId
            description: <p>The ID of the hosted zone for which you want to list traffic policy instances.</p>
          trafficpolicyinstancename?:
            type: DNSName
            description: <p>For the first request to <code>ListTrafficPolicyInstancesByHostedZone</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, omit this value.</p>
          trafficpolicyinstancetype?:
            type: RRType
            description: <p>For the first request to <code>ListTrafficPolicyInstancesByHostedZone</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p>
          maxitems?:
            type: PageMaxItems
            description: <p>The maximum number of traffic policy instances to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policy instances, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
        responses:
          200:
            body:
              application/xml: ListTrafficPolicyInstancesByHostedZoneResponse
          400:
            description: InvalidInput
          404:
            description: NoSuchTrafficPolicyInstance | NoSuchHostedZone
    get:
      description: 'Gets information about the traffic policy instances that you created
        by using the current AWS account. <note> After you submit an <code>UpdateTrafficPolicyInstance</code>
        request, there''s a brief delay while Amazon Route 53 creates the resource
        record sets that are specified in the traffic policy definition. For more
        information, see the <code>State</code> response element. </note> Send a <code>GET</code>
        request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicyinstance</code>
        resource. Amazon Route 53 returns a maximum of 100 items in each response.
        If you have a lot of traffic policy instances, you can use the <code>MaxItems</code>
        parameter to list them in groups of up to 100. The response includes five
        values that help you navigate from one group of <code>MaxItems</code> traffic
        policy instances to the next: <ul> <li>  <b>IsTruncated</b>  If the value
        of <code>IsTruncated</code> in the response is <code>true</code>, there are
        more traffic policy instances associated with the current AWS account. If
        <code>IsTruncated</code> is <code>false</code>, this response includes the
        last traffic policy instance that is associated with the current account.
        </li> <li>  <b>MaxItems</b>  The value that you specified for the <code>MaxItems</code>
        parameter in the request that produced the current response. </li> <li>  <b>HostedZoneIdMarker</b>,
        <b>TrafficPolicyInstanceNameMarker</b>, and <b>TrafficPolicyInstanceTypeMarker</b>  If
        <code>IsTruncated</code> is <code>true</code>, these three values in the response
        represent the first traffic policy instance in the next group of <code>MaxItems</code>
        traffic policy instances. To list more traffic policy instances, make another
        call to <code>ListTrafficPolicyInstances</code>, and specify these values
        in the corresponding request parameters. If <code>IsTruncated</code> is <code>false</code>,
        all three elements are omitted from the response. </li> </ul>'
      displayName: List Traffic Policy Instances
      queryParameters:
        Action:
          type: string
          enum:
          - ListTrafficPolicyInstances
        hostedzoneid?:
          type: ResourceId
          description: <p>For the first request to <code>ListTrafficPolicyInstances</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, you have more traffic policy instances. To get the next group of <code>MaxItems</code> traffic policy instances, submit another <code>ListTrafficPolicyInstances</code> request. For the value of <code>HostedZoneIdMarker</code>, specify the value of <code>HostedZoneIdMarker</code> from the previous response, which is the hosted zone ID of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get.</p>
        trafficpolicyinstancename?:
          type: DNSName
          description: <p>For the first request to <code>ListTrafficPolicyInstances</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get.</p>
        trafficpolicyinstancetype?:
          type: RRType
          description: <p>For the first request to <code>ListTrafficPolicyInstances</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get.</p>
        maxitems?:
          type: PageMaxItems
          description: <p>The maximum number of traffic policy instances to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policy instances, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>
      responses:
        200:
          body:
            application/xml: ListTrafficPolicyInstancesResponse
        400:
          description: InvalidInput
        404:
          description: NoSuchTrafficPolicyInstance
  /hostedzone:
    displayName: Create Hosted Zone
    /{Id}:
      uriParameters:
        Id:
          type: ResourceId
          description: <p>The ID of the hosted zone that you want to see changes for.</p>
      displayName: Delete Hosted Zone
      /rrsChanges:
        displayName: List Change Batches By R RSet
        get:
          description: Gets the list of ChangeBatches in a given time period for a given hosted zone and RRSet.
          displayName: List Change Batches By R RSet
          queryParameters:
            Action:
              type: string
              enum:
              - ListChangeBatchesByRRSet
            rrSet_name:
              type: DNSName
              description: <p>The name of the RRSet that you want to see changes for.</p>
            type:
              type: RRType
              description: <p>The type of the RRSet that you want to see changes for.</p>
            identifier?:
              type: ResourceRecordSetIdentifier
              description: <p>The identifier of the RRSet that you want to see changes for.</p>
            startDate:
              type: Date
              description: <p>The start of the time period you want to see changes for.</p>
            endDate:
              type: Date
              description: <p>The end of the time period you want to see changes for.</p>
            maxItems?:
              type: PageMaxItems
              description: <p>The maximum number of items on a page.</p>
            marker?:
              type: PageMarker
              description: <p>The page marker.</p>
          responses:
            200:
              body:
                application/xml: ListChangeBatchesByRRSetResponse
            404:
              description: NoSuchHostedZone
            400:
              description: InvalidInput
      /disassociatevpc:
        displayName: Disassociate V PC FromHosted Zone
        post:
          description: Disassociates a VPC from a Amazon Route 53 private hosted zone.  Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/hostedzone/<i>hosted zone ID</i>/disassociatevpc</code> resource. The request body must include an XML document with a <code>DisassociateVPCFromHostedZoneRequest</code> element. The response returns the <code>DisassociateVPCFromHostedZoneResponse</code> element. <important> You can only disassociate a VPC from a private hosted zone when two or more VPCs are associated with that hosted zone. You cannot convert a private hosted zone into a public hosted zone. </important>
          displayName: Disassociate V PC FromHosted Zone
          queryParameters:
            Action:
              type: string
              enum:
              - DisassociateVPCFromHostedZone
          body:
            application/xml:
              type: object
              properties:
                VPC?:
                  type: VPC
                  description: <p>A complex type containing information about the Amazon VPC that you're disassociating from the specified hosted zone.</p>
                Comment:
                  type: DisassociateVPCComment
                  description: <p> <i>Optional:</i> A comment about the disassociation request.</p>
          responses:
            200:
              body:
                application/xml: DisassociateVPCFromHostedZoneResponse
            404:
              description: NoSuchHostedZone | VPCAssociationNotFound
            400:
              description: InvalidVPCId | LastVPCAssociation | InvalidInput
      /rrset:
        displayName: List Resource Record Sets
        post:
          description: 'Create, change, update, or delete authoritative DNS information
            on all Amazon Route 53 servers. Send a <code>POST</code> request to:   <code>/2013-04-01/hostedzone/<i>Amazon
            Route 53 hosted Zone ID</i>/rrset</code> resource.  The request body must
            include a document with a <code>ChangeResourceRecordSetsRequest</code>
            element. The request body contains a list of change items, known as a
            change batch. Change batches are considered transactional changes. When
            using the Amazon Route 53 API to change resource record sets, Amazon Route
            53 either makes all or none of the changes in a change batch request.
            This ensures that Amazon Route 53 never partially implements the intended
            changes to the resource record sets in a hosted zone.  For example, a
            change batch request that deletes the <code>CNAME</code>record for www.example.com
            and creates an alias resource record set for www.example.com. Amazon Route
            53 deletes the first resource record set and creates the second resource
            record set in a single operation. If either the <code>DELETE</code> or
            the <code>CREATE</code> action fails, then both changes (plus any other
            changes in the batch) fail, and the original <code>CNAME</code> record
            continues to exist. <important> Due to the nature of transactional changes,
            you cannot delete the same resource record set more than once in a single
            change batch. If you attempt to delete the same change batch more than
            once, Amazon Route 53 returns an <code>InvalidChangeBatch</code> error.
            </important> <note> To create resource record sets for complex routing
            configurations, use either the traffic flow visual editor in the Amazon
            Route 53 console or the API actions for traffic policies and traffic policy
            instances. Save the configuration as a traffic policy, then associate
            the traffic policy with one or more domain names (such as example.com)
            or subdomain names (such as www.example.com), in the same hosted zone
            or in multiple hosted zones. You can roll back the updates if the new
            configuration isn''t performing as expected. For more information, see
            <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/traffic-flow.html">Using
            Traffic Flow to Route DNS Traffic</a> in the Amazon Route 53 API Reference
            or <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/actions-on-polices">Actions
            on Traffic Policies and Traffic Policy Instances</a> in this guide. </note>
            Use <code>ChangeResourceRecordsSetsRequest</code> to perform the following
            actions: <ul> <li>  <code>CREATE</code>:Creates a resource record set
            that has the specified values. </li> <li>  <code>DELETE</code>: Deletes
            an existing resource record set that has the specified values for <code>Name</code>,
            <code>Type</code>, <code>Set Identifier</code> (for code latency, weighted,
            geolocation, and failover resource record sets), and <code>TTL</code>
            (except alias resource record sets, for which the TTL is determined by
            the AWS resource you''re routing queries to). </li> <li>  <code>UPSERT</code>:
            If a resource record set does not already exist, AWS creates it. If a
            resource set does exist, Amazon Route 53 updates it with the values in
            the request. Amazon Route 53 can update an existing resource record set
            only when all of the following values match: <code>Name</code>, <code>Type</code>,
            and <code>Set Identifier</code> (for weighted, latency, geolocation, and
            failover resource record sets). </li> </ul> In response to a <code>ChangeResourceRecordSets</code>
            request, the DNS data is changed on all Amazon Route 53 DNS servers. Initially,
            the status of a change is <code>PENDING</code>, meaning the change has
            not yet propagated to all the authoritative Amazon Route 53 DNS servers.
            When the change is propagated to all hosts, the change returns a status
            of <code>INSYNC</code>. After sending a change request, confirm your change
            has propagated to all Amazon Route 53 DNS servers. Changes generally propagate
            to all Amazon Route 53 name servers in a few minutes. In rare circumstances,
            propagation can take up to 30 minutes. For more information, see <a>GetChange</a>.
            Note the following limitations on a <code>ChangeResourceRecordSets</code>
            request: <ul> <li>  A request cannot contain more than 100 Change elements.
            </li> <li>  A request cannot contain more than 1000 ResourceRecord elements.
            </li> <li> The sum of the number of characters (including spaces) in all
            <code>Value</code> elements in a request cannot exceed 32,000 characters.
            </li> <li> <note> If the value of the Action element in a ChangeResourceRecordSets
            request is <code>UPSERT</code> and the resource record set already exists,
            Amazon Route 53 automatically performs a <code>DELETE</code> request and
            a <code>CREATE</code> request. When Amazon Route 53 calculates the number
            of characters in the Value elements of a change batch request, it adds
            the number of characters in the Value element of the resource record set
            being deleted and the number of characters in the Value element of the
            resource record set being created. </note> </li> <li> The same resource
            cannot be deleted more than once in a single batch. </li> </ul> <note>
            If the value of the Action element in a ChangeResourceRecordSets request
            is <code>UPSERT</code> and the resource record set already exists, Amazon
            Route 53 automatically performs a <code>DELETE</code> request and a <code>CREATE</code>
            request. When Amazon Route 53 calculates the number of characters in the
            Value elements of a change batch request, it adds the number of characters
            in the Value element of the resource record set being deleted and the
            number of characters in the Value element of the resource record set being
            created. </note> For more information on transactional changes, see <a>ChangeResourceRecordSets</a>.'
          displayName: Change Resource Record Sets
          queryParameters:
            Action:
              type: string
              enum:
              - ChangeResourceRecordSets
          body:
            application/xml:
              type: object
              properties:
                ChangeBatch?:
                  type: ChangeBatch
                  description: <p>A complex type that contains an optional comment and the <code>Changes</code> element.</p>
          responses:
            200:
              body:
                application/xml: ChangeResourceRecordSetsResponse
            404:
              description: NoSuchHostedZone | NoSuchHealthCheck
            400:
              description: InvalidChangeBatch | InvalidInput | PriorRequestNotComplete
        get:
          displayName: List Resource Record Sets
          queryParameters:
            Action:
              type: string
              enum:
              - ListResourceRecordSets
            name?:
              type: DNSName
              description: <p>The first name in the lexicographic ordering of domain names that you want the <code>ListResourceRecordSets</code> request to list.</p>
            type?:
              type: RRType
              description: '<p>The type of resource record set to begin the record
                listing from.</p> <p>Valid values for basic resource record sets:
                <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>MX</code>
                | <code>NAPTR</code> | <code>NS</code> | <code>PTR</code> | <code>SOA</code>
                | <code>SPF</code> | <code>SRV</code> | <code>TXT</code> </p> <p>Values
                for weighted, latency, geo, and failover resource record sets: <code>A</code>
                | <code>AAAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code>
                | <code>PTR</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code>
                </p> <p>Values for alias resource record sets: </p> <ul> <li> <p>
                <b>CloudFront distribution</b>: A</p> </li> <li> <p> <b>Elastic Beanstalk
                environment that has a regionalized subdomain</b>: A</p> </li> <li>
                <p> <b>ELB load balancer</b>: A | AAAA</p> </li> <li> <p> <b>Amazon
                S3 bucket</b>: A</p> </li> </ul> <p>Constraint: Specifying <code>type</code>
                without specifying <code>name</code> returns an <code>InvalidInput</code>
                error.</p>'
            identifier?:
              type: ResourceRecordSetIdentifier
              description: <p> <i>Weighted resource record sets only:</i> If results were truncated for a given DNS name and type, specify the value of <code>NextRecordIdentifier</code> from the previous response to get the next resource record set that has the current DNS name and type.</p>
            maxitems?:
              type: PageMaxItems
              description: <p>(Optional) The maximum number of resource records sets to include in the response body for this request. If the response includes more than <code>maxitems</code> resource record sets, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of the <code>NextRecordName</code> and <code>NextRecordType</code> elements in the response identify the first resource record set in the next group of <code>maxitems</code> resource record sets.</p>
          responses:
            200:
              body:
                application/xml: ListResourceRecordSetsResponse
            404:
              description: NoSuchHostedZone
            400:
              description: InvalidInput
          (extras.Pagination):
            moreResults: IsTruncated
            limitKey: MaxItems
            resultKey: ResourceRecordSets
            inputToken: StartRecordName,StartRecordType,StartRecordIdentifier
            outputToken: NextRecordName,NextRecordType,NextRecordIdentifier
      /changes:
        displayName: List Change Batches By Hosted Zone
        get:
          description: Gets the list of ChangeBatches in a given time period for a given hosted zone.
          displayName: List Change Batches By Hosted Zone
          queryParameters:
            Action:
              type: string
              enum:
              - ListChangeBatchesByHostedZone
            startDate:
              type: Date
              description: <p>The start of the time period you want to see changes for.</p>
            endDate:
              type: Date
              description: <p>The end of the time period you want to see changes for.</p>
            maxItems?:
              type: PageMaxItems
              description: <p>The maximum number of items on a page.</p>
            marker?:
              type: PageMarker
              description: <p>The page marker.</p>
          responses:
            200:
              body:
                application/xml: ListChangeBatchesByHostedZoneResponse
            404:
              description: NoSuchHostedZone
            400:
              description: InvalidInput
      /associatevpc:
        displayName: Associate V PC WithHosted Zone
        post:
          description: Associates an Amazon VPC with a private hosted zone.  <important> The VPC and the hosted zone must already exist, and you must have created a private hosted zone. You cannot convert a public hosted zone into a private hosted zone. </important> Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/hostedzone/<i>hosted zone ID</i>/associatevpc</code> resource. The request body must include an XML document with a <code>AssociateVPCWithHostedZoneRequest</code> element. The response returns the <code>AssociateVPCWithHostedZoneResponse</code> element. <note> If you used different accounts to create the hosted zone and to create the Amazon VPCs that you want to associate with the hosted zone, we need to update account permissions for you. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/hosted-zone-private-associate-vpcs-different-accounts.html">Associating Amazon VPCs and Private Hosted Zones That You Create with Different AWS Accounts</a> in the Amazon Route 53 Developer Guide. </note>
          displayName: Associate V PC WithHosted Zone
          queryParameters:
            Action:
              type: string
              enum:
              - AssociateVPCWithHostedZone
          body:
            application/xml:
              type: object
              properties:
                VPC?:
                  type: VPC
                  description: <p>A complex type containing information about the Amazon VPC that you're associating with the specified hosted zone.</p>
                Comment:
                  type: AssociateVPCComment
                  description: <p> <i>Optional:</i> A comment about the association request.</p>
          responses:
            200:
              body:
                application/xml: AssociateVPCWithHostedZoneResponse
            404:
              description: NoSuchHostedZone
            400:
              description: InvalidVPCId | InvalidInput | PublicZoneVPCAssociation | ConflictingDomainExists | LimitsExceeded
      get:
        description: 'Retrieves the delegation set for a hosted zone, including the
          four name servers assigned to the hosted zone. Send a <code>GET</code> request
          to the <code>/<i>Amazon Route 53 API version</i>/hostedzone/<i>hosted zone
          ID</i> </code> resource. '
        displayName: Get Hosted Zone
        queryParameters:
          Action:
            type: string
            enum:
            - GetHostedZone
        responses:
          200:
            body:
              application/xml: GetHostedZoneResponse
          404:
            description: NoSuchHostedZone
          400:
            description: InvalidInput
      post:
        description: 'Updates the hosted zone comment. Send a <code>POST</code> request
          to the <code>/2013-04-01/hostedzone/<i>hosted zone ID</i> </code> resource. '
        displayName: Update Hosted Zone Comment
        queryParameters:
          Action:
            type: string
            enum:
            - UpdateHostedZoneComment
        body:
          application/xml:
            type: object
            properties:
              Comment:
                type: ResourceDescription
                description: <p>The new comment for the hosted zone. If you don't specify a value for <code>Comment</code>, Amazon Route 53 deletes the existing value of the <code>Comment</code> element, if any.</p>
        responses:
          200:
            body:
              application/xml: UpdateHostedZoneCommentResponse
          404:
            description: NoSuchHostedZone
          400:
            description: InvalidInput
      delete:
        description: Deletes a hosted zone. Send a <code>DELETE</code> request to the <code>/<i>Amazon Route 53 API version</i>/hostedzone/<i>hosted zone ID</i> </code> resource. <important> Delete a hosted zone only if there are no resource record sets other than the default SOA record and NS resource record sets. If the hosted zone contains other resource record sets, delete them before deleting the hosted zone. If you try to delete a hosted zone that contains other resource record sets, Amazon Route 53 denies your request with a <code>HostedZoneNotEmpty</code> error. For information about deleting records from your hosted zone, see <a>ChangeResourceRecordSets</a>. </important>
        displayName: Delete Hosted Zone
        queryParameters:
          Action:
            type: string
            enum:
            - DeleteHostedZone
        responses:
          200:
            body:
              application/xml: DeleteHostedZoneResponse
          404:
            description: NoSuchHostedZone
          400:
            description: HostedZoneNotEmpty | PriorRequestNotComplete | InvalidInput | InvalidDomainName
    get:
      description: 'To retrieve a list of your public and private hosted zones, send
        a <code>GET</code> request to the <code>/2013-04-01/hostedzone</code> resource.
        The response to this request includes a <code>HostedZones</code> child element
        for each hosted zone created by the current AWS account. Amazon Route 53 returns
        a maximum of 100 items in each response. If you have a lot of hosted zones,
        you can use the <code>maxitems</code> parameter to list them in groups of
        up to 100. The response includes four values that help navigate from one group
        of <code>maxitems</code> hosted zones to the next: <ul> <li>  <code>MaxItems</code>is
        the value specified for the <code>maxitems</code> parameter in the request
        that produced the current response. </li> <li> If the value of <code>IsTruncated</code>
        in the response is true, there are more hosted zones associated with the current
        AWS account.  </li> <li>  <code>NextMarker</code>is the hosted zone ID of
        the next hosted zone that is associated with the current AWS account. If you
        want to list more hosted zones, make another call to <code>ListHostedZones</code>,
        and specify the value of the <code>NextMarker</code> element in the marker
        parameter.  If <code>IsTruncated</code> is false, the <code>NextMarker</code>
        element is omitted from the response. </li> <li> If you''re making the second
        or subsequent call to <code>ListHostedZones</code>, the <code>Marker</code>
        element matches the value that you specified in the <code>marker</code> parameter
        in the previous request. </li> </ul>'
      displayName: List Hosted Zones
      queryParameters:
        Action:
          type: string
          enum:
          - ListHostedZones
        marker?:
          type: PageMarker
          description: <p>(Optional) If you have more hosted zones than the value of <code>maxitems</code>, <code>ListHostedZones</code> returns only the first <code>maxitems</code> hosted zones. To get the next group of <code>maxitems</code> hosted zones, submit another request to <code>ListHostedZones</code>. For the value of marker, specify the value of the <code>NextMarker</code> element that was returned in the previous response.</p> <p>Hosted zones are listed in the order in which they were created.</p>
        maxitems?:
          type: PageMaxItems
          description: <p>(Optional) The maximum number of hosted zones to be included in the response body for this request. If you have more than <code>maxitems</code> hosted zones, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the value of the <code>NextMarker</code> element is the hosted zone ID of the first hosted zone in the next group of <code>maxitems</code> hosted zones.</p>
        delegationsetid?:
          type: ResourceId
      responses:
        200:
          body:
            application/xml: ListHostedZonesResponse
        400:
          description: InvalidInput | NoSuchDelegationSet | DelegationSetNotReusable
      (extras.Pagination):
        inputToken: Marker
        outputToken: NextMarker
        moreResults: IsTruncated
        limitKey: MaxItems
        resultKey: HostedZones
    post:
      description: 'Creates a new public hosted zone, used to specify how the Domain
        Name System (DNS) routes traffic on the Internet for a domain, such as example.com,
        and its subdomains.  <important> Public hosted zones cannot be converted to
        a private hosted zone or vice versa. Instead, create a new hosted zone with
        the same name and create new resource record sets. </important> Send a <code>POST</code>
        request to the <code>/<i>Amazon Route 53 API version</i>/hostedzone</code>
        resource. The request body must include an XML document with a <code>CreateHostedZoneRequest</code>
        element. The response returns the <code>CreateHostedZoneResponse</code> element
        containing metadata about the hosted zone. Fore more information about charges
        for hosted zones, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/pricing/">AmazonAmazon
        Route 53 Pricing</a>. Note the following: <ul> <li> You cannot create a hosted
        zone for a top-level domain (TLD). </li> <li> Amazon Route 53 automatically
        creates a default SOA record and four NS records for the zone. For more information
        about SOA and NS records, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html">NS
        and SOA Records that Amazon Route 53 Creates for a Hosted Zone</a> in the
        <i>Amazon Route 53 Developer Guide</i>. </li> <li> If your domain is registered
        with a registrar other than Amazon Route 53, you must update the name servers
        with your registrar to make Amazon Route 53 your DNS service. For more information,
        see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/creating-migrating.html">Configuring
        Amazon Route 53 as your DNS Service</a> in the <i>Amazon Route 53 Developer''s
        Guide</i>. </li> </ul> After creating a zone, its initial status is <code>PENDING</code>.
        This means that it is not yet available on all DNS servers. The status of
        the zone changes to <code>INSYNC</code> when the NS and SOA records are available
        on all Amazon Route 53 DNS servers.  When trying to create a hosted zone using
        a reusable delegation set, specify an optional DelegationSetId, and Amazon
        Route 53 would assign those 4 NS records for the zone, instead of alloting
        a new one.'
      displayName: Create Hosted Zone
      queryParameters:
        Action:
          type: string
          enum:
          - CreateHostedZone
      body:
        application/xml: CreateHostedZoneRequest
      responses:
        201:
          headers:
            Location:
              type: ResourceURI
              description: <p>The unique URL representing the new hosted zone.</p>
          body:
            application/xml:
              type: object
              properties:
                HostedZone?:
                  type: HostedZone
                  description: <p>A complex type that contains general information about the hosted zone.</p>
                ChangeInfo?:
                  type: ChangeInfo
                  description: <p>A complex type that describes the changes made to your hosted zone.</p>
                DelegationSet?:
                  type: DelegationSet
                  description: <p>A complex type that describes the name servers for this hosted zone.</p>
                VPC:
                  type: VPC
        400:
          description: InvalidDomainName | TooManyHostedZones | InvalidVPCId | InvalidInput | DelegationSetNotAvailable | ConflictingDomainExists | NoSuchDelegationSet | DelegationSetNotReusable
        409:
          description: HostedZoneAlreadyExists
  /healthcheck:
    displayName: List Health Checks
    /{HealthCheckId}:
      uriParameters:
        HealthCheckId:
          type: HealthCheckId
          description: <p>If you want Amazon Route 53 to return this resource record set in response to a DNS query only when a health check is passing, include the <code>HealthCheckId</code> element and specify the ID of the applicable health check.</p> <p>Amazon Route 53 determines whether a resource record set is healthy by periodically sending a request to the endpoint that is specified in the health check. If that endpoint returns an HTTP status code of 2xx or 3xx, the endpoint is healthy. If the endpoint returns an HTTP status code of 400 or greater, or if the endpoint doesn't respond for a certain amount of time, Amazon Route 53 considers the endpoint unhealthy and also considers the resource record set unhealthy.</p> <p>The <code>HealthCheckId</code> element is only useful when Amazon Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Amazon Route 53 to base the choice in part on the status of a health check. Configuring health checks only makes sense in the following configurations:</p> <ul> <li> <p>You're checking the health of the resource record sets in a weighted, latency, geolocation, or failover resource record set, and you specify health check IDs for all of the resource record sets. If the health check for one resource record set specifies an endpoint that is not healthy, Amazon Route 53 stops responding to queries using the value for that resource record set.</p> </li> <li> <p>You set <code>EvaluateTargetHealth</code> to <code>true</code> for the resource record sets in an alias, weighted alias, latency alias, geolocation alias, or failover alias resource record set, and you specify health check IDs for all of the resource record sets that are referenced by the alias resource record sets. For more information about this configuration, see <code>EvaluateTargetHealth</code>.</p> <p>Amazon Route 53 doesn't check the health of the endpoint specified in the resource record set, for example, the endpoint specified by the IP address in the <code>Value</code> element. When you add a <code>HealthCheckId</code> element to a resource record set, Amazon Route 53 checks the health of the endpoint that you specified in the health check.</p> </li> </ul> <p>For geolocation resource record sets, if an endpoint is unhealthy, Amazon Route 53 looks for a resource record set for the larger, associated geographic region. For example, suppose you have resource record sets for a state in the United States, for the United States, for North America, and for all locations. If the endpoint for the state resource record set is unhealthy, Amazon Route 53 checks the resource record sets for the United States, for North America, and for all locations (a resource record set for which the value of CountryCode is <code>*</code>), in that order, until it finds a resource record set for which the endpoint is healthy.</p> <p>If your health checks specify the endpoint only by domain name, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as <code>us-east-1-www.example.com</code>), not the name of the resource record sets (example.com).</p> <important> <p>In this configuration, if you create a health check for which the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and then associate the health check with those resource record sets, health check results will be unpredictable.</p> </important>
      displayName: Get Health Check
      /status:
        displayName: Get Health Check Status
        get:
          description: 'Gets status of a specified health check. Send a <code>GET</code>
            request to the <code>/2013-04-01/healthcheck/<i>health check ID</i>/status</code>
            resource. You can use this call to get a health check''s current status. '
          displayName: Get Health Check Status
          queryParameters:
            Action:
              type: string
              enum:
              - GetHealthCheckStatus
          responses:
            200:
              body:
                application/xml: GetHealthCheckStatusResponse
            404:
              description: NoSuchHealthCheck
            400:
              description: InvalidInput
      /lastfailurereason:
        displayName: Get Health Check LastFailure Reason
        get:
          description: If you want to learn why a health check is currently failing or why it failed most recently (if at all), you can get the failure reason for the most recent failure. Send a <code>GET</code> request to the <code>/<i>Amazon Route 53 API version</i>/healthcheck/<i>health check ID</i>/lastfailurereason</code> resource.
          displayName: Get Health Check LastFailure Reason
          queryParameters:
            Action:
              type: string
              enum:
              - GetHealthCheckLastFailureReason
          responses:
            200:
              body:
                application/xml: GetHealthCheckLastFailureReasonResponse
            404:
              description: NoSuchHealthCheck
            400:
              description: InvalidInput
      delete:
        description: Deletes a health check. Send a <code>DELETE</code> request to the <code>/2013-04-01/healthcheck/<i>health check ID</i> </code> resource. <important> Amazon Route 53 does not prevent you from deleting a health check even if the health check is associated with one or more resource record sets. If you delete a health check and you don't update the associated resource record sets, the future status of the health check cannot be predicted and may change. This will affect the routing of DNS queries for your DNS failover configuration. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html#health-checks-deleting.html">Replacing and Deleting Health Checks</a> in the Amazon Route 53 Developer Guide. </important>
        displayName: Delete Health Check
        queryParameters:
          Action:
            type: string
            enum:
            - DeleteHealthCheck
        responses:
          200:
            body:
              application/xml: DeleteHealthCheckResponse
          404:
            description: NoSuchHealthCheck
          400:
            description: HealthCheckInUse | InvalidInput
      post:
        description: Updates an existing health check. Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/healthcheck/<i>health check ID</i> </code> resource. The request body must include an XML document with an <code>UpdateHealthCheckRequest</code> element. For more information about updating health checks, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html">Creating, Updating, and Deleting Health Checks</a> in the Amazon Route 53 Developer Guide.
        displayName: Update Health Check
        queryParameters:
          Action:
            type: string
            enum:
            - UpdateHealthCheck
        body:
          application/xml:
            type: object
            properties:
              HealthCheckVersion:
                type: HealthCheckVersion
                description: <p>A sequential counter that Amazon Route 53 sets to <code>1</code> when you create a health check and increments by <code>1</code> each time you update settings for the health check.</p> <p>We recommend that you use <code>GetHealthCheck</code> or <code>ListHealthChecks</code> to get the current value of <code>HealthCheckVersion</code> for the health check that you want to update, and that you include that value in your <code>UpdateHealthCheck</code> request. This prevents Amazon Route 53 from overwriting an intervening update:</p> <ul> <li> <p>f the value in the <code>UpdateHealthCheck</code> request matches the value of <code>HealthCheckVersion</code> in the health check, Amazon Route 53 updates the health check with the new settings.</p> </li> <li> <p>If the value of <code>HealthCheckVersion</code> in the health check is greater, the health check was changed after you got the version number. Amazon Route 53 does not update the health check, and it returns a <code>HealthCheckVersionMismatch</code> error.</p> </li> </ul>
              IPAddress:
                type: IPAddress
                description: <p>The IPv4 IP address of the endpoint on which you want Amazon Route 53 to perform health checks. If you don't specify a value for <code>IPAddress</code>, Amazon Route 53 sends a DNS request to resolve the domain name that you specify in <code>FullyQualifiedDomainName</code> at the interval you specify in <code>RequestInterval</code>. Using an IP address that DNS returns, Amazon Route 53 then checks the health of the endpoint.</p> <p>f the endpoint is an Amazon EC2 instance, we recommend that you create an Elastic IP address, associate it with your Amazon EC2 instance, and specify the Elastic IP address for <code>IPAddress</code>. This ensures that the IP address of your instance never changes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <note> <p>If a health check already has a value for <code>IPAddress</code>, you can change the value. However, you can't update an existing health check to add or remove the value of <code>IPAddress</code>. </p> </note> <p>For more information, see <a>UpdateHealthCheckRequest$FullyQualifiedDomainName</a>.</p>
              Port:
                type: Port
                description: <p>The port on the endpoint on which you want Amazon Route 53 to perform health checks.</p>
              ResourcePath:
                type: ResourcePath
                description: <p>The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. </p> <p>Specify this value only if you want to change it.</p>
              FullyQualifiedDomainName:
                type: FullyQualifiedDomainName
                description: <p>Amazon Route 53 behavior depends on whether you specify a value for <code>IPAddress</code>.</p> <note> <p>If a health check already has a value for <code>IPAddress</code>, you can change the value. However, you can't update an existing health check to add or remove the value of <code>IPAddress</code>. </p> </note> <p> <b>If you specify</b> <code>IPAddress</code>:</p> <p>The value that you want Amazon Route 53 to pass in the <code>Host</code> header in all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Amazon Route 53 to perform health checks. When Amazon Route 53 checks the health of an endpoint, here is how it constructs the <code>Host</code> header:</p> <ul> <li> <p>If you specify a value of <code>80</code> for <code>Port</code> and <code>HTTP</code> or <code>HTTP_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</p> </li> <li> <p>If you specify a value of <code>443</code> for <code>Port</code> and <code>HTTPS</code> or <code>HTTPS_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the Host header.</p> </li> <li> <p>If you specify another value for <code>Port</code> and any value except <code>TCP</code> for <code>Type</code>, Amazon Route 53 passes <i> <code>FullyQualifiedDomainName</code>:<code>Port</code> </i> to the endpoint in the Host header.</p> </li> </ul> <p>If you don't specify a value for <code>FullyQualifiedDomainName</code>, Amazon Route 53 substitutes the value of <code>IPAddress</code> in the <code>Host</code> header in each of the above cases.</p> <p> <b>If you don't specify</b> <code>IPAddress</code>:</p> <p>If you don't specify a value for <code>IPAddress</code>, Amazon Route 53 sends a DNS request to the domain that you specify in <code>FullyQualifiedDomainName</code> at the interval you specify in <code>RequestInterval</code>. Using an IP address that DNS returns, Amazon Route 53 then checks the health of the endpoint.</p> <p>If you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by <code>FullyQualifiedDomainName</code>, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as <code>us-east-1-www.example.com</code>), not the name of the resource record sets (www.example.com).</p> <important> <p>In this configuration, if the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.</p> </important> <p>In addition, if the value of <code>Type</code> is <code>HTTP</code>, <code>HTTPS</code>, <code>HTTP_STR_MATCH</code>, or <code>HTTPS_STR_MATCH</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header, as it does when you specify a value for <code>IPAddress</code>. If the value of <code>Type</code> is <code>TCP</code>, Amazon Route 53 doesn't pass a <code>Host</code> header.</p>
              SearchString:
                type: SearchString
                description: <p>If the value of <code>Type</code> is <code>HTTP_STR_MATCH</code> or <code>HTTP_STR_MATCH</code>, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Amazon Route 53 considers the resource healthy. (You can't change the value of <code>Type</code> when you update a health check.)</p>
              FailureThreshold:
                type: FailureThreshold
                description: <p>The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
              Inverted:
                type: Inverted
                description: <p>Specify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.</p>
              HealthThreshold:
                type: HealthThreshold
                description: <p>The number of child health checks that are associated with a <code>CALCULATED</code> health that Amazon Route 53 must consider healthy for the <code>CALCULATED</code> health check to be considered healthy. To specify the child health checks that you want to associate with a <code>CALCULATED</code> health check, use the <code>ChildHealthChecks</code> and <code>ChildHealthCheck</code> elements.</p> <p>Note the following:</p> <ul> <li> <p>If you specify a number greater than the number of child health checks, Amazon Route 53 always considers this health check to be unhealthy.</p> </li> <li> <p>If you specify <code>0</code>, Amazon Route 53 always considers this health check to be healthy.</p> </li> </ul>
              ChildHealthChecks:
                type: ChildHealthCheckList
                description: <p>A complex type that contains one <code>ChildHealthCheck</code> element for each health check that you want to associate with a <code>CALCULATED</code> health check.</p>
              EnableSNI:
                type: EnableSNI
                description: <p>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>client_hello</code> message during <code>TLS</code> negotiation. This allows the endpoint to respond to <code>HTTPS</code> health check requests with the applicable SSL/TLS certificate.</p> <p>Some endpoints require that HTTPS requests include the host name in the <code>client_hello</code> message. If you don't enable SNI, the status of the health check will be SSL alert <code>handshake_failure</code>. A health check can also have that status for other reasons. If SNI is enabled and you're still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.</p> <p>The SSL/TLS certificate on your endpoint includes a domain name in the <code>Common Name</code> field and possibly several more in the <code>Subject Alternative Names</code> field. One of the domain names in the certificate should match the value that you specify for <code>FullyQualifiedDomainName</code>. If the endpoint responds to the <code>client_hello</code> message with a certificate that does not include the domain name that you specified in <code>FullyQualifiedDomainName</code>, a health checker will retry the handshake. In the second attempt, the health checker will omit <code>FullyQualifiedDomainName</code> from the <code>client_hello</code> message.</p>
              Regions:
                type: HealthCheckRegionList
                description: <p>A complex type that contains one Region element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.</p>
              AlarmIdentifier:
                type: AlarmIdentifier
              InsufficientDataHealthStatus:
                type: InsufficientDataHealthStatus
        responses:
          200:
            body:
              application/xml: UpdateHealthCheckResponse
          404:
            description: NoSuchHealthCheck
          400:
            description: InvalidInput
          409:
            description: HealthCheckVersionMismatch
      get:
        description: Gets information about a specified health check. Send a <code>GET</code> request to the <code>/2013-04-01/healthcheck/<i>health check ID</i> </code> resource. For more information about using the console to perform this operation, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon Route 53 Health Checks and DNS Failover</a> in the Amazon Route 53 Developer Guide.
        displayName: Get Health Check
        queryParameters:
          Action:
            type: string
            enum:
            - GetHealthCheck
        responses:
          200:
            body:
              application/xml: GetHealthCheckResponse
          404:
            description: NoSuchHealthCheck
          400:
            description: InvalidInput | IncompatibleVersion
    post:
      description: 'Creates a new health check. To create a new health check, send
        a <code>POST</code> request to the <code>/2013-04-01/healthcheck</code> resource.
        The request body must include an XML document with a <code>CreateHealthCheckRequest</code>
        element. The response returns the <code>CreateHealthCheckResponse</code> element,
        containing the health check ID specified when adding health check to a resource
        record set. For information about adding health checks to resource record
        sets, see <a>ResourceRecordSet$HealthCheckId</a> in <a>ChangeResourceRecordSets</a>.  If
        you are registering Amazon EC2 instances with an Elastic Load Balancing (ELB)
        load balancer, do not create Amazon Route 53 health checks for the Amazon
        EC2 instances. When you register an Amazon EC2 instance with a load balancer,
        you configure settings for an ELB health check, which performs a similar function
        to an Amazon Route 53 health check. You can associate health checks with failover
        resource record sets in a private hosted zone. Note the following: <ul> <li>
        Amazon Route 53 health checkers are outside the VPC. To check the health of
        an endpoint within a VPC by IP address, you must assign a public IP address
        to the instance in the VPC. </li> <li> You can configure a health checker
        to check the health of an external resource that the instance relies on, such
        as a database server. </li> <li> You can create a CloudWatch metric, associate
        an alarm with the metric, and then create a health check that is based on
        the state of the alarm. For example, you might create a CloudWatch metric
        that checks the status of the Amazon EC2 <code>StatusCheckFailed</code> metric,
        add an alarm to the metric, and then create a health check that is based on
        the state of the alarm. For information about creating CloudWatch metrics
        and alarms by using the CloudWatch console, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/WhatIsCloudWatch.html">Amazon
        CloudWatch Developer Guide</a>. </li> </ul>'
      displayName: Create Health Check
      queryParameters:
        Action:
          type: string
          enum:
          - CreateHealthCheck
      body:
        application/xml: CreateHealthCheckRequest
      responses:
        201:
          headers:
            Location:
              type: ResourceURI
              description: <p>The unique URL representing the new health check.</p>
          body:
            application/xml:
              type: object
              properties:
                HealthCheck?:
                  type: HealthCheck
                  description: <p>A complex type that contains identifying information about the health check.</p>
        400:
          description: TooManyHealthChecks | InvalidInput
        409:
          description: HealthCheckAlreadyExists
    get:
      description: Retrieve a list of your health checks. Send a <code>GET</code> request to the <code>/2013-04-01/healthcheck</code> resource. The response to this request includes a <code>HealthChecks</code> element with zero or more <code>HealthCheck</code> child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the health check that the list begins with. For information about listing health checks using the Amazon Route 53 console, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon Route 53 Health Checks and DNS Failover</a>.
      displayName: List Health Checks
      queryParameters:
        Action:
          type: string
          enum:
          - ListHealthChecks
        marker?:
          type: PageMarker
          description: <p>If the response to a <code>ListHealthChecks</code> is more than one page, marker is the health check ID for the first health check on the next page of results. For more information, see <a>ListHealthChecksResponse$MaxItems</a>.</p>
        maxitems?:
          type: PageMaxItems
          description: <p>The maximum number of <code>HealthCheck</code> elements you want <code>ListHealthChecks</code> to return on each page of the response body. If the AWS account includes more <code>HealthCheck</code> elements than the value of <code>maxitems</code>, the response is broken into pages. Each page contains the number of <code>HealthCheck</code> elements specified by <code>maxitems</code>.</p> <p>For example, suppose you specify <code>10</code> for <code>maxitems</code> and the current AWS account has <code>51</code> health checks. In the response, <code>ListHealthChecks</code> sets <a>ListHealthChecksResponse$IsTruncated</a> to true and includes the <a>ListHealthChecksResponse$NextMarker</a> element. To access the second and subsequent pages, you resend the <code>GET</code> <code>ListHealthChecks</code> request, add the <a>ListHealthChecksResponse$Marker</a> parameter to the request, and specify the value of the <a>ListHealthChecksResponse$NextMarker</a> element from the previous response. On the last (sixth) page of the response, which contains only one HealthCheck element:</p> <ul> <li> <p>The value of <a>ListHealthChecksResponse$IsTruncated</a> is <code>false</code>.</p> </li> <li> <p> <a>ListHealthChecksResponse$NextMarker</a> is omitted.</p> </li> </ul>
      responses:
        200:
          body:
            application/xml: ListHealthChecksResponse
        400:
          description: InvalidInput | IncompatibleVersion
      (extras.Pagination):
        inputToken: Marker
        outputToken: NextMarker
        moreResults: IsTruncated
        limitKey: MaxItems
        resultKey: HealthChecks
  /change:
    /{Id}:
      uriParameters:
        Id:
          type: ResourceId
          description: <p>The ID of the change batch request. The value that you specify here is the value that <code>ChangeResourceRecordSets</code> returned in the Id element when you submitted the request.</p>
      displayName: Get Change
      get:
        description: 'Returns the current status of a change batch request. The status
          is one of the following values: <ul> <li>  <code>PENDING</code> indicates
          that the changes in this request have not replicated to all Amazon Route
          53 DNS servers. This is the initial status of all change batch requests.
          </li> <li>  <code>INSYNC</code> indicates that the changes have replicated
          to all Amazon Route 53 DNS servers.  </li> </ul>'
        displayName: Get Change
        queryParameters:
          Action:
            type: string
            enum:
            - GetChange
        responses:
          200:
            body:
              application/xml: GetChangeResponse
          404:
            description: NoSuchChange
          400:
            description: InvalidInput
  /delegationset:
    displayName: List Reusable Delegation Sets
    /{Id}:
      uriParameters:
        Id:
          type: ResourceId
          description: <p>The ID of the reusable delegation set you want to delete.</p>
      displayName: Get Reusable Delegation Set
      delete:
        description: Deletes a reusable delegation set. Send a <code>DELETE</code> request to the <code>/2013-04-01/delegationset/<i>delegation set ID</i> </code> resource. <important>  You can delete a reusable delegation set only if there are no associated hosted zones. </important> To verify that the reusable delegation set is not associated with any hosted zones, run the <a>GetReusableDelegationSet</a> action and specify the ID of the reusable delegation set that you want to delete.
        displayName: Delete Reusable Delegation Set
        queryParameters:
          Action:
            type: string
            enum:
            - DeleteReusableDelegationSet
        responses:
          200:
            body:
              application/xml: DeleteReusableDelegationSetResponse
          400:
            description: NoSuchDelegationSet | DelegationSetInUse | DelegationSetNotReusable | InvalidInput
      get:
        description: Retrieves the reusable delegation set. Send a <code>GET</code> request to the <code>/2013-04-01/delegationset/<i>delegation set ID</i> </code> resource.
        displayName: Get Reusable Delegation Set
        queryParameters:
          Action:
            type: string
            enum:
            - GetReusableDelegationSet
        responses:
          200:
            body:
              application/xml: GetReusableDelegationSetResponse
          400:
            description: NoSuchDelegationSet | DelegationSetNotReusable | InvalidInput
    post:
      description: Creates a delegation set (a group of four anem servers) that can be reused by multiple hosted zones. If a hosted zoned ID is specified, <code>CreateReusableDelegationSet</code> marks the delegation set associated with that zone as reusable Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/delegationset</code> resource. The request body must include an XML document with a <code>CreateReusableDelegationSetRequest</code> element. <note> A reusable delegation set cannot be associated with a private hosted zone/ </note> For more information, including a procedure on how to create and configure a reusable delegation set (also known as white label name servers), see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/white-label-name-servers.html">Configuring White Label Name Servers</a>.
      displayName: Create Reusable Delegation Set
      queryParameters:
        Action:
          type: string
          enum:
          - CreateReusableDelegationSet
      body:
        application/xml: CreateReusableDelegationSetRequest
      responses:
        201:
          headers:
            Location:
              type: ResourceURI
              description: <p>The unique URL representing the new reusbale delegation set.</p>
          body:
            application/xml:
              type: object
              properties:
                DelegationSet?:
                  type: DelegationSet
                  description: <p>A complex type that contains name server information.</p>
        400:
          description: DelegationSetAlreadyCreated | LimitsExceeded | HostedZoneNotFound | InvalidArgument | InvalidInput | DelegationSetNotAvailable | DelegationSetAlreadyReusable
    get:
      description: To retrieve a list of your reusable delegation sets, send a <code>GET</code> request to the <code>/2013-04-01/delegationset</code> resource. The response to this request includes a <code>DelegationSets</code> element with zero, one, or multiple <code>DelegationSet</code> child elements. By default, the list of delegation sets is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the delegation set that the list begins with.  <note>  Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100. </note>
      displayName: List Reusable Delegation Sets
      queryParameters:
        Action:
          type: string
          enum:
          - ListReusableDelegationSets
        marker?:
          type: PageMarker
          description: <p>If you're making the second or subsequent call to <code>ListReusableDelegationSets</code>, the <code>Marker</code> element matches the value that you specified in the <code>marker</code> parameter in the previous request.</p>
        maxitems?:
          type: PageMaxItems
          description: <p>The value that you specified for the <code>maxitems</code> parameter in the request that produced the current response.</p>
      responses:
        200:
          body:
            application/xml: ListReusableDelegationSetsResponse
        400:
          description: InvalidInput
  /testdnsanswer:
    displayName: Test D NS Answer
    get:
      displayName: Test D NS Answer
      queryParameters:
        Action:
          type: string
          enum:
          - TestDNSAnswer
        hostedzoneid:
          type: ResourceId
        recordname:
          type: DNSName
        recordtype:
          type: RRType
        resolverip?:
          type: IPAddress
        edns0clientsubnetip?:
          type: IPAddress
        edns0clientsubnetmask?:
          type: SubnetMask
      responses:
        200:
          body:
            application/xml: TestDNSAnswerResponse
        404:
          description: NoSuchHostedZone
        400:
          description: InvalidInput
  /geolocations:
    displayName: List Geo Locations
    get:
      description: 'Retrieves a list of supported geo locations. Send a <code>GET</code>
        request to the <code>/2013-04-01/geolocations</code> resource. The response
        to this request includes a <code>GeoLocationDetailsList</code> element for
        each location that Amazon Route 53 supports. Countries are listed first, and
        continents are listed last. If Amazon Route 53 supports subdivisions for a
        country (for example, states or provinces), the subdivisions for that country
        are listed in alphabetical order immediately after the corresponding country. '
      displayName: List Geo Locations
      queryParameters:
        Action:
          type: string
          enum:
          - ListGeoLocations
        startcontinentcode?:
          type: GeoLocationContinentCode
          description: <p>The code for the continent with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Amazon Route 53 has already returned a page or more of results, if <code>IsTruncated</code> is true, and if <code>NextContinentCode</code> from the previous response has a value, enter that value in <code>StartContinentCode</code> to return the next page of results.</p> <p>Include <code>StartContinentCode</code> only if you want to list continents. Don't include <code>StartContinentCode</code> when you're listing countries or countries with their subdivisions.</p>
        startcountrycode?:
          type: GeoLocationCountryCode
          description: <p>The code for the country with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Amazon Route 53 has already returned a page or more of results, if <code>IsTruncated</code> is <code>true</code>, and if <code>NextCountryCode</code> from the previous response has a value, enter that value in <code>StartCountryCode</code> to return the next page of results.</p> <p>Amazon Route 53 uses the two-letter country codes that are specified in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO standard 3166-1 alpha-2</a>.</p>
        startsubdivisioncode?:
          type: GeoLocationSubdivisionCode
          description: <p>The code for the subdivision (for example, state or province) with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Amazon Route 53 has already returned a page or more of results, if <code>IsTruncated</code> is <code>true</code>, and if <code>NextSubdivisionCode</code> from the previous response has a value, enter that value in <code>StartSubdivisionCode</code> to return the next page of results.</p> <p>To list subdivisions of a country, you must include both <code>StartCountryCode</code> and <code>StartSubdivisionCode</code>.</p>
        maxitems?:
          type: PageMaxItems
          description: <p>(Optional) The maximum number of geolocations to be included in the response body for this request. If more than <code>MaxItems</code> geolocations remain to be listed, then the value of the <code>IsTruncated</code> element in the response is <code>true</code>.</p>
      responses:
        200:
          body:
            application/xml: ListGeoLocationsResponse
        400:
          description: InvalidInput
  /trafficpolicy:
    displayName: Create Traffic Policy
    /{Id}:
      uriParameters:
        Id:
          type: TrafficPolicyId
          description: <p>The ID of the traffic policy that you want to delete.</p>
      displayName: Create Traffic Policy Version
      /{Version}:
        uriParameters:
          Version:
            type: TrafficPolicyVersion
            description: <p>The version number of the traffic policy that you want to delete.</p>
        displayName: Get Traffic Policy
        delete:
          description: Deletes a traffic policy. Send a <code>DELETE</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicy</code> resource.
          displayName: Delete Traffic Policy
          queryParameters:
            Action:
              type: string
              enum:
              - DeleteTrafficPolicy
          responses:
            200:
              body:
                application/xml: DeleteTrafficPolicyResponse
            404:
              description: NoSuchTrafficPolicy
            400:
              description: InvalidInput | TrafficPolicyInUse | ConcurrentModification
        post:
          description: Updates the comment for a specified traffic policy version. Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicy/</code> resource. The request body must include a document with an <code>UpdateTrafficPolicyCommentRequest</code> element.
          displayName: Update Traffic Policy Comment
          queryParameters:
            Action:
              type: string
              enum:
              - UpdateTrafficPolicyComment
          body:
            application/xml:
              type: object
              properties:
                Comment?:
                  type: TrafficPolicyComment
                  description: <p>The new comment for the specified traffic policy and version.</p>
          responses:
            200:
              body:
                application/xml: UpdateTrafficPolicyCommentResponse
            400:
              description: InvalidInput | ConcurrentModification
            404:
              description: NoSuchTrafficPolicy
        get:
          description: Gets information about a specific traffic policy version. Send a <code>GET</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicy</code> resource.
          displayName: Get Traffic Policy
          queryParameters:
            Action:
              type: string
              enum:
              - GetTrafficPolicy
          responses:
            200:
              body:
                application/xml: GetTrafficPolicyResponse
            404:
              description: NoSuchTrafficPolicy
            400:
              description: InvalidInput
      post:
        description: Creates a new version of an existing traffic policy. When you create a new version of a traffic policy, you specify the ID of the traffic policy that you want to update and a JSON-formatted document that describes the new version. You use traffic policies to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com). You can create a maximum of 1000 versions of a traffic policy. If you reach the limit and need to create another version, you'll need to start a new traffic policy. Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 version</i>/trafficpolicy/</code> resource. The request body includes a document with a <code>CreateTrafficPolicyVersionRequest</code> element. The response returns the <code>CreateTrafficPolicyVersionResponse</code> element, which contains information about the new version of the traffic policy.
        displayName: Create Traffic Policy Version
        queryParameters:
          Action:
            type: string
            enum:
            - CreateTrafficPolicyVersion
        body:
          application/xml:
            type: object
            properties:
              Document?:
                type: TrafficPolicyDocument
                description: <p>The definition of this version of the traffic policy, in JSON format. You specified the JSON in the <code>CreateTrafficPolicyVersion</code> request. For more information about the JSON format, see <a>CreateTrafficPolicy</a>.</p>
              Comment:
                type: TrafficPolicyComment
                description: <p>The comment that you specified in the <code>CreateTrafficPolicyVersion</code> request, if any.</p>
        responses:
          201:
            headers:
              Location:
                type: ResourceURI
            body:
              application/xml:
                type: object
                properties:
                  TrafficPolicy?:
                    type: TrafficPolicy
                    description: <p>A complex type that contains settings for the new version of the traffic policy.</p>
          404:
            description: NoSuchTrafficPolicy
          400:
            description: InvalidInput | ConcurrentModification | InvalidTrafficPolicyDocument
    post:
      description: Creates a traffic policy, which you use to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com). Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicy</code> resource. The request body must include a document with a <code>CreateTrafficPolicyRequest</code> element. The response includes the <code>CreateTrafficPolicyResponse</code> element, which contains information about the new traffic policy.
      displayName: Create Traffic Policy
      queryParameters:
        Action:
          type: string
          enum:
          - CreateTrafficPolicy
      body:
        application/xml: CreateTrafficPolicyRequest
      responses:
        201:
          headers:
            Location:
              type: ResourceURI
          body:
            application/xml:
              type: object
              properties:
                TrafficPolicy?:
                  type: TrafficPolicy
                  description: <p>A complex type that contains settings for the new traffic policy.</p>
        400:
          description: InvalidInput | TooManyTrafficPolicies | InvalidTrafficPolicyDocument
        409:
          description: TrafficPolicyAlreadyExists
  /trafficpolicies:
    displayName: List Traffic Policies
    /{Id}:
      uriParameters:
        Id:
          type: TrafficPolicyId
          description: <p>Specify the value of <code>Id</code> of the traffic policy for which you want to list all versions.</p>
      /versions:
        displayName: List Traffic Policy Versions
        get:
          description: 'Gets information about all of the versions for a specified
            traffic policy. Send a <code>GET</code> request to the <code>/<i>Amazon
            Route 53 API version</i>/trafficpolicy</code> resource and specify the
            ID of the traffic policy for which you want to list versions. Amazon Route
            53 returns a maximum of 100 items in each response. If you have a lot
            of traffic policies, you can use the <code>maxitems</code> parameter to
            list them in groups of up to 100. The response includes three values that
            help you navigate from one group of <code>maxitems</code>maxitems traffic
            policies to the next: <ul> <li>  <b>IsTruncated</b>  If the value of <code>IsTruncated</code>
            in the response is <code>true</code>, there are more traffic policy versions
            associated with the specified traffic policy. If <code>IsTruncated</code>
            is <code>false</code>, this response includes the last traffic policy
            version that is associated with the specified traffic policy. </li> <li>  <b>TrafficPolicyVersionMarker</b>  The
            ID of the next traffic policy version that is associated with the current
            AWS account. If you want to list more traffic policies, make another call
            to <code>ListTrafficPolicyVersions</code>, and specify the value of the
            <code>TrafficPolicyVersionMarker</code> element in the <code>TrafficPolicyVersionMarker</code>
            request parameter. If <code>IsTruncated</code> is <code>false</code>,
            Amazon Route 53 omits the <code>TrafficPolicyVersionMarker</code> element
            from the response. </li> <li>  <b>MaxItems</b>  The value that you specified
            for the <code>MaxItems</code> parameter in the request that produced the
            current response. </li> </ul>'
          displayName: List Traffic Policy Versions
          queryParameters:
            Action:
              type: string
              enum:
              - ListTrafficPolicyVersions
            trafficpolicyversion?:
              type: TrafficPolicyVersionMarker
              description: <p>For your first request to <code>ListTrafficPolicyVersions</code>, do not include the <code>TrafficPolicyVersionMarker</code> parameter.</p> <p>If you have more traffic policy versions than the value of <code>MaxItems</code>, <code>ListTrafficPolicyVersions</code> returns only the first group of <code>MaxItems</code> versions. To get the next group of <code>MaxItems</code> traffic policy versions, submit another request to <code>ListTrafficPolicyVersions</code>. For the value of <code>TrafficPolicyVersionMarker</code>, specify the value of the <code>TrafficPolicyVersionMarker</code> element that was returned in the previous response.</p> <p>Traffic policy versions are listed in sequential order.</p>
            maxitems?:
              type: PageMaxItems
              description: <p>The maximum number of traffic policy versions that you want Amazon Route 53 to include in the response body for this request. If the specified traffic policy has more than <code>MaxItems</code> versions, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the value of the <code>TrafficPolicyVersionMarker</code> element is the ID of the first version in the next group of <code>MaxItems</code> traffic policy versions.</p>
          responses:
            200:
              body:
                application/xml: ListTrafficPolicyVersionsResponse
            400:
              description: InvalidInput
            404:
              description: NoSuchTrafficPolicy
    get:
      description: 'Gets information about the latest version for every traffic policy
        that is associated with the current AWS account. Send a <code>GET</code> request
        to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicy</code> resource.
        Amazon Route 53 returns a maximum of 100 items in each response. If you have
        a lot of traffic policies, you can use the <code>maxitems</code> parameter
        to list them in groups of up to 100. The response includes three values that
        help you navigate from one group of <code>maxitems</code> traffic policies
        to the next: <ul> <li>  <b>IsTruncated</b>  If the value of <code>IsTruncated</code>
        in the response is <code>true</code>, there are more traffic policies associated
        with the current AWS account. If <code>IsTruncated</code> is <code>false</code>,
        this response includes the last traffic policy that is associated with the
        current account. </li> <li>  <b>TrafficPolicyIdMarker</b>  If <code>IsTruncated</code>
        is <code>true</code>, <code>TrafficPolicyIdMarker</code> is the ID of the
        first traffic policy in the next group of <code>MaxItems</code> traffic policies.
        If you want to list more traffic policies, make another call to <code>ListTrafficPolicies</code>,
        and specify the value of the <code>TrafficPolicyIdMarker</code> element from
        the response in the <code>TrafficPolicyIdMarker</code> request parameter.
        If <code>IsTruncated</code> is <code>false</code>, the <code>TrafficPolicyIdMarker</code>
        element is omitted from the response. </li> <li>  <b>MaxItems</b>  The value
        that you specified for the <code>MaxItems</code> parameter in the request
        that produced the current response. </li> </ul>'
      displayName: List Traffic Policies
      queryParameters:
        Action:
          type: string
          enum:
          - ListTrafficPolicies
        trafficpolicyid?:
          type: TrafficPolicyId
          description: <p>(Conditional) For your first request to <code>ListTrafficPolicies</code>, do not include the <code>TrafficPolicyIdMarker</code> parameter.</p> <p>If you have more traffic policies than the value of <code>MaxItems</code>, <code>ListTrafficPolicies</code> returns only the first <code>MaxItems</code> traffic policies. To get the next group of <code>MaxItems</code> policies, submit another request to <code>ListTrafficPolicies</code>. For the value of <code>TrafficPolicyIdMarker</code>, specify the value of the <code>TrafficPolicyIdMarker</code> element that was returned in the previous response.</p> <p>Policies are listed in the order in which they were created.</p>
        maxitems?:
          type: PageMaxItems
          description: <p>(Optional) The maximum number of traffic policies to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policies, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the value of the <code>TrafficPolicyIdMarker</code> element is the ID of the first traffic policy in the next group of <code>MaxItems</code> traffic policies.</p>
      responses:
        200:
          body:
            application/xml: ListTrafficPoliciesResponse
        400:
          description: InvalidInput
  /tags:
    /{ResourceType}:
      uriParameters:
        ResourceType:
          type: TagResourceType
          description: <p>The type of the resource.</p> <ul> <li> <p>The resource type for health checks is <code>healthcheck</code>.</p> </li> <li> <p>The resource type for hosted zones is <code>hostedzone</code>.</p> </li> </ul>
      displayName: List Tags ForResources
      /{ResourceId}:
        uriParameters:
          ResourceId:
            type: TagResourceId
            description: <p>The ID of the resource for which you want to retrieve tags.</p>
        displayName: Change Tags ForResource
        get:
          displayName: List Tags ForResource
          queryParameters:
            Action:
              type: string
              enum:
              - ListTagsForResource
          responses:
            200:
              body:
                application/xml: ListTagsForResourceResponse
            400:
              description: InvalidInput | PriorRequestNotComplete | ThrottlingException
            404:
              description: NoSuchHealthCheck | NoSuchHostedZone
        post:
          displayName: Change Tags ForResource
          queryParameters:
            Action:
              type: string
              enum:
              - ChangeTagsForResource
          body:
            application/xml:
              type: object
              properties:
                AddTags:
                  type: TagList
                  description: <p>A complex type that contains a list of the tags that you want to add to the specified health check or hosted zone and/or the tags for which you want to edit the <code>Value</code> element.</p> <p>You can add a maximum of 10 tags to a health check or a hosted zone.</p>
                RemoveTagKeys:
                  type: TagKeyList
                  description: <p>A complex type that contains a list of the tags that you want to delete from the specified health check or hosted zone. You can specify up to 10 keys.</p>
          responses:
            200:
              body:
                application/xml: ChangeTagsForResourceResponse
            400:
              description: InvalidInput | PriorRequestNotComplete | ThrottlingException
            404:
              description: NoSuchHealthCheck | NoSuchHostedZone
      post:
        displayName: List Tags ForResources
        queryParameters:
          Action:
            type: string
            enum:
            - ListTagsForResources
        body:
          application/xml:
            type: object
            properties:
              ResourceIds?:
                type: TagResourceIdList
                description: <p>A complex type that contains the ResourceId element for each resource for which you want to get a list of tags.</p>
        responses:
          200:
            body:
              application/xml: ListTagsForResourcesResponse
          400:
            description: InvalidInput | PriorRequestNotComplete | ThrottlingException
          404:
            description: NoSuchHealthCheck | NoSuchHostedZone
  /trafficpolicyinstance:
    displayName: Create Traffic Policy Instance
    /{Id}:
      uriParameters:
        Id:
          type: TrafficPolicyInstanceId
          description: <p>The ID of the traffic policy instance that you want to update.</p>
      displayName: Delete Traffic Policy Instance
      post:
        description: 'Updates the resource record sets in a specified hosted zone
          that were created based on the settings in a specified traffic policy version.
          Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicyinstance/<i>traffic
          policy ID</i> </code> resource. The request body must include a document
          with an <code>UpdateTrafficPolicyInstanceRequest</code> element. When you
          update a traffic policy instance, Amazon Route 53 continues to respond to
          DNS queries for the root resource record set name (such as example.com)
          while it replaces one group of resource record sets with another. Amazon
          Route 53 performs the following operations: <ol> <li> Amazon Route 53 creates
          a new group of resource record sets based on the specified traffic policy.
          This is true regardless of how substantial the differences are between the
          existing resource record sets and the new resource record sets.  </li> <li>
          When all of the new resource record sets have been created, Amazon Route
          53 starts to respond to DNS queries for the root resource record set name
          (such as example.com) by using the new resource record sets. </li> <li>
          Amazon Route 53 deletes the old group of resource record sets that are associated
          with the root resource record set name. </li> </ol>'
        displayName: Update Traffic Policy Instance
        queryParameters:
          Action:
            type: string
            enum:
            - UpdateTrafficPolicyInstance
        body:
          application/xml:
            type: object
            properties:
              TTL?:
                type: TTL
                description: <p>The TTL that you want Amazon Route 53 to assign to all of the updated resource record sets.</p>
              TrafficPolicyId?:
                type: TrafficPolicyId
                description: <p>The ID of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.</p>
              TrafficPolicyVersion?:
                type: TrafficPolicyVersion
                description: <p>The version of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.</p>
        responses:
          200:
            body:
              application/xml: UpdateTrafficPolicyInstanceResponse
          400:
            description: InvalidInput | PriorRequestNotComplete | ConflictingTypes
          404:
            description: NoSuchTrafficPolicy | NoSuchTrafficPolicyInstance
      get:
        description: Gets information about a specified traffic policy instance. Send a <code>GET</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicyinstance</code> resource. <note> After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element. </note> <note> In the Amazon Route 53 console, traffic policy instances are known as policy records. </note>
        displayName: Get Traffic Policy Instance
        queryParameters:
          Action:
            type: string
            enum:
            - GetTrafficPolicyInstance
        responses:
          200:
            body:
              application/xml: GetTrafficPolicyInstanceResponse
          404:
            description: NoSuchTrafficPolicyInstance
          400:
            description: InvalidInput
      delete:
        description: Deletes a traffic policy instance and all of the resource record sets that Amazon Route 53 created when you created the instance. Send a <code>DELETE</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicy/<i>traffic policy instance ID</i> </code> resource. <note> In the Amazon Route 53 console, traffic policy instances are known as policy records. </note>
        displayName: Delete Traffic Policy Instance
        queryParameters:
          Action:
            type: string
            enum:
            - DeleteTrafficPolicyInstance
        responses:
          200:
            body:
              application/xml: DeleteTrafficPolicyInstanceResponse
          404:
            description: NoSuchTrafficPolicyInstance
          400:
            description: InvalidInput | PriorRequestNotComplete
    post:
      description: Creates resource record sets in a specified hosted zone based on the settings in a specified traffic policy version. In addition, <code>CreateTrafficPolicyInstance</code> associates the resource record sets with a specified domain name (such as example.com) or subdomain name (such as www.example.com). Amazon Route 53 responds to DNS queries for the domain or subdomain name by using the resource record sets that <code>CreateTrafficPolicyInstance</code> created. Send a <code>POST</code> request to the <code>/<i>Amazon Route 53 API version</i>/trafficpolicyinstance</code> resource. The request body must include a document with a <code>CreateTrafficPolicyRequest</code> element. The response returns the <code>CreateTrafficPolicyInstanceResponse</code> element, which contains information about the traffic policy instance.
      displayName: Create Traffic Policy Instance
      queryParameters:
        Action:
          type: string
          enum:
          - CreateTrafficPolicyInstance
      body:
        application/xml: CreateTrafficPolicyInstanceRequest
      responses:
        201:
          headers:
            Location:
              type: ResourceURI
              description: <p>A unique URL that represents a new traffic policy instance.</p>
          body:
            application/xml:
              type: object
              properties:
                TrafficPolicyInstance?:
                  type: TrafficPolicyInstance
                  description: <p>A complex type that contains settings for the new traffic policy instance.</p>
        404:
          description: NoSuchHostedZone | NoSuchTrafficPolicy
        400:
          description: InvalidInput | TooManyTrafficPolicyInstances
        409:
          description: TrafficPolicyInstanceAlreadyExists
  /geolocation:
    displayName: Get Geo Location
    get:
      description: 'Retrieves a single geo location. Send a <code>GET</code> request
        to the <code>/2013-04-01/geolocation</code> resource with one of these options:
        continentcode | countrycode | countrycode and subdivisioncode.'
      displayName: Get Geo Location
      queryParameters:
        Action:
          type: string
          enum:
          - GetGeoLocation
        continentcode?:
          type: GeoLocationContinentCode
          description: '<p>Amazon Route 53 supports the following contintent codes:</p>
            <ul> <li> <p> <b>AF</b>: Africa</p> </li> <li> <p> <b>AN</b>: Antarctica</p>
            </li> <li> <p> <b>AS</b>: Asia</p> </li> <li> <p> <b>EU</b>: Europe</p>
            </li> <li> <p> <b>OC</b>: Oceania</p> </li> <li> <p> <b>NA</b>: North
            America</p> </li> <li> <p> <b>SA</b>: South America</p> </li> </ul>'
        countrycode?:
          type: GeoLocationCountryCode
          description: <p>Amazon Route 53 uses the two-letter country codes that are specified in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO standard 3166-1 alpha-2</a>.</p>
        subdivisioncode?:
          type: GeoLocationSubdivisionCode
          description: <p>Amazon Route 53 uses the one- to three-letter subdivision codes that are specified in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO standard 3166-1 alpha-2</a>. Amazon Route 53 doesn't support subdivision codes for all countries. If you specify <code>SubdivisionCode</code>, you must also specify <code>CountryCode</code>. </p>
      responses:
        200:
          body:
            application/xml: GetGeoLocationResponse
        404:
          description: NoSuchGeoLocation
        400:
          description: InvalidInput
  /hostedzonesbyname:
    displayName: List Hosted Zones By Name
    get:
      description: 'Retrieves a list of your hosted zones in lexicographic order.
        Send a <code>GET</code> request to the <code>/2013-04-01/hostedzonesbyname</code>
        resource. The response includes a <code>HostedZones</code> child element for
        each hosted zone created by the current AWS account.   <code>ListHostedZonesByName</code>
        sorts hosted zones by name with the labels reversed. For example: <ul> <li>  <code>com.example.www.</code>  </li>
        </ul> Note the trailing dot, which can change the sort order in some circumstances.
        If the domain name includes escape characters or Punycode, <code>ListHostedZonesByName</code>
        alphabetizes the domain name using the escaped or Punycoded value, which is
        the format that Amazon Route 53 saves in its database. For example, to create
        a hosted zone for example.com, specify ex\344mple.com for the domain name.
        <code>ListHostedZonesByName</code> alphabetizes it as: <ul> <li>  <code>com.ex\344mple.</code>  </li>
        </ul> The labels are reversed and alphabetized using the escaped value. For
        more information about valid domain name formats, including internationalized
        domain names, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS
        Domain Name Format</a> in the Amazon Route 53 Developer Guide. Amazon Route
        53 returns up to 100 items in each response. If you have a lot of hosted zones,
        use the <code>MaxItems</code> parameter to list them in groups of up to 100.
        The response includes values that help navigate from one group of <code>MaxItems</code>
        hosted zones to the next: <ul> <li> The <code>DNSName</code> and <code>HostedZoneId</code>
        elements in the response contain the values, if any, specified for the <code>dnsname</code>
        and <code>hostedzoneid</code> parameters in the request that produced the
        current response. </li> <li> The <code>MaxItems</code> element in the response
        contains the value, if any, that you specified for the <code>maxitems</code>
        parameter in the request that produced the current response. </li> <li> If
        the value of <code>IsTruncated</code> in the response is true, there are more
        hosted zones associated with the current AWS account.  If <code>IsTruncated</code>
        is false, this response includes the last hosted zone that is associated with
        the current account. The <code>NextDNSName</code> element and <code>NextHostedZoneId</code>
        elements are omitted from the response. </li> <li> The <code>NextDNSName</code>
        and <code>NextHostedZoneId</code> elements in the response contain the domain
        name and the hosted zone ID of the next hosted zone that is associated with
        the current AWS account. If you want to list more hosted zones, make another
        call to <code>ListHostedZonesByName</code>, and specify the value of <code>NextDNSName</code>
        and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code>
        parameters, respectively. </li> </ul>'
      displayName: List Hosted Zones By Name
      queryParameters:
        Action:
          type: string
          enum:
          - ListHostedZonesByName
        dnsname?:
          type: DNSName
          description: <p>(Optional) For your first request to <code>ListHostedZonesByName</code>, include the <code>dnsname</code> parameter only if you want to specify the name of the first hosted zone in the response. If you don't include the <code>dnsname</code> parameter, Amazon Route 53 returns all of the hosted zones that were created by the current AWS account, in ASCII order. For subsequent requests, include both <code>dnsname</code> and <code>hostedzoneid</code> parameters. For <code>dnsname</code>, specify the value of <code>NextDNSName</code> from the previous response.</p>
        hostedzoneid?:
          type: ResourceId
          description: <p>(Optional) For your first request to <code>ListHostedZonesByName</code>, do not include the <code>hostedzoneid</code> parameter.</p> <p>If you have more hosted zones than the value of <code>maxitems</code>, <code>ListHostedZonesByName</code> returns only the first <code>maxitems</code> hosted zones. To get the next group of <code>maxitems</code> hosted zones, submit another request to <code>ListHostedZonesByName</code> and include both <code>dnsname</code> and <code>hostedzoneid</code> parameters. For the value of <code>hostedzoneid</code>, specify the value of the <code>NextHostedZoneId</code> element from the previous response.</p>
        maxitems?:
          type: PageMaxItems
          description: <p>The maximum number of hosted zones to be included in the response body for this request. If you have more than <code>maxitems</code> hosted zones, then the value of the <code>IsTruncated</code> element in the response is true, and the values of <code>NextDNSName</code> and <code>NextHostedZoneId</code> specify the first hosted zone in the next group of <code>maxitems</code> hosted zones. </p>
      responses:
        200:
          body:
            application/xml: ListHostedZonesByNameResponse
        400:
          description: InvalidInput | InvalidDomainName
  /hostedzonecount:
    displayName: Get Hosted Zone Count
    get:
      description: Retrieves a count of all your hosted zones. Send a <code>GET</code> request to the <code>/2013-04-01/hostedzonecount</code> resource.
      displayName: Get Hosted Zone Count
      queryParameters:
        Action:
          type: string
          enum:
          - GetHostedZoneCount
      body:
        application/xml: GetHostedZoneCountRequest
      responses:
        200:
          body:
            application/xml: GetHostedZoneCountResponse
        400:
          description: InvalidInput
  /changedetails:
    /{Id}:
      uriParameters:
        Id:
          type: ResourceId
          description: <p>The ID of the change batch. This is the value that you specified in the <code>change ID</code> parameter when you submitted the request.</p>
      displayName: Get Change Details
      get:
        description: Returns the status and changes of a change batch request.
        displayName: Get Change Details
        queryParameters:
          Action:
            type: string
            enum:
            - GetChangeDetails
        responses:
          200:
            body:
              application/xml: GetChangeDetailsResponse
          404:
            description: NoSuchChange
          400:
            description: InvalidInput
  /healthcheckcount:
    displayName: Get Health Check Count
    get:
      description: To retrieve a count of all your health checks, send a <code>GET</code> request to the <code>/2013-04-01/healthcheckcount</code> resource.
      displayName: Get Health Check Count
      queryParameters:
        Action:
          type: string
          enum:
          - GetHealthCheckCount
      body:
        application/xml: GetHealthCheckCountRequest
      responses:
        200:
          body:
            application/xml: GetHealthCheckCountResponse
  /checkeripranges:
    displayName: Get Checker Ip Ranges
    get:
      description: Retrieves a list of the IP ranges used by Amazon Route 53 health checkers to check the health of your resources. Send a <code>GET</code> request to the <code>/<i>Amazon Route 53 API version</i>/checkeripranges</code> resource. Use these IP addresses to configure router and firewall rules to allow health checkers to check the health of your resources.
      displayName: Get Checker Ip Ranges
      queryParameters:
        Action:
          type: string
          enum:
          - GetCheckerIpRanges
      body:
        application/xml: GetCheckerIpRangesRequest
      responses:
        200:
          body:
            application/xml: GetCheckerIpRangesResponse
