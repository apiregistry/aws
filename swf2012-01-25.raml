#%RAML 1.0
title: Amazon Simple Workflow Service
version: '2012-01-25'
description: '  The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build
  applications that use Amazon''s cloud to coordinate work across distributed components.
  In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed
  by a component of your workflow. Coordinating tasks in a workflow involves managing
  intertask dependencies, scheduling, and concurrency in accordance with the logical
  flow of the application.  Amazon SWF gives you full control over implementing tasks
  and coordinating them without worrying about underlying complexities such as tracking
  their progress and maintaining their state.  This documentation serves as reference
  only. For a broader overview of the Amazon SWF programming model, see the <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/">Amazon
  SWF Developer Guide</a>.'
mediaType:
- application/json
types:
  ActivityId:
    type: string
    minLength: 1
    maxLength: 256
  ActivityTaskTimeoutType:
    type: string
    enum:
    - START_TO_CLOSE
    - SCHEDULE_TO_START
    - SCHEDULE_TO_CLOSE
    - HEARTBEAT
  ActivityTypeInfoList:
    type: array
    items:
      type: ActivityTypeInfo
  Arn:
    type: string
    minLength: 1
    maxLength: 1224
  CancelTimerFailedCause:
    type: string
    enum:
    - TIMER_ID_UNKNOWN
    - OPERATION_NOT_PERMITTED
  CancelWorkflowExecutionFailedCause:
    type: string
    enum:
    - UNHANDLED_DECISION
    - OPERATION_NOT_PERMITTED
  Canceled:
    type: boolean
  CauseMessage:
    type: string
    maxLength: 1728
  ChildPolicy:
    type: string
    enum:
    - TERMINATE
    - REQUEST_CANCEL
    - ABANDON
  CloseStatus:
    type: string
    enum:
    - COMPLETED
    - FAILED
    - CANCELED
    - TERMINATED
    - CONTINUED_AS_NEW
    - TIMED_OUT
  CompleteWorkflowExecutionFailedCause:
    type: string
    enum:
    - UNHANDLED_DECISION
    - OPERATION_NOT_PERMITTED
  ContinueAsNewWorkflowExecutionFailedCause:
    type: string
    enum:
    - UNHANDLED_DECISION
    - WORKFLOW_TYPE_DEPRECATED
    - WORKFLOW_TYPE_DOES_NOT_EXIST
    - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
    - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
    - DEFAULT_TASK_LIST_UNDEFINED
    - DEFAULT_CHILD_POLICY_UNDEFINED
    - CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED
    - OPERATION_NOT_PERMITTED
  Count:
    type: integer
    format: int
    minimum: 0
  Data:
    type: string
    maxLength: 32768
  DecisionList:
    type: array
    items:
      type: Decision
  DecisionTaskTimeoutType:
    type: string
    enum:
    - START_TO_CLOSE
  DecisionType:
    type: string
    enum:
    - ScheduleActivityTask
    - RequestCancelActivityTask
    - CompleteWorkflowExecution
    - FailWorkflowExecution
    - CancelWorkflowExecution
    - ContinueAsNewWorkflowExecution
    - RecordMarker
    - StartTimer
    - CancelTimer
    - SignalExternalWorkflowExecution
    - RequestCancelExternalWorkflowExecution
    - StartChildWorkflowExecution
    - ScheduleLambdaFunction
  Description:
    type: string
    maxLength: 1024
  DomainInfoList:
    type: array
    items:
      type: DomainInfo
  DomainName:
    type: string
    minLength: 1
    maxLength: 256
  DurationInDays:
    type: string
    minLength: 1
    maxLength: 8
  DurationInSeconds:
    type: string
    minLength: 1
    maxLength: 8
  DurationInSecondsOptional:
    type: string
    maxLength: 8
  EventId:
    type: integer
    format: long
  EventType:
    type: string
    enum:
    - WorkflowExecutionStarted
    - WorkflowExecutionCancelRequested
    - WorkflowExecutionCompleted
    - CompleteWorkflowExecutionFailed
    - WorkflowExecutionFailed
    - FailWorkflowExecutionFailed
    - WorkflowExecutionTimedOut
    - WorkflowExecutionCanceled
    - CancelWorkflowExecutionFailed
    - WorkflowExecutionContinuedAsNew
    - ContinueAsNewWorkflowExecutionFailed
    - WorkflowExecutionTerminated
    - DecisionTaskScheduled
    - DecisionTaskStarted
    - DecisionTaskCompleted
    - DecisionTaskTimedOut
    - ActivityTaskScheduled
    - ScheduleActivityTaskFailed
    - ActivityTaskStarted
    - ActivityTaskCompleted
    - ActivityTaskFailed
    - ActivityTaskTimedOut
    - ActivityTaskCanceled
    - ActivityTaskCancelRequested
    - RequestCancelActivityTaskFailed
    - WorkflowExecutionSignaled
    - MarkerRecorded
    - RecordMarkerFailed
    - TimerStarted
    - StartTimerFailed
    - TimerFired
    - TimerCanceled
    - CancelTimerFailed
    - StartChildWorkflowExecutionInitiated
    - StartChildWorkflowExecutionFailed
    - ChildWorkflowExecutionStarted
    - ChildWorkflowExecutionCompleted
    - ChildWorkflowExecutionFailed
    - ChildWorkflowExecutionTimedOut
    - ChildWorkflowExecutionCanceled
    - ChildWorkflowExecutionTerminated
    - SignalExternalWorkflowExecutionInitiated
    - SignalExternalWorkflowExecutionFailed
    - ExternalWorkflowExecutionSignaled
    - RequestCancelExternalWorkflowExecutionInitiated
    - RequestCancelExternalWorkflowExecutionFailed
    - ExternalWorkflowExecutionCancelRequested
    - LambdaFunctionScheduled
    - LambdaFunctionStarted
    - LambdaFunctionCompleted
    - LambdaFunctionFailed
    - LambdaFunctionTimedOut
    - ScheduleLambdaFunctionFailed
    - StartLambdaFunctionFailed
  ExecutionStatus:
    type: string
    enum:
    - OPEN
    - CLOSED
  FailWorkflowExecutionFailedCause:
    type: string
    enum:
    - UNHANDLED_DECISION
    - OPERATION_NOT_PERMITTED
  FailureReason:
    type: string
    maxLength: 256
  FunctionId:
    type: string
    minLength: 1
    maxLength: 256
  FunctionInput:
    type: string
    minLength: 1
    maxLength: 32768
  FunctionName:
    type: string
    minLength: 1
    maxLength: 64
  HistoryEventList:
    type: array
    items:
      type: HistoryEvent
  Identity:
    type: string
    maxLength: 256
  LambdaFunctionTimeoutType:
    type: string
    enum:
    - START_TO_CLOSE
  LimitedData:
    type: string
    maxLength: 2048
  MarkerName:
    type: string
    minLength: 1
    maxLength: 256
  Name:
    type: string
    minLength: 1
    maxLength: 256
  OpenDecisionTasksCount:
    type: integer
    format: int
    minimum: 0
    maximum: 1
  PageSize:
    type: integer
    format: int
    minimum: 0
    maximum: 1000
  PageToken:
    type: string
    maxLength: 2048
  RecordMarkerFailedCause:
    type: string
    enum:
    - OPERATION_NOT_PERMITTED
  RegistrationStatus:
    type: string
    enum:
    - REGISTERED
    - DEPRECATED
  RequestCancelActivityTaskFailedCause:
    type: string
    enum:
    - ACTIVITY_ID_UNKNOWN
    - OPERATION_NOT_PERMITTED
  RequestCancelExternalWorkflowExecutionFailedCause:
    type: string
    enum:
    - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
    - REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
    - OPERATION_NOT_PERMITTED
  ReverseOrder:
    type: boolean
  RunId:
    type: string
    minLength: 1
    maxLength: 64
  RunIdOptional:
    type: string
    maxLength: 64
  ScheduleActivityTaskFailedCause:
    type: string
    enum:
    - ACTIVITY_TYPE_DEPRECATED
    - ACTIVITY_TYPE_DOES_NOT_EXIST
    - ACTIVITY_ID_ALREADY_IN_USE
    - OPEN_ACTIVITIES_LIMIT_EXCEEDED
    - ACTIVITY_CREATION_RATE_EXCEEDED
    - DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED
    - DEFAULT_TASK_LIST_UNDEFINED
    - DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED
    - DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED
    - DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED
    - OPERATION_NOT_PERMITTED
  ScheduleLambdaFunctionFailedCause:
    type: string
    enum:
    - ID_ALREADY_IN_USE
    - OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED
    - LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED
    - LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION
  SignalExternalWorkflowExecutionFailedCause:
    type: string
    enum:
    - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
    - SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
    - OPERATION_NOT_PERMITTED
  SignalName:
    type: string
    minLength: 1
    maxLength: 256
  StartChildWorkflowExecutionFailedCause:
    type: string
    enum:
    - WORKFLOW_TYPE_DOES_NOT_EXIST
    - WORKFLOW_TYPE_DEPRECATED
    - OPEN_CHILDREN_LIMIT_EXCEEDED
    - OPEN_WORKFLOWS_LIMIT_EXCEEDED
    - CHILD_CREATION_RATE_EXCEEDED
    - WORKFLOW_ALREADY_RUNNING
    - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
    - DEFAULT_TASK_LIST_UNDEFINED
    - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
    - DEFAULT_CHILD_POLICY_UNDEFINED
    - OPERATION_NOT_PERMITTED
  StartLambdaFunctionFailedCause:
    type: string
    enum:
    - ASSUME_ROLE_FAILED
  StartTimerFailedCause:
    type: string
    enum:
    - TIMER_ID_ALREADY_IN_USE
    - OPEN_TIMERS_LIMIT_EXCEEDED
    - TIMER_CREATION_RATE_EXCEEDED
    - OPERATION_NOT_PERMITTED
  Tag:
    type: string
    minLength: 1
    maxLength: 256
  TagList:
    type: array
    maxItems: 5
    items:
      type: Tag
  TaskPriority:
    type: string
    maxLength: 11
  TaskToken:
    type: string
    minLength: 1
    maxLength: 1024
  TerminateReason:
    type: string
    maxLength: 256
  TimerId:
    type: string
    minLength: 1
    maxLength: 256
  Timestamp:
    type: datetime
  Truncated:
    type: boolean
  Version:
    type: string
    minLength: 1
    maxLength: 64
  VersionOptional:
    type: string
    maxLength: 64
  WorkflowExecutionCancelRequestedCause:
    type: string
    enum:
    - CHILD_POLICY_APPLIED
  WorkflowExecutionInfoList:
    type: array
    items:
      type: WorkflowExecutionInfo
  WorkflowExecutionTerminatedCause:
    type: string
    enum:
    - CHILD_POLICY_APPLIED
    - EVENT_LIMIT_EXCEEDED
    - OPERATOR_INITIATED
  WorkflowExecutionTimeoutType:
    type: string
    enum:
    - START_TO_CLOSE
  WorkflowId:
    type: string
    minLength: 1
    maxLength: 256
  WorkflowTypeInfoList:
    type: array
    items:
      type: WorkflowTypeInfo
  ActivityTask:
    type: object
    properties:
      taskToken:
        type: TaskToken
        description: <p>The opaque string used as a handle on the task. This token is used by workers to communicate progress and response information back to the system about the task.</p>
      activityId:
        type: ActivityId
        description: <p>The unique ID of the task.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskStarted</code> event recorded in the history.</p>
      workflowExecution:
        type: WorkflowExecution
        description: <p>The workflow execution that started this activity task.</p>
      activityType:
        type: ActivityType
        description: <p>The type of this activity task.</p>
      input?:
        type: Data
        description: <p>The inputs provided when the activity task was scheduled. The form of the input is user defined and should be meaningful to the activity implementation.</p>
    description: <p>Unit of work sent to an activity worker.</p>
  ActivityTaskCancelRequestedEventAttributes:
    type: object
    properties:
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>RequestCancelActivityTask</code> decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      activityId:
        type: ActivityId
        description: <p>The unique ID of the task.</p>
    description: <p>Provides details of the <code>ActivityTaskCancelRequested</code> event.</p>
  ActivityTaskCanceledEventAttributes:
    type: object
    properties:
      details?:
        type: Data
        description: <p>Details of the cancellation (if any).</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      latestCancelRequestedEventId?:
        type: EventId
        description: <p>If set, contains the ID of the last <code>ActivityTaskCancelRequested</code> event recorded for this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ActivityTaskCanceled</code> event.</p>
  ActivityTaskCompletedEventAttributes:
    type: object
    properties:
      result?:
        type: Data
        description: <p>The results of the activity task (if any).</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ActivityTaskCompleted</code> event.</p>
  ActivityTaskFailedEventAttributes:
    type: object
    properties:
      reason?:
        type: FailureReason
        description: <p>The reason provided for the failure (if any).</p>
      details?:
        type: Data
        description: <p>The details of the failure (if any).</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ActivityTaskFailed</code> event.</p>
  ActivityTaskScheduledEventAttributes:
    type: object
    properties:
      activityType:
        type: ActivityType
        description: <p>The type of the activity task.</p>
      activityId:
        type: ActivityId
        description: <p>The unique ID of the activity task.</p>
      input?:
        type: Data
        description: <p>The input provided to the activity task.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent workflow tasks. This data is not sent to the activity.</p>
      scheduleToStartTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum amount of time the activity task can wait to be assigned to a worker.</p>
      scheduleToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum amount of time for this activity task.</p>
      startToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum amount of time a worker may take to process the activity task.</p>
      taskList:
        type: TaskList
        description: <p>The task list in which the activity task has been scheduled.</p>
      taskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> The priority to assign to the scheduled activity task. If set, this will override any default priority value that was assigned when the activity type was registered.</p> <p>Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision that resulted in the scheduling of this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      heartbeatTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum time before which the worker processing this task must report progress by calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity task is automatically timed out. If the worker subsequently attempts to record a heartbeat or return a result, it will be ignored.</p>
    description: <p>Provides details of the <code>ActivityTaskScheduled</code> event.</p>
  ActivityTaskStartedEventAttributes:
    type: object
    properties:
      identity?:
        type: Identity
        description: <p>Identity of the worker that was assigned this task. This aids diagnostics when problems arise. The form of this identity is user defined.</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ActivityTaskStarted</code> event.</p>
  ActivityTaskStatus:
    type: object
    properties:
      cancelRequested:
        type: Canceled
        description: <p>Set to <code>true</code> if cancellation of the task is requested.</p>
    description: <p>Status information about an activity task.</p>
  ActivityTaskTimedOutEventAttributes:
    type: object
    properties:
      timeoutType:
        type: ActivityTaskTimeoutType
        description: <p>The type of the timeout that caused this event.</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      details?:
        type: LimitedData
        description: <p>Contains the content of the <code>details</code> parameter for the last call made by the activity to <code>RecordActivityTaskHeartbeat</code>.</p>
    description: <p>Provides details of the <code>ActivityTaskTimedOut</code> event.</p>
  ActivityType:
    type: object
    properties:
      name:
        type: Name
        description: <p>The name of this activity.</p> <note>The combination of activity type name and version must be unique within a domain.</note>
      version:
        type: Version
        description: <p>The version of this activity.</p> <note>The combination of activity type name and version must be unique with in a domain.</note>
    description: <p>Represents an activity type.</p>
  ActivityTypeConfiguration:
    type: object
    properties:
      defaultTaskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p><i>Optional.</i> The default maximum duration for tasks of an activity type specified when registering the activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultTaskHeartbeatTimeout?:
        type: DurationInSecondsOptional
        description: <p><i>Optional.</i> The default maximum time, in seconds, before which a worker processing a task must report progress by calling <a>RecordActivityTaskHeartbeat</a>.</p> <p>You can specify this value only when <i>registering</i> an activity type. The registered default value can be overridden when you schedule a task through the <code>ScheduleActivityTask</code> decision. If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker receives an <code>UnknownResource</code> fault. In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultTaskList?:
        type: TaskList
        description: <p><i>Optional.</i> The default task list specified for this activity type at registration. This default is used if a task list is not provided when a task is scheduled through the <code>ScheduleActivityTask</code> decision. You can override the default registered task list when scheduling a task through the <code>ScheduleActivityTask</code> decision.</p>
      defaultTaskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> The default task priority for tasks of this activity type, specified at registration. If not set, then "0" will be used as the default priority. This default can be overridden when scheduling an activity task.</p> <p>Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      defaultTaskScheduleToStartTimeout?:
        type: DurationInSecondsOptional
        description: <p><i>Optional.</i> The default maximum duration, specified when registering the activity type, that a task of an activity type can wait before being assigned to a worker. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultTaskScheduleToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p><i>Optional.</i> The default maximum duration, specified when registering the activity type, for tasks of this activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
    description: <p>Configuration settings registered with the activity type.</p>
  ActivityTypeDetail:
    type: object
    properties:
      typeInfo:
        type: ActivityTypeInfo
        description: '<p>General information about the activity type.</p> <p>The status
          of activity type (returned in the ActivityTypeInfo structure) can be one
          of the following.</p> <ul> <li> <b>REGISTERED</b>: The type is registered
          and available. Workers supporting this type should be running. </li> <li>
          <b>DEPRECATED</b>: The type was deprecated using <a>DeprecateActivityType</a>,
          but is still in use. You should keep workers supporting this type running.
          You cannot create new tasks of this type. </li> </ul>'
      configuration:
        type: ActivityTypeConfiguration
        description: <p>The configuration settings registered with the activity type.</p>
    description: <p>Detailed information about an activity type.</p>
  ActivityTypeInfo:
    type: object
    properties:
      activityType:
        type: ActivityType
        description: <p>The <a>ActivityType</a> type structure representing the activity type.</p>
      status:
        type: RegistrationStatus
        description: <p>The current status of the activity type.</p>
      description?:
        type: Description
        description: <p>The description of the activity type provided in <a>RegisterActivityType</a>.</p>
      creationDate:
        type: Timestamp
        description: <p>The date and time this activity type was created through <a>RegisterActivityType</a>.</p>
      deprecationDate?:
        type: Timestamp
        description: <p>If DEPRECATED, the date and time <a>DeprecateActivityType</a> was called.</p>
    description: <p>Detailed information about an activity type.</p>
  ActivityTypeInfos:
    type: object
    properties:
      typeInfos:
        type: ActivityTypeInfoList
        description: <p>List of activity type information.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
    description: <p>Contains a paginated list of activity type information structures.</p>
  CancelTimerDecisionAttributes:
    type: object
    properties:
      timerId:
        type: TimerId
        description: <p><b>Required.</b> The unique ID of the timer to cancel.</p>
    description: <p>Provides details of the <code>CancelTimer</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  CancelTimerFailedEventAttributes:
    type: object
    properties:
      timerId:
        type: TimerId
        description: <p>The timerId provided in the <code>CancelTimer</code> decision that failed.</p>
      cause:
        type: CancelTimerFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>CancelTimer</code> decision to cancel this timer. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>CancelTimerFailed</code> event.</p>
  CancelWorkflowExecutionDecisionAttributes:
    type: object
    properties:
      details?:
        type: Data
        description: <p><i>Optional.</i> details of the cancellation.</p>
    description: <p>Provides details of the <code>CancelWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  CancelWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      cause:
        type: CancelWorkflowExecutionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>CancelWorkflowExecutionFailed</code> event.</p>
  ChildWorkflowExecutionCanceledEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p>The child workflow execution that was canceled.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the child workflow execution.</p>
      details?:
        type: Data
        description: <p>Details of the cancellation (if provided).</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provide details of the <code>ChildWorkflowExecutionCanceled</code> event.</p>
  ChildWorkflowExecutionCompletedEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p>The child workflow execution that was completed.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the child workflow execution.</p>
      result?:
        type: Data
        description: <p>The result of the child workflow execution (if any).</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ChildWorkflowExecutionCompleted</code> event.</p>
  ChildWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p>The child workflow execution that failed.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the child workflow execution.</p>
      reason?:
        type: FailureReason
        description: <p>The reason for the failure (if provided).</p>
      details?:
        type: Data
        description: <p>The details of the failure (if provided).</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ChildWorkflowExecutionFailed</code> event.</p>
  ChildWorkflowExecutionStartedEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p>The child workflow execution that was started.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the child workflow execution. </p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ChildWorkflowExecutionStarted</code> event.</p>
  ChildWorkflowExecutionTerminatedEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p>The child workflow execution that was terminated.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the child workflow execution.</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ChildWorkflowExecutionTerminated</code> event.</p>
  ChildWorkflowExecutionTimedOutEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p>The child workflow execution that timed out.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the child workflow execution.</p>
      timeoutType:
        type: WorkflowExecutionTimeoutType
        description: <p>The type of the timeout that caused the child workflow execution to time out.</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ChildWorkflowExecutionTimedOut</code> event.</p>
  CloseStatusFilter:
    type: object
    properties:
      status:
        type: CloseStatus
        description: <p><b>Required.</b> The close status that must match the close status of an execution for it to meet the criteria of this filter.</p>
    description: <p>Used to filter the closed workflow executions in visibility APIs by their close status.</p>
  CompleteWorkflowExecutionDecisionAttributes:
    type: object
    properties:
      result?:
        type: Data
        description: <p>The result of the workflow execution. The form of the result is implementation defined.</p>
    description: <p>Provides details of the <code>CompleteWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  CompleteWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      cause:
        type: CompleteWorkflowExecutionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>CompleteWorkflowExecution</code> decision to complete this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>CompleteWorkflowExecutionFailed</code> event.</p>
  ContinueAsNewWorkflowExecutionDecisionAttributes:
    type: object
    properties:
      input?:
        type: Data
        description: <p>The input provided to the new workflow execution.</p>
      executionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the total duration for this workflow execution. This overrides the <code>defaultExecutionStartToCloseTimeout</code> specified when registering the workflow type.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>An execution start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this field. If neither this field is set nor a default execution start-to-close timeout was specified at registration time then a fault will be returned.</note>
      taskList?:
        type: TaskList
      taskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> The task priority that, if set, specifies the priority for the decision tasks for this workflow execution. This overrides the defaultTaskPriority specified when registering the workflow type. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      taskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>Specifies the maximum duration of decision tasks for the new workflow execution. This parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>A task start-to-close timeout for the new workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default task start-to-close timeout was specified at registration time then a fault will be returned.</note>
      childPolicy?:
        type: ChildPolicy
        description: <p>If set, specifies the policy to use for the child workflow executions of the new execution if it is terminated by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout. This policy overrides the default child policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul> <note>A child policy for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default child policy was specified at registration time then a fault will be returned.</note>
      tagList?:
        type: TagList
        description: <p>The list of tags to associate with the new workflow execution. A maximum of 5 tags can be specified. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a> or <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.</p>
      workflowTypeVersion?:
        type: Version
      lambdaRole?:
        type: Arn
        description: <p>The ARN of an IAM role that authorizes Amazon SWF to invoke AWS Lambda functions.</p> <note>In order for this workflow execution to invoke AWS Lambda functions, an appropriate IAM role must be specified either as a default for the workflow type or through this field.</note>
    description: '<p>Provides details of the <code>ContinueAsNewWorkflowExecution</code>
      decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control
      this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use
      a <code>Resource</code> element with the domain name to limit the action to
      only specified domains.</li> <li>Use an <code>Action</code> element to allow
      or deny permission to call this action.</li> <li>Constrain the following parameters
      by using a <code>Condition</code> element with the appropriate keys. <ul> <li>
      <code>tag</code>: <i>Optional.</i>. A tag used to identify the workflow execution</li>
      <li><code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</li>
      <li><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li>
      </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke
      the action, or the parameter values fall outside the specified constraints,
      the action fails. The associated event attribute''s <b>cause</b> parameter will
      be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see
      <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
      IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
  ContinueAsNewWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      cause:
        type: ContinueAsNewWorkflowExecutionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that started this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ContinueAsNewWorkflowExecutionFailed</code> event.</p>
  CountClosedWorkflowExecutionsInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain containing the workflow executions to count.</p>
      startTimeFilter?:
        type: ExecutionTimeFilter
        description: <p>If specified, only workflow executions that meet the start time criteria of the filter are counted.</p> <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive. You must specify one of these in a request but not both.</note>
      closeTimeFilter?:
        type: ExecutionTimeFilter
        description: <p>If specified, only workflow executions that meet the close time criteria of the filter are counted.</p> <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive. You must specify one of these in a request but not both.</note>
      executionFilter?:
        type: WorkflowExecutionFilter
        description: <p>If specified, only workflow executions matching the <code>WorkflowId</code> in the filter are counted.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      typeFilter?:
        type: WorkflowTypeFilter
        description: <p>If specified, indicates the type of the workflow executions to be counted.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      tagFilter?:
        type: TagFilter
        description: <p>If specified, only executions that have a tag that matches the filter are counted.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      closeStatusFilter?:
        type: CloseStatusFilter
        description: <p>If specified, only workflow executions that match this close status are counted. This filter has an affect only if <code>executionStatus</code> is specified as <code>CLOSED</code>.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
  CountOpenWorkflowExecutionsInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain containing the workflow executions to count.</p>
      startTimeFilter:
        type: ExecutionTimeFilter
        description: <p>Specifies the start time criteria that workflow executions must meet in order to be counted.</p>
      typeFilter?:
        type: WorkflowTypeFilter
        description: <p>Specifies the type of the workflow executions to be counted.</p> <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      tagFilter?:
        type: TagFilter
        description: <p>If specified, only executions that have a tag that matches the filter are counted.</p> <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      executionFilter?:
        type: WorkflowExecutionFilter
        description: <p>If specified, only workflow executions matching the <code>WorkflowId</code> in the filter are counted.</p> <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
  CountPendingActivityTasksInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain that contains the task list.</p>
      taskList:
        type: TaskList
        description: <p>The name of the task list.</p>
  CountPendingDecisionTasksInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain that contains the task list.</p>
      taskList:
        type: TaskList
        description: <p>The name of the task list.</p>
  Decision:
    type: object
    properties:
      decisionType:
        type: DecisionType
        description: <p>Specifies the type of the decision.</p>
      scheduleActivityTaskDecisionAttributes?:
        type: ScheduleActivityTaskDecisionAttributes
        description: <p>Provides details of the <code>ScheduleActivityTask</code> decision. It is not set for other decision types.</p>
      requestCancelActivityTaskDecisionAttributes?:
        type: RequestCancelActivityTaskDecisionAttributes
        description: <p>Provides details of the <code>RequestCancelActivityTask</code> decision. It is not set for other decision types.</p>
      completeWorkflowExecutionDecisionAttributes?:
        type: CompleteWorkflowExecutionDecisionAttributes
        description: <p>Provides details of the <code>CompleteWorkflowExecution</code> decision. It is not set for other decision types.</p>
      failWorkflowExecutionDecisionAttributes?:
        type: FailWorkflowExecutionDecisionAttributes
        description: <p>Provides details of the <code>FailWorkflowExecution</code> decision. It is not set for other decision types.</p>
      cancelWorkflowExecutionDecisionAttributes?:
        type: CancelWorkflowExecutionDecisionAttributes
        description: <p>Provides details of the <code>CancelWorkflowExecution</code> decision. It is not set for other decision types.</p>
      continueAsNewWorkflowExecutionDecisionAttributes?:
        type: ContinueAsNewWorkflowExecutionDecisionAttributes
        description: <p>Provides details of the <code>ContinueAsNewWorkflowExecution</code> decision. It is not set for other decision types.</p>
      recordMarkerDecisionAttributes?:
        type: RecordMarkerDecisionAttributes
        description: <p>Provides details of the <code>RecordMarker</code> decision. It is not set for other decision types.</p>
      startTimerDecisionAttributes?:
        type: StartTimerDecisionAttributes
        description: <p>Provides details of the <code>StartTimer</code> decision. It is not set for other decision types.</p>
      cancelTimerDecisionAttributes?:
        type: CancelTimerDecisionAttributes
        description: <p>Provides details of the <code>CancelTimer</code> decision. It is not set for other decision types.</p>
      signalExternalWorkflowExecutionDecisionAttributes?:
        type: SignalExternalWorkflowExecutionDecisionAttributes
        description: <p>Provides details of the <code>SignalExternalWorkflowExecution</code> decision. It is not set for other decision types.</p>
      requestCancelExternalWorkflowExecutionDecisionAttributes?:
        type: RequestCancelExternalWorkflowExecutionDecisionAttributes
        description: <p>Provides details of the <code>RequestCancelExternalWorkflowExecution</code> decision. It is not set for other decision types.</p>
      startChildWorkflowExecutionDecisionAttributes?:
        type: StartChildWorkflowExecutionDecisionAttributes
        description: <p>Provides details of the <code>StartChildWorkflowExecution</code> decision. It is not set for other decision types.</p>
      scheduleLambdaFunctionDecisionAttributes?:
        type: ScheduleLambdaFunctionDecisionAttributes
    description: '<p>Specifies a decision made by the decider. A decision can be one
      of these types:</p> <ul> <li> <b>CancelTimer</b>: cancels a previously started
      timer and records a <code>TimerCanceled</code> event in the history.</li> <li>
      <b>CancelWorkflowExecution</b>: closes the workflow execution and records a
      <code>WorkflowExecutionCanceled</code> event in the history.</li> <li> <b>CompleteWorkflowExecution</b>:
      closes the workflow execution and records a <code>WorkflowExecutionCompleted</code>
      event in the history .</li> <li> <b>ContinueAsNewWorkflowExecution</b>: closes
      the workflow execution and starts a new workflow execution of the same type
      using the same workflow ID and a unique run ID. A <code>WorkflowExecutionContinuedAsNew</code>
      event is recorded in the history.</li> <li> <b>FailWorkflowExecution</b>: closes
      the workflow execution and records a <code>WorkflowExecutionFailed</code> event
      in the history.</li> <li> <b>RecordMarker</b>: records a <code>MarkerRecorded</code>
      event in the history. Markers can be used for adding custom information in the
      history for instance to let deciders know that they do not need to look at the
      history beyond the marker event.</li> <li> <b>RequestCancelActivityTask</b>:
      attempts to cancel a previously scheduled activity task. If the activity task
      was scheduled but has not been assigned to a worker, then it will be canceled.
      If the activity task was already assigned to a worker, then the worker will
      be informed that cancellation has been requested in the response to <a>RecordActivityTaskHeartbeat</a>.</li>
      <li> <b>RequestCancelExternalWorkflowExecution</b>: requests that a request
      be made to cancel the specified external workflow execution and records a <code>RequestCancelExternalWorkflowExecutionInitiated</code>
      event in the history.</li> <li> <b>ScheduleActivityTask</b>: schedules an activity
      task.</li> <li> <b>ScheduleLambdaFunction</b>: schedules a AWS Lambda function.</li>
      <li> <b>SignalExternalWorkflowExecution</b>: requests a signal to be delivered
      to the specified external workflow execution and records a <code>SignalExternalWorkflowExecutionInitiated</code>
      event in the history.</li> <li> <b>StartChildWorkflowExecution</b>: requests
      that a child workflow execution be started and records a <code>StartChildWorkflowExecutionInitiated</code>
      event in the history. The child workflow execution is a separate workflow execution
      with its own history.</li> <li> <b>StartTimer</b>: starts a timer for this workflow
      execution and records a <code>TimerStarted</code> event in the history. This
      timer will fire after the specified delay and record a <code>TimerFired</code>
      event.</li> </ul> <p><b>Access Control</b></p> <p>If you grant permission to
      use <code>RespondDecisionTaskCompleted</code>, you can use IAM policies to express
      permissions for the list of decisions returned by this action as if they were
      members of the API. Treating decisions as a pseudo API maintains a uniform conceptual
      model and helps keep policies readable. For details and example IAM policies,
      see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
      IAM to Manage Access to Amazon SWF Workflows</a>.</p> <p><b>Decision Failure</b></p>
      <p>Decisions can fail for several reasons</p> <ul> <li>The ordering of decisions
      should follow a logical flow. Some decisions might not make sense in the current
      context of the workflow execution and will therefore fail.</li> <li>A limit
      on your account was reached.</li> <li>The decision lacks sufficient permissions.</li>
      </ul> <p>One of the following events might be added to the history to indicate
      an error. The event attribute''s <b>cause</b> parameter indicates the cause.
      If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because
      it lacked sufficient permissions. For details and example IAM policies, see
      <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
      IAM to Manage Access to Amazon SWF Workflows</a>.</p> <ul> <li> <b>ScheduleActivityTaskFailed</b>:
      a ScheduleActivityTask decision failed. This could happen if the activity type
      specified in the decision is not registered, is in a deprecated state, or the
      decision is not properly configured.</li> <li> <b>ScheduleLambdaFunctionFailed</b>:
      a ScheduleLambdaFunctionFailed decision failed. This could happen if the AWS
      Lambda function specified in the decision does not exist, or the AWS Lambda
      service''s limits are exceeded.</li> <li> <b>RequestCancelActivityTaskFailed</b>:
      a RequestCancelActivityTask decision failed. This could happen if there is no
      open activity task with the specified activityId.</li> <li> <b>StartTimerFailed</b>:
      a StartTimer decision failed. This could happen if there is another open timer
      with the same timerId.</li> <li> <b>CancelTimerFailed</b>: a CancelTimer decision
      failed. This could happen if there is no open timer with the specified timerId.</li>
      <li> <b>StartChildWorkflowExecutionFailed</b>: a StartChildWorkflowExecution
      decision failed. This could happen if the workflow type specified is not registered,
      is deprecated, or the decision is not properly configured.</li> <li> <b>SignalExternalWorkflowExecutionFailed</b>:
      a SignalExternalWorkflowExecution decision failed. This could happen if the
      <code>workflowID</code> specified in the decision was incorrect.</li> <li> <b>RequestCancelExternalWorkflowExecutionFailed</b>:
      a RequestCancelExternalWorkflowExecution decision failed. This could happen
      if the <code>workflowID</code> specified in the decision was incorrect.</li>
      <li> <b>CancelWorkflowExecutionFailed</b>: a CancelWorkflowExecution decision
      failed. This could happen if there is an unhandled decision task pending in
      the workflow execution.</li> <li> <b>CompleteWorkflowExecutionFailed</b>: a
      CompleteWorkflowExecution decision failed. This could happen if there is an
      unhandled decision task pending in the workflow execution.</li> <li> <b>ContinueAsNewWorkflowExecutionFailed</b>:
      a ContinueAsNewWorkflowExecution decision failed. This could happen if there
      is an unhandled decision task pending in the workflow execution or the ContinueAsNewWorkflowExecution
      decision was not configured correctly.</li> <li> <b>FailWorkflowExecutionFailed</b>:
      a FailWorkflowExecution decision failed. This could happen if there is an unhandled
      decision task pending in the workflow execution.</li> </ul> <p>The preceding
      error events might occur due to an error in the decider logic, which might put
      the workflow execution in an unstable state The cause field in the event structure
      for the error event indicates the cause of the error.</p> <note>A workflow execution
      may be closed by the decider by returning one of the following decisions when
      completing a decision task: <code>CompleteWorkflowExecution</code>, <code>FailWorkflowExecution</code>,
      <code>CancelWorkflowExecution</code> and <code>ContinueAsNewWorkflowExecution</code>.
      An UnhandledDecision fault will be returned if a workflow closing decision is
      specified and a signal or activity event had been added to the history while
      the decision task was being performed by the decider. Unlike the above situations
      which are logic issues, this fault is always possible because of race conditions
      in a distributed system. The right action here is to call <a>RespondDecisionTaskCompleted</a>
      without any decisions. This would result in another decision task with these
      new events included in the history. The decider should handle the new events
      and may decide to close the workflow execution.</note> <p><b>How to code a decision</b></p>
      <p>You code a decision by first setting the decision type field to one of the
      above decision values, and then set the corresponding attributes field shown
      below:</p> <ul> <li> <a>ScheduleActivityTaskDecisionAttributes</a> </li> <li>
      <a>ScheduleLambdaFunctionDecisionAttributes</a> </li> <li> <a>RequestCancelActivityTaskDecisionAttributes</a>
      </li> <li> <a>CompleteWorkflowExecutionDecisionAttributes</a> </li> <li> <a>FailWorkflowExecutionDecisionAttributes</a>
      </li> <li> <a>CancelWorkflowExecutionDecisionAttributes</a> </li> <li> <a>ContinueAsNewWorkflowExecutionDecisionAttributes</a>
      </li> <li> <a>RecordMarkerDecisionAttributes</a> </li> <li> <a>StartTimerDecisionAttributes</a>
      </li> <li> <a>CancelTimerDecisionAttributes</a> </li> <li> <a>SignalExternalWorkflowExecutionDecisionAttributes</a>
      </li> <li> <a>RequestCancelExternalWorkflowExecutionDecisionAttributes</a> </li>
      <li> <a>StartChildWorkflowExecutionDecisionAttributes</a> </li> </ul>'
  DecisionTask:
    type: object
    properties:
      taskToken:
        type: TaskToken
        description: <p>The opaque string used as a handle on the task. This token is used by workers to communicate progress and response information back to the system about the task.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskStarted</code> event recorded in the history.</p>
      workflowExecution:
        type: WorkflowExecution
        description: <p>The workflow execution for which this decision task was created.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the workflow execution for which this decision task was created.</p>
      events:
        type: HistoryEventList
        description: <p>A paginated list of history events of the workflow execution. The decider uses this during the processing of the decision task.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
      previousStartedEventId?:
        type: EventId
        description: <p>The ID of the DecisionTaskStarted event of the previous decision task of this workflow execution that was processed by the decider. This can be used to determine the events in the history new since the last decision task received by the decider.</p>
    description: <p>A structure that represents a decision task. Decision tasks are sent to deciders in order for them to make decisions.</p>
  DecisionTaskCompletedEventAttributes:
    type: object
    properties:
      executionContext?:
        type: Data
        description: <p>User defined context for the workflow execution.</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskStarted</code> event recorded when this decision task was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>DecisionTaskCompleted</code> event.</p>
  DecisionTaskScheduledEventAttributes:
    type: object
    properties:
      taskList:
        type: TaskList
        description: <p>The name of the task list in which the decision task was scheduled.</p>
      taskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> A task priority that, if set, specifies the priority for this decision task. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      startToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum duration for this decision task. The task is considered timed out if it does not completed within this duration.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
    description: <p>Provides details about the <code>DecisionTaskScheduled</code> event.</p>
  DecisionTaskStartedEventAttributes:
    type: object
    properties:
      identity?:
        type: Identity
        description: <p>Identity of the decider making the request. This enables diagnostic tracing when problems arise. The form of this identity is user defined.</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>DecisionTaskStarted</code> event.</p>
  DecisionTaskTimedOutEventAttributes:
    type: object
    properties:
      timeoutType:
        type: DecisionTaskTimeoutType
        description: <p>The type of timeout that expired before the decision task could be completed.</p>
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskStarted</code> event recorded when this decision task was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>DecisionTaskTimedOut</code> event.</p>
  DeprecateActivityTypeInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which the activity type is registered.</p>
      activityType:
        type: ActivityType
        description: <p>The activity type to deprecate.</p>
  DeprecateDomainInput:
    type: object
    properties:
      name:
        type: DomainName
        description: <p>The name of the domain to deprecate.</p>
  DeprecateWorkflowTypeInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which the workflow type is registered.</p>
      workflowType:
        type: WorkflowType
        description: <p>The workflow type to deprecate.</p>
  DescribeActivityTypeInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which the activity type is registered.</p>
      activityType:
        type: ActivityType
        description: <p>The activity type to get information about. Activity types are identified by the <code>name</code> and <code>version</code> that were supplied when the activity was registered.</p>
  DescribeDomainInput:
    type: object
    properties:
      name:
        type: DomainName
        description: <p>The name of the domain to describe.</p>
  DescribeWorkflowExecutionInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain containing the workflow execution.</p>
      execution:
        type: WorkflowExecution
        description: <p>The workflow execution to describe.</p>
  DescribeWorkflowTypeInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which this workflow type is registered.</p>
      workflowType:
        type: WorkflowType
        description: <p>The workflow type to describe.</p>
  DomainConfiguration:
    type: object
    properties:
      workflowExecutionRetentionPeriodInDays:
        type: DurationInDays
        description: <p>The retention period for workflow executions in this domain.</p>
    description: <p>Contains the configuration settings of a domain.</p>
  DomainDetail:
    type: object
    properties:
      domainInfo:
        type: DomainInfo
      configuration:
        type: DomainConfiguration
    description: <p>Contains details of a domain.</p>
  DomainInfo:
    type: object
    properties:
      name:
        type: DomainName
        description: <p>The name of the domain. This name is unique within the account.</p>
      status:
        type: RegistrationStatus
        description: '<p>The status of the domain:</p> <ul> <li> <b>REGISTERED</b>:
          The domain is properly registered and available. You can use this domain
          for registering types and creating new workflow executions. </li> <li> <b>DEPRECATED</b>:
          The domain was deprecated using <a>DeprecateDomain</a>, but is still in
          use. You should not create new workflow executions in this domain. </li>
          </ul>'
      description?:
        type: Description
        description: <p>The description of the domain provided through <a>RegisterDomain</a>.</p>
    description: <p>Contains general information about a domain.</p>
  DomainInfos:
    type: object
    properties:
      domainInfos:
        type: DomainInfoList
        description: <p>A list of DomainInfo structures.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
    description: <p>Contains a paginated collection of DomainInfo structures.</p>
  ExecutionTimeFilter:
    type: object
    properties:
      oldestDate:
        type: Timestamp
        description: <p>Specifies the oldest start or close date and time to return.</p>
      latestDate?:
        type: Timestamp
        description: <p>Specifies the latest start or close date and time to return.</p>
    description: '<p>Used to filter the workflow executions in visibility APIs by
      various time-based rules. Each parameter, if specified, defines a rule that
      must be satisfied by each returned query result. The parameter values are in
      the <a href="https://en.wikipedia.org/wiki/Unix_time">Unix Time format</a>.
      For example: <code>"oldestDate": 1325376070.</code></p>'
  ExternalWorkflowExecutionCancelRequestedEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p>The external workflow execution to which the cancellation request was delivered.</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this external workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ExternalWorkflowExecutionCancelRequested</code> event.</p>
  ExternalWorkflowExecutionSignaledEventAttributes:
    type: object
    properties:
      workflowExecution:
        type: WorkflowExecution
        description: <p> The external workflow execution that the signal was delivered to.</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the <code>SignalExternalWorkflowExecution</code> decision to request this signal. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p> Provides details of the <code>ExternalWorkflowExecutionSignaled</code> event.</p>
  FailWorkflowExecutionDecisionAttributes:
    type: object
    properties:
      reason?:
        type: FailureReason
        description: <p>A descriptive reason for the failure that may help in diagnostics.</p>
      details?:
        type: Data
        description: <p><i>Optional.</i> Details of the failure.</p>
    description: <p>Provides details of the <code>FailWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  FailWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      cause:
        type: FailWorkflowExecutionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>FailWorkflowExecution</code> decision to fail this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>FailWorkflowExecutionFailed</code> event.</p>
  GetWorkflowExecutionHistoryInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain containing the workflow execution.</p>
      execution:
        type: WorkflowExecution
        description: <p>Specifies the workflow execution for which to return the history.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
      maximumPageSize?:
        type: PageSize
        description: <p>The maximum number of results that will be returned per call. <code>nextPageToken</code> can be used to obtain futher pages of results. The default is 1000, which is the maximum allowed page size. You can, however, specify a page size <i>smaller</i> than the maximum.</p> <p>This is an upper limit only; the actual number of results returned per call may be fewer than the specified maximum.</p>
      reverseOrder?:
        type: ReverseOrder
        description: <p>When set to <code>true</code>, returns the events in reverse order. By default the results are returned in ascending order of the <code>eventTimeStamp</code> of the events.</p>
  History:
    type: object
    properties:
      events:
        type: HistoryEventList
        description: <p>The list of history events.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
    description: <p>Paginated representation of a workflow history for a workflow execution. This is the up to date, complete and authoritative record of the events related to all tasks and events in the life of the workflow execution.</p>
  HistoryEvent:
    type: object
    properties:
      eventTimestamp:
        type: Timestamp
        description: <p>The date and time when the event occurred.</p>
      eventType:
        type: EventType
        description: <p>The type of the history event.</p>
      eventId:
        type: EventId
        description: <p>The system generated ID of the event. This ID uniquely identifies the event with in the workflow execution history.</p>
      workflowExecutionStartedEventAttributes?:
        type: WorkflowExecutionStartedEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionStarted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionCompletedEventAttributes?:
        type: WorkflowExecutionCompletedEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionCompleted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      completeWorkflowExecutionFailedEventAttributes?:
        type: CompleteWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>CompleteWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionFailedEventAttributes?:
        type: WorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      failWorkflowExecutionFailedEventAttributes?:
        type: FailWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>FailWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionTimedOutEventAttributes?:
        type: WorkflowExecutionTimedOutEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionTimedOut</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionCanceledEventAttributes?:
        type: WorkflowExecutionCanceledEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionCanceled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      cancelWorkflowExecutionFailedEventAttributes?:
        type: CancelWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>CancelWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionContinuedAsNewEventAttributes?:
        type: WorkflowExecutionContinuedAsNewEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionContinuedAsNew</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      continueAsNewWorkflowExecutionFailedEventAttributes?:
        type: ContinueAsNewWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>ContinueAsNewWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionTerminatedEventAttributes?:
        type: WorkflowExecutionTerminatedEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionTerminated</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionCancelRequestedEventAttributes?:
        type: WorkflowExecutionCancelRequestedEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionCancelRequested</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      decisionTaskScheduledEventAttributes?:
        type: DecisionTaskScheduledEventAttributes
        description: <p>If the event is of type <code>DecisionTaskScheduled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      decisionTaskStartedEventAttributes?:
        type: DecisionTaskStartedEventAttributes
        description: <p>If the event is of type <code>DecisionTaskStarted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      decisionTaskCompletedEventAttributes?:
        type: DecisionTaskCompletedEventAttributes
        description: <p>If the event is of type <code>DecisionTaskCompleted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      decisionTaskTimedOutEventAttributes?:
        type: DecisionTaskTimedOutEventAttributes
        description: <p>If the event is of type <code>DecisionTaskTimedOut</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      activityTaskScheduledEventAttributes?:
        type: ActivityTaskScheduledEventAttributes
        description: <p>If the event is of type <code>ActivityTaskScheduled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      activityTaskStartedEventAttributes?:
        type: ActivityTaskStartedEventAttributes
        description: <p>If the event is of type <code>ActivityTaskStarted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      activityTaskCompletedEventAttributes?:
        type: ActivityTaskCompletedEventAttributes
        description: <p>If the event is of type <code>ActivityTaskCompleted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      activityTaskFailedEventAttributes?:
        type: ActivityTaskFailedEventAttributes
        description: <p>If the event is of type <code>ActivityTaskFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      activityTaskTimedOutEventAttributes?:
        type: ActivityTaskTimedOutEventAttributes
        description: <p>If the event is of type <code>ActivityTaskTimedOut</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      activityTaskCanceledEventAttributes?:
        type: ActivityTaskCanceledEventAttributes
        description: <p>If the event is of type <code>ActivityTaskCanceled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      activityTaskCancelRequestedEventAttributes?:
        type: ActivityTaskCancelRequestedEventAttributes
        description: <p>If the event is of type <code>ActivityTaskcancelRequested</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      workflowExecutionSignaledEventAttributes?:
        type: WorkflowExecutionSignaledEventAttributes
        description: <p>If the event is of type <code>WorkflowExecutionSignaled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      markerRecordedEventAttributes?:
        type: MarkerRecordedEventAttributes
        description: <p>If the event is of type <code>MarkerRecorded</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      recordMarkerFailedEventAttributes?:
        type: RecordMarkerFailedEventAttributes
        description: <p>If the event is of type <code>DecisionTaskFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      timerStartedEventAttributes?:
        type: TimerStartedEventAttributes
        description: <p>If the event is of type <code>TimerStarted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      timerFiredEventAttributes?:
        type: TimerFiredEventAttributes
        description: <p>If the event is of type <code>TimerFired</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      timerCanceledEventAttributes?:
        type: TimerCanceledEventAttributes
        description: <p>If the event is of type <code>TimerCanceled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      startChildWorkflowExecutionInitiatedEventAttributes?:
        type: StartChildWorkflowExecutionInitiatedEventAttributes
        description: <p>If the event is of type <code>StartChildWorkflowExecutionInitiated</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      childWorkflowExecutionStartedEventAttributes?:
        type: ChildWorkflowExecutionStartedEventAttributes
        description: <p>If the event is of type <code>ChildWorkflowExecutionStarted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      childWorkflowExecutionCompletedEventAttributes?:
        type: ChildWorkflowExecutionCompletedEventAttributes
        description: <p>If the event is of type <code>ChildWorkflowExecutionCompleted</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      childWorkflowExecutionFailedEventAttributes?:
        type: ChildWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>ChildWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      childWorkflowExecutionTimedOutEventAttributes?:
        type: ChildWorkflowExecutionTimedOutEventAttributes
        description: <p>If the event is of type <code>ChildWorkflowExecutionTimedOut</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      childWorkflowExecutionCanceledEventAttributes?:
        type: ChildWorkflowExecutionCanceledEventAttributes
        description: <p>If the event is of type <code>ChildWorkflowExecutionCanceled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      childWorkflowExecutionTerminatedEventAttributes?:
        type: ChildWorkflowExecutionTerminatedEventAttributes
        description: <p>If the event is of type <code>ChildWorkflowExecutionTerminated</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      signalExternalWorkflowExecutionInitiatedEventAttributes?:
        type: SignalExternalWorkflowExecutionInitiatedEventAttributes
        description: <p>If the event is of type <code>SignalExternalWorkflowExecutionInitiated</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      externalWorkflowExecutionSignaledEventAttributes?:
        type: ExternalWorkflowExecutionSignaledEventAttributes
        description: <p>If the event is of type <code>ExternalWorkflowExecutionSignaled</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      signalExternalWorkflowExecutionFailedEventAttributes?:
        type: SignalExternalWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>SignalExternalWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      externalWorkflowExecutionCancelRequestedEventAttributes?:
        type: ExternalWorkflowExecutionCancelRequestedEventAttributes
        description: <p>If the event is of type <code>ExternalWorkflowExecutionCancelRequested</code> then this member is set and provides detailed information about the event. It is not set for other event types. </p>
      requestCancelExternalWorkflowExecutionInitiatedEventAttributes?:
        type: RequestCancelExternalWorkflowExecutionInitiatedEventAttributes
        description: <p>If the event is of type <code>RequestCancelExternalWorkflowExecutionInitiated</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      requestCancelExternalWorkflowExecutionFailedEventAttributes?:
        type: RequestCancelExternalWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>RequestCancelExternalWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      scheduleActivityTaskFailedEventAttributes?:
        type: ScheduleActivityTaskFailedEventAttributes
        description: <p>If the event is of type <code>ScheduleActivityTaskFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      requestCancelActivityTaskFailedEventAttributes?:
        type: RequestCancelActivityTaskFailedEventAttributes
        description: <p>If the event is of type <code>RequestCancelActivityTaskFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      startTimerFailedEventAttributes?:
        type: StartTimerFailedEventAttributes
        description: <p>If the event is of type <code>StartTimerFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      cancelTimerFailedEventAttributes?:
        type: CancelTimerFailedEventAttributes
        description: <p>If the event is of type <code>CancelTimerFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      startChildWorkflowExecutionFailedEventAttributes?:
        type: StartChildWorkflowExecutionFailedEventAttributes
        description: <p>If the event is of type <code>StartChildWorkflowExecutionFailed</code> then this member is set and provides detailed information about the event. It is not set for other event types.</p>
      lambdaFunctionScheduledEventAttributes?:
        type: LambdaFunctionScheduledEventAttributes
      lambdaFunctionStartedEventAttributes?:
        type: LambdaFunctionStartedEventAttributes
      lambdaFunctionCompletedEventAttributes?:
        type: LambdaFunctionCompletedEventAttributes
      lambdaFunctionFailedEventAttributes?:
        type: LambdaFunctionFailedEventAttributes
      lambdaFunctionTimedOutEventAttributes?:
        type: LambdaFunctionTimedOutEventAttributes
      scheduleLambdaFunctionFailedEventAttributes?:
        type: ScheduleLambdaFunctionFailedEventAttributes
      startLambdaFunctionFailedEventAttributes?:
        type: StartLambdaFunctionFailedEventAttributes
    description: '<p>Event within a workflow execution. A history event can be one
      of these types:</p> <ul> <li> <b>WorkflowExecutionStarted</b>: The workflow
      execution was started.</li> <li> <b>WorkflowExecutionCompleted</b>: The workflow
      execution was closed due to successful completion.</li> <li> <b>WorkflowExecutionFailed</b>:
      The workflow execution closed due to a failure.</li> <li> <b>WorkflowExecutionTimedOut</b>:
      The workflow execution was closed because a time out was exceeded.</li> <li>
      <b>WorkflowExecutionCanceled</b>: The workflow execution was successfully canceled
      and closed.</li> <li> <b>WorkflowExecutionTerminated</b>: The workflow execution
      was terminated.</li> <li> <b>WorkflowExecutionContinuedAsNew</b>: The workflow
      execution was closed and a new execution of the same type was created with the
      same workflowId.</li> <li> <b>WorkflowExecutionCancelRequested</b>: A request
      to cancel this workflow execution was made.</li> <li> <b>DecisionTaskScheduled</b>:
      A decision task was scheduled for the workflow execution.</li> <li> <b>DecisionTaskStarted</b>:
      The decision task was dispatched to a decider.</li> <li> <b>DecisionTaskCompleted</b>:
      The decider successfully completed a decision task by calling <a>RespondDecisionTaskCompleted</a>.</li>
      <li> <b>DecisionTaskTimedOut</b>: The decision task timed out.</li> <li> <b>ActivityTaskScheduled</b>:
      An activity task was scheduled for execution.</li> <li> <b>ScheduleActivityTaskFailed</b>:
      Failed to process ScheduleActivityTask decision. This happens when the decision
      is not configured properly, for example the activity type specified is not registered.</li>
      <li> <b>ActivityTaskStarted</b>: The scheduled activity task was dispatched
      to a worker.</li> <li> <b>ActivityTaskCompleted</b>: An activity worker successfully
      completed an activity task by calling <a>RespondActivityTaskCompleted</a>.</li>
      <li> <b>ActivityTaskFailed</b>: An activity worker failed an activity task by
      calling <a>RespondActivityTaskFailed</a>.</li> <li> <b>ActivityTaskTimedOut</b>:
      The activity task timed out.</li> <li> <b>ActivityTaskCanceled</b>: The activity
      task was successfully canceled.</li> <li> <b>ActivityTaskCancelRequested</b>:
      A <code>RequestCancelActivityTask</code> decision was received by the system.</li>
      <li> <b>RequestCancelActivityTaskFailed</b>: Failed to process RequestCancelActivityTask
      decision. This happens when the decision is not configured properly.</li> <li>
      <b>WorkflowExecutionSignaled</b>: An external signal was received for the workflow
      execution.</li> <li> <b>MarkerRecorded</b>: A marker was recorded in the workflow
      history as the result of a <code>RecordMarker</code> decision.</li> <li> <b>TimerStarted</b>:
      A timer was started for the workflow execution due to a <code>StartTimer</code>
      decision.</li> <li> <b>StartTimerFailed</b>: Failed to process StartTimer decision.
      This happens when the decision is not configured properly, for example a timer
      already exists with the specified timer ID.</li> <li> <b>TimerFired</b>: A timer,
      previously started for this workflow execution, fired.</li> <li> <b>TimerCanceled</b>:
      A timer, previously started for this workflow execution, was successfully canceled.</li>
      <li> <b>CancelTimerFailed</b>: Failed to process CancelTimer decision. This
      happens when the decision is not configured properly, for example no timer exists
      with the specified timer ID.</li> <li> <b>StartChildWorkflowExecutionInitiated</b>:
      A request was made to start a child workflow execution.</li> <li> <b>StartChildWorkflowExecutionFailed</b>:
      Failed to process StartChildWorkflowExecution decision. This happens when the
      decision is not configured properly, for example the workflow type specified
      is not registered.</li> <li> <b>ChildWorkflowExecutionStarted</b>: A child workflow
      execution was successfully started.</li> <li> <b>ChildWorkflowExecutionCompleted</b>:
      A child workflow execution, started by this workflow execution, completed successfully
      and was closed.</li> <li> <b>ChildWorkflowExecutionFailed</b>: A child workflow
      execution, started by this workflow execution, failed to complete successfully
      and was closed.</li> <li> <b>ChildWorkflowExecutionTimedOut</b>: A child workflow
      execution, started by this workflow execution, timed out and was closed.</li>
      <li> <b>ChildWorkflowExecutionCanceled</b>: A child workflow execution, started
      by this workflow execution, was canceled and closed.</li> <li> <b>ChildWorkflowExecutionTerminated</b>:
      A child workflow execution, started by this workflow execution, was terminated.</li>
      <li> <b>SignalExternalWorkflowExecutionInitiated</b>: A request to signal an
      external workflow was made.</li> <li> <b>ExternalWorkflowExecutionSignaled</b>:
      A signal, requested by this workflow execution, was successfully delivered to
      the target external workflow execution.</li> <li> <b>SignalExternalWorkflowExecutionFailed</b>:
      The request to signal an external workflow execution failed.</li> <li> <b>RequestCancelExternalWorkflowExecutionInitiated</b>:
      A request was made to request the cancellation of an external workflow execution.</li>
      <li> <b>ExternalWorkflowExecutionCancelRequested</b>: Request to cancel an external
      workflow execution was successfully delivered to the target execution.</li>
      <li> <b>RequestCancelExternalWorkflowExecutionFailed</b>: Request to cancel
      an external workflow execution failed.</li> <li> <b>LambdaFunctionScheduled</b>:
      An AWS Lambda function was scheduled for execution.</li> <li> <b>LambdaFunctionStarted</b>:
      The scheduled function was invoked in the AWS Lambda service.</li> <li> <b>LambdaFunctionCompleted</b>:
      The AWS Lambda function successfully completed.</li> <li> <b>LambdaFunctionFailed</b>:
      The AWS Lambda function execution failed.</li> <li> <b>LambdaFunctionTimedOut</b>:
      The AWS Lambda function execution timed out.</li> <li> <b>ScheduleLambdaFunctionFailed</b>:
      Failed to process ScheduleLambdaFunction decision. This happens when the workflow
      execution does not have the proper IAM role attached to invoke AWS Lambda functions.</li>
      <li> <b>StartLambdaFunctionFailed</b>: Failed to invoke the scheduled function
      in the AWS Lambda service. This happens when the AWS Lambda service is not available
      in the current region, or received too many requests.</li> </ul>'
  LambdaFunctionCompletedEventAttributes:
    type: object
    properties:
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this AWS Lambda function was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionStarted</code> event recorded in the history.</p>
      result?:
        type: Data
        description: <p>The result of the function execution (if any).</p>
    description: <p>Provides details for the <code>LambdaFunctionCompleted</code> event.</p>
  LambdaFunctionFailedEventAttributes:
    type: object
    properties:
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this AWS Lambda function was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionStarted</code> event recorded in the history.</p>
      reason?:
        type: FailureReason
        description: <p>The reason provided for the failure (if any).</p>
      details?:
        type: Data
        description: <p>The details of the failure (if any).</p>
    description: <p>Provides details for the <code>LambdaFunctionFailed</code> event.</p>
  LambdaFunctionScheduledEventAttributes:
    type: object
    properties:
      id:
        type: FunctionId
        description: <p>The unique Amazon SWF ID for the AWS Lambda task.</p>
      name:
        type: FunctionName
        description: <p>The name of the scheduled AWS Lambda function.</p>
      input?:
        type: FunctionInput
        description: <p>Input provided to the AWS Lambda function.</p>
      startToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum time, in seconds, that the AWS Lambda function can take to execute from start to close before it is marked as failed.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event for the decision that resulted in the scheduling of this AWS Lambda function. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details for the <code>LambdaFunctionScheduled</code> event.</p>
  LambdaFunctionStartedEventAttributes:
    type: object
    properties:
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this AWS Lambda function was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details for the <code>LambdaFunctionStarted</code> event.</p>
  LambdaFunctionTimedOutEventAttributes:
    type: object
    properties:
      scheduledEventId:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this AWS Lambda function was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionStarted</code> event recorded in the history.</p>
      timeoutType?:
        type: LambdaFunctionTimeoutType
        description: <p>The type of the timeout that caused this event.</p>
    description: <p>Provides details for the <code>LambdaFunctionTimedOut</code> event.</p>
  ListActivityTypesInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which the activity types have been registered.</p>
      name?:
        type: Name
        description: <p>If specified, only lists the activity types that have this name.</p>
      registrationStatus:
        type: RegistrationStatus
        description: <p>Specifies the registration status of the activity types to list.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
      maximumPageSize?:
        type: PageSize
        description: <p>The maximum number of results that will be returned per call. <code>nextPageToken</code> can be used to obtain futher pages of results. The default is 1000, which is the maximum allowed page size. You can, however, specify a page size <i>smaller</i> than the maximum.</p> <p>This is an upper limit only; the actual number of results returned per call may be fewer than the specified maximum.</p>
      reverseOrder?:
        type: ReverseOrder
        description: <p>When set to <code>true</code>, returns the results in reverse order. By default, the results are returned in ascending alphabetical order by <code>name</code> of the activity types.</p>
  ListClosedWorkflowExecutionsInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain that contains the workflow executions to list.</p>
      startTimeFilter?:
        type: ExecutionTimeFilter
        description: <p>If specified, the workflow executions are included in the returned results based on whether their start times are within the range specified by this filter. Also, if this parameter is specified, the returned results are ordered by their start times.</p> <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive. You must specify one of these in a request but not both.</note>
      closeTimeFilter?:
        type: ExecutionTimeFilter
        description: <p>If specified, the workflow executions are included in the returned results based on whether their close times are within the range specified by this filter. Also, if this parameter is specified, the returned results are ordered by their close times.</p> <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive. You must specify one of these in a request but not both.</note>
      executionFilter?:
        type: WorkflowExecutionFilter
        description: <p>If specified, only workflow executions matching the workflow ID specified in the filter are returned.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      closeStatusFilter?:
        type: CloseStatusFilter
        description: <p>If specified, only workflow executions that match this <i>close status</i> are listed. For example, if TERMINATED is specified, then only TERMINATED workflow executions are listed.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      typeFilter?:
        type: WorkflowTypeFilter
        description: <p>If specified, only executions of the type specified in the filter are returned.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      tagFilter?:
        type: TagFilter
        description: <p>If specified, only executions that have the matching tag are listed.</p> <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
      maximumPageSize?:
        type: PageSize
        description: <p>The maximum number of results that will be returned per call. <code>nextPageToken</code> can be used to obtain futher pages of results. The default is 1000, which is the maximum allowed page size. You can, however, specify a page size <i>smaller</i> than the maximum.</p> <p>This is an upper limit only; the actual number of results returned per call may be fewer than the specified maximum.</p>
      reverseOrder?:
        type: ReverseOrder
        description: <p>When set to <code>true</code>, returns the results in reverse order. By default the results are returned in descending order of the start or the close time of the executions.</p>
  ListDomainsInput:
    type: object
    properties:
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
      registrationStatus:
        type: RegistrationStatus
        description: <p>Specifies the registration status of the domains to list.</p>
      maximumPageSize?:
        type: PageSize
        description: <p>The maximum number of results that will be returned per call. <code>nextPageToken</code> can be used to obtain futher pages of results. The default is 1000, which is the maximum allowed page size. You can, however, specify a page size <i>smaller</i> than the maximum.</p> <p>This is an upper limit only; the actual number of results returned per call may be fewer than the specified maximum.</p>
      reverseOrder?:
        type: ReverseOrder
        description: <p>When set to <code>true</code>, returns the results in reverse order. By default, the results are returned in ascending alphabetical order by <code>name</code> of the domains.</p>
  ListOpenWorkflowExecutionsInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain that contains the workflow executions to list.</p>
      startTimeFilter:
        type: ExecutionTimeFilter
        description: <p>Workflow executions are included in the returned results based on whether their start times are within the range specified by this filter.</p>
      typeFilter?:
        type: WorkflowTypeFilter
        description: <p>If specified, only executions of the type specified in the filter are returned.</p> <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      tagFilter?:
        type: TagFilter
        description: <p>If specified, only executions that have the matching tag are listed.</p> <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
      maximumPageSize?:
        type: PageSize
        description: <p>The maximum number of results that will be returned per call. <code>nextPageToken</code> can be used to obtain futher pages of results. The default is 1000, which is the maximum allowed page size. You can, however, specify a page size <i>smaller</i> than the maximum.</p> <p>This is an upper limit only; the actual number of results returned per call may be fewer than the specified maximum.</p>
      reverseOrder?:
        type: ReverseOrder
        description: <p>When set to <code>true</code>, returns the results in reverse order. By default the results are returned in descending order of the start time of the executions.</p>
      executionFilter?:
        type: WorkflowExecutionFilter
        description: <p>If specified, only workflow executions matching the workflow ID specified in the filter are returned.</p> <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>
  ListWorkflowTypesInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which the workflow types have been registered.</p>
      name?:
        type: Name
        description: <p>If specified, lists the workflow type with this name.</p>
      registrationStatus:
        type: RegistrationStatus
        description: <p>Specifies the registration status of the workflow types to list.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
      maximumPageSize?:
        type: PageSize
        description: <p>The maximum number of results that will be returned per call. <code>nextPageToken</code> can be used to obtain futher pages of results. The default is 1000, which is the maximum allowed page size. You can, however, specify a page size <i>smaller</i> than the maximum.</p> <p>This is an upper limit only; the actual number of results returned per call may be fewer than the specified maximum.</p>
      reverseOrder?:
        type: ReverseOrder
        description: <p>When set to <code>true</code>, returns the results in reverse order. By default the results are returned in ascending alphabetical order of the <code>name</code> of the workflow types.</p>
  MarkerRecordedEventAttributes:
    type: object
    properties:
      markerName:
        type: MarkerName
        description: <p>The name of the marker.</p>
      details?:
        type: Data
        description: <p>Details of the marker (if any).</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>RecordMarker</code> decision that requested this marker. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>MarkerRecorded</code> event.</p>
  PendingTaskCount:
    type: object
    properties:
      count:
        type: Count
        description: <p>The number of tasks in the task list.</p>
      truncated?:
        type: Truncated
        description: <p>If set to true, indicates that the actual count was more than the maximum supported by this API and the count returned is the truncated value.</p>
    description: <p>Contains the count of tasks in a task list.</p>
  PollForActivityTaskInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain that contains the task lists being polled.</p>
      taskList:
        type: TaskList
        description: <p>Specifies the task list to poll for activity tasks.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      identity?:
        type: Identity
        description: <p>Identity of the worker making the request, recorded in the <code>ActivityTaskStarted</code> event in the workflow history. This enables diagnostic tracing when problems arise. The form of this identity is user defined.</p>
  PollForDecisionTaskInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain containing the task lists to poll.</p>
      taskList:
        type: TaskList
        description: <p>Specifies the task list to poll for decision tasks.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      identity?:
        type: Identity
        description: <p>Identity of the decider making the request, which is recorded in the DecisionTaskStarted event in the workflow history. This enables diagnostic tracing when problems arise. The form of this identity is user defined.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p> <note>The <code>nextPageToken</code> returned by this action cannot be used with <a>GetWorkflowExecutionHistory</a> to get the next page. You must call <a>PollForDecisionTask</a> again (with the <code>nextPageToken</code>) to retrieve the next page of history records. Calling <a>PollForDecisionTask</a> with a <code>nextPageToken</code> will not return a new decision task.</note>.
      maximumPageSize?:
        type: PageSize
        description: <p>The maximum number of results that will be returned per call. <code>nextPageToken</code> can be used to obtain futher pages of results. The default is 1000, which is the maximum allowed page size. You can, however, specify a page size <i>smaller</i> than the maximum.</p> <p>This is an upper limit only; the actual number of results returned per call may be fewer than the specified maximum.</p>
      reverseOrder?:
        type: ReverseOrder
        description: <p>When set to <code>true</code>, returns the events in reverse order. By default the results are returned in ascending order of the <code>eventTimestamp</code> of the events.</p>
  RecordActivityTaskHeartbeatInput:
    type: object
    properties:
      taskToken:
        type: TaskToken
        description: <p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p> <important> <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results. </important>
      details?:
        type: LimitedData
        description: <p>If specified, contains details about the progress of the task.</p>
  RecordMarkerDecisionAttributes:
    type: object
    properties:
      markerName:
        type: MarkerName
        description: <p><b>Required.</b> The name of the marker.</p>
      details?:
        type: Data
        description: <p><i>Optional.</i> details of the marker.</p>
    description: <p>Provides details of the <code>RecordMarker</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  RecordMarkerFailedEventAttributes:
    type: object
    properties:
      markerName:
        type: MarkerName
        description: <p>The marker's name.</p>
      cause:
        type: RecordMarkerFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>RecordMarkerFailed</code> decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>RecordMarkerFailed</code> event.</p>
  RegisterActivityTypeInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which this activity is to be registered.</p>
      name:
        type: Name
        description: <p>The name of the activity type within the domain.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      version:
        type: Version
        description: <p>The version of the activity type.</p> <note>The activity type consists of the name and version, the combination of which must be unique within the domain.</note> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      description?:
        type: Description
        description: <p>A textual description of the activity type.</p>
      defaultTaskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the default maximum duration that a worker can take to process tasks of this activity type. This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultTaskHeartbeatTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the default maximum time before which a worker processing a task of this type must report progress by calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity task is automatically timed out. This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> decision. If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker receives an <code>UnknownResource</code> fault. In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultTaskList?:
        type: TaskList
        description: <p>If set, specifies the default task list to use for scheduling tasks of this activity type. This default task list is used if a task list is not provided when a task is scheduled through the <code>ScheduleActivityTask</code> decision.</p>
      defaultTaskPriority?:
        type: TaskPriority
        description: <p>The default task priority to assign to the activity type. If not assigned, then "0" will be used. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      defaultTaskScheduleToStartTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the default maximum duration that a task of this activity type can wait before being assigned to a worker. This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultTaskScheduleToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the default maximum duration for a task of this activity type. This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
  RegisterDomainInput:
    type: object
    properties:
      name:
        type: DomainName
        description: <p>Name of the domain to register. The name must be unique in the region that the domain is registered in.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      description?:
        type: Description
        description: <p>A text description of the domain.</p>
      workflowExecutionRetentionPeriodInDays:
        type: DurationInDays
        description: '<p>The duration (in days) that records and histories of workflow
          executions on the domain should be kept by the service. After the retention
          period, the workflow execution is not available in the results of visibility
          calls.</p> <p>If you pass the value <code>NONE</code> or <code>0</code>
          (zero), then the workflow execution history will not be retained. As soon
          as the workflow execution completes, the execution record and its history
          are deleted.</p> <p>The maximum workflow execution retention period is 90
          days. For more information about Amazon SWF service limits, see: <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-limits.html">Amazon
          SWF Service Limits</a> in the <i>Amazon SWF Developer Guide</i>.</p>'
  RegisterWorkflowTypeInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which to register the workflow type.</p>
      name:
        type: Name
        description: <p>The name of the workflow type.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      version:
        type: Version
        description: <p>The version of the workflow type.</p> <note>The workflow type consists of the name and version, the combination of which must be unique within the domain. To get a list of all currently registered workflow types, use the <a>ListWorkflowTypes</a> action.</note> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      description?:
        type: Description
        description: <p>Textual description of the workflow type.</p>
      defaultTaskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the default maximum duration of decision tasks for this workflow type. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultExecutionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the default maximum duration for executions of this workflow type. You can override this default when starting an execution through the <a>StartWorkflowExecution</a> action or <code>StartChildWorkflowExecution</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. Unlike some of the other timeout parameters in Amazon SWF, you cannot specify a value of "NONE" for <code>defaultExecutionStartToCloseTimeout</code>; there is a one-year max limit on the time that a workflow execution can run. Exceeding this limit will always cause the workflow execution to time out.</p>
      defaultTaskList?:
        type: TaskList
        description: <p>If set, specifies the default task list to use for scheduling decision tasks for executions of this workflow type. This default is used only if a task list is not provided when starting the execution through the <a>StartWorkflowExecution</a> action or <code>StartChildWorkflowExecution</code> decision.</p>
      defaultTaskPriority?:
        type: TaskPriority
        description: <p>The default task priority to assign to the workflow type. If not assigned, then "0" will be used. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      defaultChildPolicy?:
        type: ChildPolicy
        description: <p>If set, specifies the default policy to use for the child workflow executions when a workflow execution of this type is terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> decision.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
      defaultLambdaRole?:
        type: Arn
        description: <p>The ARN of the default IAM role to use when a workflow execution of this type invokes AWS Lambda functions.</p> <p>This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> and <code>ContinueAsNewWorkflowExecution</code> decision.</p>
  RequestCancelActivityTaskDecisionAttributes:
    type: object
    properties:
      activityId:
        type: ActivityId
        description: <p>The <code>activityId</code> of the activity task to be canceled.</p>
    description: <p>Provides details of the <code>RequestCancelActivityTask</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  RequestCancelActivityTaskFailedEventAttributes:
    type: object
    properties:
      activityId:
        type: ActivityId
        description: <p>The activityId provided in the <code>RequestCancelActivityTask</code> decision that failed.</p>
      cause:
        type: RequestCancelActivityTaskFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>RequestCancelActivityTask</code> decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>RequestCancelActivityTaskFailed</code> event.</p>
  RequestCancelExternalWorkflowExecutionDecisionAttributes:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p><b>Required.</b> The <code>workflowId</code> of the external workflow execution to cancel.</p>
      runId?:
        type: RunIdOptional
        description: <p>The <code>runId</code> of the external workflow execution to cancel.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent workflow tasks.</p>
    description: <p>Provides details of the <code>RequestCancelExternalWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  RequestCancelExternalWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p>The <code>workflowId</code> of the external workflow to which the cancel request was to be delivered.</p>
      runId?:
        type: RunIdOptional
        description: <p>The <code>runId</code> of the external workflow execution.</p>
      cause:
        type: RequestCancelExternalWorkflowExecutionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this external workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      control?:
        type: Data
    description: <p>Provides details of the <code>RequestCancelExternalWorkflowExecutionFailed</code> event.</p>
  RequestCancelExternalWorkflowExecutionInitiatedEventAttributes:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p>The <code>workflowId</code> of the external workflow execution to be canceled.</p>
      runId?:
        type: RunIdOptional
        description: <p>The <code>runId</code> of the external workflow execution to be canceled.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent workflow tasks.</p>
    description: <p>Provides details of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event.</p>
  RequestCancelWorkflowExecutionInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain containing the workflow execution to cancel.</p>
      workflowId:
        type: WorkflowId
        description: <p>The workflowId of the workflow execution to cancel.</p>
      runId?:
        type: RunIdOptional
        description: <p>The runId of the workflow execution to cancel.</p>
  RespondActivityTaskCanceledInput:
    type: object
    properties:
      taskToken:
        type: TaskToken
        description: <p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p> <important><code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.</important>
      details?:
        type: Data
        description: <p><i>Optional.</i> Information about the cancellation.</p>
  RespondActivityTaskCompletedInput:
    type: object
    properties:
      taskToken:
        type: TaskToken
        description: <p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p> <important> <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.</important>
      result?:
        type: Data
        description: <p>The result of the activity task. It is a free form string that is implementation specific.</p>
  RespondActivityTaskFailedInput:
    type: object
    properties:
      taskToken:
        type: TaskToken
        description: <p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p> <important> <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.</important>
      reason?:
        type: FailureReason
        description: <p>Description of the error that may assist in diagnostics.</p>
      details?:
        type: Data
        description: <p><i>Optional.</i> Detailed information about the failure.</p>
  RespondDecisionTaskCompletedInput:
    type: object
    properties:
      taskToken:
        type: TaskToken
        description: <p>The <code>taskToken</code> from the <a>DecisionTask</a>.</p> <important><code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.</important>
      decisions?:
        type: DecisionList
        description: <p>The list of decisions (possibly empty) made by the decider while processing this decision task. See the docs for the decision structure for details.</p>
      executionContext?:
        type: Data
        description: <p>User defined context to add to workflow execution.</p>
  Run:
    type: object
    properties:
      runId?:
        type: RunId
        description: <p>The <code>runId</code> of a workflow execution. This ID is generated by the service and can be used to uniquely identify the workflow execution within a domain.</p>
    description: <p>Specifies the <code>runId</code> of a workflow execution.</p>
  ScheduleActivityTaskDecisionAttributes:
    type: object
    properties:
      activityType:
        type: ActivityType
        description: <p><b>Required.</b> The type of the activity task to schedule.</p>
      activityId:
        type: ActivityId
        description: <p><b>Required.</b> The <code>activityId</code> of the activity task.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent workflow tasks. This data is not sent to the activity.</p>
      input?:
        type: Data
        description: <p>The input provided to the activity task.</p>
      scheduleToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum duration for this activity task.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>A schedule-to-close timeout for this activity task must be specified either as a default for the activity type or through this field. If neither this field is set nor a default schedule-to-close timeout was specified at registration time then a fault will be returned.</note>
      taskList?:
        type: TaskList
        description: <p>If set, specifies the name of the task list in which to schedule the activity task. If not specified, the <code>defaultTaskList</code> registered with the activity type will be used.</p> <note>A task list for this activity task must be specified either as a default for the activity type or through this field. If neither this field is set nor a default task list was specified at registration time then a fault will be returned.</note> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      taskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> If set, specifies the priority with which the activity task is to be assigned to a worker. This overrides the defaultTaskPriority specified when registering the activity type using <a>RegisterActivityType</a>. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      scheduleToStartTimeout?:
        type: DurationInSecondsOptional
        description: <p><i>Optional.</i> If set, specifies the maximum duration the activity task can wait to be assigned to a worker. This overrides the default schedule-to-start timeout specified when registering the activity type using <a>RegisterActivityType</a>.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>A schedule-to-start timeout for this activity task must be specified either as a default for the activity type or through this field. If neither this field is set nor a default schedule-to-start timeout was specified at registration time then a fault will be returned.</note>
      startToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the maximum duration a worker may take to process this activity task. This overrides the default start-to-close timeout specified when registering the activity type using <a>RegisterActivityType</a>.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>A start-to-close timeout for this activity task must be specified either as a default for the activity type or through this field. If neither this field is set nor a default start-to-close timeout was specified at registration time then a fault will be returned.</note>
      heartbeatTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the maximum time before which a worker processing a task of this type must report progress by calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity task is automatically timed out. If the worker subsequently attempts to record a heartbeat or returns a result, it will be ignored. This overrides the default heartbeat timeout specified when registering the activity type using <a>RegisterActivityType</a>.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
    description: '<p>Provides details of the <code>ScheduleActivityTask</code> decision.</p>
      <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s
      access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code>
      element with the domain name to limit the action to only specified domains.</li>
      <li>Use an <code>Action</code> element to allow or deny permission to call this
      action.</li> <li>Constrain the following parameters by using a <code>Condition</code>
      element with the appropriate keys. <ul> <li><code>activityType.name</code>:
      String constraint. The key is <code>swf:activityType.name</code>.</li> <li><code>activityType.version</code>:
      String constraint. The key is <code>swf:activityType.version</code>.</li> <li><code>taskList</code>:
      String constraint. The key is <code>swf:taskList.name</code>.</li> </ul> </li>
      </ul> <p>If the caller does not have sufficient permissions to invoke the action,
      or the parameter values fall outside the specified constraints, the action fails.
      The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
      For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
      IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
  ScheduleActivityTaskFailedEventAttributes:
    type: object
    properties:
      activityType:
        type: ActivityType
        description: <p>The activity type provided in the <code>ScheduleActivityTask</code> decision that failed.</p>
      activityId:
        type: ActivityId
        description: <p>The activityId provided in the <code>ScheduleActivityTask</code> decision that failed.</p>
      cause:
        type: ScheduleActivityTaskFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision that resulted in the scheduling of this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>ScheduleActivityTaskFailed</code> event.</p>
  ScheduleLambdaFunctionDecisionAttributes:
    type: object
    properties:
      id:
        type: FunctionId
        description: <p><b>Required.</b> The SWF <code>id</code> of the AWS Lambda task.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      name:
        type: FunctionName
        description: <p><b>Required.</b> The name of the AWS Lambda function to invoke.</p>
      input?:
        type: FunctionInput
        description: <p>The input provided to the AWS Lambda function.</p>
      startToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>If set, specifies the maximum duration the function may take to execute.</p>
    description: '<p>Provides details of the <code>ScheduleLambdaFunction</code> decision.</p>
      <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s
      access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code>
      element with the domain name to limit the action to only specified domains.</li>
      <li>Use an <code>Action</code> element to allow or deny permission to call this
      action.</li> <li>Constrain the following parameters by using a <code>Condition</code>
      element with the appropriate keys. <ul> <li><code>activityType.name</code>:
      String constraint. The key is <code>swf:activityType.name</code>.</li> <li><code>activityType.version</code>:
      String constraint. The key is <code>swf:activityType.version</code>.</li> <li><code>taskList</code>:
      String constraint. The key is <code>swf:taskList.name</code>.</li> </ul> </li>
      </ul> <p>If the caller does not have sufficient permissions to invoke the action,
      or the parameter values fall outside the specified constraints, the action fails.
      The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
      For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
      IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
  ScheduleLambdaFunctionFailedEventAttributes:
    type: object
    properties:
      id:
        type: FunctionId
        description: <p>The unique Amazon SWF ID of the AWS Lambda task.</p>
      name:
        type: FunctionName
        description: <p>The name of the scheduled AWS Lambda function.</p>
      cause:
        type: ScheduleLambdaFunctionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision that resulted in the scheduling of this AWS Lambda function. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details for the <code>ScheduleLambdaFunctionFailed</code> event.</p>
  SignalExternalWorkflowExecutionDecisionAttributes:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p><b>Required.</b> The <code>workflowId</code> of the workflow execution to be signaled.</p>
      runId?:
        type: RunIdOptional
        description: <p>The <code>runId</code> of the workflow execution to be signaled.</p>
      signalName:
        type: SignalName
        description: <p><b>Required.</b> The name of the signal.The target workflow execution will use the signal name and input to process the signal.</p>
      input?:
        type: Data
        description: <p><i>Optional.</i> Input data to be provided with the signal. The target workflow execution will use the signal name and input data to process the signal.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent decision tasks.</p>
    description: <p>Provides details of the <code>SignalExternalWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  SignalExternalWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p>The <code>workflowId</code> of the external workflow execution that the signal was being delivered to.</p>
      runId?:
        type: RunIdOptional
        description: <p>The <code>runId</code> of the external workflow execution that the signal was being delivered to.</p>
      cause:
        type: SignalExternalWorkflowExecutionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the <code>SignalExternalWorkflowExecution</code> decision to request this signal. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>SignalExternalWorkflowExecution</code> decision for this signal. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      control?:
        type: Data
    description: <p>Provides details of the <code>SignalExternalWorkflowExecutionFailed</code> event.</p>
  SignalExternalWorkflowExecutionInitiatedEventAttributes:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p>The <code>workflowId</code> of the external workflow execution.</p>
      runId?:
        type: RunIdOptional
        description: <p>The <code>runId</code> of the external workflow execution to send the signal to.</p>
      signalName:
        type: SignalName
        description: <p>The name of the signal.</p>
      input?:
        type: Data
        description: <p>Input provided to the signal (if any).</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>SignalExternalWorkflowExecution</code> decision for this signal. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> data attached to the event that can be used by the decider in subsequent decision tasks.</p>
    description: <p>Provides details of the <code>SignalExternalWorkflowExecutionInitiated</code> event.</p>
  SignalWorkflowExecutionInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain containing the workflow execution to signal.</p>
      workflowId:
        type: WorkflowId
        description: <p>The workflowId of the workflow execution to signal.</p>
      runId?:
        type: RunIdOptional
        description: <p>The runId of the workflow execution to signal.</p>
      signalName:
        type: SignalName
        description: <p>The name of the signal. This name must be meaningful to the target workflow.</p>
      input?:
        type: Data
        description: <p>Data to attach to the <code>WorkflowExecutionSignaled</code> event in the target workflow execution's history.</p>
  StartChildWorkflowExecutionDecisionAttributes:
    type: object
    properties:
      workflowType:
        type: WorkflowType
        description: <p><b>Required.</b> The type of the workflow execution to be started.</p>
      workflowId:
        type: WorkflowId
        description: <p><b>Required.</b> The <code>workflowId</code> of the workflow execution.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent workflow tasks. This data is not sent to the child workflow execution.</p>
      input?:
        type: Data
        description: <p>The input to be provided to the workflow execution.</p>
      executionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The total duration for this workflow execution. This overrides the defaultExecutionStartToCloseTimeout specified when registering the workflow type.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>An execution start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default execution start-to-close timeout was specified at registration time then a fault will be returned.</note>
      taskList?:
        type: TaskList
        description: <p>The name of the task list to be used for decision tasks of the child workflow execution.</p> <note>A task list for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default task list was specified at registration time then a fault will be returned.</note> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      taskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> A task priority that, if set, specifies the priority for a decision task of this workflow execution. This overrides the defaultTaskPriority specified when registering the workflow type. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      taskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>Specifies the maximum duration of decision tasks for this workflow execution. This parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>A task start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default task start-to-close timeout was specified at registration time then a fault will be returned.</note>
      childPolicy?:
        type: ChildPolicy
        description: <p><i>Optional.</i> If set, specifies the policy to use for the child workflow executions if the workflow execution being started is terminated by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout. This policy overrides the default child policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul> <note>A child policy for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default child policy was specified at registration time then a fault will be returned.</note>
      tagList?:
        type: TagList
        description: <p>The list of tags to associate with the child workflow execution. A maximum of 5 tags can be specified. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a> or <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.</p>
      lambdaRole?:
        type: Arn
        description: <p>The ARN of an IAM role that authorizes Amazon SWF to invoke AWS Lambda functions.</p> <note>In order for this workflow execution to invoke AWS Lambda functions, an appropriate IAM role must be specified either as a default for the workflow type or through this field.</note>
    description: '<p>Provides details of the <code>StartChildWorkflowExecution</code>
      decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control
      this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use
      a <code>Resource</code> element with the domain name to limit the action to
      only specified domains.</li> <li>Use an <code>Action</code> element to allow
      or deny permission to call this action.</li> <li>Constrain the following parameters
      by using a <code>Condition</code> element with the appropriate keys. <ul> <li>
      <code>tagList.member.N</code>: The key is "swf:tagList.N" where N is the tag
      number from 0 to 4, inclusive.</li> <li><code>taskList</code>: String constraint.
      The key is <code>swf:taskList.name</code>.</li> <li><code>workflowType.name</code>:
      String constraint. The key is <code>swf:workflowType.name</code>.</li> <li><code>workflowType.version</code>:
      String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul>
      </li> </ul> <p>If the caller does not have sufficient permissions to invoke
      the action, or the parameter values fall outside the specified constraints,
      the action fails. The associated event attribute''s <b>cause</b> parameter will
      be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see
      <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
      IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
  StartChildWorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      workflowType:
        type: WorkflowType
        description: <p>The workflow type provided in the <code>StartChildWorkflowExecution</code> decision that failed.</p>
      cause:
        type: StartChildWorkflowExecutionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      workflowId:
        type: WorkflowId
        description: <p>The <code>workflowId</code> of the child workflow execution.</p>
      initiatedEventId:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>StartChildWorkflowExecution</code> decision to request this child workflow execution. This information can be useful for diagnosing problems by tracing back the cause of events.</p>
      control?:
        type: Data
    description: <p>Provides details of the <code>StartChildWorkflowExecutionFailed</code> event.</p>
  StartChildWorkflowExecutionInitiatedEventAttributes:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p>The <code>workflowId</code> of the child workflow execution.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the child workflow execution.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent decision tasks. This data is not sent to the activity.</p>
      input?:
        type: Data
        description: <p>The inputs provided to the child workflow execution (if any).</p>
      executionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum duration for the child workflow execution. If the workflow execution is not closed within this duration, it will be timed out and force terminated.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      taskList:
        type: TaskList
        description: <p>The name of the task list used for the decision tasks of the child workflow execution.</p>
      taskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> The priority assigned for the decision tasks for this workflow execution. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>StartChildWorkflowExecution</code> decision to request this child workflow execution. This information can be useful for diagnosing problems by tracing back the cause of events.</p>
      childPolicy:
        type: ChildPolicy
        description: <p>The policy to use for the child workflow executions if this execution gets terminated by explicitly calling the <a>TerminateWorkflowExecution</a> action or due to an expired timeout.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
      taskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum duration allowed for the decision tasks for this workflow execution.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      tagList?:
        type: TagList
        description: <p>The list of tags to associated with the child workflow execution.</p>
      lambdaRole?:
        type: Arn
        description: <p>The IAM role attached to this workflow execution to use when invoking AWS Lambda functions.</p>
    description: <p>Provides details of the <code>StartChildWorkflowExecutionInitiated</code> event.</p>
  StartLambdaFunctionFailedEventAttributes:
    type: object
    properties:
      scheduledEventId?:
        type: EventId
        description: <p>The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this AWS Lambda function was scheduled. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      cause?:
        type: StartLambdaFunctionFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      message?:
        type: CauseMessage
        description: <p>The error message (if any).</p>
    description: <p>Provides details for the <code>StartLambdaFunctionFailed</code> event.</p>
  StartTimerDecisionAttributes:
    type: object
    properties:
      timerId:
        type: TimerId
        description: <p><b>Required.</b> The unique ID of the timer.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent workflow tasks.</p>
      startToFireTimeout:
        type: DurationInSeconds
        description: <p><b>Required.</b> The duration to wait before firing the timer.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0.</p>
    description: <p>Provides details of the <code>StartTimer</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision's access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action's parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>
  StartTimerFailedEventAttributes:
    type: object
    properties:
      timerId:
        type: TimerId
        description: <p>The timerId provided in the <code>StartTimer</code> decision that failed.</p>
      cause:
        type: StartTimerFailedCause
        description: <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p> <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>StartTimer</code> decision for this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>StartTimerFailed</code> event.</p>
  StartWorkflowExecutionInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The name of the domain in which the workflow execution is created.</p>
      workflowId:
        type: WorkflowId
        description: <p>The user defined identifier associated with the workflow execution. You can use this to associate a custom identifier with the workflow execution. You may specify the same identifier if a workflow execution is logically a <i>restart</i> of a previous execution. You cannot have two open workflow executions with the same <code>workflowId</code> at the same time.</p> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the workflow to start.</p>
      taskList?:
        type: TaskList
        description: <p>The task list to use for the decision tasks generated for this workflow execution. This overrides the <code>defaultTaskList</code> specified when registering the workflow type.</p> <note>A task list for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default task list was specified at registration time then a fault will be returned.</note> <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\u0000-\u001f | \u007f - \u009f). Also, it must not contain the literal string quotarnquot.</p>
      taskPriority?:
        type: TaskPriority
        description: <p>The task priority to use for this workflow execution. This will override any default priority that was assigned when the workflow type was registered. If not set, then the default task priority for the workflow type will be used. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      input?:
        type: Data
        description: <p>The input for the workflow execution. This is a free form string which should be meaningful to the workflow you are starting. This <code>input</code> is made available to the new workflow execution in the <code>WorkflowExecutionStarted</code> history event.</p>
      executionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The total duration for this workflow execution. This overrides the defaultExecutionStartToCloseTimeout specified when registering the workflow type.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. Exceeding this limit will cause the workflow execution to time out. Unlike some of the other timeout parameters in Amazon SWF, you cannot specify a value of "NONE" for this timeout; there is a one-year max limit on the time that a workflow execution can run.</p> <note> An execution start-to-close timeout must be specified either through this parameter or as a default when the workflow type is registered. If neither this parameter nor a default execution start-to-close timeout is specified, a fault is returned.</note>
      tagList?:
        type: TagList
        description: <p>The list of tags to associate with the workflow execution. You can specify a maximum of 5 tags. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a> or <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.</p>
      taskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>Specifies the maximum duration of decision tasks for this workflow execution. This parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p> <note>A task start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default task start-to-close timeout was specified at registration time then a fault will be returned.</note>
      childPolicy?:
        type: ChildPolicy
        description: <p>If set, specifies the policy to use for the child workflow executions of this workflow execution if it is terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout. This policy overrides the default child policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul> <note>A child policy for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default child policy was specified at registration time then a fault will be returned.</note>
      lambdaRole?:
        type: Arn
        description: <p>The ARN of an IAM role that authorizes Amazon SWF to invoke AWS Lambda functions.</p> <note>In order for this workflow execution to invoke AWS Lambda functions, an appropriate IAM role must be specified either as a default for the workflow type or through this field.</note>
  TagFilter:
    type: object
    properties:
      tag:
        type: Tag
        description: <p><b>Required.</b> Specifies the tag that must be associated with the execution for it to meet the filter criteria.</p>
    description: <p>Used to filter the workflow executions in visibility APIs based on a tag.</p>
  TaskList:
    type: object
    properties:
      name:
        type: Name
        description: <p>The name of the task list.</p>
    description: <p>Represents a task list.</p>
  TerminateWorkflowExecutionInput:
    type: object
    properties:
      domain:
        type: DomainName
        description: <p>The domain of the workflow execution to terminate.</p>
      workflowId:
        type: WorkflowId
        description: <p>The workflowId of the workflow execution to terminate.</p>
      runId?:
        type: RunIdOptional
        description: <p>The runId of the workflow execution to terminate.</p>
      reason?:
        type: TerminateReason
        description: <p><i>Optional.</i> A descriptive reason for terminating the workflow execution.</p>
      details?:
        type: Data
        description: <p><i>Optional.</i> Details for terminating the workflow execution.</p>
      childPolicy?:
        type: ChildPolicy
        description: <p>If set, specifies the policy to use for the child workflow executions of the workflow execution being terminated. This policy overrides the child policy specified for the workflow execution at registration time or when starting the execution.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul> <note>A child policy for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default child policy was specified at registration time then a fault will be returned.</note>
  TimerCanceledEventAttributes:
    type: object
    properties:
      timerId:
        type: TimerId
        description: <p> The unique ID of the timer that was canceled. </p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>TimerStarted</code> event that was recorded when this timer was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>CancelTimer</code> decision to cancel this timer. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p> Provides details of the <code>TimerCanceled</code> event. </p>
  TimerFiredEventAttributes:
    type: object
    properties:
      timerId:
        type: TimerId
        description: <p>The unique ID of the timer that fired.</p>
      startedEventId:
        type: EventId
        description: <p>The ID of the <code>TimerStarted</code> event that was recorded when this timer was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>TimerFired</code> event.</p>
  TimerStartedEventAttributes:
    type: object
    properties:
      timerId:
        type: TimerId
        description: <p>The unique ID of the timer that was started.</p>
      control?:
        type: Data
        description: <p><i>Optional.</i> Data attached to the event that can be used by the decider in subsequent workflow tasks.</p>
      startToFireTimeout:
        type: DurationInSeconds
        description: <p>The duration of time after which the timer will fire.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>StartTimer</code> decision for this activity task. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>TimerStarted</code> event.</p>
  WorkflowExecution:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p>The user defined identifier associated with the workflow execution.</p>
      runId:
        type: RunId
        description: <p>A system-generated unique identifier for the workflow execution.</p>
    description: <p>Represents a workflow execution.</p>
  WorkflowExecutionCancelRequestedEventAttributes:
    type: object
    properties:
      externalWorkflowExecution?:
        type: WorkflowExecution
        description: <p>The external workflow execution for which the cancellation was requested.</p>
      externalInitiatedEventId?:
        type: EventId
        description: <p>The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this workflow execution.The source event with this ID can be found in the history of the source workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      cause?:
        type: WorkflowExecutionCancelRequestedCause
        description: <p>If set, indicates that the request to cancel the workflow execution was automatically generated, and specifies the cause. This happens if the parent workflow execution times out or is terminated, and the child policy is set to cancel child executions.</p>
    description: <p>Provides details of the <code>WorkflowExecutionCancelRequested</code> event.</p>
  WorkflowExecutionCanceledEventAttributes:
    type: object
    properties:
      details?:
        type: Data
        description: <p>Details for the cancellation (if any).</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>WorkflowExecutionCanceled</code> event.</p>
  WorkflowExecutionCompletedEventAttributes:
    type: object
    properties:
      result?:
        type: Data
        description: <p>The result produced by the workflow execution upon successful completion.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>CompleteWorkflowExecution</code> decision to complete this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>WorkflowExecutionCompleted</code> event.</p>
  WorkflowExecutionConfiguration:
    type: object
    properties:
      taskStartToCloseTimeout:
        type: DurationInSeconds
        description: <p>The maximum duration allowed for decision tasks for this workflow execution.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      executionStartToCloseTimeout:
        type: DurationInSeconds
        description: <p>The total duration for this workflow execution.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      taskList:
        type: TaskList
        description: <p>The task list used for the decision tasks generated for this workflow execution.</p>
      taskPriority?:
        type: TaskPriority
        description: <p>The priority assigned to decision tasks for this workflow execution. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      childPolicy:
        type: ChildPolicy
        description: <p>The policy to use for the child workflow executions if this workflow execution is terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
      lambdaRole?:
        type: Arn
        description: <p>The IAM role used by this workflow execution when invoking AWS Lambda functions.</p>
    description: <p>The configuration settings for a workflow execution including timeout values, tasklist etc. These configuration settings are determined from the defaults specified when registering the workflow type and those specified when starting the workflow execution.</p>
  WorkflowExecutionContinuedAsNewEventAttributes:
    type: object
    properties:
      input?:
        type: Data
        description: <p>The input provided to the new workflow execution.</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that started this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      newExecutionRunId:
        type: RunId
        description: <p>The <code>runId</code> of the new workflow execution.</p>
      executionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The total duration allowed for the new workflow execution.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      taskList:
        type: TaskList
      taskPriority?:
        type: TaskPriority
      taskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum duration of decision tasks for the new workflow execution.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      childPolicy:
        type: ChildPolicy
        description: <p>The policy to use for the child workflow executions of the new execution if it is terminated by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
      tagList?:
        type: TagList
        description: <p>The list of tags associated with the new workflow execution.</p>
      workflowType:
        type: WorkflowType
      lambdaRole?:
        type: Arn
        description: <p>The IAM role attached to this workflow execution to use when invoking AWS Lambda functions.</p>
    description: <p>Provides details of the <code>WorkflowExecutionContinuedAsNew</code> event.</p>
  WorkflowExecutionCount:
    type: object
    properties:
      count:
        type: Count
        description: <p>The number of workflow executions.</p>
      truncated?:
        type: Truncated
        description: <p>If set to true, indicates that the actual count was more than the maximum supported by this API and the count returned is the truncated value.</p>
    description: <p>Contains the count of workflow executions returned from <a>CountOpenWorkflowExecutions</a> or <a>CountClosedWorkflowExecutions</a></p>
  WorkflowExecutionDetail:
    type: object
    properties:
      executionInfo:
        type: WorkflowExecutionInfo
        description: <p>Information about the workflow execution.</p>
      executionConfiguration:
        type: WorkflowExecutionConfiguration
        description: <p>The configuration settings for this workflow execution including timeout values, tasklist etc.</p>
      openCounts:
        type: WorkflowExecutionOpenCounts
        description: <p>The number of tasks for this workflow execution. This includes open and closed tasks of all types.</p>
      latestActivityTaskTimestamp?:
        type: Timestamp
        description: <p>The time when the last activity task was scheduled for this workflow execution. You can use this information to determine if the workflow has not made progress for an unusually long period of time and might require a corrective action.</p>
      latestExecutionContext?:
        type: Data
        description: <p>The latest executionContext provided by the decider for this workflow execution. A decider can provide an executionContext (a free-form string) when closing a decision task using <a>RespondDecisionTaskCompleted</a>.</p>
    description: <p>Contains details about a workflow execution.</p>
  WorkflowExecutionFailedEventAttributes:
    type: object
    properties:
      reason?:
        type: FailureReason
        description: <p>The descriptive reason provided for the failure (if any).</p>
      details?:
        type: Data
        description: <p>The details of the failure (if any).</p>
      decisionTaskCompletedEventId:
        type: EventId
        description: <p>The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in the <code>FailWorkflowExecution</code> decision to fail this execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
    description: <p>Provides details of the <code>WorkflowExecutionFailed</code> event.</p>
  WorkflowExecutionFilter:
    type: object
    properties:
      workflowId:
        type: WorkflowId
        description: <p>The workflowId to pass of match the criteria of this filter.</p>
    description: <p>Used to filter the workflow executions in visibility APIs by their <code>workflowId</code>.</p>
  WorkflowExecutionInfo:
    type: object
    properties:
      execution:
        type: WorkflowExecution
        description: <p>The workflow execution this information is about.</p>
      workflowType:
        type: WorkflowType
        description: <p>The type of the workflow execution.</p>
      startTimestamp:
        type: Timestamp
        description: <p>The time when the execution was started.</p>
      closeTimestamp?:
        type: Timestamp
        description: <p>The time when the workflow execution was closed. Set only if the execution status is CLOSED.</p>
      executionStatus:
        type: ExecutionStatus
        description: <p>The current status of the execution.</p>
      closeStatus?:
        type: CloseStatus
        description: '<p>If the execution status is closed then this specifies how
          the execution was closed:</p> <ul> <li> <code>COMPLETED</code>: the execution
          was successfully completed.</li> <li> <code>CANCELED</code>: the execution
          was canceled.Cancellation allows the implementation to gracefully clean
          up before the execution is closed.</li> <li> <code>TERMINATED</code>: the
          execution was force terminated.</li> <li> <code>FAILED</code>: the execution
          failed to complete.</li> <li> <code>TIMED_OUT</code>: the execution did
          not complete in the alloted time and was automatically timed out.</li> <li>
          <code>CONTINUED_AS_NEW</code>: the execution is logically continued. This
          means the current execution was completed and a new execution was started
          to carry on the workflow.</li> </ul>'
      parent?:
        type: WorkflowExecution
        description: <p>If this workflow execution is a child of another execution then contains the workflow execution that started this execution.</p>
      tagList?:
        type: TagList
        description: <p>The list of tags associated with the workflow execution. Tags can be used to identify and list workflow executions of interest through the visibility APIs. A workflow execution can have a maximum of 5 tags.</p>
      cancelRequested?:
        type: Canceled
        description: <p>Set to true if a cancellation is requested for this workflow execution.</p>
    description: <p>Contains information about a workflow execution. </p>
  WorkflowExecutionInfos:
    type: object
    properties:
      executionInfos:
        type: WorkflowExecutionInfoList
        description: <p>The list of workflow information structures.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
    description: <p>Contains a paginated list of information about workflow executions.</p>
  WorkflowExecutionOpenCounts:
    type: object
    properties:
      openActivityTasks:
        type: Count
        description: <p>The count of activity tasks whose status is OPEN.</p>
      openDecisionTasks:
        type: OpenDecisionTasksCount
        description: <p>The count of decision tasks whose status is OPEN. A workflow execution can have at most one open decision task.</p>
      openTimers:
        type: Count
        description: <p>The count of timers started by this workflow execution that have not fired yet.</p>
      openChildWorkflowExecutions:
        type: Count
        description: <p>The count of child workflow executions whose status is OPEN.</p>
      openLambdaFunctions?:
        type: Count
        description: <p>The count of AWS Lambda functions that are currently executing.</p>
    description: <p>Contains the counts of open tasks, child workflow executions and timers for a workflow execution.</p>
  WorkflowExecutionSignaledEventAttributes:
    type: object
    properties:
      signalName:
        type: SignalName
        description: <p>The name of the signal received. The decider can use the signal name and inputs to determine how to the process the signal.</p>
      input?:
        type: Data
        description: <p>Inputs provided with the signal (if any). The decider can use the signal name and inputs to determine how to process the signal.</p>
      externalWorkflowExecution?:
        type: WorkflowExecution
        description: <p>The workflow execution that sent the signal. This is set only of the signal was sent by another workflow execution.</p>
      externalInitiatedEventId?:
        type: EventId
        description: <p>The ID of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the <code>SignalExternalWorkflow</code> decision to signal this workflow execution.The source event with this ID can be found in the history of the source workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event. This field is set only if the signal was initiated by another workflow execution.</p>
    description: <p>Provides details of the <code>WorkflowExecutionSignaled</code> event.</p>
  WorkflowExecutionStartedEventAttributes:
    type: object
    properties:
      input?:
        type: Data
        description: <p>The input provided to the workflow execution (if any).</p>
      executionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum duration for this workflow execution.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      taskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p>The maximum duration of decision tasks for this workflow type.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      childPolicy:
        type: ChildPolicy
        description: <p>The policy to use for the child workflow executions if this workflow execution is terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
      taskList:
        type: TaskList
        description: <p>The name of the task list for scheduling the decision tasks for this workflow execution.</p>
      workflowType:
        type: WorkflowType
        description: <p>The workflow type of this execution.</p>
      tagList?:
        type: TagList
        description: <p>The list of tags associated with this workflow execution. An execution can have up to 5 tags.</p>
      taskPriority?:
        type: TaskPriority
      continuedExecutionRunId?:
        type: RunIdOptional
        description: <p>If this workflow execution was started due to a <code>ContinueAsNewWorkflowExecution</code> decision, then it contains the <code>runId</code> of the previous workflow execution that was closed and continued as this execution.</p>
      parentWorkflowExecution?:
        type: WorkflowExecution
        description: <p>The source workflow execution that started this workflow execution. The member is not set if the workflow execution was not started by a workflow.</p>
      parentInitiatedEventId?:
        type: EventId
        description: <p>The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the <code>StartChildWorkflowExecution</code> decision to start this workflow execution. The source event with this ID can be found in the history of the source workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.</p>
      lambdaRole?:
        type: Arn
        description: <p>The IAM role attached to this workflow execution to use when invoking AWS Lambda functions.</p>
    description: <p>Provides details of <code>WorkflowExecutionStarted</code> event.</p>
  WorkflowExecutionTerminatedEventAttributes:
    type: object
    properties:
      reason?:
        type: TerminateReason
        description: <p>The reason provided for the termination (if any).</p>
      details?:
        type: Data
        description: <p>The details provided for the termination (if any).</p>
      childPolicy:
        type: ChildPolicy
        description: <p>The policy used for the child workflow executions of this workflow execution.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
      cause?:
        type: WorkflowExecutionTerminatedCause
        description: <p>If set, indicates that the workflow execution was automatically terminated, and specifies the cause. This happens if the parent workflow execution times out or is terminated and the child policy is set to terminate child executions.</p>
    description: <p>Provides details of the <code>WorkflowExecutionTerminated</code> event.</p>
  WorkflowExecutionTimedOutEventAttributes:
    type: object
    properties:
      timeoutType:
        type: WorkflowExecutionTimeoutType
        description: <p>The type of timeout that caused this event.</p>
      childPolicy:
        type: ChildPolicy
        description: <p>The policy used for the child workflow executions of this workflow execution.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
    description: <p>Provides details of the <code>WorkflowExecutionTimedOut</code> event.</p>
  WorkflowType:
    type: object
    properties:
      name:
        type: Name
        description: <p><b>Required.</b> The name of the workflow type.</p> <note>The combination of workflow type name and version must be unique with in a domain.</note>
      version:
        type: Version
        description: <p><b>Required.</b> The version of the workflow type.</p> <note>The combination of workflow type name and version must be unique with in a domain.</note>
    description: <p>Represents a workflow type.</p>
  WorkflowTypeConfiguration:
    type: object
    properties:
      defaultTaskStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p><i>Optional.</i> The default maximum duration, specified when registering the workflow type, that a decision task for executions of this workflow type might take before returning completion or failure. If the task does not close in the specified time then the task is automatically timed out and rescheduled. If the decider eventually reports a completion or failure, it is ignored. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultExecutionStartToCloseTimeout?:
        type: DurationInSecondsOptional
        description: <p><i>Optional.</i> The default maximum duration, specified when registering the workflow type, for executions of this workflow type. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> decision.</p> <p>The duration is specified in seconds; an integer greater than or equal to 0. The value "NONE" can be used to specify unlimited duration.</p>
      defaultTaskList?:
        type: TaskList
        description: <p><i>Optional.</i> The default task list, specified when registering the workflow type, for decisions tasks scheduled for workflow executions of this type. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> decision.</p>
      defaultTaskPriority?:
        type: TaskPriority
        description: <p><i>Optional.</i> The default task priority, specified when registering the workflow type, for all decision tasks of this workflow type. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> decision.</p> <p>Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p> <p>For more information about setting task priority, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon Simple Workflow Developer Guide</i>.</p>
      defaultChildPolicy?:
        type: ChildPolicy
        description: <p><i>Optional.</i> The default policy to use for the child workflow executions when a workflow execution of this type is terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code> decision.</p> <p>The supported child policies are:</p> <ul> <li><b>TERMINATE:</b> the child executions will be terminated.</li> <li><b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.</li> <li><b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li> </ul>
      defaultLambdaRole?:
        type: Arn
        description: <p>The default IAM role to use when a workflow execution invokes a AWS Lambda function.</p>
    description: <p>The configuration settings of a workflow type.</p>
  WorkflowTypeDetail:
    type: object
    properties:
      typeInfo:
        type: WorkflowTypeInfo
        description: '<p>General information about the workflow type.</p> <p>The status
          of the workflow type (returned in the WorkflowTypeInfo structure) can be
          one of the following.</p> <ul> <li> <b>REGISTERED</b>: The type is registered
          and available. Workers supporting this type should be running.</li> <li>
          <b>DEPRECATED</b>: The type was deprecated using <a>DeprecateWorkflowType</a>,
          but is still in use. You should keep workers supporting this type running.
          You cannot create new workflow executions of this type.</li> </ul>'
      configuration:
        type: WorkflowTypeConfiguration
        description: <p>Configuration settings of the workflow type registered through <a>RegisterWorkflowType</a></p>
    description: <p>Contains details about a workflow type.</p>
  WorkflowTypeFilter:
    type: object
    properties:
      name:
        type: Name
        description: <p><b>Required.</b> Name of the workflow type.</p>
      version?:
        type: VersionOptional
        description: <p>Version of the workflow type.</p>
    description: <p>Used to filter workflow execution query results by type. Each parameter, if specified, defines a rule that must be satisfied by each returned result.</p>
  WorkflowTypeInfo:
    type: object
    properties:
      workflowType:
        type: WorkflowType
        description: <p>The workflow type this information is about.</p>
      status:
        type: RegistrationStatus
        description: <p>The current status of the workflow type.</p>
      description?:
        type: Description
        description: <p>The description of the type registered through <a>RegisterWorkflowType</a>.</p>
      creationDate:
        type: Timestamp
        description: <p>The date when this type was registered.</p>
      deprecationDate?:
        type: Timestamp
        description: <p>If the type is in deprecated state, then it is set to the date when the type was deprecated.</p>
    description: <p>Contains information about a workflow type.</p>
  WorkflowTypeInfos:
    type: object
    properties:
      typeInfos:
        type: WorkflowTypeInfoList
        description: <p>The list of workflow type information.</p>
      nextPageToken?:
        type: PageToken
        description: <p>If a <code>NextPageToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextPageToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call.</p>
    description: <p>Contains a paginated list of information structures about workflow types.</p>
/{CountClosedWorkflowExecutions}:
  uriParameters:
    CountClosedWorkflowExecutions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns the number of closed workflow executions within the given
    domain that meet the specified filtering criteria. <note>This operation is eventually
    consistent. The results are best effort and may not exactly reflect recent updates
    and changes.</note> <b>Access Control</b> You can use IAM policies to control
    this action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>Constrain the following parameters by using a <code>Condition</code>
    element with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String
    constraint. The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>:
    String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>:
    String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul>
    </li> </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: CountClosedWorkflowExecutionsInput
    responses:
      200:
        body:
          application/json: WorkflowExecutionCount
      400:
        description: UnknownResourceFault
/{CountOpenWorkflowExecutions}:
  uriParameters:
    CountOpenWorkflowExecutions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns the number of open workflow executions within the given domain
    that meet the specified filtering criteria. <note>This operation is eventually
    consistent. The results are best effort and may not exactly reflect recent updates
    and changes.</note> <b>Access Control</b> You can use IAM policies to control
    this action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>Constrain the following parameters by using a <code>Condition</code>
    element with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String
    constraint. The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>:
    String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>:
    String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul>
    </li> </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: CountOpenWorkflowExecutionsInput
    responses:
      200:
        body:
          application/json: WorkflowExecutionCount
      400:
        description: UnknownResourceFault
/{CountPendingActivityTasks}:
  uriParameters:
    CountPendingActivityTasks?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns the estimated number of activity tasks in the specified task
    list. The count returned is an approximation and is not guaranteed to be exact.
    If you specify a task list that no activity task was ever scheduled in then 0
    will be returned. <b>Access Control</b> You can use IAM policies to control this
    action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>Constrain the <code>taskList.name</code> parameter by using a
    <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow
    the action to access only certain task lists.</li> </ul> If the caller does not
    have sufficient permissions to invoke the action, or the parameter values fall
    outside the specified constraints, the action fails. The associated event attribute''s
    <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and
    example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: CountPendingActivityTasksInput
    responses:
      200:
        body:
          application/json: PendingTaskCount
      400:
        description: UnknownResourceFault
/{CountPendingDecisionTasks}:
  uriParameters:
    CountPendingDecisionTasks?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns the estimated number of decision tasks in the specified task
    list. The count returned is an approximation and is not guaranteed to be exact.
    If you specify a task list that no decision task was ever scheduled in then 0
    will be returned. <b>Access Control</b> You can use IAM policies to control this
    action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>Constrain the <code>taskList.name</code> parameter by using a
    <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow
    the action to access only certain task lists.</li> </ul> If the caller does not
    have sufficient permissions to invoke the action, or the parameter values fall
    outside the specified constraints, the action fails. The associated event attribute''s
    <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and
    example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: CountPendingDecisionTasksInput
    responses:
      200:
        body:
          application/json: PendingTaskCount
      400:
        description: UnknownResourceFault
/{DeprecateActivityType}:
  uriParameters:
    DeprecateActivityType?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Deprecates the specified <i>activity type</i>. After an activity type
    has been deprecated, you cannot create new tasks of that activity type. Tasks
    of this type that were scheduled before the type was deprecated will continue
    to run. <note>This operation is eventually consistent. The results are best effort
    and may not exactly reflect recent updates and changes.</note> <b>Access Control</b>
    You can use IAM policies to control this action''s access to Amazon SWF resources
    as follows: <ul> <li>Use a <code>Resource</code> element with the domain name
    to limit the action to only specified domains.</li> <li>Use an <code>Action</code>
    element to allow or deny permission to call this action.</li> <li>Constrain the
    following parameters by using a <code>Condition</code> element with the appropriate
    keys. <ul> <li><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.</li>
    <li><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.</li>
    </ul> </li> </ul> If the caller does not have sufficient permissions to invoke
    the action, or the parameter values fall outside the specified constraints, the
    action fails. The associated event attribute''s <b>cause</b> parameter will be
    set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: DeprecateActivityTypeInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{DeprecateDomain}:
  uriParameters:
    DeprecateDomain?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Deprecates the specified domain. After a domain has been deprecated
    it cannot be used to create new workflow executions or register new types. However,
    you can still use visibility actions on this domain. Deprecating a domain also
    deprecates all activity and workflow types registered in the domain. Executions
    that were started before the domain was deprecated will continue to run. <note>This
    operation is eventually consistent. The results are best effort and may not exactly
    reflect recent updates and changes.</note> <b>Access Control</b> You can use IAM
    policies to control this action''s access to Amazon SWF resources as follows:
    <ul> <li>Use a <code>Resource</code> element with the domain name to limit the
    action to only specified domains.</li> <li>Use an <code>Action</code> element
    to allow or deny permission to call this action.</li> <li>You cannot use an IAM
    policy to constrain this action''s parameters.</li> </ul> If the caller does not
    have sufficient permissions to invoke the action, or the parameter values fall
    outside the specified constraints, the action fails. The associated event attribute''s
    <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and
    example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: DeprecateDomainInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{DeprecateWorkflowType}:
  uriParameters:
    DeprecateWorkflowType?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Deprecates the specified <i>workflow type</i>. After a workflow type
    has been deprecated, you cannot create new executions of that type. Executions
    that were started before the type was deprecated will continue to run. A deprecated
    workflow type may still be used when calling visibility actions. <note>This operation
    is eventually consistent. The results are best effort and may not exactly reflect
    recent updates and changes.</note> <b>Access Control</b> You can use IAM policies
    to control this action''s access to Amazon SWF resources as follows: <ul> <li>Use
    a <code>Resource</code> element with the domain name to limit the action to only
    specified domains.</li> <li>Use an <code>Action</code> element to allow or deny
    permission to call this action.</li> <li>Constrain the following parameters by
    using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>workflowType.name</code>:
    String constraint. The key is <code>swf:workflowType.name</code>.</li> <li><code>workflowType.version</code>:
    String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul>
    </li> </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: DeprecateWorkflowTypeInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{DescribeActivityType}:
  uriParameters:
    DescribeActivityType?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns information about the specified activity type. This includes
    configuration settings provided when the type was registered and other general
    information about the type. <b>Access Control</b> You can use IAM policies to
    control this action''s access to Amazon SWF resources as follows: <ul> <li>Use
    a <code>Resource</code> element with the domain name to limit the action to only
    specified domains.</li> <li>Use an <code>Action</code> element to allow or deny
    permission to call this action.</li> <li>Constrain the following parameters by
    using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>activityType.name</code>:
    String constraint. The key is <code>swf:activityType.name</code>.</li> <li><code>activityType.version</code>:
    String constraint. The key is <code>swf:activityType.version</code>.</li> </ul>
    </li> </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: DescribeActivityTypeInput
    responses:
      200:
        body:
          application/json: ActivityTypeDetail
      400:
        description: UnknownResourceFault
/{DescribeDomain}:
  uriParameters:
    DescribeDomain?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns information about the specified domain, including description
    and status. <b>Access Control</b> You can use IAM policies to control this action''s
    access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: DescribeDomainInput
    responses:
      200:
        body:
          application/json: DomainDetail
      400:
        description: UnknownResourceFault
/{DescribeWorkflowExecution}:
  uriParameters:
    DescribeWorkflowExecution?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns information about the specified workflow execution including
    its type and some statistics. <note>This operation is eventually consistent. The
    results are best effort and may not exactly reflect recent updates and changes.</note>
    <b>Access Control</b> You can use IAM policies to control this action''s access
    to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code> element
    with the domain name to limit the action to only specified domains.</li> <li>Use
    an <code>Action</code> element to allow or deny permission to call this action.</li>
    <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: DescribeWorkflowExecutionInput
    responses:
      200:
        body:
          application/json: WorkflowExecutionDetail
      400:
        description: UnknownResourceFault
/{DescribeWorkflowType}:
  uriParameters:
    DescribeWorkflowType?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns information about the specified <i>workflow type</i>. This
    includes configuration settings specified when the type was registered and other
    information such as creation date, current status, and so on. <b>Access Control</b>
    You can use IAM policies to control this action''s access to Amazon SWF resources
    as follows: <ul> <li>Use a <code>Resource</code> element with the domain name
    to limit the action to only specified domains.</li> <li>Use an <code>Action</code>
    element to allow or deny permission to call this action.</li> <li>Constrain the
    following parameters by using a <code>Condition</code> element with the appropriate
    keys. <ul> <li><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li>
    <li><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li>
    </ul> </li> </ul> If the caller does not have sufficient permissions to invoke
    the action, or the parameter values fall outside the specified constraints, the
    action fails. The associated event attribute''s <b>cause</b> parameter will be
    set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: DescribeWorkflowTypeInput
    responses:
      200:
        body:
          application/json: WorkflowTypeDetail
      400:
        description: UnknownResourceFault
/{GetWorkflowExecutionHistory}:
  uriParameters:
    GetWorkflowExecutionHistory?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns the history of the specified workflow execution. The results
    may be split into multiple pages. To retrieve subsequent pages, make the call
    again using the <code>nextPageToken</code> returned by the initial call. <note>This
    operation is eventually consistent. The results are best effort and may not exactly
    reflect recent updates and changes.</note> <b>Access Control</b> You can use IAM
    policies to control this action''s access to Amazon SWF resources as follows:
    <ul> <li>Use a <code>Resource</code> element with the domain name to limit the
    action to only specified domains.</li> <li>Use an <code>Action</code> element
    to allow or deny permission to call this action.</li> <li>You cannot use an IAM
    policy to constrain this action''s parameters.</li> </ul> If the caller does not
    have sufficient permissions to invoke the action, or the parameter values fall
    outside the specified constraints, the action fails. The associated event attribute''s
    <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and
    example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: GetWorkflowExecutionHistoryInput
    responses:
      200:
        body:
          application/json: History
      400:
        description: UnknownResourceFault
/{ListActivityTypes}:
  uriParameters:
    ListActivityTypes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns information about all activities registered in the specified
    domain that match the specified name and registration status. The result includes
    information like creation date, current status of the activity, etc. The results
    may be split into multiple pages. To retrieve subsequent pages, make the call
    again using the <code>nextPageToken</code> returned by the initial call. <b>Access
    Control</b> You can use IAM policies to control this action''s access to Amazon
    SWF resources as follows: <ul> <li>Use a <code>Resource</code> element with the
    domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code>
    element to allow or deny permission to call this action.</li> <li>You cannot use
    an IAM policy to constrain this action''s parameters.</li> </ul> If the caller
    does not have sufficient permissions to invoke the action, or the parameter values
    fall outside the specified constraints, the action fails. The associated event
    attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For
    details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: ListActivityTypesInput
    responses:
      200:
        body:
          application/json: ActivityTypeInfos
      400:
        description: OperationNotPermittedFault
/{ListClosedWorkflowExecutions}:
  uriParameters:
    ListClosedWorkflowExecutions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns a list of closed workflow executions in the specified domain
    that meet the filtering criteria. The results may be split into multiple pages.
    To retrieve subsequent pages, make the call again using the nextPageToken returned
    by the initial call. <note>This operation is eventually consistent. The results
    are best effort and may not exactly reflect recent updates and changes.</note>
    <b>Access Control</b> You can use IAM policies to control this action''s access
    to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code> element
    with the domain name to limit the action to only specified domains.</li> <li>Use
    an <code>Action</code> element to allow or deny permission to call this action.</li>
    <li>Constrain the following parameters by using a <code>Condition</code> element
    with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String constraint.
    The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>:
    String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>:
    String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul>
    </li> </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: ListClosedWorkflowExecutionsInput
    responses:
      200:
        body:
          application/json: WorkflowExecutionInfos
      400:
        description: UnknownResourceFault
/{ListDomains}:
  uriParameters:
    ListDomains?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns the list of domains registered in the account. The results
    may be split into multiple pages. To retrieve subsequent pages, make the call
    again using the nextPageToken returned by the initial call. <note> This operation
    is eventually consistent. The results are best effort and may not exactly reflect
    recent updates and changes.</note> <b>Access Control</b> You can use IAM policies
    to control this action''s access to Amazon SWF resources as follows: <ul> <li>Use
    a <code>Resource</code> element with the domain name to limit the action to only
    specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,
    where <i>AccountID</i> is the account ID, with no dashes.</li> <li>Use an <code>Action</code>
    element to allow or deny permission to call this action.</li> <li>You cannot use
    an IAM policy to constrain this action''s parameters.</li> </ul> If the caller
    does not have sufficient permissions to invoke the action, or the parameter values
    fall outside the specified constraints, the action fails. The associated event
    attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For
    details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: ListDomainsInput
    responses:
      200:
        body:
          application/json: DomainInfos
      400:
        description: OperationNotPermittedFault
/{ListOpenWorkflowExecutions}:
  uriParameters:
    ListOpenWorkflowExecutions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns a list of open workflow executions in the specified domain
    that meet the filtering criteria. The results may be split into multiple pages.
    To retrieve subsequent pages, make the call again using the nextPageToken returned
    by the initial call. <note> This operation is eventually consistent. The results
    are best effort and may not exactly reflect recent updates and changes.</note>
    <b>Access Control</b> You can use IAM policies to control this action''s access
    to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code> element
    with the domain name to limit the action to only specified domains.</li> <li>Use
    an <code>Action</code> element to allow or deny permission to call this action.</li>
    <li>Constrain the following parameters by using a <code>Condition</code> element
    with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String constraint.
    The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>:
    String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>:
    String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul>
    </li> </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: ListOpenWorkflowExecutionsInput
    responses:
      200:
        body:
          application/json: WorkflowExecutionInfos
      400:
        description: UnknownResourceFault
/{ListWorkflowTypes}:
  uriParameters:
    ListWorkflowTypes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Returns information about workflow types in the specified domain.
    The results may be split into multiple pages that can be retrieved by making the
    call repeatedly. <b>Access Control</b> You can use IAM policies to control this
    action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: ListWorkflowTypesInput
    responses:
      200:
        body:
          application/json: WorkflowTypeInfos
      400:
        description: OperationNotPermittedFault
/{PollForActivityTask}:
  uriParameters:
    PollForActivityTask?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Used by workers to get an <a>ActivityTask</a> from the specified activity
    <code>taskList</code>. This initiates a long poll, where the service holds the
    HTTP connection open and responds as soon as a task becomes available. The maximum
    time the service holds on to the request before responding is 60 seconds. If no
    task is available within 60 seconds, the poll will return an empty result. An
    empty result, in this context, means that an ActivityTask is returned, but that
    the value of taskToken is an empty string. If a task is returned, the worker should
    use its type to identify and process it correctly. <important>Workers should set
    their client side socket timeout to at least 70 seconds (10 seconds higher than
    the maximum time service may hold the poll request).</important> <b>Access Control</b>
    You can use IAM policies to control this action''s access to Amazon SWF resources
    as follows: <ul> <li>Use a <code>Resource</code> element with the domain name
    to limit the action to only specified domains.</li> <li>Use an <code>Action</code>
    element to allow or deny permission to call this action.</li> <li>Constrain the
    <code>taskList.name</code> parameter by using a <b>Condition</b> element with
    the <code>swf:taskList.name</code> key to allow the action to access only certain
    task lists.</li> </ul> If the caller does not have sufficient permissions to invoke
    the action, or the parameter values fall outside the specified constraints, the
    action fails. The associated event attribute''s <b>cause</b> parameter will be
    set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: PollForActivityTaskInput
    responses:
      200:
        body:
          application/json: ActivityTask
      400:
        description: UnknownResourceFault
/{PollForDecisionTask}:
  uriParameters:
    PollForDecisionTask?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Used by deciders to get a <a>DecisionTask</a> from the specified decision
    <code>taskList</code>. A decision task may be returned for any open workflow execution
    that is using the specified task list. The task includes a paginated view of the
    history of the workflow execution. The decider should use the workflow type and
    the history to determine how to properly handle the task. This action initiates
    a long poll, where the service holds the HTTP connection open and responds as
    soon a task becomes available. If no decision task is available in the specified
    task list before the timeout of 60 seconds expires, an empty result is returned.
    An empty result, in this context, means that a DecisionTask is returned, but that
    the value of <code>taskToken</code> is an empty string. <important>Deciders should
    set their client-side socket timeout to at least 70 seconds (10 seconds higher
    than the timeout).</important> <important>Because the number of workflow history
    events for a single workflow execution might be very large, the result returned
    might be split up across a number of pages. To retrieve subsequent pages, make
    additional calls to <code>PollForDecisionTask</code> using the <code>nextPageToken</code>
    returned by the initial call. Note that you do <b>not</b> call <code>GetWorkflowExecutionHistory</code>
    with this <code>nextPageToken</code>. Instead, call <code>PollForDecisionTask</code>
    again.</important> <b>Access Control</b> You can use IAM policies to control this
    action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>Constrain the <code>taskList.name</code> parameter by using a
    <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow
    the action to access only certain task lists.</li> </ul> If the caller does not
    have sufficient permissions to invoke the action, or the parameter values fall
    outside the specified constraints, the action fails. The associated event attribute''s
    <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and
    example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: PollForDecisionTaskInput
    responses:
      200:
        body:
          application/json: DecisionTask
      400:
        description: UnknownResourceFault
/{RecordActivityTaskHeartbeat}:
  uriParameters:
    RecordActivityTaskHeartbeat?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Used by activity workers to report to the service that the <a>ActivityTask</a>
    represented by the specified <code>taskToken</code> is still making progress.
    The worker can also (optionally) specify details of the progress, for example
    percent complete, using the <code>details</code> parameter. This action can also
    be used by the worker as a mechanism to check if cancellation is being requested
    for the activity task. If a cancellation is being attempted for the specified
    task, then the boolean <code>cancelRequested</code> flag returned by the service
    is set to <code>true</code>. This action resets the <code>taskHeartbeatTimeout</code>
    clock. The <code>taskHeartbeatTimeout</code> is specified in <a>RegisterActivityType</a>.
    This action does not in itself create an event in the workflow execution history.
    However, if the task times out, the workflow execution history will contain a
    <code>ActivityTaskTimedOut</code> event that contains the information from the
    last heartbeat generated by the activity worker. <note>The <code>taskStartToCloseTimeout</code>
    of an activity type is the maximum duration of an activity task, regardless of
    the number of <a>RecordActivityTaskHeartbeat</a> requests received. The <code>taskStartToCloseTimeout</code>
    is also specified in <a>RegisterActivityType</a>.</note> <note>This operation
    is only useful for long-lived activities to report liveliness of the task and
    to determine if a cancellation is being attempted. </note> <important>If the <code>cancelRequested</code>
    flag returns <code>true</code>, a cancellation is being attempted. If the worker
    can cancel the activity, it should respond with <a>RespondActivityTaskCanceled</a>.
    Otherwise, it should ignore the cancellation request.</important> <b>Access Control</b>
    You can use IAM policies to control this action''s access to Amazon SWF resources
    as follows: <ul> <li>Use a <code>Resource</code> element with the domain name
    to limit the action to only specified domains.</li> <li>Use an <code>Action</code>
    element to allow or deny permission to call this action.</li> <li>You cannot use
    an IAM policy to constrain this action''s parameters.</li> </ul> If the caller
    does not have sufficient permissions to invoke the action, or the parameter values
    fall outside the specified constraints, the action fails. The associated event
    attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For
    details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RecordActivityTaskHeartbeatInput
    responses:
      200:
        body:
          application/json: ActivityTaskStatus
      400:
        description: UnknownResourceFault
/{RegisterActivityType}:
  uriParameters:
    RegisterActivityType?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Registers a new <i>activity type</i> along with its configuration
    settings in the specified domain. <important>A <code>TypeAlreadyExists</code>
    fault is returned if the type already exists in the domain. You cannot change
    any configuration settings of the type after its registration, and it must be
    registered as a new version.</important> <b>Access Control</b> You can use IAM
    policies to control this action''s access to Amazon SWF resources as follows:
    <ul> <li>Use a <code>Resource</code> element with the domain name to limit the
    action to only specified domains.</li> <li>Use an <code>Action</code> element
    to allow or deny permission to call this action.</li> <li>Constrain the following
    parameters by using a <code>Condition</code> element with the appropriate keys.
    <ul> <li> <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.</li>
    <li> <code>name</code>: String constraint. The key is <code>swf:name</code>.</li>
    <li> <code>version</code>: String constraint. The key is <code>swf:version</code>.</li>
    </ul> </li> </ul> If the caller does not have sufficient permissions to invoke
    the action, or the parameter values fall outside the specified constraints, the
    action fails. The associated event attribute''s <b>cause</b> parameter will be
    set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RegisterActivityTypeInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: TypeAlreadyExistsFault
/{RegisterDomain}:
  uriParameters:
    RegisterDomain?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Registers a new domain. <b>Access Control</b> You can use IAM policies
    to control this action''s access to Amazon SWF resources as follows: <ul> <li>You
    cannot use an IAM policy to control domain access for this action. The name of
    the domain being registered is available as the resource of this action.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RegisterDomainInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: DomainAlreadyExistsFault
/{RegisterWorkflowType}:
  uriParameters:
    RegisterWorkflowType?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Registers a new <i>workflow type</i> and its configuration settings
    in the specified domain. The retention period for the workflow history is set
    by the <a>RegisterDomain</a> action. <important>If the type already exists, then
    a <code>TypeAlreadyExists</code> fault is returned. You cannot change the configuration
    settings of a workflow type once it is registered and it must be registered as
    a new version.</important> <b>Access Control</b> You can use IAM policies to control
    this action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>Constrain the following parameters by using a <code>Condition</code>
    element with the appropriate keys. <ul> <li> <code>defaultTaskList.name</code>:
    String constraint. The key is <code>swf:defaultTaskList.name</code>.</li> <li>
    <code>name</code>: String constraint. The key is <code>swf:name</code>.</li> <li>
    <code>version</code>: String constraint. The key is <code>swf:version</code>.</li>
    </ul> </li> </ul> If the caller does not have sufficient permissions to invoke
    the action, or the parameter values fall outside the specified constraints, the
    action fails. The associated event attribute''s <b>cause</b> parameter will be
    set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RegisterWorkflowTypeInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: TypeAlreadyExistsFault
/{RequestCancelWorkflowExecution}:
  uriParameters:
    RequestCancelWorkflowExecution?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Records a <code>WorkflowExecutionCancelRequested</code> event in the
    currently running workflow execution identified by the given domain, workflowId,
    and runId. This logically requests the cancellation of the workflow execution
    as a whole. It is up to the decider to take appropriate actions when it receives
    an execution history with this event. <note>If the runId is not specified, the
    <code>WorkflowExecutionCancelRequested</code> event is recorded in the history
    of the current open workflow execution with the specified workflowId in the domain.</note>
    <note>Because this action allows the workflow to properly clean up and gracefully
    close, it should be used instead of <a>TerminateWorkflowExecution</a> when possible.</note>
    <b>Access Control</b> You can use IAM policies to control this action''s access
    to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code> element
    with the domain name to limit the action to only specified domains.</li> <li>Use
    an <code>Action</code> element to allow or deny permission to call this action.</li>
    <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RequestCancelWorkflowExecutionInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{RespondActivityTaskCanceled}:
  uriParameters:
    RespondActivityTaskCanceled?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Used by workers to tell the service that the <a>ActivityTask</a> identified
    by the <code>taskToken</code> was successfully canceled. Additional <code>details</code>
    can be optionally provided using the <code>details</code> argument. These <code>details</code>
    (if provided) appear in the <code>ActivityTaskCanceled</code> event added to the
    workflow history. <important>Only use this operation if the <code>canceled</code>
    flag of a <a>RecordActivityTaskHeartbeat</a> request returns <code>true</code>
    and if the activity can be safely undone or abandoned.</important> A task is considered
    open from the time that it is scheduled until it is closed. Therefore a task is
    reported as open while a worker is processing it. A task is closed after it has
    been specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,
    <a>RespondActivityTaskFailed</a>, or the task has <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
    out</a>. <b>Access Control</b> You can use IAM policies to control this action''s
    access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RespondActivityTaskCanceledInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{RespondActivityTaskCompleted}:
  uriParameters:
    RespondActivityTaskCompleted?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Used by workers to tell the service that the <a>ActivityTask</a> identified
    by the <code>taskToken</code> completed successfully with a <code>result</code>
    (if provided). The <code>result</code> appears in the <code>ActivityTaskCompleted</code>
    event in the workflow history. <important> If the requested task does not complete
    successfully, use <a>RespondActivityTaskFailed</a> instead. If the worker finds
    that the task is canceled through the <code>canceled</code> flag returned by <a>RecordActivityTaskHeartbeat</a>,
    it should cancel the task, clean up and then call <a>RespondActivityTaskCanceled</a>.</important>
    A task is considered open from the time that it is scheduled until it is closed.
    Therefore a task is reported as open while a worker is processing it. A task is
    closed after it has been specified in a call to RespondActivityTaskCompleted,
    <a>RespondActivityTaskCanceled</a>, <a>RespondActivityTaskFailed</a>, or the task
    has <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
    out</a>. <b>Access Control</b> You can use IAM policies to control this action''s
    access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RespondActivityTaskCompletedInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{RespondActivityTaskFailed}:
  uriParameters:
    RespondActivityTaskFailed?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Used by workers to tell the service that the <a>ActivityTask</a> identified
    by the <code>taskToken</code> has failed with <code>reason</code> (if specified).
    The <code>reason</code> and <code>details</code> appear in the <code>ActivityTaskFailed</code>
    event added to the workflow history. A task is considered open from the time that
    it is scheduled until it is closed. Therefore a task is reported as open while
    a worker is processing it. A task is closed after it has been specified in a call
    to <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>, RespondActivityTaskFailed,
    or the task has <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
    out</a>. <b>Access Control</b> You can use IAM policies to control this action''s
    access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: RespondActivityTaskFailedInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{RespondDecisionTaskCompleted}:
  uriParameters:
    RespondDecisionTaskCompleted?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Used by deciders to tell the service that the <a>DecisionTask</a> identified by the <code>taskToken</code> has successfully completed. The <code>decisions</code> argument specifies the list of decisions made while processing the task. A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code> specified is attached to the event in the workflow execution history. <b>Access Control</b> If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>, it can express permissions for the list of decisions in the <code>decisions</code> parameter. Each of the decisions has one or more parameters, much like a regular API call. To allow for policies to be as readable as possible, you can express permissions on decisions as if they were actual API calls, including applying conditions to some parameters. For more information, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.
  post:
    body:
      application/json: RespondDecisionTaskCompletedInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{SignalWorkflowExecution}:
  uriParameters:
    SignalWorkflowExecution?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Records a <code>WorkflowExecutionSignaled</code> event in the workflow
    execution history and creates a decision task for the workflow execution identified
    by the given domain, workflowId and runId. The event is recorded with the specified
    user defined signalName and input (if provided). <note> If a runId is not specified,
    then the <code>WorkflowExecutionSignaled</code> event is recorded in the history
    of the current open workflow with the matching workflowId in the domain.</note>
    <note> If the specified workflow execution is not open, this method fails with
    <code>UnknownResource</code>.</note> <b>Access Control</b> You can use IAM policies
    to control this action''s access to Amazon SWF resources as follows: <ul> <li>Use
    a <code>Resource</code> element with the domain name to limit the action to only
    specified domains.</li> <li>Use an <code>Action</code> element to allow or deny
    permission to call this action.</li> <li>You cannot use an IAM policy to constrain
    this action''s parameters.</li> </ul> If the caller does not have sufficient permissions
    to invoke the action, or the parameter values fall outside the specified constraints,
    the action fails. The associated event attribute''s <b>cause</b> parameter will
    be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a
    href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: SignalWorkflowExecutionInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
/{StartWorkflowExecution}:
  uriParameters:
    StartWorkflowExecution?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Starts an execution of the workflow type in the specified domain using
    the provided <code>workflowId</code> and input data. This action returns the newly
    started workflow execution. <b>Access Control</b> You can use IAM policies to
    control this action''s access to Amazon SWF resources as follows: <ul> <li>Use
    a <code>Resource</code> element with the domain name to limit the action to only
    specified domains.</li> <li>Use an <code>Action</code> element to allow or deny
    permission to call this action.</li> <li>Constrain the following parameters by
    using a <code>Condition</code> element with the appropriate keys. <ul> <li> <code>tagList.member.0</code>:
    The key is <code>swf:tagList.member.0</code>.</li> <li> <code>tagList.member.1</code>:
    The key is <code>swf:tagList.member.1</code>.</li> <li> <code>tagList.member.2</code>:
    The key is <code>swf:tagList.member.2</code>.</li> <li> <code>tagList.member.3</code>:
    The key is <code>swf:tagList.member.3</code>.</li> <li> <code>tagList.member.4</code>:
    The key is <code>swf:tagList.member.4</code>.</li> <li><code>taskList</code>:
    String constraint. The key is <code>swf:taskList.name</code>.</li> <li><code>workflowType.name</code>:
    String constraint. The key is <code>swf:workflowType.name</code>.</li> <li><code>workflowType.version</code>:
    String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul>
    </li> </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: StartWorkflowExecutionInput
    responses:
      200:
        body:
          application/json: Run
      400:
        description: UnknownResourceFault
/{TerminateWorkflowExecution}:
  uriParameters:
    TerminateWorkflowExecution?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Records a <code>WorkflowExecutionTerminated</code> event and forces
    closure of the workflow execution identified by the given domain, runId, and workflowId.
    The child policy, registered with the workflow type or specified when starting
    this execution, is applied to any open child workflow executions of this workflow
    execution. <important> If the identified workflow execution was in progress, it
    is terminated immediately.</important> <note> If a runId is not specified, then
    the <code>WorkflowExecutionTerminated</code> event is recorded in the history
    of the current open workflow with the matching workflowId in the domain.</note>
    <note> You should consider using <a>RequestCancelWorkflowExecution</a> action
    instead because it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
    does not.</note> <b>Access Control</b> You can use IAM policies to control this
    action''s access to Amazon SWF resources as follows: <ul> <li>Use a <code>Resource</code>
    element with the domain name to limit the action to only specified domains.</li>
    <li>Use an <code>Action</code> element to allow or deny permission to call this
    action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li>
    </ul> If the caller does not have sufficient permissions to invoke the action,
    or the parameter values fall outside the specified constraints, the action fails.
    The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED.
    For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    IAM to Manage Access to Amazon SWF Workflows</a>.'
  post:
    body:
      application/json: TerminateWorkflowExecutionInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnknownResourceFault
