#%RAML 1.0
title: Amazon GameLift
version: '2015-10-01'
description: '  Welcome to the <i>Amazon GameLift API Reference</i>. Amazon GameLift
  is a managed Amazon Web Services (AWS) service for developers who need a scalable,
  server-based solution for multiplayer games. Amazon GameLift provides setup and
  deployment of game servers, and handles infrastructure scaling and session management.  This
  reference describes the low-level service API for GameLift. You can call this API
  directly or use the <a href="https://aws.amazon.com/tools/#sdk">AWS SDK</a> for
  your preferred language. The AWS SDK includes a set of high-level GameLift actions
  multiplayer game sessions. Alternatively, you can use the <a href="https://aws.amazon.com/cli/">AWS
  command-line interface</a> (CLI) tool, which includes commands for GameLift. For
  administrative actions, you can also use the Amazon GameLift console.   <b>More
  Resources</b> <ul> <li> <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/">Amazon
  GameLift Developer Guide</a>: Learn more about GameLift features and how to use
  them </li> <li> <a href="https://gamedev.amazon.com/forums/tutorials">Lumberyard
  and GameLift Tutorials</a>: Get started fast with walkthroughs and sample projects</li>
  <li> <a href="https://aws.amazon.com/blogs/gamedev/">GameDev Blog</a>: Stay up to
  date with new features and techniques</li> <li> <a href="https://gamedev.amazon.com/forums/spaces/123/gamelift-discussion.html">GameDev
  Forums</a>: Connect with the GameDev community</li> </ul>  <b>Manage Games and Players
  Through GameLift</b>  Call these actions from your game clients and/or services
  to create and manage multiplayer game sessions and player sessions. <ul> <li> <b>Game
  sessions</b> <ul> <li><a>CreateGameSession</a></li> <li><a>DescribeGameSessions</a></li>
  <li><a>DescribeGameSessionDetails</a></li> <li><a>UpdateGameSession</a></li> <li><a>SearchGameSessions</a></li>
  </ul> </li> <li> <b>Player sessions</b> <ul> <li><a>CreatePlayerSession</a></li>
  <li><a>CreatePlayerSessions</a></li> <li><a>DescribePlayerSessions</a></li> </ul>
  </li> <li> <b>Other actions:</b> <ul> <li><a>GetGameSessionLogUrl</a></li> </ul>
  </li> </ul>  <b>Set Up and Manage Game Servers</b>  Use these administrative actions
  to configure GameLift to host your game servers. When setting up GameLift, you''ll
  need to (1) configure a build for your game and upload build files, and (2) set
  up one or more fleets to host game sessions. Once you''ve created and activated
  a fleet, you can assign aliases to it, scale capacity, track performance and utilization,
  etc. <ul> <li> <b>Manage your builds:</b> <ul> <li><a>ListBuilds</a></li> <li><a>CreateBuild</a></li>
  <li><a>DescribeBuild</a></li> <li><a>UpdateBuild</a></li> <li><a>DeleteBuild</a></li>
  <li><a>RequestUploadCredentials</a></li> </ul> </li> <li> <b>Manage your fleets:</b>
  <ul> <li><a>ListFleets</a></li> <li><a>CreateFleet</a></li> <li>Describe fleets:
  <ul> <li><a>DescribeFleetAttributes</a></li> <li><a>DescribeFleetCapacity</a></li>
  <li><a>DescribeFleetPortSettings</a></li> <li><a>DescribeFleetUtilization</a></li>
  <li><a>DescribeEC2InstanceLimits</a></li> <li><a>DescribeFleetEvents</a></li> <li><a>DescribeRuntimeConfiguration</a></li>
  </ul> </li> <li>Update fleets: <ul> <li><a>UpdateFleetAttributes</a></li> <li><a>UpdateFleetCapacity</a></li>
  <li><a>UpdateFleetPortSettings</a></li> <li><a>UpdateRuntimeConfiguration</a></li>
  </ul> </li> <li><a>DeleteFleet</a></li> </ul> </li> <li> <b>Manage fleet aliases:</b>
  <ul> <li><a>ListAliases</a></li> <li><a>CreateAlias</a></li> <li><a>DescribeAlias</a></li>
  <li><a>UpdateAlias</a></li> <li><a>DeleteAlias</a></li> <li><a>ResolveAlias</a></li>
  </ul> </li> <li> <b>Manage autoscaling:</b> <ul> <li><a>PutScalingPolicy</a></li>
  <li><a>DescribeScalingPolicies</a></li> <li><a>DeleteScalingPolicy</a></li> </ul>
  </li> </ul>  To view changes to the API, see the GameLift <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/doc-history.html">Document
  History</a> page.'
mediaType:
- application/json
types:
  AliasId:
    type: string
    pattern: ^alias-\S+
  AliasList:
    type: array
    items:
      type: Alias
  BuildId:
    type: string
    pattern: ^build-\S+
  BuildList:
    type: array
    items:
      type: Build
  BuildStatus:
    type: string
    enum:
    - INITIALIZED
    - READY
    - FAILED
  ComparisonOperatorType:
    type: string
    enum:
    - GreaterThanOrEqualToThreshold
    - GreaterThanThreshold
    - LessThanThreshold
    - LessThanOrEqualToThreshold
  Double:
    type: number
    format: double
  EC2InstanceLimitList:
    type: array
    items:
      type: EC2InstanceLimit
  EC2InstanceType:
    type: string
    enum:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
  EventCode:
    type: string
    enum:
    - GENERIC_EVENT
    - FLEET_CREATED
    - FLEET_DELETED
    - FLEET_SCALING_EVENT
    - FLEET_STATE_DOWNLOADING
    - FLEET_STATE_VALIDATING
    - FLEET_STATE_BUILDING
    - FLEET_STATE_ACTIVATING
    - FLEET_STATE_ACTIVE
    - FLEET_STATE_ERROR
    - FLEET_INITIALIZATION_FAILED
    - FLEET_BINARY_DOWNLOAD_FAILED
    - FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND
    - FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE
    - FLEET_VALIDATION_TIMED_OUT
    - FLEET_ACTIVATION_FAILED
    - FLEET_ACTIVATION_FAILED_NO_INSTANCES
    - FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED
  EventList:
    type: array
    items:
      type: Event
  FleetAttributesList:
    type: array
    items:
      type: FleetAttributes
  FleetCapacityList:
    type: array
    items:
      type: FleetCapacity
  FleetId:
    type: string
    pattern: ^fleet-\S+
  FleetIdList:
    type: array
    minItems: 1
    items:
      type: FleetId
  FleetStatus:
    type: string
    enum:
    - NEW
    - DOWNLOADING
    - VALIDATING
    - BUILDING
    - ACTIVATING
    - ACTIVE
    - DELETING
    - ERROR
    - TERMINATED
  FleetUtilizationList:
    type: array
    items:
      type: FleetUtilization
  FreeText:
    type: string
  GamePropertyKey:
    type: string
    maxLength: 32
  GamePropertyList:
    type: array
    maxItems: 16
    items:
      type: GameProperty
  GamePropertyValue:
    type: string
    maxLength: 96
  GameSessionDetailList:
    type: array
    items:
      type: GameSessionDetail
  GameSessionId:
    type: string
    pattern: ^(gamei-|gsess-)\S+
  GameSessionList:
    type: array
    items:
      type: GameSession
  GameSessionStatus:
    type: string
    enum:
    - ACTIVE
    - ACTIVATING
    - TERMINATED
    - TERMINATING
  Integer:
    type: integer
    format: int
  IpAddress:
    type: string
  IpPermissionsList:
    type: array
    maxItems: 50
    items:
      type: IpPermission
  IpProtocol:
    type: string
    enum:
    - TCP
    - UDP
  MetricName:
    type: string
    enum:
    - ActivatingGameSessions
    - ActiveGameSessions
    - ActiveInstances
    - AvailablePlayerSessions
    - CurrentPlayerSessions
    - IdleInstances
  NonBlankString:
    type: string
    pattern: '[^\s]+'
  NonEmptyString:
    type: string
    minLength: 1
  NonZeroAndMaxString:
    type: string
    minLength: 1
    maxLength: 1024
  OperatingSystem:
    type: string
    enum:
    - WINDOWS_2012
    - AMAZON_LINUX
  PlayerIdList:
    type: array
    minItems: 1
    maxItems: 25
    items:
      type: NonZeroAndMaxString
  PlayerSessionCreationPolicy:
    type: string
    enum:
    - ACCEPT_ALL
    - DENY_ALL
  PlayerSessionId:
    type: string
    pattern: ^psess-\S+
  PlayerSessionList:
    type: array
    items:
      type: PlayerSession
  PlayerSessionStatus:
    type: string
    enum:
    - RESERVED
    - ACTIVE
    - COMPLETED
    - TIMEDOUT
  PortNumber:
    type: integer
    format: int
    minimum: 1025
    maximum: 60000
  PositiveInteger:
    type: integer
    format: int
    minimum: 1
  PositiveLong:
    type: integer
    format: long
    minimum: 1
  ProtectionPolicy:
    type: string
    enum:
    - NoProtection
    - FullProtection
  RoutingStrategyType:
    type: string
    enum:
    - SIMPLE
    - TERMINAL
  ScalingAdjustmentType:
    type: string
    enum:
    - ChangeInCapacity
    - ExactCapacity
    - PercentChangeInCapacity
  ScalingPolicyList:
    type: array
    items:
      type: ScalingPolicy
  ScalingStatusType:
    type: string
    enum:
    - ACTIVE
    - UPDATE_REQUESTED
    - UPDATING
    - DELETE_REQUESTED
    - DELETING
    - DELETED
    - ERROR
  ServerProcessList:
    type: array
    minItems: 1
    maxItems: 50
    items:
      type: ServerProcess
  StringList:
    type: array
    items:
      type: NonZeroAndMaxString
  Timestamp:
    type: datetime
  WholeNumber:
    type: integer
    format: int
    minimum: 0
  Alias:
    type: object
    properties:
      AliasId?:
        type: AliasId
        description: <p>Unique identifier for a fleet alias.</p>
      Name?:
        type: FreeText
        description: <p>Descriptive label associated with an alias. Alias names do not need to be unique.</p>
      Description?:
        type: FreeText
        description: <p>Human-readable description of an alias.</p>
      RoutingStrategy?:
        type: RoutingStrategy
      CreationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was created.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
      LastUpdatedTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was last modified.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
    description: <p>Properties describing a fleet alias.</p>
  AwsCredentials:
    type: object
    properties:
      AccessKeyId?:
        type: NonEmptyString
        description: <p>Access key for an AWS account.</p>
      SecretAccessKey?:
        type: NonEmptyString
        description: <p>Secret key for an AWS account.</p>
      SessionToken?:
        type: NonEmptyString
        description: <p>Token specific to a build ID.</p>
    description: <p>AWS access credentials required to upload game build files to Amazon GameLift. These credentials are generated with <a>CreateBuild</a>, and are valid for a limited time. If they expire before you upload your game build, get a new set by calling <a>RequestUploadCredentials</a>.</p>
  Build:
    type: object
    properties:
      BuildId?:
        type: BuildId
        description: <p>Unique identifier for a build.</p>
      Name?:
        type: FreeText
        description: <p>Descriptive label associated with a build. Build names do not need to be unique. It can be set using <a>CreateBuild</a> or <a>UpdateBuild</a>.</p>
      Version?:
        type: FreeText
        description: <p>Version associated with this build. Version strings do not need to be unique to a build. This value can be set using <a>CreateBuild</a> or <a>UpdateBuild</a>.</p>
      Status?:
        type: BuildStatus
        description: <p>Current status of the build.</p> <p>Possible build statuses include the following:</p> <ul><li><b>INITIALIZED</b> – A new build has been defined, but no files have been uploaded. You cannot create fleets for builds that are in this status. When a build is successfully created, the build status is set to this value. </li><li><b>READY</b> – The game build has been successfully uploaded. You can now create new fleets for this build.</li><li><b>FAILED</b> – The game build upload failed. You cannot create new fleets for this build. </li></ul>
      SizeOnDisk?:
        type: PositiveLong
        description: <p>File size of the uploaded game build, expressed in bytes. When the build status is <code>INITIALIZED</code>, this value is 0.</p>
      OperatingSystem?:
        type: OperatingSystem
        description: <p>Operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build.</p>
      CreationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was created.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
    description: <p>Properties describing a game build.</p>
  CreateAliasInput:
    type: object
    properties:
      Name:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with an alias. Alias names do not need to be unique.</p>
      Description?:
        type: NonZeroAndMaxString
        description: <p>Human-readable description of an alias.</p>
      RoutingStrategy:
        type: RoutingStrategy
        description: <p>Object specifying the fleet and routing type to use for the alias.</p>
    description: <p>Represents the input for a request action.</p>
  CreateAliasOutput:
    type: object
    properties:
      Alias?:
        type: Alias
        description: <p>Object containing the newly created alias record.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  CreateBuildInput:
    type: object
    properties:
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a build. Build names do not need to be unique. A build name can be changed later using <code><a>UpdateBuild</a></code>.</p>
      Version?:
        type: NonZeroAndMaxString
        description: <p>Version associated with this build. Version strings do not need to be unique to a build. A build version can be changed later using <code><a>UpdateBuild</a></code>.</p>
      StorageLocation?:
        type: S3Location
      OperatingSystem?:
        type: OperatingSystem
        description: <p>Operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build.</p>
    description: <p>Represents the input for a request action.</p>
  CreateBuildOutput:
    type: object
    properties:
      Build?:
        type: Build
        description: <p>Set of properties for the newly created build.</p>
      UploadCredentials?:
        type: AwsCredentials
        description: <p>AWS credentials required when uploading a game build to the storage location. These credentials have a limited lifespan and are valid only for the build they were issued for. If you need to get fresh credentials, call <code><a>RequestUploadCredentials</a></code>.</p>
      StorageLocation?:
        type: S3Location
        description: <p>Amazon S3 path and key, identifying where the game build files are stored.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  CreateFleetInput:
    type: object
    properties:
      Name:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a fleet. Fleet names do not need to be unique.</p>
      Description?:
        type: NonZeroAndMaxString
        description: <p>Human-readable description of a fleet.</p>
      BuildId:
        type: BuildId
        description: <p>Unique identifier of the build to be deployed on the new fleet. The build must have been successfully uploaded to GameLift and be in a <code>READY</code> status. This fleet setting cannot be changed once the fleet is created.</p>
      ServerLaunchPath?:
        type: NonZeroAndMaxString
        description: <p>This parameter is no longer used. Instead, specify a server launch path using the <code>RuntimeConfiguration</code> parameter. (Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work.)</p>
      ServerLaunchParameters?:
        type: NonZeroAndMaxString
        description: <p>This parameter is no longer used. Instead, specify server launch parameters in the <code>RuntimeConfiguration</code> parameter. (Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work.)</p>
      LogPaths?:
        type: StringList
        description: <p>Location of default log files. When a server process is shut down, Amazon GameLift captures and stores any log files in this location. These logs are in addition to game session logs; see more on game session logs in the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-api-server-code">Amazon GameLift Developer Guide</a>. If no default log path for a fleet is specified, GameLift will automatically upload logs stored on each instance at <code>C:\game\logs</code>. Use the GameLift console to access stored logs. </p>
      EC2InstanceType:
        type: EC2InstanceType
        description: <p>Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. GameLift supports the following EC2 instance types. See <a href="https://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions.</p>
      EC2InboundPermissions?:
        type: IpPermissionsList
        description: <p>Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. If no inbound permissions are set, including both IP address range and port range, the server processes in the fleet cannot accept connections. You can specify one or more sets of permissions for a fleet.</p>
      NewGameSessionProtectionPolicy?:
        type: ProtectionPolicy
        description: <p>Game session protection policy to apply to all instances in this fleet. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy using UpdateFleetAttributes, but this change will only affect sessions created after the policy change. You can also set protection for individual instances using <a>UpdateGameSession</a>.</p> <ul><li><b>NoProtection</b> – The game session can be terminated during a scale-down event.</li> <li><b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</li></ul>
      RuntimeConfiguration?:
        type: RuntimeConfiguration
        description: <p>Instructions for launching server processes on each instance in the fleet. The runtime configuration for a fleet has a collection of server process configurations, one for each type of server process to run on an instance. A server process configuration specifies the location of the server executable, launch parameters, and the number of concurrent processes with that configuration to maintain on each instance. A <code>CreateFleet</code> request must include a runtime configuration with at least one server process configuration; otherwise the request will fail with an invalid request exception. (This parameter replaces the parameters <code>ServerLaunchPath</code> and <code>ServerLaunchParameters</code>; requests that contain values for these parameters instead of a runtime configuration will continue to work.) </p>
    description: <p>Represents the input for a request action.</p>
  CreateFleetOutput:
    type: object
    properties:
      FleetAttributes?:
        type: FleetAttributes
        description: <p>Properties for the newly created fleet.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  CreateGameSessionInput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet. Each request must reference either a fleet ID or alias ID, but not both.</p>
      AliasId?:
        type: AliasId
        description: <p>Unique identifier for a fleet alias. Each request must reference either a fleet ID or alias ID, but not both.</p>
      MaximumPlayerSessionCount:
        type: WholeNumber
        description: <p>Maximum number of players that can be connected simultaneously to the game session. </p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a game session. Session names do not need to be unique.</p>
      GameProperties?:
        type: GamePropertyList
        description: <p>Set of properties used to administer a game session. These properties are passed to the server process hosting it. </p>
    description: <p>Represents the input for a request action.</p>
  CreateGameSessionOutput:
    type: object
    properties:
      GameSession?:
        type: GameSession
        description: <p>Object containing the newly created game session record.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  CreatePlayerSessionInput:
    type: object
    properties:
      GameSessionId:
        type: GameSessionId
        description: <p>Unique identifier for a game session. Specify the game session you want to add a player to.</p>
      PlayerId:
        type: NonZeroAndMaxString
        description: <p>Unique identifier for the player to be added.</p>
    description: <p>Represents the input for a request action.</p>
  CreatePlayerSessionOutput:
    type: object
    properties:
      PlayerSession?:
        type: PlayerSession
        description: <p>Object containing the newly created player session record.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  CreatePlayerSessionsInput:
    type: object
    properties:
      GameSessionId:
        type: GameSessionId
        description: <p>Unique identifier for a game session. </p>
      PlayerIds:
        type: PlayerIdList
        description: <p>List of unique identifiers for the players to be added.</p>
    description: <p>Represents the input for a request action.</p>
  CreatePlayerSessionsOutput:
    type: object
    properties:
      PlayerSessions?:
        type: PlayerSessionList
        description: <p>Collection of player session objects created for the added players.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  DeleteAliasInput:
    type: object
    properties:
      AliasId:
        type: AliasId
        description: <p>Unique identifier for a fleet alias. Specify the alias you want to delete. </p>
    description: <p>Represents the input for a request action.</p>
  DeleteBuildInput:
    type: object
    properties:
      BuildId:
        type: BuildId
        description: <p>Unique identifier for the build you want to delete. </p>
    description: <p>Represents the input for a request action.</p>
  DeleteFleetInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier for the fleet you want to delete.</p>
    description: <p>Represents the input for a request action.</p>
  DeleteScalingPolicyInput:
    type: object
    properties:
      Name:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a scaling policy. Policy names do not need to be unique.</p>
      FleetId:
        type: FleetId
        description: <p>Unique identifier for a fleet.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeAliasInput:
    type: object
    properties:
      AliasId:
        type: AliasId
        description: <p>Unique identifier for a fleet alias. Specify the alias you want to retrieve. </p>
    description: <p>Represents the input for a request action.</p>
  DescribeAliasOutput:
    type: object
    properties:
      Alias?:
        type: Alias
        description: <p>Object containing the requested alias.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeBuildInput:
    type: object
    properties:
      BuildId:
        type: BuildId
        description: <p>Unique identifier of the build that you want to retrieve properties for. </p>
    description: <p>Represents the input for a request action.</p>
  DescribeBuildOutput:
    type: object
    properties:
      Build?:
        type: Build
        description: <p>Set of properties describing the requested build.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeEC2InstanceLimitsInput:
    type: object
    properties:
      EC2InstanceType?:
        type: EC2InstanceType
        description: <p>Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. GameLift supports the following EC2 instance types. See <a href="https://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions. Leave this parameter blank to retrieve limits for all types.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeEC2InstanceLimitsOutput:
    type: object
    properties:
      EC2InstanceLimits?:
        type: EC2InstanceLimitList
        description: <p>Object containing the maximum number of instances for the specified instance type.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeFleetAttributesInput:
    type: object
    properties:
      FleetIds?:
        type: FleetIdList
        description: <p>Unique identifiers for the fleet(s) that you want to retrieve attributes for. To request attributes for all fleets, leave this parameter empty.</p>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. This parameter is ignored when the request specifies one or a list of fleet IDs.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. This parameter is ignored when the request specifies one or a list of fleet IDs.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeFleetAttributesOutput:
    type: object
    properties:
      FleetAttributes?:
        type: FleetAttributesList
        description: <p>Collection of objects containing attribute metadata for each requested fleet ID. </p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeFleetCapacityInput:
    type: object
    properties:
      FleetIds?:
        type: FleetIdList
        description: <p>Unique identifier for the fleet(s) you want to retrieve capacity information for. To request capacity information for all fleets, leave this parameter empty.</p>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. This parameter is ignored when the request specifies one or a list of fleet IDs.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. This parameter is ignored when the request specifies one or a list of fleet IDs.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeFleetCapacityOutput:
    type: object
    properties:
      FleetCapacity?:
        type: FleetCapacityList
        description: <p>Collection of objects containing capacity information for each requested fleet ID. Leave this parameter empty to retrieve capacity information for all fleets.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeFleetEventsInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier for the fleet to get event logs for. </p>
      StartTime?:
        type: Timestamp
        description: '<p>Earliest date to retrieve event logs for. If no start time
          is specified, this call returns entries starting from when the fleet was
          created to the specified end time. Format is a number expressed in Unix
          time as milliseconds (ex: "1469498468.057".</p>'
      EndTime?:
        type: Timestamp
        description: '<p>Most recent date to retrieve event logs for. If no end time
          is specified, this call returns entries from the specified start time up
          to the present. Format is a number expressed in Unix time as milliseconds
          (ex: "1469498468.057".</p>'
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeFleetEventsOutput:
    type: object
    properties:
      Events?:
        type: EventList
        description: <p>Collection of objects containing event log entries for the specified fleet.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeFleetPortSettingsInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier for the fleet you want to retrieve port settings for. </p>
    description: <p>Represents the input for a request action.</p>
  DescribeFleetPortSettingsOutput:
    type: object
    properties:
      InboundPermissions?:
        type: IpPermissionsList
        description: <p>Object containing port settings for the requested fleet ID.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeFleetUtilizationInput:
    type: object
    properties:
      FleetIds?:
        type: FleetIdList
        description: <p>Unique identifier for the fleet(s) you want to retrieve utilization data for. To request utilization data for all fleets, leave this parameter empty.</p>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. This parameter is ignored when the request specifies one or a list of fleet IDs.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. This parameter is ignored when the request specifies one or a list of fleet IDs.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeFleetUtilizationOutput:
    type: object
    properties:
      FleetUtilization?:
        type: FleetUtilizationList
        description: <p>Collection of objects containing utilization information for each requested fleet ID.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeGameSessionDetailsInput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet. Specify a fleet to retrieve information on all game sessions active on the fleet.</p>
      GameSessionId?:
        type: GameSessionId
        description: <p>Unique identifier for a game session. Specify the game session to retrieve information on.</p>
      AliasId?:
        type: AliasId
        description: <p>Unique identifier for a fleet alias. Specify an alias to retrieve information on all game sessions active on the fleet.</p>
      StatusFilter?:
        type: NonZeroAndMaxString
        description: <p>Game session status to filter results on. Possible game session statuses include ACTIVE, <code>TERMINATED</code>, <code>ACTIVATING</code> and <code>TERMINATING</code> (the last two are transitory). </p>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeGameSessionDetailsOutput:
    type: object
    properties:
      GameSessionDetails?:
        type: GameSessionDetailList
        description: <p>Collection of objects containing game session properties and the protection policy currently in force for each session matching the request.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeGameSessionsInput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet. Specify a fleet to retrieve information on all game sessions active on the fleet.</p>
      GameSessionId?:
        type: GameSessionId
        description: <p>Unique identifier for a game session. Specify the game session to retrieve information on.</p>
      AliasId?:
        type: AliasId
        description: <p>Unique identifier for a fleet alias. Specify an alias to retrieve information on all game sessions active on the fleet.</p>
      StatusFilter?:
        type: NonZeroAndMaxString
        description: <p>Game session status to filter results on. Possible game session statuses include <code>ACTIVE</code>, <code>TERMINATED</code>, <code>ACTIVATING</code>, and <code>TERMINATING</code> (the last two are transitory). </p>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeGameSessionsOutput:
    type: object
    properties:
      GameSessions?:
        type: GameSessionList
        description: <p>Collection of objects containing game session properties for each session matching the request.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribePlayerSessionsInput:
    type: object
    properties:
      GameSessionId?:
        type: GameSessionId
        description: <p>Unique identifier for a game session.</p>
      PlayerId?:
        type: NonZeroAndMaxString
        description: <p>Unique identifier for a player.</p>
      PlayerSessionId?:
        type: PlayerSessionId
        description: <p>Unique identifier for a player session.</p>
      PlayerSessionStatusFilter?:
        type: NonZeroAndMaxString
        description: <p>Player session status to filter results on.</p> <p>Possible player session statuses include the following:</p> <ul><li><b>RESERVED</b> – The player session request has been received, but the player has not yet connected to the server process and/or been validated. </li><li><b>ACTIVE</b> – The player has been validated by the server process and is currently connected.</li><li><b>COMPLETED</b> – The player connection has been dropped.</li><li><b>TIMEDOUT</b> – A player session request was received, but the player did not connect and/or was not validated within the time-out limit (60 seconds).</li></ul>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. If a player session ID is specified, this parameter is ignored.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. If a player session ID is specified, this parameter is ignored.</p>
    description: <p>Represents the input for a request action.</p>
  DescribePlayerSessionsOutput:
    type: object
    properties:
      PlayerSessions?:
        type: PlayerSessionList
        description: <p>Collection of objects containing properties for each player session that matches the request.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeRuntimeConfigurationInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier of the fleet to get the runtime configuration for.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeRuntimeConfigurationOutput:
    type: object
    properties:
      RuntimeConfiguration?:
        type: RuntimeConfiguration
        description: <p>Instructions describing how server processes should be launched and maintained on each instance in the fleet.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  DescribeScalingPoliciesInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier for a fleet. Specify the fleet to retrieve scaling policies for.</p>
      StatusFilter?:
        type: ScalingStatusType
        description: <p>Scaling policy status to filter results on. A scaling policy is only in force when in an <code>ACTIVE</code> status.</p> <ul> <li> <b>ACTIVE</b> – The scaling policy is currently in force.</li> <li> <b>UPDATEREQUESTED</b> – A request to update the scaling policy has been received.</li> <li> <b>UPDATING</b> – A change is being made to the scaling policy.</li> <li> <b>DELETEREQUESTED</b> – A request to delete the scaling policy has been received.</li> <li> <b>DELETING</b> – The scaling policy is being deleted.</li> <li> <b>DELETED</b> – The scaling policy has been deleted.</li> <li> <b>ERROR</b> – An error occurred in creating the policy. It should be removed and recreated.</li> </ul>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  DescribeScalingPoliciesOutput:
    type: object
    properties:
      ScalingPolicies?:
        type: ScalingPolicyList
        description: <p>Collection of objects containing the scaling policies matching the request.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  EC2InstanceCounts:
    type: object
    properties:
      DESIRED?:
        type: WholeNumber
        description: <p>Ideal number of active instances in the fleet.</p>
      MINIMUM?:
        type: WholeNumber
        description: <p>Minimum value allowed for the fleet's instance count.</p>
      MAXIMUM?:
        type: WholeNumber
        description: <p>Maximum value allowed for the fleet's instance count.</p>
      PENDING?:
        type: WholeNumber
        description: <p>Number of instances in the fleet that are starting but not yet active.</p>
      ACTIVE?:
        type: WholeNumber
        description: <p>Actual number of active instances in the fleet.</p>
      IDLE?:
        type: WholeNumber
        description: <p>Number of active instances in the fleet that are not currently hosting a game session.</p>
      TERMINATING?:
        type: WholeNumber
        description: <p>Number of instances in the fleet that are no longer active but haven't yet been terminated. </p>
    description: <p>Current status of fleet capacity. The number of active instances should match or be in the process of matching the number of desired instances. Pending and terminating counts are non-zero only if fleet capacity is adjusting to an <a>UpdateFleetCapacity</a> request, or if access to resources is temporarily affected.</p>
  EC2InstanceLimit:
    type: object
    properties:
      EC2InstanceType?:
        type: EC2InstanceType
        description: <p>Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. GameLift supports the following EC2 instance types. See <a href="https://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions.</p>
      CurrentInstances?:
        type: WholeNumber
        description: <p>Number of instances of the specified type that are currently in use by this AWS account. </p>
      InstanceLimit?:
        type: WholeNumber
        description: <p>Number of instances allowed.</p>
    description: <p>Maximum number of instances allowed based on the Amazon Elastic Compute Cloud (Amazon EC2) instance type. Instance limits can be retrieved by calling <a>DescribeEC2InstanceLimits</a>.</p>
  Event:
    type: object
    properties:
      EventId?:
        type: NonZeroAndMaxString
        description: <p>Unique identifier for a fleet event.</p>
      ResourceId?:
        type: NonZeroAndMaxString
        description: <p>Unique identifier for the resource, such as a fleet ID.</p>
      EventCode?:
        type: EventCode
        description: <p>Type of event being logged.</p>
      Message?:
        type: NonEmptyString
        description: <p>Additional information related to the event.</p>
      EventTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this event occurred. Format is
          a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
    description: <p>Log entry describing an event involving an Amazon GameLift resource (such as a fleet).</p>
  FleetAttributes:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet.</p>
      Description?:
        type: NonZeroAndMaxString
        description: <p>Human-readable description of the fleet.</p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a fleet. Fleet names do not need to be unique.</p>
      CreationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was created.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
      TerminationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was terminated.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
      Status?:
        type: FleetStatus
        description: <p>Current status of the fleet.</p> <p>Possible fleet statuses include the following:</p> <ul><li><b>NEW</b> – A new fleet has been defined and desired instances is set to 1. </li><li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> – GameLift is setting up the new fleet, creating new instances with the game build and starting server processes.</li><li><b>ACTIVE</b> – Hosts can now accept game sessions.</li><li><b>ERROR</b> – An error occurred when downloading, validating, building, or activating the fleet.</li><li><b>DELETING</b> – Hosts are responding to a delete fleet request.</li><li><b>TERMINATED</b> – The fleet no longer exists.</li></ul>
      BuildId?:
        type: BuildId
        description: <p>Unique identifier for a build.</p>
      ServerLaunchPath?:
        type: NonZeroAndMaxString
        description: <p>Path to a game server executable in the fleet's build, specified for fleets created prior to 2016-08-04 (or AWS SDK v. 0.12.16). Server launch paths for fleets created after this date are specified in the fleet's <code><a>RuntimeConfiguration</a></code>.</p>
      ServerLaunchParameters?:
        type: NonZeroAndMaxString
        description: <p>Game server launch parameters specified for fleets created prior to 2016-08-04 (or AWS SDK v. 0.12.16). Server launch parameters for fleets created after this date are specified in the fleet's <code><a>RuntimeConfiguration</a></code>.</p>
      LogPaths?:
        type: StringList
        description: <p>Location of default log files. When a server process is shut down, Amazon GameLift captures and stores any log files in this location. These logs are in addition to game session logs; see more on game session logs in the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-api-server-code">Amazon GameLift Developer Guide</a>. If no default log path for a fleet is specified, GameLift will automatically upload logs stored on each instance at <code>C:\game\logs</code>. Use the GameLift console to access stored logs. </p>
      NewGameSessionProtectionPolicy?:
        type: ProtectionPolicy
        description: <p>Type of game session protection to set for all new instances started in the fleet.</p> <ul><li><b>NoProtection</b> – The game session can be terminated during a scale-down event.</li> <li><b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</li></ul>
      OperatingSystem?:
        type: OperatingSystem
        description: <p>Operating system of the fleet's computing resources. A fleet's operating system depends on the OS specified for the build that is deployed on this fleet.</p>
    description: <p>General properties describing a fleet.</p>
  FleetCapacity:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet.</p>
      InstanceType?:
        type: EC2InstanceType
        description: <p>Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. GameLift supports the following EC2 instance types. See <a href="https://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions.</p>
      InstanceCounts?:
        type: EC2InstanceCounts
        description: <p>Current status of fleet capacity.</p>
    description: <p>Information about the fleet's capacity. Fleet capacity is measured in EC2 instances. By default, new fleets have a capacity of one instance, but can be updated as needed. The maximum number of instances for a fleet is determined by the fleet's instance type.</p>
  FleetUtilization:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet.</p>
      ActiveServerProcessCount?:
        type: WholeNumber
        description: <p>Number of server processes in an <code>ACTIVE</code> status currently running across all instances in the fleet</p>
      ActiveGameSessionCount?:
        type: WholeNumber
        description: <p>Number of active game sessions currently being hosted on all instances in the fleet.</p>
      CurrentPlayerSessionCount?:
        type: WholeNumber
        description: <p>Number of active player sessions currently being hosted on all instances in the fleet.</p>
      MaximumPlayerSessionCount?:
        type: WholeNumber
        description: <p>Maximum players allowed across all game sessions currently being hosted on all instances in the fleet.</p>
    description: <p>Current status of fleet utilization, including the number of game and player sessions being hosted.</p>
  GameProperty:
    type: object
    properties:
      Key:
        type: GamePropertyKey
      Value:
        type: GamePropertyValue
    description: <p>Set of key-value pairs containing information a server process requires to set up a game session. This object allows you to pass in any set of data needed for your game. For more information, see the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/">Amazon GameLift Developer Guide</a>.</p>
  GameSession:
    type: object
    properties:
      GameSessionId?:
        type: GameSessionId
        description: <p>Unique identifier for a game session.</p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a game session. Session names do not need to be unique.</p>
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet.</p>
      CreationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was created.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
      TerminationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was terminated.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
      CurrentPlayerSessionCount?:
        type: WholeNumber
        description: <p>Number of players currently in the game session.</p>
      MaximumPlayerSessionCount?:
        type: WholeNumber
        description: <p>Maximum number of players allowed in the game session.</p>
      Status?:
        type: GameSessionStatus
        description: <p>Current status of the game session. A game session must be in an <code>ACTIVE</code> status to have player sessions.</p>
      GameProperties?:
        type: GamePropertyList
        description: <p>Set of custom properties for the game session.</p>
      IpAddress?:
        type: IpAddress
        description: <p>IP address of the game session. To connect to a GameLift server process, an app needs both the IP address and port number.</p>
      Port?:
        type: PortNumber
        description: <p>Port number for the game session. To connect to a GameLift server process, an app needs both the IP address and port number.</p>
      PlayerSessionCreationPolicy?:
        type: PlayerSessionCreationPolicy
        description: <p>Indicates whether or not the game session is accepting new players.</p>
    description: <p>Properties describing a game session.</p>
  GameSessionDetail:
    type: object
    properties:
      GameSession?:
        type: GameSession
      ProtectionPolicy?:
        type: ProtectionPolicy
        description: <p>Current status of protection for the game session.</p> <ul><li><b>NoProtection</b> – The game session can be terminated during a scale-down event.</li> <li><b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</li></ul>
    description: <p>A game session's properties and the protection policy currently in force.</p>
  GetGameSessionLogUrlInput:
    type: object
    properties:
      GameSessionId:
        type: GameSessionId
        description: <p>Unique identifier for a game session. Specify the game session you want to get logs for.</p>
    description: <p>Represents the input for a request action.</p>
  GetGameSessionLogUrlOutput:
    type: object
    properties:
      PreSignedUrl?:
        type: NonZeroAndMaxString
        description: <p>Location of the requested game session logs, available for download.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  IpPermission:
    type: object
    properties:
      FromPort:
        type: PortNumber
        description: <p>Starting value for a range of allowed port numbers. </p>
      ToPort:
        type: PortNumber
        description: <p>Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than <code>FromPort</code>.</p>
      IpRange:
        type: NonBlankString
        description: '<p>Range of allowed IP addresses. This value must be expressed
          in <a href="https://tools.ietf.org/id/cidr">CIDR notation</a>. Example:
          "<code>000.000.000.000/[subnet mask]</code>" or optionally the shortened
          version "<code>0.0.0.0/[subnet mask]</code>".</p>'
      Protocol:
        type: IpProtocol
        description: <p>Network communication protocol used by the fleet.</p>
    description: <p>A range of IP addresses and port settings that allow inbound traffic to connect to server processes on GameLift. Each game session hosted on a fleet is assigned a unique combination of IP address and port number, which must fall into the fleet's allowed ranges. This combination is included in the <a>GameSession</a> object. </p>
  ListAliasesInput:
    type: object
    properties:
      RoutingStrategyType?:
        type: RoutingStrategyType
        description: <p>Type of routing to filter results on. Use this parameter to retrieve only aliases of a certain type. To retrieve all aliases, leave this parameter empty.</p> <p>Possible routing types include the following:</p> <ul><li><b>SIMPLE</b> – The alias resolves to one specific fleet. Use this type when routing to active fleets.</li><li><b>TERMINAL</b> – The alias does not resolve to a fleet but instead can be used to display a message to the user. A terminal alias throws a TerminalRoutingStrategyException with the <a>RoutingStrategy</a> message embedded.</li></ul>
      Name?:
        type: NonEmptyString
        description: <p>Descriptive label associated with an alias. Alias names do not need to be unique.</p>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
      NextToken?:
        type: NonEmptyString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  ListAliasesOutput:
    type: object
    properties:
      Aliases?:
        type: AliasList
        description: <p>Collection of alias records that match the list request. </p>
      NextToken?:
        type: NonEmptyString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  ListBuildsInput:
    type: object
    properties:
      Status?:
        type: BuildStatus
        description: <p>Build status to filter results by. To retrieve all builds, leave this parameter empty.</p> <p>Possible build statuses include the following:</p> <ul><li><b>INITIALIZED</b> – A new build has been defined, but no files have been uploaded. You cannot create fleets for builds that are in this status. When a build is successfully created, the build status is set to this value. </li><li><b>READY</b> – The game build has been successfully uploaded. You can now create new fleets for this build.</li><li><b>FAILED</b> – The game build upload failed. You cannot create new fleets for this build. </li></ul>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
      NextToken?:
        type: NonEmptyString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  ListBuildsOutput:
    type: object
    properties:
      Builds?:
        type: BuildList
        description: <p>Collection of build records that match the request. </p>
      NextToken?:
        type: NonEmptyString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  ListFleetsInput:
    type: object
    properties:
      BuildId?:
        type: BuildId
        description: <p>Unique identifier of the build to return fleets for. Use this parameter to return only fleets using the specified build. To retrieve all fleets, leave this parameter empty.</p>
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  ListFleetsOutput:
    type: object
    properties:
      FleetIds?:
        type: FleetIdList
        description: <p>Set of fleet IDs matching the list request. You can retrieve additional information about all returned fleets by passing this result set to a call to <a>DescribeFleetAttributes</a>, <a>DescribeFleetCapacity</a>, and <a>DescribeFleetUtilization</a>.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  PlayerSession:
    type: object
    properties:
      PlayerSessionId?:
        type: PlayerSessionId
        description: <p>Unique identifier for a player session.</p>
      PlayerId?:
        type: NonZeroAndMaxString
        description: <p>Unique identifier for a player.</p>
      GameSessionId?:
        type: GameSessionId
        description: <p>Unique identifier for a game session.</p>
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet.</p>
      CreationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was created.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
      TerminationTime?:
        type: Timestamp
        description: '<p>Time stamp indicating when this data object was terminated.
          Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057".</p>'
      Status?:
        type: PlayerSessionStatus
        description: <p>Current status of the player session.</p> <p>Possible player session statuses include the following:</p> <ul><li><b>RESERVED</b> – The player session request has been received, but the player has not yet connected to the server process and/or been validated. </li><li><b>ACTIVE</b> – The player has been validated by the server process and is currently connected.</li><li><b>COMPLETED</b> – The player connection has been dropped.</li><li><b>TIMEDOUT</b> – A player session request was received, but the player did not connect and/or was not validated within the time-out limit (60 seconds).</li></ul>
      IpAddress?:
        type: IpAddress
        description: <p>Game session IP address. All player sessions reference the game session location. </p>
      Port?:
        type: PortNumber
        description: <p>Port number for the game session. To connect to a GameLift server process, an app needs both the IP address and port number.</p>
    description: <p>Properties describing a player session.</p>
  PutScalingPolicyInput:
    type: object
    properties:
      Name:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a scaling policy. Policy names do not need to be unique. A fleet can have only one scaling policy with the same name.</p>
      FleetId:
        type: FleetId
        description: <p>Unique identity for the fleet to scale with this policy.</p>
      ScalingAdjustment:
        type: Integer
        description: <p>Amount of adjustment to make, based on the scaling adjustment type.</p>
      ScalingAdjustmentType:
        type: ScalingAdjustmentType
        description: <p>Type of adjustment to make to a fleet's instance count (see <a>FleetCapacity</a>):</p> <ul> <li> <b>ChangeInCapacity</b> – add (or subtract) the scaling adjustment value from the current instance count. Positive values scale up while negative values scale down.</li> <li> <b>ExactCapacity</b> – set the instance count to the scaling adjustment value.</li> <li> <b>PercentChangeInCapacity</b> – increase or reduce the current instance count by the scaling adjustment, read as a percentage. Positive values scale up while negative values scale down; for example, a value of "-10" scales the fleet down by 10%.</li> </ul>
      Threshold:
        type: Double
        description: <p>Metric value used to trigger a scaling event.</p>
      ComparisonOperator:
        type: ComparisonOperatorType
        description: <p>Comparison operator to use when measuring the metric against the threshold value. </p>
      EvaluationPeriods:
        type: PositiveInteger
        description: <p>Length of time (in minutes) the metric must be at or beyond the threshold before a scaling event is triggered.</p>
      MetricName:
        type: MetricName
        description: <p>Name of the Amazon GameLift-defined metric that is used to trigger an adjustment.</p> <ul> <li> <b>ActivatingGameSessions</b> – number of game sessions in the process of being created (game session status = <code>ACTIVATING</code>).</li> <li> <b>ActiveGameSessions</b> – number of game sessions currently running (game session status = <code>ACTIVE</code>).</li> <li> <b>CurrentPlayerSessions</b> – number of active or reserved player sessions (player session status = <code>ACTIVE</code> or <code>RESERVED</code>). </li> <li> <b>AvailablePlayerSessions</b> – number of player session slots currently available in active game sessions across the fleet, calculated by subtracting a game session's current player session count from its maximum player session count. This number includes game sessions that are not currently accepting players (game session <code>PlayerSessionCreationPolicy</code> = <code>DENY_ALL</code>).</li> <li> <b>ActiveInstances</b> – number of instances currently running a game session.</li> <li> <b>IdleInstances</b> – number of instances not currently running a game session.</li> </ul>
    description: <p>Represents the input for a request action.</p>
  PutScalingPolicyOutput:
    type: object
    properties:
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a scaling policy. Policy names do not need to be unique.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  RequestUploadCredentialsInput:
    type: object
    properties:
      BuildId:
        type: BuildId
        description: <p>Unique identifier for the build you want to get credentials for. </p>
    description: <p>Represents the input for a request action.</p>
  RequestUploadCredentialsOutput:
    type: object
    properties:
      UploadCredentials?:
        type: AwsCredentials
        description: <p>AWS credentials required when uploading a game build to the storage location. These credentials have a limited lifespan and are valid only for the build they were issued for.</p>
      StorageLocation?:
        type: S3Location
        description: <p>Amazon S3 path and key, identifying where the game build files are stored.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  ResolveAliasInput:
    type: object
    properties:
      AliasId:
        type: AliasId
        description: <p>Unique identifier for the alias you want to resolve. </p>
    description: <p>Represents the input for a request action.</p>
  ResolveAliasOutput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Fleet ID associated with the requested alias.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  RoutingStrategy:
    type: object
    properties:
      Type?:
        type: RoutingStrategyType
        description: <p>Type of routing strategy.</p> <p>Possible routing types include the following:</p> <ul><li><b>SIMPLE</b> – The alias resolves to one specific fleet. Use this type when routing to active fleets.</li><li><b>TERMINAL</b> – The alias does not resolve to a fleet but instead can be used to display a message to the user. A terminal alias throws a TerminalRoutingStrategyException with the <a>RoutingStrategy</a> message embedded.</li></ul>
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet.</p>
      Message?:
        type: FreeText
        description: <p>Message text to be used with a terminal routing strategy.</p>
    description: <p>Routing configuration for a fleet alias. </p>
  RuntimeConfiguration:
    type: object
    properties:
      ServerProcesses?:
        type: ServerProcessList
        description: <p>Collection of server process configurations describing what server processes to run on each instance in a fleet </p>
    description: <p>Collection of server process configurations that describe what processes should be run on each instance in a fleet. An instance can launch and maintain multiple server processes based on the runtime configuration; it regularly checks for an updated runtime configuration and starts new server processes to match the latest version.</p> <p>The key purpose of a runtime configuration with multiple server process configurations is to be able to run more than one kind of game server in a single fleet. You can include configurations for more than one server executable in order to run two or more different programs to run on the same instance. This option might be useful, for example, to run more than one version of your game server on the same fleet. Another option is to specify configurations for the same server executable but with different launch parameters.</p> <p>A GameLift instance is limited to 50 processes running simultaneously. To calculate the total number of processes specified in a runtime configuration, add the values of the <code>ConcurrentExecutions</code> parameter for each <code><a>ServerProcess</a></code> object in the runtime configuration.</p>
  S3Location:
    type: object
    properties:
      Bucket?:
        type: NonEmptyString
        description: <p>Amazon S3 bucket identifier.</p>
      Key?:
        type: NonEmptyString
        description: <p>Amazon S3 bucket key.</p>
      RoleArn?:
        type: NonEmptyString
        description: <p>Amazon resource number for the cross-account access role that allows GameLift access to the S3 bucket.</p>
    description: <p>Location in Amazon Simple Storage Service (Amazon S3) where a build's files are stored. This location is assigned in response to a <a>CreateBuild</a> call, and is always in the same region as the service used to create the build. For more details see the <a href="http://aws.amazon.com/documentation/s3/">Amazon S3 documentation</a>.</p>
  ScalingPolicy:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identity for the fleet associated with this scaling policy.</p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a scaling policy. Policy names do not need to be unique.</p>
      Status?:
        type: ScalingStatusType
        description: <p>Current status of the scaling policy. The scaling policy is only in force when in an <code>ACTIVE</code> status.</p> <ul> <li> <b>ACTIVE</b> – The scaling policy is currently in force.</li> <li> <b>UPDATE_REQUESTED</b> – A request to update the scaling policy has been received.</li> <li> <b>UPDATING</b> – A change is being made to the scaling policy.</li> <li> <b>DELETE_REQUESTED</b> – A request to delete the scaling policy has been received.</li> <li> <b>DELETING</b> – The scaling policy is being deleted.</li> <li> <b>DELETED</b> – The scaling policy has been deleted.</li> <li> <b>ERROR</b> – An error occurred in creating the policy. It should be removed and recreated.</li> </ul>
      ScalingAdjustment?:
        type: Integer
        description: <p>Amount of adjustment to make, based on the scaling adjustment type.</p>
      ScalingAdjustmentType?:
        type: ScalingAdjustmentType
        description: <p>Type of adjustment to make to a fleet's instance count (see <a>FleetCapacity</a>):</p> <ul> <li> <b>ChangeInCapacity</b> – add (or subtract) the scaling adjustment value from the current instance count. Positive values scale up while negative values scale down.</li> <li> <b>ExactCapacity</b> – set the instance count to the scaling adjustment value.</li> <li> <b>PercentChangeInCapacity</b> – increase or reduce the current instance count by the scaling adjustment, read as a percentage. Positive values scale up while negative values scale down.</li> </ul>
      ComparisonOperator?:
        type: ComparisonOperatorType
        description: <p>Comparison operator to use when measuring a metric against the threshold value. </p>
      Threshold?:
        type: Double
        description: <p>Metric value used to trigger a scaling event.</p>
      EvaluationPeriods?:
        type: PositiveInteger
        description: <p>Length of time (in minutes) the metric must be at or beyond the threshold before a scaling event is triggered.</p>
      MetricName?:
        type: MetricName
        description: <p>Name of the GameLift-defined metric that is used to trigger an adjustment.</p> <ul> <li> <b>ActivatingGameSessions</b> – number of game sessions in the process of being created (game session status = <code>ACTIVATING</code>).</li> <li> <b>ActiveGameSessions</b> – number of game sessions currently running (game session status = <code>ACTIVE</code>).</li> <li> <b>CurrentPlayerSessions</b> – number of active or reserved player sessions (player session status = <code>ACTIVE</code> or <code>RESERVED</code>). </li> <li> <b>AvailablePlayerSessions</b> – number of player session slots currently available in active game sessions across the fleet, calculated by subtracting a game session's current player session count from its maximum player session count. This number does include game sessions that are not currently accepting players (game session <code>PlayerSessionCreationPolicy</code> = <code>DENY_ALL</code>).</li> <li> <b>ActiveInstances</b> – number of instances currently running a game session.</li> <li> <b>IdleInstances</b> – number of instances not currently running a game session.</li> </ul>
    description: <p>Rule that controls how a fleet is scaled. Scaling policies are uniquely identified by the combination of name and fleet ID.</p>
  SearchGameSessionsInput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for a fleet. Each request must reference either a fleet ID or alias ID, but not both.</p>
      AliasId?:
        type: AliasId
        description: <p>Unique identifier for a fleet alias. Each request must reference either a fleet ID or alias ID, but not both.</p>
      FilterExpression?:
        type: NonZeroAndMaxString
        description: '<p>String containing the search criteria for the session search.
          If no filter expression is included, the request returns results for all
          game sessions in the fleet that are in ACTIVE status. </p> <p>A filter expression
          can contain one or multiple conditions. Each condition consists of the following:</p>
          <ul> <li> <b>Operand</b> -- Name of a game session attribute. Valid values
          are <code>gameSessionName</code>, <code>gameSessionId</code>, <code>creationTimeMillis</code>,
          <code>playerSessionCount</code>, <code>maximumSessions</code>, <code>hasAvailablePlayerSessions</code>.</li>
          <li> <b>Comparator</b> -- Valid comparators are: <code>=</code>, <code>&amp;lt;&amp;gt;</code>,
          <code>&amp;lt;</code>, <code>&amp;gt;</code>, <code>&amp;lt;=</code>, <code>&amp;gt;=</code>.
          </li> <li> <b>Value</b> -- Value to be searched for. Values can be numbers,
          boolean values (true/false) or strings. String values are case sensitive,
          enclosed in single quotes. Special characters must be escaped. Boolean and
          string values can only be used with the comparators <code>=</code> and <code>&amp;lt;&amp;gt;</code>.
          For example, the following filter expression searches on <code>gameSessionName</code>:
          "<code>FilterExpression": "gameSessionName = ''Matt\\''s Awesome Game 1''"</code>.
          </li> </ul> <p>To chain multiple conditions in a single expression, use
          the logical keywords <code>AND</code>, <code>OR</code>, and <code>NOT</code>
          and parentheses as needed. For example: <code>x AND y AND NOT z</code>,
          <code>NOT (x OR y)</code>.</p> <p> Session search evaluates conditions from
          left to right using the following precedence rules: </p> <ol> <li> <code>=</code>,
          <code>&amp;lt;&amp;gt;</code>, <code>&amp;lt;</code>, <code>&amp;gt;</code>,
          <code>&amp;lt;=</code>, <code>&amp;gt;=</code> </li> <li>Parentheses </li>
          <li>NOT</li> <li>AND</li> <li>OR</li> </ol> <p>For example, this filter
          expression retrieves game sessions hosting at least ten players that have
          an open player slot: <code>"maximumSessions&amp;gt;=10 AND hasAvailablePlayerSessions=true"</code>.
          </p>'
      SortExpression?:
        type: NonZeroAndMaxString
        description: '<p>Instructions on how to sort the search results. If no sort
          expression is included, the request returns results in random order. A sort
          expression consists of the following elements: </p> <ul> <li> <b>Operand</b>
          -- Name of a game session attribute. Valid values are <code>gameSessionName</code>,
          <code>gameSessionId</code>, <code>creationTimeMillis</code>, <code>playerSessionCount</code>,
          <code>maximumSessions</code>, <code>hasAvailablePlayerSessions</code>.</li>
          <li> <b>Order</b> -- Valid sort orders are <code>ASC</code> (ascending)
          and <code>DESC</code> (descending).</li> </ul> <p>For example, this sort
          expression returns the oldest active sessions first: <code>"SortExpression":
          "creationTimeMillis ASC"</code>. Results with a null value for the sort
          operand are returned at the end of the list.</p>'
      Limit?:
        type: PositiveInteger
        description: <p>Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. The maximum number of results returned is 20, even if this value is not set or is set higher than 20. </p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.</p>
    description: <p>Represents the input for a request action.</p>
  SearchGameSessionsOutput:
    type: object
    properties:
      GameSessions?:
        type: GameSessionList
        description: <p>Collection of objects containing game session properties for each session matching the request.</p>
      NextToken?:
        type: NonZeroAndMaxString
        description: <p>Token indicating where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.</p> <note> <p>If a request has a limit that exactly matches the number of remaining results, a token is returned even though there are no more results to retrieve.</p> </note>
    description: <p>Represents the returned data in response to a request action.</p>
  ServerProcess:
    type: object
    properties:
      LaunchPath:
        type: NonZeroAndMaxString
        description: <p>Location in the game build of the server executable. All game builds are installed on instances at the root <code>C:\game\...</code>, so an executable file located at <code>MyGame\latest\server.exe</code> has a launch path of "<code>C:\game\MyGame\latest\server.exe</code>". </p>
      Parameters?:
        type: NonZeroAndMaxString
        description: <p>Optional list of parameters to pass to the server executable on launch.</p>
      ConcurrentExecutions:
        type: PositiveInteger
        description: <p>Number of server processes using this configuration to run concurrently on an instance. </p>
    description: <p>A set of instructions for launching server processes on each instance in a fleet. Each instruction set identifies the location of the server executable, optional launch parameters, and the number of server processes with this configuration to maintain concurrently on the instance. Server process configurations make up a fleet's <code><a>RuntimeConfiguration</a></code>.</p>
  UpdateAliasInput:
    type: object
    properties:
      AliasId:
        type: AliasId
        description: <p>Unique identifier for a fleet alias. Specify the alias you want to update. </p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with an alias. Alias names do not need to be unique.</p>
      Description?:
        type: NonZeroAndMaxString
        description: <p>Human-readable description of an alias.</p>
      RoutingStrategy?:
        type: RoutingStrategy
        description: <p>Object specifying the fleet and routing type to use for the alias.</p>
    description: <p>Represents the input for a request action.</p>
  UpdateAliasOutput:
    type: object
    properties:
      Alias?:
        type: Alias
        description: <p>Object containing the updated alias configuration.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  UpdateBuildInput:
    type: object
    properties:
      BuildId:
        type: BuildId
        description: <p>Unique identifier of the build you want to update. </p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a build. Build names do not need to be unique.</p>
      Version?:
        type: NonZeroAndMaxString
        description: <p>Version associated with this build. Version strings do not need to be unique to a build.</p>
    description: <p>Represents the input for a request action.</p>
  UpdateBuildOutput:
    type: object
    properties:
      Build?:
        type: Build
        description: <p>Object containing the updated build record.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  UpdateFleetAttributesInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier for the fleet you want to update attribute metadata for. </p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a fleet. Fleet names do not need to be unique.</p>
      Description?:
        type: NonZeroAndMaxString
        description: <p>Human-readable description of a fleet.</p>
      NewGameSessionProtectionPolicy?:
        type: ProtectionPolicy
        description: <p>Game session protection policy to apply to all new instances created in this fleet. Instances that already exist are not affected. You can set protection for individual instances using <a>UpdateGameSession</a>.</p> <ul><li><b>NoProtection</b> – The game session can be terminated during a scale-down event.</li> <li><b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</li></ul>
    description: <p>Represents the input for a request action.</p>
  UpdateFleetAttributesOutput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for the updated fleet.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  UpdateFleetCapacityInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier for the fleet you want to update capacity for. </p>
      DesiredInstances?:
        type: WholeNumber
        description: <p>Number of EC2 instances you want this fleet to host.</p>
      MinSize?:
        type: WholeNumber
        description: <p>Minimum value allowed for the fleet's instance count. Default if not set is 0.</p>
      MaxSize?:
        type: WholeNumber
        description: <p>Maximum value allowed for the fleet's instance count. Default if not set is 1.</p>
    description: <p>Represents the input for a request action.</p>
  UpdateFleetCapacityOutput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for the updated fleet.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  UpdateFleetPortSettingsInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier for the fleet you want to update port settings for. </p>
      InboundPermissionAuthorizations?:
        type: IpPermissionsList
        description: <p>Collection of port settings to be added to the fleet record.</p>
      InboundPermissionRevocations?:
        type: IpPermissionsList
        description: <p>Collection of port settings to be removed from the fleet record.</p>
    description: <p>Represents the input for a request action.</p>
  UpdateFleetPortSettingsOutput:
    type: object
    properties:
      FleetId?:
        type: FleetId
        description: <p>Unique identifier for the updated fleet.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  UpdateGameSessionInput:
    type: object
    properties:
      GameSessionId:
        type: GameSessionId
        description: <p>Unique identifier for a game session. Specify the game session you want to update. </p>
      MaximumPlayerSessionCount?:
        type: WholeNumber
        description: <p>Maximum number of players that can be simultaneously connected to the game session.</p>
      Name?:
        type: NonZeroAndMaxString
        description: <p>Descriptive label associated with a game session. Session names do not need to be unique.</p>
      PlayerSessionCreationPolicy?:
        type: PlayerSessionCreationPolicy
        description: <p>Policy determining whether or not the game session accepts new players.</p>
      ProtectionPolicy?:
        type: ProtectionPolicy
        description: <p>Game session protection policy to apply to this game session only.</p> <ul><li><b>NoProtection</b> – The game session can be terminated during a scale-down event.</li> <li><b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</li></ul>
    description: <p>Represents the input for a request action.</p>
  UpdateGameSessionOutput:
    type: object
    properties:
      GameSession?:
        type: GameSession
        description: <p>Object containing the updated game session metadata.</p>
    description: <p>Represents the returned data in response to a request action.</p>
  UpdateRuntimeConfigurationInput:
    type: object
    properties:
      FleetId:
        type: FleetId
        description: <p>Unique identifier of the fleet to update runtime configuration for.</p>
      RuntimeConfiguration:
        type: RuntimeConfiguration
        description: <p>Instructions for launching server processes on each instance in the fleet. The runtime configuration for a fleet has a collection of server process configurations, one for each type of server process to run on an instance. A server process configuration specifies the location of the server executable, launch parameters, and the number of concurrent processes with that configuration to maintain on each instance.</p>
    description: <p>Represents the input for a request action.</p>
  UpdateRuntimeConfigurationOutput:
    type: object
    properties:
      RuntimeConfiguration?:
        type: RuntimeConfiguration
        description: <p>The runtime configuration currently in force. If the update was successful, this object matches the one in the request.</p>
    description: <p>Represents the returned data in response to a request action.</p>
/{CreateAlias}:
  uriParameters:
    CreateAlias?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Creates an alias for a fleet. You can use an alias to anonymize your
    fleet by referencing an alias instead of a specific fleet when you create game
    sessions. Amazon GameLift supports two types of routing strategies for aliases:
    simple and terminal. Use a simple alias to point to an active fleet. Use a terminal
    alias to display a message to incoming traffic instead of routing players to an
    active fleet. This option is useful when a game server is no longer supported
    but you want to provide better messaging than a standard 404 error. To create
    a fleet alias, specify an alias name, routing strategy, and optional description.
    If successful, a new alias record is returned, including an alias ID, which you
    can reference when creating a game session. To reassign the alias to another fleet
    ID, call <a>UpdateAlias</a>.'
  post:
    body:
      application/json: CreateAliasInput
    responses:
      200:
        body:
          application/json: CreateAliasOutput
      400:
        description: UnauthorizedException
/{CreateBuild}:
  uriParameters:
    CreateBuild?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Initializes a new build record and generates information required to upload a game build to Amazon GameLift. Once the build record has been created and its status is <code>INITIALIZED</code>, you can upload your game build. <important> Do not use this API action unless you are using your own Amazon Simple Storage Service (Amazon S3) client and need to manually upload your build files. Instead, to create a build, use the CLI command <code>upload-build</code>, which creates a new build record and uploads the build files in one step. (See the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">Amazon GameLift Developer Guide</a> help on packaging and uploading your build.)  </important> To create a new build, identify the operating system of the game server binaries. All game servers in a build must use the same operating system. Optionally, specify a build name and version; this metadata is stored with other properties in the build record and is displayed in the GameLift console (it is not visible to players). If successful, this action returns the newly created build record along with the Amazon S3 storage location and AWS account credentials. Use the location and credentials to upload your game build.
  post:
    body:
      application/json: CreateBuildInput
    responses:
      200:
        body:
          application/json: CreateBuildOutput
      400:
        description: UnauthorizedException
/{CreateFleet}:
  uriParameters:
    CreateFleet?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Creates a new fleet to run your game servers. A fleet is a set of
    Amazon Elastic Compute Cloud (Amazon EC2) instances, each of which can run multiple
    server processes to host game sessions. You configure a fleet to create instances
    with certain hardware specifications (see <a href="https://aws.amazon.com/ec2/instance-types/">Amazon
    EC2 Instance Types</a> for more information), and deploy a specified game build
    to each instance. A newly created fleet passes through several statuses; once
    it reaches the <code>ACTIVE</code> status, it can begin hosting game sessions.
    To create a new fleet, provide a fleet name, an EC2 instance type, and a build
    ID of the game build to deploy. You can also configure the new fleet with the
    following settings: (1) a runtime configuration describing what server processes
    to run on each instance in the fleet (required to create fleet), (2) access permissions
    for inbound traffic, (3) fleet-wide game session protection, and (4) the location
    of default log files for GameLift to upload and store. If the <code>CreateFleet</code>
    call is successful, Amazon GameLift performs the following tasks: <ul> <li>Creates
    a fleet record and sets the status to <code>NEW</code> (followed by other statuses
    as the fleet is activated).</li> <li>Sets the fleet''s capacity to 1 "desired",
    which causes GameLift to start one new EC2 instance.</li> <li>Starts launching
    server processes on the instance. If the fleet is configured to run multiple server
    processes per instance, GameLift staggers each launch by a few seconds.</li> <li>Begins
    writing events to the fleet event log, which can be accessed in the GameLift console.</li>
    <li>Sets the fleet''s status to <code>ACTIVE</code> once one server process in
    the fleet is ready to host a game session.</li> </ul> After a fleet is created,
    use the following actions to change fleet properties and configuration: <ul> <li>
    <a>UpdateFleetAttributes</a> -- Update fleet metadata, including name and description.</li>
    <li> <a>UpdateFleetCapacity</a> -- Increase or decrease the number of instances
    you want the fleet to maintain.</li> <li> <a>UpdateFleetPortSettings</a> -- Change
    the IP address and port ranges that allow access to incoming traffic.</li> <li>
    <a>UpdateRuntimeConfiguration</a> -- Change how server processes are launched
    in the fleet, including launch path, launch parameters, and the number of concurrent
    processes.</li> </ul>'
  post:
    body:
      application/json: CreateFleetInput
    responses:
      200:
        body:
          application/json: CreateFleetOutput
      400:
        description: InternalServiceException
/{CreateGameSession}:
  uriParameters:
    CreateGameSession?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Creates a multiplayer game session for players. This action creates a game session record and assigns the new session to an instance in the specified fleet, which initializes a new server process to host the game session. A fleet must be in an <code>ACTIVE</code> status before a game session can be created in it. To create a game session, specify either a fleet ID or an alias ID and indicate the maximum number of players the game session allows. You can also provide a name and a set of properties for your game (optional). If successful, a <a>GameSession</a> object is returned containing session properties, including an IP address. By default, newly created game sessions are set to accept adding any new players to the game session. Use <a>UpdateGameSession</a> to change the creation policy.
  post:
    body:
      application/json: CreateGameSessionInput
    responses:
      200:
        body:
          application/json: CreateGameSessionOutput
      400:
        description: ConflictException
/{CreatePlayerSession}:
  uriParameters:
    CreatePlayerSession?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Adds a player to a game session and creates a player session record.
    A game session must be in an <code>ACTIVE</code> status, have a creation policy
    of <code>ALLOW_ALL</code>, and have an open player slot before players can be
    added to the session. To create a player session, specify a game session ID and
    player ID. If successful, the player is added to the game session and a new <a>PlayerSession</a>
    object is returned. '
  post:
    body:
      application/json: CreatePlayerSessionInput
    responses:
      200:
        body:
          application/json: CreatePlayerSessionOutput
      400:
        description: InternalServiceException
/{CreatePlayerSessions}:
  uriParameters:
    CreatePlayerSessions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Adds a group of players to a game session. Similar to <a>CreatePlayerSession</a>,
    this action allows you to add multiple players in a single call, which is useful
    for games that provide party and/or matchmaking features. A game session must
    be in an <code>ACTIVE</code> status, have a creation policy of <code>ALLOW_ALL</code>,
    and have an open player slot before players can be added to the session. To create
    player sessions, specify a game session ID and a list of player IDs. If successful,
    the players are added to the game session and a set of new <a>PlayerSession</a>
    objects is returned. '
  post:
    body:
      application/json: CreatePlayerSessionsInput
    responses:
      200:
        body:
          application/json: CreatePlayerSessionsOutput
      400:
        description: InternalServiceException
/{DeleteAlias}:
  uriParameters:
    DeleteAlias?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Deletes an alias. This action removes all record of the alias; game clients attempting to access a server process using the deleted alias receive an error. To delete an alias, specify the alias ID to be deleted.
  post:
    body:
      application/json: DeleteAliasInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnauthorizedException
/{DeleteBuild}:
  uriParameters:
    DeleteBuild?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Deletes a build. This action permanently deletes the build record and any uploaded build files. To delete a build, specify its ID. Deleting a build does not affect the status of any active fleets using the build, but you can no longer create new fleets with the deleted build.
  post:
    body:
      application/json: DeleteBuildInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: UnauthorizedException
/{DeleteFleet}:
  uriParameters:
    DeleteFleet?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Deletes everything related to a fleet. Before deleting a fleet, you must set the fleet's desired capacity to zero. See <a>UpdateFleetCapacity</a>. This action removes the fleet's resources and the fleet record. Once a fleet is deleted, you can no longer use that fleet.
  post:
    body:
      application/json: DeleteFleetInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: NotFoundException
/{DeleteScalingPolicy}:
  uriParameters:
    DeleteScalingPolicy?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Deletes a fleet scaling policy. This action means that the policy
    is no longer in force and removes all record of it. To delete a scaling policy,
    specify both the scaling policy name and the fleet ID it is associated with. '
  post:
    body:
      application/json: DeleteScalingPolicyInput
    responses:
      200:
        body:
          application/json: null
      400:
        description: InternalServiceException
/{DescribeAlias}:
  uriParameters:
    DescribeAlias?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves properties for a specified alias. To get the alias, specify an alias ID. If successful, an <a>Alias</a> object is returned.
  post:
    body:
      application/json: DescribeAliasInput
    responses:
      200:
        body:
          application/json: DescribeAliasOutput
      400:
        description: UnauthorizedException
/{DescribeBuild}:
  uriParameters:
    DescribeBuild?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves properties for a build. To get a build record, specify a build ID. If successful, an object containing the build properties is returned.
  post:
    body:
      application/json: DescribeBuildInput
    responses:
      200:
        body:
          application/json: DescribeBuildOutput
      400:
        description: UnauthorizedException
/{DescribeEC2InstanceLimits}:
  uriParameters:
    DescribeEC2InstanceLimits?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Retrieves the following information for the specified EC2 instance
    type: <ul> <li>maximum number of instances allowed per AWS account (service limit)</li>
    <li>current usage level for the AWS account </li> </ul> Service limits vary depending
    on region. Available regions for GameLift can be found in the AWS Management Console
    for GameLift (see the drop-down list in the upper right corner).'
  post:
    body:
      application/json: DescribeEC2InstanceLimitsInput
    responses:
      200:
        body:
          application/json: DescribeEC2InstanceLimitsOutput
      400:
        description: InvalidRequestException
/{DescribeFleetAttributes}:
  uriParameters:
    DescribeFleetAttributes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves fleet properties, including metadata, status, and configuration, for one or more fleets. You can request attributes for all fleets, or specify a list of one or more fleet IDs. When requesting multiple fleets, use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>FleetAttributes</a> object is returned for each requested fleet ID. When specifying a list of fleet IDs, attribute objects are returned only for fleets that currently exist.  <note> Some API actions may limit the number of fleet IDs allowed in one request. If a request exceeds this limit, the request fails and the error message includes the maximum allowed. </note>
  post:
    body:
      application/json: DescribeFleetAttributesInput
    responses:
      200:
        body:
          application/json: DescribeFleetAttributesOutput
      400:
        description: InternalServiceException
/{DescribeFleetCapacity}:
  uriParameters:
    DescribeFleetCapacity?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves the current status of fleet capacity for one or more fleets. This information includes the number of instances that have been requested for the fleet and the number currently active. You can request capacity for all fleets, or specify a list of one or more fleet IDs. When requesting multiple fleets, use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>FleetCapacity</a> object is returned for each requested fleet ID. When specifying a list of fleet IDs, attribute objects are returned only for fleets that currently exist.  <note> Some API actions may limit the number of fleet IDs allowed in one request. If a request exceeds this limit, the request fails and the error message includes the maximum allowed. </note>
  post:
    body:
      application/json: DescribeFleetCapacityInput
    responses:
      200:
        body:
          application/json: DescribeFleetCapacityOutput
      400:
        description: InternalServiceException
/{DescribeFleetEvents}:
  uriParameters:
    DescribeFleetEvents?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves entries from the specified fleet's event log. You can specify a time range to limit the result set. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, a collection of event log entries matching the request are returned.
  post:
    body:
      application/json: DescribeFleetEventsInput
    responses:
      200:
        body:
          application/json: DescribeFleetEventsOutput
      400:
        description: NotFoundException
/{DescribeFleetPortSettings}:
  uriParameters:
    DescribeFleetPortSettings?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves the inbound connection permissions for a fleet. Connection permissions include a range of IP addresses and port settings that incoming traffic can use to access server processes in the fleet. To get a fleet's inbound connection permissions, specify a fleet ID. If successful, a collection of <a>IpPermission</a> objects is returned for the requested fleet ID. If the requested fleet has been deleted, the result set is empty.
  post:
    body:
      application/json: DescribeFleetPortSettingsInput
    responses:
      200:
        body:
          application/json: DescribeFleetPortSettingsOutput
      400:
        description: InternalServiceException
/{DescribeFleetUtilization}:
  uriParameters:
    DescribeFleetUtilization?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves utilization statistics for one or more fleets. You can request utilization data for all fleets, or specify a list of one or more fleet IDs. When requesting multiple fleets, use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>FleetUtilization</a> object is returned for each requested fleet ID. When specifying a list of fleet IDs, utilization objects are returned only for fleets that currently exist.  <note> Some API actions may limit the number of fleet IDs allowed in one request. If a request exceeds this limit, the request fails and the error message includes the maximum allowed. </note>
  post:
    body:
      application/json: DescribeFleetUtilizationInput
    responses:
      200:
        body:
          application/json: DescribeFleetUtilizationOutput
      400:
        description: InternalServiceException
/{DescribeGameSessionDetails}:
  uriParameters:
    DescribeGameSessionDetails?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Retrieves properties, including the protection policy in force, for
    one or more game sessions. This action can be used in several ways: (1) provide
    a <code>GameSessionId</code> to request details for a specific game session; (2)
    provide either a <code>FleetId</code> or an <code>AliasId</code> to request properties
    for all game sessions running on a fleet.  To get game session record(s), specify
    just one of the following: game session ID, fleet ID, or alias ID. You can filter
    this request by game session status. Use the pagination parameters to retrieve
    results as a set of sequential pages. If successful, a <a>GameSessionDetail</a>
    object is returned for each session matching the request.'
  post:
    body:
      application/json: DescribeGameSessionDetailsInput
    responses:
      200:
        body:
          application/json: DescribeGameSessionDetailsOutput
      400:
        description: InternalServiceException
/{DescribeGameSessions}:
  uriParameters:
    DescribeGameSessions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Retrieves properties for one or more game sessions. This action can
    be used in several ways: (1) provide a <code>GameSessionId</code> to request properties
    for a specific game session; (2) provide a <code>FleetId</code> or an <code>AliasId</code>
    to request properties for all game sessions running on a fleet.  To get game session
    record(s), specify just one of the following: game session ID, fleet ID, or alias
    ID. You can filter this request by game session status. Use the pagination parameters
    to retrieve results as a set of sequential pages. If successful, a <a>GameSession</a>
    object is returned for each session matching the request.'
  post:
    body:
      application/json: DescribeGameSessionsInput
    responses:
      200:
        body:
          application/json: DescribeGameSessionsOutput
      400:
        description: InternalServiceException
/{DescribePlayerSessions}:
  uriParameters:
    DescribePlayerSessions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Retrieves properties for one or more player sessions. This action
    can be used in several ways: (1) provide a <code>PlayerSessionId</code> parameter
    to request properties for a specific player session; (2) provide a <code>GameSessionId</code>
    parameter to request properties for all player sessions in the specified game
    session; (3) provide a <code>PlayerId</code> parameter to request properties for
    all player sessions of a specified player.  To get game session record(s), specify
    only one of the following: a player session ID, a game session ID, or a player
    ID. You can filter this request by player session status. Use the pagination parameters
    to retrieve results as a set of sequential pages. If successful, a <a>PlayerSession</a>
    object is returned for each session matching the request.'
  post:
    body:
      application/json: DescribePlayerSessionsInput
    responses:
      200:
        body:
          application/json: DescribePlayerSessionsOutput
      400:
        description: InternalServiceException
/{DescribeRuntimeConfiguration}:
  uriParameters:
    DescribeRuntimeConfiguration?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves the current runtime configuration for the specified fleet. The runtime configuration tells GameLift how to launch server processes on instances in the fleet.
  post:
    body:
      application/json: DescribeRuntimeConfigurationInput
    responses:
      200:
        body:
          application/json: DescribeRuntimeConfigurationOutput
      400:
        description: UnauthorizedException
/{DescribeScalingPolicies}:
  uriParameters:
    DescribeScalingPolicies?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves all scaling policies applied to a fleet.  To get a fleet's scaling policies, specify the fleet ID. You can filter this request by policy status, such as to retrieve only active scaling policies. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, set of <a>ScalingPolicy</a> objects is returned for the fleet.
  post:
    body:
      application/json: DescribeScalingPoliciesInput
    responses:
      200:
        body:
          application/json: DescribeScalingPoliciesOutput
      400:
        description: InternalServiceException
/{GetGameSessionLogUrl}:
  uriParameters:
    GetGameSessionLogUrl?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves the location of stored game session logs for a specified game session. When a game session is terminated, Amazon GameLift automatically stores the logs in Amazon S3. Use this URL to download the logs. <note> See the <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_gamelift">AWS Service Limits</a> page for maximum log file sizes. Log files that exceed this limit are not saved. </note>
  post:
    body:
      application/json: GetGameSessionLogUrlInput
    responses:
      200:
        body:
          application/json: GetGameSessionLogUrlOutput
      400:
        description: InternalServiceException
/{ListAliases}:
  uriParameters:
    ListAliases?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves a collection of alias records for this AWS account. You can filter the result set by alias name and/or routing strategy type. Use the pagination parameters to retrieve results in sequential pages.  <note> Aliases are not listed in any particular order. </note>
  post:
    body:
      application/json: ListAliasesInput
    responses:
      200:
        body:
          application/json: ListAliasesOutput
      400:
        description: UnauthorizedException
/{ListBuilds}:
  uriParameters:
    ListBuilds?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves build records for all builds associated with the AWS account in use. You can limit results to builds that are in a specific status by using the <code>Status</code> parameter. Use the pagination parameters to retrieve results in a set of sequential pages.  <note> Build records are not listed in any particular order. </note>
  post:
    body:
      application/json: ListBuildsInput
    responses:
      200:
        body:
          application/json: ListBuildsOutput
      400:
        description: UnauthorizedException
/{ListFleets}:
  uriParameters:
    ListFleets?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves a collection of fleet records for this AWS account. You can filter the result set by build ID. Use the pagination parameters to retrieve results in sequential pages.  <note> Fleet records are not listed in any particular order. </note>
  post:
    body:
      application/json: ListFleetsInput
    responses:
      200:
        body:
          application/json: ListFleetsOutput
      400:
        description: InternalServiceException
/{PutScalingPolicy}:
  uriParameters:
    PutScalingPolicy?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Creates or updates a scaling policy for a fleet. An active scaling
    policy prompts Amazon GameLift to track a certain metric for a fleet and automatically
    change the fleet''s capacity in specific circumstances. Each scaling policy contains
    one rule statement. Fleets can have multiple scaling policies in force simultaneously.
    A scaling policy rule statement has the following structure: If <code>[MetricName]</code>
    is <code>[ComparisonOperator]</code> <code>[Threshold]</code> for <code>[EvaluationPeriods]</code>
    minutes, then <code>[ScalingAdjustmentType]</code> to/by <code>[ScalingAdjustment]</code>.
    For example, this policy: "If the number of idle instances exceeds 20 for more
    than 15 minutes, then reduce the fleet capacity by 10 instances" could be implemented
    as the following rule statement:  If [IdleInstances] is [GreaterThanOrEqualToThreshold]
    [20] for [15] minutes, then [ChangeInCapacity] by [-10].  To create or update
    a scaling policy, specify a unique combination of name and fleet ID, and set the
    rule values. All parameters for this action are required. If successful, the policy
    name is returned. Scaling policies cannot be suspended or made inactive. To stop
    enforcing a scaling policy, call <a>DeleteScalingPolicy</a>.'
  post:
    body:
      application/json: PutScalingPolicyInput
    responses:
      200:
        body:
          application/json: PutScalingPolicyOutput
      400:
        description: InternalServiceException
/{RequestUploadCredentials}:
  uriParameters:
    RequestUploadCredentials?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Retrieves a fresh set of upload credentials and the assigned Amazon S3 storage location for a specific build. Valid credentials are required to upload your game build files to Amazon S3. <important> Call this action only if you need credentials for a build created with <code><a>CreateBuild</a></code>. This is a rare situation; in most cases, builds are created using the CLI command <code>upload-build</code>, which creates a build record and also uploads build files.  </important> Upload credentials are returned when you create the build, but they have a limited lifespan. You can get fresh credentials and use them to re-upload game files until the status of that build changes to <code>READY</code>. Once this happens, you must create a brand new build.
  post:
    body:
      application/json: RequestUploadCredentialsInput
    responses:
      200:
        body:
          application/json: RequestUploadCredentialsOutput
      400:
        description: UnauthorizedException
/{ResolveAlias}:
  uriParameters:
    ResolveAlias?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Retrieves the fleet ID that a specified alias is currently pointing
    to. '
  post:
    body:
      application/json: ResolveAliasInput
    responses:
      200:
        body:
          application/json: ResolveAliasOutput
      400:
        description: UnauthorizedException
/{SearchGameSessions}:
  uriParameters:
    SearchGameSessions?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Retrieves a list of game sessions in a fleet that match a set of search
    criteria and sorts them in a specified order. Currently game session searches
    are limited to a single fleet. Search results include only game sessions that
    are in ACTIVE status. You can search or sort by the following game session attributes:
    <ul> <li> <b>gameSessionId</b> -- ID value assigned to a game session. This unique
    value is returned in a <a>GameSession</a> object when a new game session is created.
    </li> <li> <b>gameSessionName</b> -- Name assigned to a game session. This value
    is set when requesting a new game session with <a>CreateGameSession</a> or updating
    with <a>UpdateGameSession</a>. Game session names do not need to be unique to
    a game session.</li> <li> <b>creationTimeMillis</b> -- Value indicating when a
    game session was created. It is expressed in Unix time as milliseconds.</li> <li>
    <b>playerSessionCount</b> -- Number of players currently connected to a game session.
    This value changes rapidly as players join the session or drop out.</li> <li>
    <b>maximumSessions</b> -- Maximum number of player sessions allowed for a game
    session. This value is set when requesting a new game session with <a>CreateGameSession</a>
    or updating with <a>UpdateGameSession</a>.</li> <li> <b>hasAvailablePlayerSessions</b>
    -- Boolean value indicating whether or not a game session has reached its maximum
    number of players. When searching with this attribute, the search value must be
    <code>true</code> or <code>false</code>. It is highly recommended that all search
    requests include this filter attribute to optimize search performance and return
    only sessions that players can join. </li> </ul> To search or sort, specify either
    a fleet ID or an alias ID, and provide a search filter expression, a sort expression,
    or both. Use the pagination parameters to retrieve results as a set of sequential
    pages. If successful, a collection of <a>GameSession</a> objects matching the
    request is returned. <note> Returned values for <code>playerSessionCount</code>
    and <code>hasAvailablePlayerSessions</code> change quickly as players join sessions
    and others drop out. Results should be considered a snapshot in time. Be sure
    to refresh search results often, and handle sessions that fill up before a player
    can join.  </note>'
  post:
    body:
      application/json: SearchGameSessionsInput
    responses:
      200:
        body:
          application/json: SearchGameSessionsOutput
      400:
        description: InternalServiceException
/{UpdateAlias}:
  uriParameters:
    UpdateAlias?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Updates properties for an alias. To update properties, specify the alias ID to be updated and provide the information to be changed. To reassign an alias to another fleet, provide an updated routing strategy. If successful, the updated alias record is returned.
  post:
    body:
      application/json: UpdateAliasInput
    responses:
      200:
        body:
          application/json: UpdateAliasOutput
      400:
        description: UnauthorizedException
/{UpdateBuild}:
  uriParameters:
    UpdateBuild?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Updates metadata in a build record, including the build name and version.
    To update the metadata, specify the build ID to update and provide the new values.
    If successful, a build object containing the updated metadata is returned. '
  post:
    body:
      application/json: UpdateBuildInput
    responses:
      200:
        body:
          application/json: UpdateBuildOutput
      400:
        description: UnauthorizedException
/{UpdateFleetAttributes}:
  uriParameters:
    UpdateFleetAttributes?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Updates fleet properties, including name and description, for a fleet. To update metadata, specify the fleet ID and the property values you want to change. If successful, the fleet ID for the updated fleet is returned.
  post:
    body:
      application/json: UpdateFleetAttributesInput
    responses:
      200:
        body:
          application/json: UpdateFleetAttributesOutput
      400:
        description: NotFoundException
/{UpdateFleetCapacity}:
  uriParameters:
    UpdateFleetCapacity?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Updates capacity settings for a fleet. Use this action to specify the number of EC2 instances (hosts) that you want this fleet to contain. Before calling this action, you may want to call <a>DescribeEC2InstanceLimits</a> to get the maximum capacity based on the fleet's EC2 instance type. If you're using autoscaling (see <a>PutScalingPolicy</a>), you may want to specify a minimum and/or maximum capacity. If you don't provide these, autoscaling can set capacity anywhere between zero and the <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_gamelift">service limits</a>. To update fleet capacity, specify the fleet ID and the number of instances you want the fleet to host. If successful, Amazon GameLift starts or terminates instances so that the fleet's active instance count matches the desired instance count. You can view a fleet's current capacity information by calling <a>DescribeFleetCapacity</a>. If the desired instance count is higher than the instance type's limit, the "Limit Exceeded" exception occurs.
  post:
    body:
      application/json: UpdateFleetCapacityInput
    responses:
      200:
        body:
          application/json: UpdateFleetCapacityOutput
      400:
        description: NotFoundException
/{UpdateFleetPortSettings}:
  uriParameters:
    UpdateFleetPortSettings?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Updates port settings for a fleet. To update settings, specify the fleet ID to be updated and list the permissions you want to update. List the permissions you want to add in <code>InboundPermissionAuthorizations</code>, and permissions you want to remove in <code>InboundPermissionRevocations</code>. Permissions to be removed must match existing fleet permissions. If successful, the fleet ID for the updated fleet is returned.
  post:
    body:
      application/json: UpdateFleetPortSettingsInput
    responses:
      200:
        body:
          application/json: UpdateFleetPortSettingsOutput
      400:
        description: NotFoundException
/{UpdateGameSession}:
  uriParameters:
    UpdateGameSession?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: 'Updates game session properties. This includes the session name, maximum
    player count, protection policy, which controls whether or not an active game
    session can be terminated during a scale-down event, and the player session creation
    policy, which controls whether or not new players can join the session. To update
    a game session, specify the game session ID and the values you want to change.
    If successful, an updated <a>GameSession</a> object is returned. '
  post:
    body:
      application/json: UpdateGameSessionInput
    responses:
      200:
        body:
          application/json: UpdateGameSessionOutput
      400:
        description: NotFoundException
/{UpdateRuntimeConfiguration}:
  uriParameters:
    UpdateRuntimeConfiguration?:
      type: string
      enum:
      - ''
      description: This url parameter exists only to differentiate different operations on the same url
  description: Updates the current runtime configuration for the specified fleet, which tells GameLift how to launch server processes on instances in the fleet. You can update a fleet's runtime configuration at any time after the fleet is created; it does not need to be in an <code>ACTIVE</code> status. To update runtime configuration, specify the fleet ID and provide a <code>RuntimeConfiguration</code> object with the updated collection of server process configurations. Each instance in a GameLift fleet checks regularly for an updated runtime configuration and changes how it launches server processes to comply with the latest version. Existing server processes are not affected by the update; they continue to run until they end, while GameLift simply adds new server processes to fit the current runtime configuration. As a result, the runtime configuration changes are applied gradually as existing processes shut down and new processes are launched in GameLift's normal process recycling activity.
  post:
    body:
      application/json: UpdateRuntimeConfigurationInput
    responses:
      200:
        body:
          application/json: UpdateRuntimeConfigurationOutput
      400:
        description: UnauthorizedException
